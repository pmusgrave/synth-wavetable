ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_UartInit,"ax",%progbits
  20              		.align	2
  21              		.global	UART_UartInit
  22              		.code	16
  23              		.thumb_func
  24              		.type	UART_UartInit, %function
  25              	UART_UartInit:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\UART_UART.c"
   1:Generated_Source\PSoC4/UART_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/UART_UART.c **** * \file UART_UART.c
   3:Generated_Source\PSoC4/UART_UART.c **** * \version 4.0
   4:Generated_Source\PSoC4/UART_UART.c **** *
   5:Generated_Source\PSoC4/UART_UART.c **** * \brief
   6:Generated_Source\PSoC4/UART_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/UART_UART.c **** *  UART mode.
   8:Generated_Source\PSoC4/UART_UART.c **** *
   9:Generated_Source\PSoC4/UART_UART.c **** * Note:
  10:Generated_Source\PSoC4/UART_UART.c **** *
  11:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/UART_UART.c **** * \copyright
  13:Generated_Source\PSoC4/UART_UART.c **** * Copyright 2013-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/UART_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/UART_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/UART_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/UART_UART.c **** 
  19:Generated_Source\PSoC4/UART_UART.c **** #include "UART_PVT.h"
  20:Generated_Source\PSoC4/UART_UART.c **** #include "UART_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/UART_UART.c **** #include "cyapicallbacks.h"
  22:Generated_Source\PSoC4/UART_UART.c **** 
  23:Generated_Source\PSoC4/UART_UART.c **** #if (UART_UART_WAKE_ENABLE_CONST && UART_UART_RX_WAKEUP_IRQ)
  24:Generated_Source\PSoC4/UART_UART.c ****     /**
  25:Generated_Source\PSoC4/UART_UART.c ****     * \addtogroup group_globals
  26:Generated_Source\PSoC4/UART_UART.c ****     * \{
  27:Generated_Source\PSoC4/UART_UART.c ****     */
  28:Generated_Source\PSoC4/UART_UART.c ****     /** This global variable determines whether to enable Skip Start
  29:Generated_Source\PSoC4/UART_UART.c ****     * functionality when UART_Sleep() function is called:
  30:Generated_Source\PSoC4/UART_UART.c ****     * 0 – disable, other values – enable. Default value is 1.
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 2


  31:Generated_Source\PSoC4/UART_UART.c ****     * It is only available when Enable wakeup from Deep Sleep Mode is enabled.
  32:Generated_Source\PSoC4/UART_UART.c ****     */
  33:Generated_Source\PSoC4/UART_UART.c ****     uint8 UART_skipStart = 1u;
  34:Generated_Source\PSoC4/UART_UART.c ****     /** \} globals */
  35:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_WAKE_ENABLE_CONST && UART_UART_RX_WAKEUP_IRQ) */
  36:Generated_Source\PSoC4/UART_UART.c **** 
  37:Generated_Source\PSoC4/UART_UART.c **** #if(UART_SCB_MODE_UNCONFIG_CONST_CFG)
  38:Generated_Source\PSoC4/UART_UART.c **** 
  39:Generated_Source\PSoC4/UART_UART.c ****     /***************************************
  40:Generated_Source\PSoC4/UART_UART.c ****     *  Configuration Structure Initialization
  41:Generated_Source\PSoC4/UART_UART.c ****     ***************************************/
  42:Generated_Source\PSoC4/UART_UART.c **** 
  43:Generated_Source\PSoC4/UART_UART.c ****     const UART_UART_INIT_STRUCT UART_configUart =
  44:Generated_Source\PSoC4/UART_UART.c ****     {
  45:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_SUB_MODE,
  46:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DIRECTION,
  47:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DATA_BITS_NUM,
  48:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_PARITY_TYPE,
  49:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_STOP_BITS_NUM,
  50:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_OVS_FACTOR,
  51:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_IRDA_LOW_POWER,
  52:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MEDIAN_FILTER_ENABLE,
  53:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RETRY_ON_NACK,
  54:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_IRDA_POLARITY,
  55:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DROP_ON_PARITY_ERR,
  56:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DROP_ON_FRAME_ERR,
  57:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_WAKE_ENABLE,
  58:Generated_Source\PSoC4/UART_UART.c ****         0u,
  59:Generated_Source\PSoC4/UART_UART.c ****         NULL,
  60:Generated_Source\PSoC4/UART_UART.c ****         0u,
  61:Generated_Source\PSoC4/UART_UART.c ****         NULL,
  62:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_MODE_ENABLE,
  63:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_ACCEPT_ADDRESS,
  64:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_RX_ADDRESS,
  65:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_RX_ADDRESS_MASK,
  66:Generated_Source\PSoC4/UART_UART.c ****         (uint32) UART_SCB_IRQ_INTERNAL,
  67:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_INTR_RX_MASK,
  68:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RX_TRIGGER_LEVEL,
  69:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_INTR_TX_MASK,
  70:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_TX_TRIGGER_LEVEL,
  71:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_BYTE_MODE_ENABLE,
  72:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_CTS_ENABLE,
  73:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_CTS_POLARITY,
  74:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RTS_POLARITY,
  75:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RTS_FIFO_LEVEL,
  76:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RX_BREAK_WIDTH
  77:Generated_Source\PSoC4/UART_UART.c ****     };
  78:Generated_Source\PSoC4/UART_UART.c **** 
  79:Generated_Source\PSoC4/UART_UART.c **** 
  80:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
  81:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartInit
  82:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
  83:Generated_Source\PSoC4/UART_UART.c ****     *
  84:Generated_Source\PSoC4/UART_UART.c ****     *  Configures the UART for UART operation.
  85:Generated_Source\PSoC4/UART_UART.c ****     *
  86:Generated_Source\PSoC4/UART_UART.c ****     *  This function is intended specifically to be used when the UART
  87:Generated_Source\PSoC4/UART_UART.c ****     *  configuration is set to “Unconfigured UART” in the customizer.
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 3


  88:Generated_Source\PSoC4/UART_UART.c ****     *  After initializing the UART in UART mode using this function,
  89:Generated_Source\PSoC4/UART_UART.c ****     *  the component can be enabled using the UART_Start() or
  90:Generated_Source\PSoC4/UART_UART.c ****     * UART_Enable() function.
  91:Generated_Source\PSoC4/UART_UART.c ****     *  This function uses a pointer to a structure that provides the configuration
  92:Generated_Source\PSoC4/UART_UART.c ****     *  settings. This structure contains the same information that would otherwise
  93:Generated_Source\PSoC4/UART_UART.c ****     *  be provided by the customizer settings.
  94:Generated_Source\PSoC4/UART_UART.c ****     *
  95:Generated_Source\PSoC4/UART_UART.c ****     *  \param config: pointer to a structure that contains the following list of
  96:Generated_Source\PSoC4/UART_UART.c ****     *   fields. These fields match the selections available in the customizer.
  97:Generated_Source\PSoC4/UART_UART.c ****     *   Refer to the customizer for further description of the settings.
  98:Generated_Source\PSoC4/UART_UART.c ****     *
  99:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 100:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartInit(const UART_UART_INIT_STRUCT *config)
 101:Generated_Source\PSoC4/UART_UART.c ****     {
 102:Generated_Source\PSoC4/UART_UART.c ****         uint32 pinsConfig;
 103:Generated_Source\PSoC4/UART_UART.c **** 
 104:Generated_Source\PSoC4/UART_UART.c ****         if (NULL == config)
 105:Generated_Source\PSoC4/UART_UART.c ****         {
 106:Generated_Source\PSoC4/UART_UART.c ****             CYASSERT(0u != 0u); /* Halt execution due to bad function parameter */
 107:Generated_Source\PSoC4/UART_UART.c ****         }
 108:Generated_Source\PSoC4/UART_UART.c ****         else
 109:Generated_Source\PSoC4/UART_UART.c ****         {
 110:Generated_Source\PSoC4/UART_UART.c ****             /* Get direction to configure UART pins: TX, RX or TX+RX */
 111:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig  = config->direction;
 112:Generated_Source\PSoC4/UART_UART.c **** 
 113:Generated_Source\PSoC4/UART_UART.c ****         #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 114:Generated_Source\PSoC4/UART_UART.c ****             /* Add RTS and CTS pins to configure */
 115:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig |= (0u != config->rtsRxFifoLevel) ? (UART_UART_RTS_PIN_ENABLE) : (0u);
 116:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig |= (0u != config->enableCts)      ? (UART_UART_CTS_PIN_ENABLE) : (0u);
 117:Generated_Source\PSoC4/UART_UART.c ****         #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 118:Generated_Source\PSoC4/UART_UART.c **** 
 119:Generated_Source\PSoC4/UART_UART.c ****             /* Configure pins */
 120:Generated_Source\PSoC4/UART_UART.c ****             UART_SetPins(UART_SCB_MODE_UART, config->mode, pinsConfig);
 121:Generated_Source\PSoC4/UART_UART.c **** 
 122:Generated_Source\PSoC4/UART_UART.c ****             /* Store internal configuration */
 123:Generated_Source\PSoC4/UART_UART.c ****             UART_scbMode       = (uint8) UART_SCB_MODE_UART;
 124:Generated_Source\PSoC4/UART_UART.c ****             UART_scbEnableWake = (uint8) config->enableWake;
 125:Generated_Source\PSoC4/UART_UART.c ****             UART_scbEnableIntr = (uint8) config->enableInterrupt;
 126:Generated_Source\PSoC4/UART_UART.c **** 
 127:Generated_Source\PSoC4/UART_UART.c ****             /* Set RX direction internal variables */
 128:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBuffer      =         config->rxBuffer;
 129:Generated_Source\PSoC4/UART_UART.c ****             UART_rxDataBits    = (uint8) config->dataBits;
 130:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferSize  =         config->rxBufferSize;
 131:Generated_Source\PSoC4/UART_UART.c **** 
 132:Generated_Source\PSoC4/UART_UART.c ****             /* Set TX direction internal variables */
 133:Generated_Source\PSoC4/UART_UART.c ****             UART_txBuffer      =         config->txBuffer;
 134:Generated_Source\PSoC4/UART_UART.c ****             UART_txDataBits    = (uint8) config->dataBits;
 135:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferSize  =         config->txBufferSize;
 136:Generated_Source\PSoC4/UART_UART.c **** 
 137:Generated_Source\PSoC4/UART_UART.c ****             /* Configure UART interface */
 138:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_MODE_IRDA == config->mode)
 139:Generated_Source\PSoC4/UART_UART.c ****             {
 140:Generated_Source\PSoC4/UART_UART.c ****                 /* OVS settings: IrDA */
 141:Generated_Source\PSoC4/UART_UART.c ****                 UART_CTRL_REG  = ((0u != config->enableIrdaLowPower) ?
 142:Generated_Source\PSoC4/UART_UART.c ****                                                 (UART_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 143:Generated_Source\PSoC4/UART_UART.c ****                                                 (UART_CTRL_OVS_IRDA_OVS16));
 144:Generated_Source\PSoC4/UART_UART.c ****             }
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 4


 145:Generated_Source\PSoC4/UART_UART.c ****             else
 146:Generated_Source\PSoC4/UART_UART.c ****             {
 147:Generated_Source\PSoC4/UART_UART.c ****                 /* OVS settings: UART and SmartCard */
 148:Generated_Source\PSoC4/UART_UART.c ****                 UART_CTRL_REG  = UART_GET_CTRL_OVS(config->oversample);
 149:Generated_Source\PSoC4/UART_UART.c ****             }
 150:Generated_Source\PSoC4/UART_UART.c **** 
 151:Generated_Source\PSoC4/UART_UART.c ****             UART_CTRL_REG     |= UART_GET_CTRL_BYTE_MODE  (config->enableByteMode)      |
 152:Generated_Source\PSoC4/UART_UART.c ****                                              UART_GET_CTRL_ADDR_ACCEPT(config->multiprocAcceptAddr)
 153:Generated_Source\PSoC4/UART_UART.c ****                                              UART_CTRL_UART;
 154:Generated_Source\PSoC4/UART_UART.c **** 
 155:Generated_Source\PSoC4/UART_UART.c ****             /* Configure sub-mode: UART, SmartCard or IrDA */
 156:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_CTRL_REG = UART_GET_UART_CTRL_MODE(config->mode);
 157:Generated_Source\PSoC4/UART_UART.c **** 
 158:Generated_Source\PSoC4/UART_UART.c ****             /* Configure RX direction */
 159:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_RX_CTRL_REG = UART_GET_UART_RX_CTRL_MODE(config->stopBits)              |
 160:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx)   
 161:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc)     
 162:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->dropOnPari
 163:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_DROP_ON_FRAME_ERR(config->dropOnFrame
 164:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_BREAK_WIDTH(config->breakWidth);
 165:Generated_Source\PSoC4/UART_UART.c **** 
 166:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_PARITY_NONE != config->parity)
 167:Generated_Source\PSoC4/UART_UART.c ****             {
 168:Generated_Source\PSoC4/UART_UART.c ****                UART_UART_RX_CTRL_REG |= UART_GET_UART_RX_CTRL_PARITY(config->parity) |
 169:Generated_Source\PSoC4/UART_UART.c ****                                                     UART_UART_RX_CTRL_PARITY_ENABLED;
 170:Generated_Source\PSoC4/UART_UART.c ****             }
 171:Generated_Source\PSoC4/UART_UART.c **** 
 172:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_CTRL_REG      = UART_GET_RX_CTRL_DATA_WIDTH(config->dataBits)       |
 173:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_RX_CTRL_MEDIAN(config->enableMedianFilter)
 174:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_RX_CTRL_ENABLED(config->direction);
 175:Generated_Source\PSoC4/UART_UART.c **** 
 176:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_FIFO_CTRL_REG = UART_GET_RX_FIFO_CTRL_TRIGGER_LEVEL(config->rxTriggerLevel);
 177:Generated_Source\PSoC4/UART_UART.c **** 
 178:Generated_Source\PSoC4/UART_UART.c ****             /* Configure MP address */
 179:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_MATCH_REG     = UART_GET_RX_MATCH_ADDR(config->multiprocAddr) |
 180:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_RX_MATCH_MASK(config->multiprocAddrMask);
 181:Generated_Source\PSoC4/UART_UART.c **** 
 182:Generated_Source\PSoC4/UART_UART.c ****             /* Configure RX direction */
 183:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_TX_CTRL_REG = UART_GET_UART_TX_CTRL_MODE(config->stopBits) |
 184:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_TX_CTRL_RETRY_NACK(config->enableRetr
 185:Generated_Source\PSoC4/UART_UART.c **** 
 186:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_PARITY_NONE != config->parity)
 187:Generated_Source\PSoC4/UART_UART.c ****             {
 188:Generated_Source\PSoC4/UART_UART.c ****                UART_UART_TX_CTRL_REG |= UART_GET_UART_TX_CTRL_PARITY(config->parity) |
 189:Generated_Source\PSoC4/UART_UART.c ****                                                     UART_UART_TX_CTRL_PARITY_ENABLED;
 190:Generated_Source\PSoC4/UART_UART.c ****             }
 191:Generated_Source\PSoC4/UART_UART.c **** 
 192:Generated_Source\PSoC4/UART_UART.c ****             UART_TX_CTRL_REG      = UART_GET_TX_CTRL_DATA_WIDTH(config->dataBits)    |
 193:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_TX_CTRL_ENABLED(config->direction);
 194:Generated_Source\PSoC4/UART_UART.c **** 
 195:Generated_Source\PSoC4/UART_UART.c ****             UART_TX_FIFO_CTRL_REG = UART_GET_TX_FIFO_CTRL_TRIGGER_LEVEL(config->txTriggerLevel);
 196:Generated_Source\PSoC4/UART_UART.c **** 
 197:Generated_Source\PSoC4/UART_UART.c ****         #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 198:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG = UART_GET_UART_FLOW_CTRL_CTS_ENABLE(config->enableCts) | \
 199:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_CTS_POLARITY (config->ctsPolari
 200:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_RTS_POLARITY (config->rtsPolari
 201:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_TRIGGER_LEVEL(config->rtsRxFifo
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 5


 202:Generated_Source\PSoC4/UART_UART.c ****         #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 203:Generated_Source\PSoC4/UART_UART.c **** 
 204:Generated_Source\PSoC4/UART_UART.c ****             /* Configure interrupt with UART handler but do not enable it */
 205:Generated_Source\PSoC4/UART_UART.c ****             CyIntDisable    (UART_ISR_NUMBER);
 206:Generated_Source\PSoC4/UART_UART.c ****             CyIntSetPriority(UART_ISR_NUMBER, UART_ISR_PRIORITY);
 207:Generated_Source\PSoC4/UART_UART.c ****             (void) CyIntSetVector(UART_ISR_NUMBER, &UART_SPI_UART_ISR);
 208:Generated_Source\PSoC4/UART_UART.c **** 
 209:Generated_Source\PSoC4/UART_UART.c ****             /* Configure WAKE interrupt */
 210:Generated_Source\PSoC4/UART_UART.c ****         #if(UART_UART_RX_WAKEUP_IRQ)
 211:Generated_Source\PSoC4/UART_UART.c ****             CyIntDisable    (UART_RX_WAKE_ISR_NUMBER);
 212:Generated_Source\PSoC4/UART_UART.c ****             CyIntSetPriority(UART_RX_WAKE_ISR_NUMBER, UART_RX_WAKE_ISR_PRIORITY);
 213:Generated_Source\PSoC4/UART_UART.c ****             (void) CyIntSetVector(UART_RX_WAKE_ISR_NUMBER, &UART_UART_WAKEUP_ISR);
 214:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_UART_RX_WAKEUP_IRQ) */
 215:Generated_Source\PSoC4/UART_UART.c **** 
 216:Generated_Source\PSoC4/UART_UART.c ****             /* Configure interrupt sources */
 217:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_I2C_EC_MASK_REG = UART_NO_INTR_SOURCES;
 218:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_SPI_EC_MASK_REG = UART_NO_INTR_SOURCES;
 219:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_SLAVE_MASK_REG  = UART_NO_INTR_SOURCES;
 220:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_MASTER_MASK_REG = UART_NO_INTR_SOURCES;
 221:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_RX_MASK_REG     = config->rxInterruptMask;
 222:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_TX_MASK_REG     = config->txInterruptMask;
 223:Generated_Source\PSoC4/UART_UART.c **** 
 224:Generated_Source\PSoC4/UART_UART.c ****             /* Configure TX interrupt sources to restore. */
 225:Generated_Source\PSoC4/UART_UART.c ****             UART_IntrTxMask = LO16(UART_INTR_TX_MASK_REG);
 226:Generated_Source\PSoC4/UART_UART.c **** 
 227:Generated_Source\PSoC4/UART_UART.c ****             /* Clear RX buffer indexes */
 228:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferHead     = 0u;
 229:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferTail     = 0u;
 230:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferOverflow = 0u;
 231:Generated_Source\PSoC4/UART_UART.c **** 
 232:Generated_Source\PSoC4/UART_UART.c ****             /* Clear TX buffer indexes */
 233:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferHead = 0u;
 234:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferTail = 0u;
 235:Generated_Source\PSoC4/UART_UART.c ****         }
 236:Generated_Source\PSoC4/UART_UART.c ****     }
 237:Generated_Source\PSoC4/UART_UART.c **** 
 238:Generated_Source\PSoC4/UART_UART.c **** #else
 239:Generated_Source\PSoC4/UART_UART.c **** 
 240:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 241:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartInit
 242:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 243:Generated_Source\PSoC4/UART_UART.c ****     *
 244:Generated_Source\PSoC4/UART_UART.c ****     *  Configures the SCB for the UART operation.
 245:Generated_Source\PSoC4/UART_UART.c ****     *
 246:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 247:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartInit(void)
 248:Generated_Source\PSoC4/UART_UART.c ****     {
  28              		.loc 1 248 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 249:Generated_Source\PSoC4/UART_UART.c ****         /* Configure UART interface */
 250:Generated_Source\PSoC4/UART_UART.c ****         UART_CTRL_REG = UART_UART_DEFAULT_CTRL;
  33              		.loc 1 250 0
  34 0000 154A     		ldr	r2, .L2
  35 0002 164B     		ldr	r3, .L2+4
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 6


  36 0004 1A60     		str	r2, [r3]
 251:Generated_Source\PSoC4/UART_UART.c **** 
 252:Generated_Source\PSoC4/UART_UART.c ****         /* Configure sub-mode: UART, SmartCard or IrDA */
 253:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_CTRL_REG = UART_UART_DEFAULT_UART_CTRL;
  37              		.loc 1 253 0
  38 0006 0023     		movs	r3, #0
  39 0008 154A     		ldr	r2, .L2+8
  40 000a 1360     		str	r3, [r2]
 254:Generated_Source\PSoC4/UART_UART.c **** 
 255:Generated_Source\PSoC4/UART_UART.c ****         /* Configure RX direction */
 256:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RX_CTRL_REG = UART_UART_DEFAULT_UART_RX_CTRL;
  41              		.loc 1 256 0
  42 000c 1549     		ldr	r1, .L2+12
  43 000e 164A     		ldr	r2, .L2+16
  44 0010 1160     		str	r1, [r2]
 257:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_CTRL_REG      = UART_UART_DEFAULT_RX_CTRL;
  45              		.loc 1 257 0
  46 0012 0722     		movs	r2, #7
  47 0014 1549     		ldr	r1, .L2+20
  48 0016 0A60     		str	r2, [r1]
 258:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_FIFO_CTRL_REG = UART_UART_DEFAULT_RX_FIFO_CTRL;
  49              		.loc 1 258 0
  50 0018 1549     		ldr	r1, .L2+24
  51 001a 0A60     		str	r2, [r1]
 259:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_MATCH_REG     = UART_UART_DEFAULT_RX_MATCH_REG;
  52              		.loc 1 259 0
  53 001c 154A     		ldr	r2, .L2+28
  54 001e 1360     		str	r3, [r2]
 260:Generated_Source\PSoC4/UART_UART.c **** 
 261:Generated_Source\PSoC4/UART_UART.c ****         /* Configure TX direction */
 262:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_TX_CTRL_REG = UART_UART_DEFAULT_UART_TX_CTRL;
  55              		.loc 1 262 0
  56 0020 0121     		movs	r1, #1
  57 0022 154A     		ldr	r2, .L2+32
  58 0024 1160     		str	r1, [r2]
 263:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG      = UART_UART_DEFAULT_TX_CTRL;
  59              		.loc 1 263 0
  60 0026 1549     		ldr	r1, .L2+36
  61 0028 154A     		ldr	r2, .L2+40
  62 002a 1160     		str	r1, [r2]
 264:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_FIFO_CTRL_REG = UART_UART_DEFAULT_TX_FIFO_CTRL;
  63              		.loc 1 264 0
  64 002c 154A     		ldr	r2, .L2+44
  65 002e 1360     		str	r3, [r2]
 265:Generated_Source\PSoC4/UART_UART.c **** 
 266:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 267:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_FLOW_CTRL_REG = UART_UART_DEFAULT_FLOW_CTRL;
  66              		.loc 1 267 0
  67 0030 0421     		movs	r1, #4
  68 0032 154A     		ldr	r2, .L2+48
  69 0034 1160     		str	r1, [r2]
 268:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 269:Generated_Source\PSoC4/UART_UART.c **** 
 270:Generated_Source\PSoC4/UART_UART.c ****         /* Configure interrupt with UART handler but do not enable it */
 271:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_SCB_IRQ_INTERNAL)
 272:Generated_Source\PSoC4/UART_UART.c ****         CyIntDisable    (UART_ISR_NUMBER);
 273:Generated_Source\PSoC4/UART_UART.c ****         CyIntSetPriority(UART_ISR_NUMBER, UART_ISR_PRIORITY);
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 7


 274:Generated_Source\PSoC4/UART_UART.c ****         (void) CyIntSetVector(UART_ISR_NUMBER, &UART_SPI_UART_ISR);
 275:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_SCB_IRQ_INTERNAL) */
 276:Generated_Source\PSoC4/UART_UART.c **** 
 277:Generated_Source\PSoC4/UART_UART.c ****         /* Configure WAKE interrupt */
 278:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_UART_RX_WAKEUP_IRQ)
 279:Generated_Source\PSoC4/UART_UART.c ****         CyIntDisable    (UART_RX_WAKE_ISR_NUMBER);
 280:Generated_Source\PSoC4/UART_UART.c ****         CyIntSetPriority(UART_RX_WAKE_ISR_NUMBER, UART_RX_WAKE_ISR_PRIORITY);
 281:Generated_Source\PSoC4/UART_UART.c ****         (void) CyIntSetVector(UART_RX_WAKE_ISR_NUMBER, &UART_UART_WAKEUP_ISR);
 282:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RX_WAKEUP_IRQ) */
 283:Generated_Source\PSoC4/UART_UART.c **** 
 284:Generated_Source\PSoC4/UART_UART.c ****         /* Configure interrupt sources */
 285:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_I2C_EC_MASK_REG = UART_UART_DEFAULT_INTR_I2C_EC_MASK;
  70              		.loc 1 285 0
  71 0036 154A     		ldr	r2, .L2+52
  72 0038 1360     		str	r3, [r2]
 286:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_SPI_EC_MASK_REG = UART_UART_DEFAULT_INTR_SPI_EC_MASK;
  73              		.loc 1 286 0
  74 003a 154A     		ldr	r2, .L2+56
  75 003c 1360     		str	r3, [r2]
 287:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_SLAVE_MASK_REG  = UART_UART_DEFAULT_INTR_SLAVE_MASK;
  76              		.loc 1 287 0
  77 003e 154A     		ldr	r2, .L2+60
  78 0040 1360     		str	r3, [r2]
 288:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_MASTER_MASK_REG = UART_UART_DEFAULT_INTR_MASTER_MASK;
  79              		.loc 1 288 0
  80 0042 154A     		ldr	r2, .L2+64
  81 0044 1360     		str	r3, [r2]
 289:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_RX_MASK_REG     = UART_UART_DEFAULT_INTR_RX_MASK;
  82              		.loc 1 289 0
  83 0046 154A     		ldr	r2, .L2+68
  84 0048 1360     		str	r3, [r2]
 290:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_TX_MASK_REG     = UART_UART_DEFAULT_INTR_TX_MASK;
  85              		.loc 1 290 0
  86 004a 154A     		ldr	r2, .L2+72
  87 004c 1360     		str	r3, [r2]
 291:Generated_Source\PSoC4/UART_UART.c **** 
 292:Generated_Source\PSoC4/UART_UART.c ****         /* Configure TX interrupt sources to restore. */
 293:Generated_Source\PSoC4/UART_UART.c ****         UART_IntrTxMask = LO16(UART_INTR_TX_MASK_REG);
  88              		.loc 1 293 0
  89 004e 1268     		ldr	r2, [r2]
  90 0050 144B     		ldr	r3, .L2+76
  91 0052 1A80     		strh	r2, [r3]
 294:Generated_Source\PSoC4/UART_UART.c **** 
 295:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_INTERNAL_RX_SW_BUFFER_CONST)
 296:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferHead     = 0u;
 297:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferTail     = 0u;
 298:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferOverflow = 0u;
 299:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
 300:Generated_Source\PSoC4/UART_UART.c **** 
 301:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_INTERNAL_TX_SW_BUFFER_CONST)
 302:Generated_Source\PSoC4/UART_UART.c ****         UART_txBufferHead = 0u;
 303:Generated_Source\PSoC4/UART_UART.c ****         UART_txBufferTail = 0u;
 304:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 305:Generated_Source\PSoC4/UART_UART.c ****     }
  92              		.loc 1 305 0
  93              		@ sp needed
  94 0054 7047     		bx	lr
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 8


  95              	.L3:
  96 0056 C046     		.align	2
  97              	.L2:
  98 0058 0B000002 		.word	33554443
  99 005c 00002540 		.word	1076166656
 100 0060 40002540 		.word	1076166720
 101 0064 01000A00 		.word	655361
 102 0068 48002540 		.word	1076166728
 103 006c 00032540 		.word	1076167424
 104 0070 04032540 		.word	1076167428
 105 0074 10032540 		.word	1076167440
 106 0078 44002540 		.word	1076166724
 107 007c 07000080 		.word	-2147483641
 108 0080 00022540 		.word	1076167168
 109 0084 04022540 		.word	1076167172
 110 0088 50002540 		.word	1076166736
 111 008c 880E2540 		.word	1076170376
 112 0090 C80E2540 		.word	1076170440
 113 0094 480F2540 		.word	1076170568
 114 0098 080F2540 		.word	1076170504
 115 009c C80F2540 		.word	1076170696
 116 00a0 880F2540 		.word	1076170632
 117 00a4 00000000 		.word	UART_IntrTxMask
 118              		.cfi_endproc
 119              	.LFE1:
 120              		.size	UART_UartInit, .-UART_UartInit
 121              		.section	.text.UART_UartPostEnable,"ax",%progbits
 122              		.align	2
 123              		.global	UART_UartPostEnable
 124              		.code	16
 125              		.thumb_func
 126              		.type	UART_UartPostEnable, %function
 127              	UART_UartPostEnable:
 128              	.LFB2:
 306:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 307:Generated_Source\PSoC4/UART_UART.c **** 
 308:Generated_Source\PSoC4/UART_UART.c **** 
 309:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 310:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartPostEnable
 311:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 312:Generated_Source\PSoC4/UART_UART.c **** *
 313:Generated_Source\PSoC4/UART_UART.c **** *  Restores HSIOM settings for the UART output pins (TX and/or RTS) to be
 314:Generated_Source\PSoC4/UART_UART.c **** *  controlled by the SCB UART.
 315:Generated_Source\PSoC4/UART_UART.c **** *
 316:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 317:Generated_Source\PSoC4/UART_UART.c **** void UART_UartPostEnable(void)
 318:Generated_Source\PSoC4/UART_UART.c **** {
 129              		.loc 1 318 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 319:Generated_Source\PSoC4/UART_UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 320:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_TX_SDA_MISO_PIN)
 321:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_TX_SDA_MISO_PIN_USED)
 322:Generated_Source\PSoC4/UART_UART.c ****         {
 323:Generated_Source\PSoC4/UART_UART.c ****             /* Set SCB UART to drive the output pin */
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 9


 324:Generated_Source\PSoC4/UART_UART.c ****             UART_SET_HSIOM_SEL(UART_TX_SDA_MISO_HSIOM_REG, UART_TX_SDA_MISO_HSIOM_MASK,
 325:Generated_Source\PSoC4/UART_UART.c ****                                            UART_TX_SDA_MISO_HSIOM_POS, UART_TX_SDA_MISO_HSIOM_SEL_U
 326:Generated_Source\PSoC4/UART_UART.c ****         }
 327:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_TX_SDA_MISO_PIN_PIN) */
 328:Generated_Source\PSoC4/UART_UART.c **** 
 329:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 330:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_RTS_SS0_PIN)
 331:Generated_Source\PSoC4/UART_UART.c ****             if (UART_CHECK_RTS_SS0_PIN_USED)
 332:Generated_Source\PSoC4/UART_UART.c ****             {
 333:Generated_Source\PSoC4/UART_UART.c ****                 /* Set SCB UART to drive the output pin */
 334:Generated_Source\PSoC4/UART_UART.c ****                 UART_SET_HSIOM_SEL(UART_RTS_SS0_HSIOM_REG, UART_RTS_SS0_HSIOM_MASK,
 335:Generated_Source\PSoC4/UART_UART.c ****                                                UART_RTS_SS0_HSIOM_POS, UART_RTS_SS0_HSIOM_SEL_UART)
 336:Generated_Source\PSoC4/UART_UART.c ****             }
 337:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_RTS_SS0_PIN) */
 338:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 339:Generated_Source\PSoC4/UART_UART.c **** 
 340:Generated_Source\PSoC4/UART_UART.c **** #else
 341:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_TX_PIN)
 342:Generated_Source\PSoC4/UART_UART.c ****          /* Set SCB UART to drive the output pin */
 343:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_TX_HSIOM_REG, UART_TX_HSIOM_MASK,
 134              		.loc 1 343 0
 135 0000 0549     		ldr	r1, .L5
 136 0002 0B68     		ldr	r3, [r1]
 137 0004 F022     		movs	r2, #240
 138 0006 9343     		bics	r3, r2
 139 0008 603A     		subs	r2, r2, #96
 140 000a 1343     		orrs	r3, r2
 141 000c 0B60     		str	r3, [r1]
 344:Generated_Source\PSoC4/UART_UART.c ****                                        UART_TX_HSIOM_POS, UART_TX_HSIOM_SEL_UART);
 345:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_TX_PIN) */
 346:Generated_Source\PSoC4/UART_UART.c **** 
 347:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_RTS_PIN)
 348:Generated_Source\PSoC4/UART_UART.c ****         /* Set SCB UART to drive the output pin */
 349:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_RTS_HSIOM_REG, UART_RTS_HSIOM_MASK,
 350:Generated_Source\PSoC4/UART_UART.c ****                                        UART_RTS_HSIOM_POS, UART_RTS_HSIOM_SEL_UART);
 351:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RTS_PIN) */
 352:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 353:Generated_Source\PSoC4/UART_UART.c **** 
 354:Generated_Source\PSoC4/UART_UART.c ****     /* Restore TX interrupt sources. */
 355:Generated_Source\PSoC4/UART_UART.c ****     UART_SetTxInterruptMode(UART_IntrTxMask);
 142              		.loc 1 355 0
 143 000e 034B     		ldr	r3, .L5+4
 144 0010 1A88     		ldrh	r2, [r3]
 145 0012 034B     		ldr	r3, .L5+8
 146 0014 1A60     		str	r2, [r3]
 356:Generated_Source\PSoC4/UART_UART.c **** }
 147              		.loc 1 356 0
 148              		@ sp needed
 149 0016 7047     		bx	lr
 150              	.L6:
 151              		.align	2
 152              	.L5:
 153 0018 00030240 		.word	1073873664
 154 001c 00000000 		.word	UART_IntrTxMask
 155 0020 880F2540 		.word	1076170632
 156              		.cfi_endproc
 157              	.LFE2:
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 10


 158              		.size	UART_UartPostEnable, .-UART_UartPostEnable
 159              		.section	.text.UART_UartStop,"ax",%progbits
 160              		.align	2
 161              		.global	UART_UartStop
 162              		.code	16
 163              		.thumb_func
 164              		.type	UART_UartStop, %function
 165              	UART_UartStop:
 166              	.LFB3:
 357:Generated_Source\PSoC4/UART_UART.c **** 
 358:Generated_Source\PSoC4/UART_UART.c **** 
 359:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 360:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartStop
 361:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 362:Generated_Source\PSoC4/UART_UART.c **** *
 363:Generated_Source\PSoC4/UART_UART.c **** *  Changes the HSIOM settings for the UART output pins (TX and/or RTS) to keep
 364:Generated_Source\PSoC4/UART_UART.c **** *  them inactive after the block is disabled. The output pins are controlled by
 365:Generated_Source\PSoC4/UART_UART.c **** *  the GPIO data register. Also, the function disables the skip start feature
 366:Generated_Source\PSoC4/UART_UART.c **** *  to not cause it to trigger after the component is enabled.
 367:Generated_Source\PSoC4/UART_UART.c **** *
 368:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 369:Generated_Source\PSoC4/UART_UART.c **** void UART_UartStop(void)
 370:Generated_Source\PSoC4/UART_UART.c **** {
 167              		.loc 1 370 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 371:Generated_Source\PSoC4/UART_UART.c **** #if(UART_SCB_MODE_UNCONFIG_CONST_CFG)
 372:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_TX_SDA_MISO_PIN)
 373:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_TX_SDA_MISO_PIN_USED)
 374:Generated_Source\PSoC4/UART_UART.c ****         {
 375:Generated_Source\PSoC4/UART_UART.c ****             /* Set GPIO to drive output pin */
 376:Generated_Source\PSoC4/UART_UART.c ****             UART_SET_HSIOM_SEL(UART_TX_SDA_MISO_HSIOM_REG, UART_TX_SDA_MISO_HSIOM_MASK,
 377:Generated_Source\PSoC4/UART_UART.c ****                                            UART_TX_SDA_MISO_HSIOM_POS, UART_TX_SDA_MISO_HSIOM_SEL_G
 378:Generated_Source\PSoC4/UART_UART.c ****         }
 379:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_TX_SDA_MISO_PIN_PIN) */
 380:Generated_Source\PSoC4/UART_UART.c **** 
 381:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 382:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_RTS_SS0_PIN)
 383:Generated_Source\PSoC4/UART_UART.c ****             if (UART_CHECK_RTS_SS0_PIN_USED)
 384:Generated_Source\PSoC4/UART_UART.c ****             {
 385:Generated_Source\PSoC4/UART_UART.c ****                 /* Set output pin state after block is disabled */
 386:Generated_Source\PSoC4/UART_UART.c ****                 UART_uart_rts_spi_ss0_Write(UART_GET_UART_RTS_INACTIVE);
 387:Generated_Source\PSoC4/UART_UART.c **** 
 388:Generated_Source\PSoC4/UART_UART.c ****                 /* Set GPIO to drive output pin */
 389:Generated_Source\PSoC4/UART_UART.c ****                 UART_SET_HSIOM_SEL(UART_RTS_SS0_HSIOM_REG, UART_RTS_SS0_HSIOM_MASK,
 390:Generated_Source\PSoC4/UART_UART.c ****                                                UART_RTS_SS0_HSIOM_POS, UART_RTS_SS0_HSIOM_SEL_GPIO)
 391:Generated_Source\PSoC4/UART_UART.c ****             }
 392:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_RTS_SS0_PIN) */
 393:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 394:Generated_Source\PSoC4/UART_UART.c **** 
 395:Generated_Source\PSoC4/UART_UART.c **** #else
 396:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_TX_PIN)
 397:Generated_Source\PSoC4/UART_UART.c ****         /* Set GPIO to drive output pin */
 398:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_TX_HSIOM_REG, UART_TX_HSIOM_MASK,
 172              		.loc 1 398 0
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 11


 173 0000 064A     		ldr	r2, .L8
 174 0002 1368     		ldr	r3, [r2]
 175 0004 F021     		movs	r1, #240
 176 0006 8B43     		bics	r3, r1
 177 0008 1360     		str	r3, [r2]
 399:Generated_Source\PSoC4/UART_UART.c ****                                        UART_TX_HSIOM_POS, UART_TX_HSIOM_SEL_GPIO);
 400:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_TX_PIN) */
 401:Generated_Source\PSoC4/UART_UART.c **** 
 402:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_RTS_PIN)
 403:Generated_Source\PSoC4/UART_UART.c ****         /* Set output pin state after block is disabled */
 404:Generated_Source\PSoC4/UART_UART.c ****         UART_rts_Write(UART_GET_UART_RTS_INACTIVE);
 405:Generated_Source\PSoC4/UART_UART.c **** 
 406:Generated_Source\PSoC4/UART_UART.c ****         /* Set GPIO to drive output pin */
 407:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_RTS_HSIOM_REG, UART_RTS_HSIOM_MASK,
 408:Generated_Source\PSoC4/UART_UART.c ****                                        UART_RTS_HSIOM_POS, UART_RTS_HSIOM_SEL_GPIO);
 409:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RTS_PIN) */
 410:Generated_Source\PSoC4/UART_UART.c **** 
 411:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 412:Generated_Source\PSoC4/UART_UART.c **** 
 413:Generated_Source\PSoC4/UART_UART.c **** #if (UART_UART_WAKE_ENABLE_CONST)
 414:Generated_Source\PSoC4/UART_UART.c ****     /* Disable skip start feature used for wakeup */
 415:Generated_Source\PSoC4/UART_UART.c ****     UART_UART_RX_CTRL_REG &= (uint32) ~UART_UART_RX_CTRL_SKIP_START;
 416:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_WAKE_ENABLE_CONST) */
 417:Generated_Source\PSoC4/UART_UART.c **** 
 418:Generated_Source\PSoC4/UART_UART.c ****     /* Store TX interrupt sources (exclude level triggered). */
 419:Generated_Source\PSoC4/UART_UART.c ****     UART_IntrTxMask = LO16(UART_GetTxInterruptMode() & UART_INTR_UART_TX_RESTORE);
 178              		.loc 1 419 0
 179 000a 054B     		ldr	r3, .L8+4
 180 000c 1A68     		ldr	r2, [r3]
 181 000e E423     		movs	r3, #228
 182 0010 DB00     		lsls	r3, r3, #3
 183 0012 1340     		ands	r3, r2
 184 0014 034A     		ldr	r2, .L8+8
 185 0016 1380     		strh	r3, [r2]
 420:Generated_Source\PSoC4/UART_UART.c **** }
 186              		.loc 1 420 0
 187              		@ sp needed
 188 0018 7047     		bx	lr
 189              	.L9:
 190 001a C046     		.align	2
 191              	.L8:
 192 001c 00030240 		.word	1073873664
 193 0020 880F2540 		.word	1076170632
 194 0024 00000000 		.word	UART_IntrTxMask
 195              		.cfi_endproc
 196              	.LFE3:
 197              		.size	UART_UartStop, .-UART_UartStop
 198              		.section	.text.UART_UartSetRxAddress,"ax",%progbits
 199              		.align	2
 200              		.global	UART_UartSetRxAddress
 201              		.code	16
 202              		.thumb_func
 203              		.type	UART_UartSetRxAddress, %function
 204              	UART_UartSetRxAddress:
 205              	.LFB4:
 421:Generated_Source\PSoC4/UART_UART.c **** 
 422:Generated_Source\PSoC4/UART_UART.c **** 
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 12


 423:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 424:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartSetRxAddress
 425:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 426:Generated_Source\PSoC4/UART_UART.c **** *
 427:Generated_Source\PSoC4/UART_UART.c **** *  Sets the hardware detectable receiver address for the UART in the
 428:Generated_Source\PSoC4/UART_UART.c **** *  Multiprocessor mode.
 429:Generated_Source\PSoC4/UART_UART.c **** *
 430:Generated_Source\PSoC4/UART_UART.c **** *  \param address: Address for hardware address detection.
 431:Generated_Source\PSoC4/UART_UART.c **** *
 432:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 433:Generated_Source\PSoC4/UART_UART.c **** void UART_UartSetRxAddress(uint32 address)
 434:Generated_Source\PSoC4/UART_UART.c **** {
 206              		.loc 1 434 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              		@ link register save eliminated.
 211              	.LVL0:
 435:Generated_Source\PSoC4/UART_UART.c ****      uint32 matchReg;
 436:Generated_Source\PSoC4/UART_UART.c **** 
 437:Generated_Source\PSoC4/UART_UART.c ****     matchReg = UART_RX_MATCH_REG;
 212              		.loc 1 437 0
 213 0000 034A     		ldr	r2, .L11
 214 0002 1368     		ldr	r3, [r2]
 215              	.LVL1:
 438:Generated_Source\PSoC4/UART_UART.c **** 
 439:Generated_Source\PSoC4/UART_UART.c ****     matchReg &= ((uint32) ~UART_RX_MATCH_ADDR_MASK); /* Clear address bits */
 216              		.loc 1 439 0
 217 0004 FF21     		movs	r1, #255
 218 0006 8B43     		bics	r3, r1
 219              	.LVL2:
 440:Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32)  (address & UART_RX_MATCH_ADDR_MASK)); /* Set address  */
 220              		.loc 1 440 0
 221 0008 0840     		ands	r0, r1
 222              	.LVL3:
 223 000a 1843     		orrs	r0, r3
 224              	.LVL4:
 441:Generated_Source\PSoC4/UART_UART.c **** 
 442:Generated_Source\PSoC4/UART_UART.c ****     UART_RX_MATCH_REG = matchReg;
 225              		.loc 1 442 0
 226 000c 1060     		str	r0, [r2]
 443:Generated_Source\PSoC4/UART_UART.c **** }
 227              		.loc 1 443 0
 228              		@ sp needed
 229 000e 7047     		bx	lr
 230              	.L12:
 231              		.align	2
 232              	.L11:
 233 0010 10032540 		.word	1076167440
 234              		.cfi_endproc
 235              	.LFE4:
 236              		.size	UART_UartSetRxAddress, .-UART_UartSetRxAddress
 237              		.section	.text.UART_UartSetRxAddressMask,"ax",%progbits
 238              		.align	2
 239              		.global	UART_UartSetRxAddressMask
 240              		.code	16
 241              		.thumb_func
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 13


 242              		.type	UART_UartSetRxAddressMask, %function
 243              	UART_UartSetRxAddressMask:
 244              	.LFB5:
 444:Generated_Source\PSoC4/UART_UART.c **** 
 445:Generated_Source\PSoC4/UART_UART.c **** 
 446:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 447:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartSetRxAddressMask
 448:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 449:Generated_Source\PSoC4/UART_UART.c **** *
 450:Generated_Source\PSoC4/UART_UART.c **** *  Sets the hardware address mask for the UART in the Multiprocessor mode.
 451:Generated_Source\PSoC4/UART_UART.c **** *
 452:Generated_Source\PSoC4/UART_UART.c **** *  \param addressMask: Address mask.
 453:Generated_Source\PSoC4/UART_UART.c **** *   - Bit value 0 – excludes bit from address comparison.
 454:Generated_Source\PSoC4/UART_UART.c **** *   - Bit value 1 – the bit needs to match with the corresponding bit
 455:Generated_Source\PSoC4/UART_UART.c **** *     of the address.
 456:Generated_Source\PSoC4/UART_UART.c **** *
 457:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 458:Generated_Source\PSoC4/UART_UART.c **** void UART_UartSetRxAddressMask(uint32 addressMask)
 459:Generated_Source\PSoC4/UART_UART.c **** {
 245              		.loc 1 459 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 250              	.LVL5:
 460:Generated_Source\PSoC4/UART_UART.c ****     uint32 matchReg;
 461:Generated_Source\PSoC4/UART_UART.c **** 
 462:Generated_Source\PSoC4/UART_UART.c ****     matchReg = UART_RX_MATCH_REG;
 251              		.loc 1 462 0
 252 0000 034A     		ldr	r2, .L14
 253 0002 1168     		ldr	r1, [r2]
 254              	.LVL6:
 463:Generated_Source\PSoC4/UART_UART.c **** 
 464:Generated_Source\PSoC4/UART_UART.c ****     matchReg &= ((uint32) ~UART_RX_MATCH_MASK_MASK); /* Clear address mask bits */
 255              		.loc 1 464 0
 256 0004 034B     		ldr	r3, .L14+4
 257 0006 0B40     		ands	r3, r1
 258              	.LVL7:
 465:Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32) (addressMask << UART_RX_MATCH_MASK_POS));
 259              		.loc 1 465 0
 260 0008 0004     		lsls	r0, r0, #16
 261              	.LVL8:
 262 000a 1843     		orrs	r0, r3
 263              	.LVL9:
 466:Generated_Source\PSoC4/UART_UART.c **** 
 467:Generated_Source\PSoC4/UART_UART.c ****     UART_RX_MATCH_REG = matchReg;
 264              		.loc 1 467 0
 265 000c 1060     		str	r0, [r2]
 468:Generated_Source\PSoC4/UART_UART.c **** }
 266              		.loc 1 468 0
 267              		@ sp needed
 268 000e 7047     		bx	lr
 269              	.L15:
 270              		.align	2
 271              	.L14:
 272 0010 10032540 		.word	1076167440
 273 0014 FFFF00FF 		.word	-16711681
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 14


 274              		.cfi_endproc
 275              	.LFE5:
 276              		.size	UART_UartSetRxAddressMask, .-UART_UartSetRxAddressMask
 277              		.section	.text.UART_UartPutString,"ax",%progbits
 278              		.align	2
 279              		.global	UART_UartPutString
 280              		.code	16
 281              		.thumb_func
 282              		.type	UART_UartPutString, %function
 283              	UART_UartPutString:
 284              	.LFB6:
 469:Generated_Source\PSoC4/UART_UART.c **** 
 470:Generated_Source\PSoC4/UART_UART.c **** 
 471:Generated_Source\PSoC4/UART_UART.c **** #if(UART_UART_RX_DIRECTION)
 472:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 473:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartGetChar
 474:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 475:Generated_Source\PSoC4/UART_UART.c ****     *
 476:Generated_Source\PSoC4/UART_UART.c ****     *  Retrieves next data element from receive buffer.
 477:Generated_Source\PSoC4/UART_UART.c ****     *  This function is designed for ASCII characters and returns a char where
 478:Generated_Source\PSoC4/UART_UART.c ****     *  1 to 255 are valid characters and 0 indicates an error occurred or no data
 479:Generated_Source\PSoC4/UART_UART.c ****     *  is present.
 480:Generated_Source\PSoC4/UART_UART.c ****     *  - RX software buffer is disabled: Returns data element retrieved from RX
 481:Generated_Source\PSoC4/UART_UART.c ****     *    FIFO.
 482:Generated_Source\PSoC4/UART_UART.c ****     *  - RX software buffer is enabled: Returns data element from the software
 483:Generated_Source\PSoC4/UART_UART.c ****     *    receive buffer.
 484:Generated_Source\PSoC4/UART_UART.c ****     *
 485:Generated_Source\PSoC4/UART_UART.c ****     *  \return
 486:Generated_Source\PSoC4/UART_UART.c ****     *   Next data element from the receive buffer. ASCII character values from
 487:Generated_Source\PSoC4/UART_UART.c ****     *   1 to 255 are valid. A returned zero signifies an error condition or no
 488:Generated_Source\PSoC4/UART_UART.c ****     *   data available.
 489:Generated_Source\PSoC4/UART_UART.c ****     *
 490:Generated_Source\PSoC4/UART_UART.c ****     *  \sideeffect
 491:Generated_Source\PSoC4/UART_UART.c ****     *   The errors bits may not correspond with reading characters due to
 492:Generated_Source\PSoC4/UART_UART.c ****     *   RX FIFO and software buffer usage.
 493:Generated_Source\PSoC4/UART_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 494:Generated_Source\PSoC4/UART_UART.c ****     *   is not treated as an error condition.
 495:Generated_Source\PSoC4/UART_UART.c ****     *   Check UART_rxBufferOverflow to capture that error condition.
 496:Generated_Source\PSoC4/UART_UART.c ****     *
 497:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 498:Generated_Source\PSoC4/UART_UART.c ****     uint32 UART_UartGetChar(void)
 499:Generated_Source\PSoC4/UART_UART.c ****     {
 500:Generated_Source\PSoC4/UART_UART.c ****         uint32 rxData = 0u;
 501:Generated_Source\PSoC4/UART_UART.c **** 
 502:Generated_Source\PSoC4/UART_UART.c ****         /* Reads data only if there is data to read */
 503:Generated_Source\PSoC4/UART_UART.c ****         if (0u != UART_SpiUartGetRxBufferSize())
 504:Generated_Source\PSoC4/UART_UART.c ****         {
 505:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_SpiUartReadRxData();
 506:Generated_Source\PSoC4/UART_UART.c ****         }
 507:Generated_Source\PSoC4/UART_UART.c **** 
 508:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_INTR_RX(UART_INTR_RX_ERR))
 509:Generated_Source\PSoC4/UART_UART.c ****         {
 510:Generated_Source\PSoC4/UART_UART.c ****             rxData = 0u; /* Error occurred: returns zero */
 511:Generated_Source\PSoC4/UART_UART.c ****             UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
 512:Generated_Source\PSoC4/UART_UART.c ****         }
 513:Generated_Source\PSoC4/UART_UART.c **** 
 514:Generated_Source\PSoC4/UART_UART.c ****         return (rxData);
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 15


 515:Generated_Source\PSoC4/UART_UART.c ****     }
 516:Generated_Source\PSoC4/UART_UART.c **** 
 517:Generated_Source\PSoC4/UART_UART.c **** 
 518:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 519:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartGetByte
 520:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 521:Generated_Source\PSoC4/UART_UART.c ****     *
 522:Generated_Source\PSoC4/UART_UART.c ****     *  Retrieves the next data element from the receive buffer, returns the
 523:Generated_Source\PSoC4/UART_UART.c ****     *  received byte and error condition.
 524:Generated_Source\PSoC4/UART_UART.c ****     *   - The RX software buffer is disabled: returns the data element retrieved
 525:Generated_Source\PSoC4/UART_UART.c ****     *     from the RX FIFO. Undefined data will be returned if the RX FIFO is
 526:Generated_Source\PSoC4/UART_UART.c ****     *     empty.
 527:Generated_Source\PSoC4/UART_UART.c ****     *   - The RX software buffer is enabled: returns data element from the
 528:Generated_Source\PSoC4/UART_UART.c ****     *     software receive buffer.
 529:Generated_Source\PSoC4/UART_UART.c ****     *
 530:Generated_Source\PSoC4/UART_UART.c ****     *  \return
 531:Generated_Source\PSoC4/UART_UART.c ****     *   Bits 7-0 contain the next data element from the receive buffer and
 532:Generated_Source\PSoC4/UART_UART.c ****     *   other bits contain the error condition.
 533:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_OVERFLOW - Attempt to write to a full
 534:Generated_Source\PSoC4/UART_UART.c ****     *     receiver FIFO.
 535:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_UNDERFLOW    Attempt to read from an empty
 536:Generated_Source\PSoC4/UART_UART.c ****     *     receiver FIFO.
 537:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_FRAME_ERROR - UART framing error detected.
 538:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_PARITY_ERROR - UART parity error detected.
 539:Generated_Source\PSoC4/UART_UART.c ****     *
 540:Generated_Source\PSoC4/UART_UART.c ****     *  \sideeffect
 541:Generated_Source\PSoC4/UART_UART.c ****     *   The errors bits may not correspond with reading characters due to
 542:Generated_Source\PSoC4/UART_UART.c ****     *   RX FIFO and software buffer usage.
 543:Generated_Source\PSoC4/UART_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 544:Generated_Source\PSoC4/UART_UART.c ****     *   is not treated as an error condition.
 545:Generated_Source\PSoC4/UART_UART.c ****     *   Check UART_rxBufferOverflow to capture that error condition.
 546:Generated_Source\PSoC4/UART_UART.c ****     *
 547:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 548:Generated_Source\PSoC4/UART_UART.c ****     uint32 UART_UartGetByte(void)
 549:Generated_Source\PSoC4/UART_UART.c ****     {
 550:Generated_Source\PSoC4/UART_UART.c ****         uint32 rxData;
 551:Generated_Source\PSoC4/UART_UART.c ****         uint32 tmpStatus;
 552:Generated_Source\PSoC4/UART_UART.c **** 
 553:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 554:Generated_Source\PSoC4/UART_UART.c ****         {
 555:Generated_Source\PSoC4/UART_UART.c ****             UART_DisableInt();
 556:Generated_Source\PSoC4/UART_UART.c ****         }
 557:Generated_Source\PSoC4/UART_UART.c ****         #endif
 558:Generated_Source\PSoC4/UART_UART.c **** 
 559:Generated_Source\PSoC4/UART_UART.c ****         if (0u != UART_SpiUartGetRxBufferSize())
 560:Generated_Source\PSoC4/UART_UART.c ****         {
 561:Generated_Source\PSoC4/UART_UART.c ****             /* Enables interrupt to receive more bytes: at least one byte is in
 562:Generated_Source\PSoC4/UART_UART.c ****             * buffer.
 563:Generated_Source\PSoC4/UART_UART.c ****             */
 564:Generated_Source\PSoC4/UART_UART.c ****             #if (UART_CHECK_RX_SW_BUFFER)
 565:Generated_Source\PSoC4/UART_UART.c ****             {
 566:Generated_Source\PSoC4/UART_UART.c ****                 UART_EnableInt();
 567:Generated_Source\PSoC4/UART_UART.c ****             }
 568:Generated_Source\PSoC4/UART_UART.c ****             #endif
 569:Generated_Source\PSoC4/UART_UART.c **** 
 570:Generated_Source\PSoC4/UART_UART.c ****             /* Get received byte */
 571:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_SpiUartReadRxData();
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 16


 572:Generated_Source\PSoC4/UART_UART.c ****         }
 573:Generated_Source\PSoC4/UART_UART.c ****         else
 574:Generated_Source\PSoC4/UART_UART.c ****         {
 575:Generated_Source\PSoC4/UART_UART.c ****             /* Reads a byte directly from RX FIFO: underflow is raised in the
 576:Generated_Source\PSoC4/UART_UART.c ****             * case of empty. Otherwise the first received byte will be read.
 577:Generated_Source\PSoC4/UART_UART.c ****             */
 578:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_RX_FIFO_RD_REG;
 579:Generated_Source\PSoC4/UART_UART.c **** 
 580:Generated_Source\PSoC4/UART_UART.c **** 
 581:Generated_Source\PSoC4/UART_UART.c ****             /* Enables interrupt to receive more bytes. */
 582:Generated_Source\PSoC4/UART_UART.c ****             #if (UART_CHECK_RX_SW_BUFFER)
 583:Generated_Source\PSoC4/UART_UART.c ****             {
 584:Generated_Source\PSoC4/UART_UART.c **** 
 585:Generated_Source\PSoC4/UART_UART.c ****                 /* The byte has been read from RX FIFO. Clear RX interrupt to
 586:Generated_Source\PSoC4/UART_UART.c ****                 * not involve interrupt handler when RX FIFO is empty.
 587:Generated_Source\PSoC4/UART_UART.c ****                 */
 588:Generated_Source\PSoC4/UART_UART.c ****                 UART_ClearRxInterruptSource(UART_INTR_RX_NOT_EMPTY);
 589:Generated_Source\PSoC4/UART_UART.c **** 
 590:Generated_Source\PSoC4/UART_UART.c ****                 UART_EnableInt();
 591:Generated_Source\PSoC4/UART_UART.c ****             }
 592:Generated_Source\PSoC4/UART_UART.c ****             #endif
 593:Generated_Source\PSoC4/UART_UART.c ****         }
 594:Generated_Source\PSoC4/UART_UART.c **** 
 595:Generated_Source\PSoC4/UART_UART.c ****         /* Get and clear RX error mask */
 596:Generated_Source\PSoC4/UART_UART.c ****         tmpStatus = (UART_GetRxInterruptSource() & UART_INTR_RX_ERR);
 597:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
 598:Generated_Source\PSoC4/UART_UART.c **** 
 599:Generated_Source\PSoC4/UART_UART.c ****         /* Puts together data and error status:
 600:Generated_Source\PSoC4/UART_UART.c ****         * MP mode and accept address: 9th bit is set to notify mark.
 601:Generated_Source\PSoC4/UART_UART.c ****         */
 602:Generated_Source\PSoC4/UART_UART.c ****         rxData |= ((uint32) (tmpStatus << 8u));
 603:Generated_Source\PSoC4/UART_UART.c **** 
 604:Generated_Source\PSoC4/UART_UART.c ****         return (rxData);
 605:Generated_Source\PSoC4/UART_UART.c ****     }
 606:Generated_Source\PSoC4/UART_UART.c **** 
 607:Generated_Source\PSoC4/UART_UART.c **** 
 608:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 609:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 610:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetRtsPolarity
 611:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 612:Generated_Source\PSoC4/UART_UART.c ****         *
 613:Generated_Source\PSoC4/UART_UART.c ****         *  Sets active polarity of RTS output signal.
 614:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 615:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 616:Generated_Source\PSoC4/UART_UART.c ****         *
 617:Generated_Source\PSoC4/UART_UART.c ****         *  \param polarity: Active polarity of RTS output signal.
 618:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_RTS_ACTIVE_LOW  - RTS signal is active low.
 619:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_RTS_ACTIVE_HIGH - RTS signal is active high.
 620:Generated_Source\PSoC4/UART_UART.c ****         *
 621:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 622:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetRtsPolarity(uint32 polarity)
 623:Generated_Source\PSoC4/UART_UART.c ****         {
 624:Generated_Source\PSoC4/UART_UART.c ****             if(0u != polarity)
 625:Generated_Source\PSoC4/UART_UART.c ****             {
 626:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_RTS_POLARITY;
 627:Generated_Source\PSoC4/UART_UART.c ****             }
 628:Generated_Source\PSoC4/UART_UART.c ****             else
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 17


 629:Generated_Source\PSoC4/UART_UART.c ****             {
 630:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_RTS_POLARITY;
 631:Generated_Source\PSoC4/UART_UART.c ****             }
 632:Generated_Source\PSoC4/UART_UART.c ****         }
 633:Generated_Source\PSoC4/UART_UART.c **** 
 634:Generated_Source\PSoC4/UART_UART.c **** 
 635:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 636:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetRtsFifoLevel
 637:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 638:Generated_Source\PSoC4/UART_UART.c ****         *
 639:Generated_Source\PSoC4/UART_UART.c ****         *  Sets level in the RX FIFO for RTS signal activation.
 640:Generated_Source\PSoC4/UART_UART.c ****         *  While the RX FIFO has fewer entries than the RX FIFO level the RTS signal
 641:Generated_Source\PSoC4/UART_UART.c ****         *  remains active, otherwise the RTS signal becomes inactive.
 642:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 643:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 644:Generated_Source\PSoC4/UART_UART.c ****         *
 645:Generated_Source\PSoC4/UART_UART.c ****         *  \param level: Level in the RX FIFO for RTS signal activation.
 646:Generated_Source\PSoC4/UART_UART.c ****         *   The range of valid level values is between 0 and RX FIFO depth - 1.
 647:Generated_Source\PSoC4/UART_UART.c ****         *   Setting level value to 0 disables RTS signal activation.
 648:Generated_Source\PSoC4/UART_UART.c ****         *
 649:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 650:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetRtsFifoLevel(uint32 level)
 651:Generated_Source\PSoC4/UART_UART.c ****         {
 652:Generated_Source\PSoC4/UART_UART.c ****             uint32 uartFlowCtrl;
 653:Generated_Source\PSoC4/UART_UART.c **** 
 654:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl = UART_UART_FLOW_CTRL_REG;
 655:Generated_Source\PSoC4/UART_UART.c **** 
 656:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl &= ((uint32) ~UART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask
 657:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl |= ((uint32) (UART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 658:Generated_Source\PSoC4/UART_UART.c **** 
 659:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG = uartFlowCtrl;
 660:Generated_Source\PSoC4/UART_UART.c ****         }
 661:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 662:Generated_Source\PSoC4/UART_UART.c **** 
 663:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_RX_DIRECTION) */
 664:Generated_Source\PSoC4/UART_UART.c **** 
 665:Generated_Source\PSoC4/UART_UART.c **** 
 666:Generated_Source\PSoC4/UART_UART.c **** #if(UART_UART_TX_DIRECTION)
 667:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 668:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartPutString
 669:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 670:Generated_Source\PSoC4/UART_UART.c ****     *
 671:Generated_Source\PSoC4/UART_UART.c ****     *  Places a NULL terminated string in the transmit buffer to be sent at the
 672:Generated_Source\PSoC4/UART_UART.c ****     *  next available bus time.
 673:Generated_Source\PSoC4/UART_UART.c ****     *  This function is blocking and waits until there is a space available to put
 674:Generated_Source\PSoC4/UART_UART.c ****     *  requested data in transmit buffer.
 675:Generated_Source\PSoC4/UART_UART.c ****     *
 676:Generated_Source\PSoC4/UART_UART.c ****     *  \param string: pointer to the null terminated string array to be placed in the
 677:Generated_Source\PSoC4/UART_UART.c ****     *   transmit buffer.
 678:Generated_Source\PSoC4/UART_UART.c ****     *
 679:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 680:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartPutString(const char8 string[])
 681:Generated_Source\PSoC4/UART_UART.c ****     {
 285              		.loc 1 681 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 18


 289              	.LVL10:
 290 0000 70B5     		push	{r4, r5, r6, lr}
 291              		.cfi_def_cfa_offset 16
 292              		.cfi_offset 4, -16
 293              		.cfi_offset 5, -12
 294              		.cfi_offset 6, -8
 295              		.cfi_offset 14, -4
 296 0002 0500     		movs	r5, r0
 297              	.LVL11:
 682:Generated_Source\PSoC4/UART_UART.c ****         uint32 bufIndex;
 683:Generated_Source\PSoC4/UART_UART.c **** 
 684:Generated_Source\PSoC4/UART_UART.c ****         bufIndex = 0u;
 298              		.loc 1 684 0
 299 0004 0024     		movs	r4, #0
 685:Generated_Source\PSoC4/UART_UART.c **** 
 686:Generated_Source\PSoC4/UART_UART.c ****         /* Blocks the control flow until all data has been sent */
 687:Generated_Source\PSoC4/UART_UART.c ****         while(string[bufIndex] != ((char8) 0))
 300              		.loc 1 687 0
 301 0006 02E0     		b	.L17
 302              	.LVL12:
 303              	.L18:
 688:Generated_Source\PSoC4/UART_UART.c ****         {
 689:Generated_Source\PSoC4/UART_UART.c ****             UART_UartPutChar((uint32) string[bufIndex]);
 304              		.loc 1 689 0
 305 0008 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 306              	.LVL13:
 690:Generated_Source\PSoC4/UART_UART.c ****             bufIndex++;
 307              		.loc 1 690 0
 308 000c 0134     		adds	r4, r4, #1
 309              	.LVL14:
 310              	.L17:
 687:Generated_Source\PSoC4/UART_UART.c ****         {
 311              		.loc 1 687 0
 312 000e 285D     		ldrb	r0, [r5, r4]
 313 0010 0028     		cmp	r0, #0
 314 0012 F9D1     		bne	.L18
 691:Generated_Source\PSoC4/UART_UART.c ****         }
 692:Generated_Source\PSoC4/UART_UART.c ****     }
 315              		.loc 1 692 0
 316              		@ sp needed
 317              	.LVL15:
 318              	.LVL16:
 319 0014 70BD     		pop	{r4, r5, r6, pc}
 320              		.cfi_endproc
 321              	.LFE6:
 322              		.size	UART_UartPutString, .-UART_UartPutString
 323 0016 C046     		.section	.text.UART_UartPutCRLF,"ax",%progbits
 324              		.align	2
 325              		.global	UART_UartPutCRLF
 326              		.code	16
 327              		.thumb_func
 328              		.type	UART_UartPutCRLF, %function
 329              	UART_UartPutCRLF:
 330              	.LFB7:
 693:Generated_Source\PSoC4/UART_UART.c **** 
 694:Generated_Source\PSoC4/UART_UART.c **** 
 695:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 19


 696:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartPutCRLF
 697:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 698:Generated_Source\PSoC4/UART_UART.c ****     *
 699:Generated_Source\PSoC4/UART_UART.c ****     *  Places byte of data followed by a carriage return (0x0D) and line feed
 700:Generated_Source\PSoC4/UART_UART.c ****     *  (0x0A) in the transmit buffer.
 701:Generated_Source\PSoC4/UART_UART.c ****     *  This function is blocking and waits until there is a space available to put
 702:Generated_Source\PSoC4/UART_UART.c ****     *  all requested data in transmit buffer.
 703:Generated_Source\PSoC4/UART_UART.c ****     *
 704:Generated_Source\PSoC4/UART_UART.c ****     *  \param txDataByte: the data to be transmitted.
 705:Generated_Source\PSoC4/UART_UART.c ****     *
 706:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 707:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartPutCRLF(uint32 txDataByte)
 708:Generated_Source\PSoC4/UART_UART.c ****     {
 331              		.loc 1 708 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              	.LVL17:
 336 0000 10B5     		push	{r4, lr}
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 4, -8
 339              		.cfi_offset 14, -4
 709:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(txDataByte);  /* Blocks control flow until all data has been sent */
 340              		.loc 1 709 0
 341 0002 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 342              	.LVL18:
 710:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(0x0Du);       /* Blocks control flow until all data has been sent */
 343              		.loc 1 710 0
 344 0006 0D20     		movs	r0, #13
 345 0008 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 346              	.LVL19:
 711:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(0x0Au);       /* Blocks control flow until all data has been sent */
 347              		.loc 1 711 0
 348 000c 0A20     		movs	r0, #10
 349 000e FFF7FEFF 		bl	UART_SpiUartWriteTxData
 350              	.LVL20:
 712:Generated_Source\PSoC4/UART_UART.c ****     }
 351              		.loc 1 712 0
 352              		@ sp needed
 353 0012 10BD     		pop	{r4, pc}
 354              		.cfi_endproc
 355              	.LFE7:
 356              		.size	UART_UartPutCRLF, .-UART_UartPutCRLF
 357              		.section	.text.UART_UartEnableCts,"ax",%progbits
 358              		.align	2
 359              		.global	UART_UartEnableCts
 360              		.code	16
 361              		.thumb_func
 362              		.type	UART_UartEnableCts, %function
 363              	UART_UartEnableCts:
 364              	.LFB8:
 713:Generated_Source\PSoC4/UART_UART.c **** 
 714:Generated_Source\PSoC4/UART_UART.c **** 
 715:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 716:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 717:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UARTSCB_UartEnableCts
 718:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 20


 719:Generated_Source\PSoC4/UART_UART.c ****         *
 720:Generated_Source\PSoC4/UART_UART.c ****         *  Enables usage of CTS input signal by the UART transmitter.
 721:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 722:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 723:Generated_Source\PSoC4/UART_UART.c ****         *
 724:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 725:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartEnableCts(void)
 726:Generated_Source\PSoC4/UART_UART.c ****         {
 365              		.loc 1 726 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              		@ link register save eliminated.
 727:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_CTS_ENABLE;
 370              		.loc 1 727 0
 371 0000 034A     		ldr	r2, .L21
 372 0002 1368     		ldr	r3, [r2]
 373 0004 8021     		movs	r1, #128
 374 0006 8904     		lsls	r1, r1, #18
 375 0008 0B43     		orrs	r3, r1
 376 000a 1360     		str	r3, [r2]
 728:Generated_Source\PSoC4/UART_UART.c ****         }
 377              		.loc 1 728 0
 378              		@ sp needed
 379 000c 7047     		bx	lr
 380              	.L22:
 381 000e C046     		.align	2
 382              	.L21:
 383 0010 50002540 		.word	1076166736
 384              		.cfi_endproc
 385              	.LFE8:
 386              		.size	UART_UartEnableCts, .-UART_UartEnableCts
 387              		.section	.text.UART_UartDisableCts,"ax",%progbits
 388              		.align	2
 389              		.global	UART_UartDisableCts
 390              		.code	16
 391              		.thumb_func
 392              		.type	UART_UartDisableCts, %function
 393              	UART_UartDisableCts:
 394              	.LFB9:
 729:Generated_Source\PSoC4/UART_UART.c **** 
 730:Generated_Source\PSoC4/UART_UART.c **** 
 731:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 732:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartDisableCts
 733:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 734:Generated_Source\PSoC4/UART_UART.c ****         *
 735:Generated_Source\PSoC4/UART_UART.c ****         *  Disables usage of CTS input signal by the UART transmitter.
 736:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 737:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 738:Generated_Source\PSoC4/UART_UART.c ****         *
 739:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 740:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartDisableCts(void)
 741:Generated_Source\PSoC4/UART_UART.c ****         {
 395              		.loc 1 741 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 21


 399              		@ link register save eliminated.
 742:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_CTS_ENABLE;
 400              		.loc 1 742 0
 401 0000 024A     		ldr	r2, .L24
 402 0002 1168     		ldr	r1, [r2]
 403 0004 024B     		ldr	r3, .L24+4
 404 0006 0B40     		ands	r3, r1
 405 0008 1360     		str	r3, [r2]
 743:Generated_Source\PSoC4/UART_UART.c ****         }
 406              		.loc 1 743 0
 407              		@ sp needed
 408 000a 7047     		bx	lr
 409              	.L25:
 410              		.align	2
 411              	.L24:
 412 000c 50002540 		.word	1076166736
 413 0010 FFFFFFFD 		.word	-33554433
 414              		.cfi_endproc
 415              	.LFE9:
 416              		.size	UART_UartDisableCts, .-UART_UartDisableCts
 417              		.section	.text.UART_UartSetCtsPolarity,"ax",%progbits
 418              		.align	2
 419              		.global	UART_UartSetCtsPolarity
 420              		.code	16
 421              		.thumb_func
 422              		.type	UART_UartSetCtsPolarity, %function
 423              	UART_UartSetCtsPolarity:
 424              	.LFB10:
 744:Generated_Source\PSoC4/UART_UART.c **** 
 745:Generated_Source\PSoC4/UART_UART.c **** 
 746:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 747:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetCtsPolarity
 748:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 749:Generated_Source\PSoC4/UART_UART.c ****         *
 750:Generated_Source\PSoC4/UART_UART.c ****         *  Sets active polarity of CTS input signal.
 751:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 752:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 753:Generated_Source\PSoC4/UART_UART.c ****         *
 754:Generated_Source\PSoC4/UART_UART.c ****         * \param
 755:Generated_Source\PSoC4/UART_UART.c ****         * polarity: Active polarity of CTS output signal.
 756:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_CTS_ACTIVE_LOW  - CTS signal is active low.
 757:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_CTS_ACTIVE_HIGH - CTS signal is active high.
 758:Generated_Source\PSoC4/UART_UART.c ****         *
 759:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 760:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetCtsPolarity(uint32 polarity)
 761:Generated_Source\PSoC4/UART_UART.c ****         {
 425              		.loc 1 761 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 430              	.LVL21:
 762:Generated_Source\PSoC4/UART_UART.c ****             if (0u != polarity)
 431              		.loc 1 762 0
 432 0000 0028     		cmp	r0, #0
 433 0002 06D0     		beq	.L27
 763:Generated_Source\PSoC4/UART_UART.c ****             {
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 22


 764:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_CTS_POLARITY;
 434              		.loc 1 764 0
 435 0004 064A     		ldr	r2, .L29
 436 0006 1368     		ldr	r3, [r2]
 437 0008 8021     		movs	r1, #128
 438 000a 4904     		lsls	r1, r1, #17
 439 000c 0B43     		orrs	r3, r1
 440 000e 1360     		str	r3, [r2]
 441 0010 04E0     		b	.L26
 442              	.L27:
 765:Generated_Source\PSoC4/UART_UART.c ****             }
 766:Generated_Source\PSoC4/UART_UART.c ****             else
 767:Generated_Source\PSoC4/UART_UART.c ****             {
 768:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_CTS_POLARITY;
 443              		.loc 1 768 0
 444 0012 034A     		ldr	r2, .L29
 445 0014 1168     		ldr	r1, [r2]
 446 0016 034B     		ldr	r3, .L29+4
 447 0018 0B40     		ands	r3, r1
 448 001a 1360     		str	r3, [r2]
 449              	.L26:
 769:Generated_Source\PSoC4/UART_UART.c ****             }
 770:Generated_Source\PSoC4/UART_UART.c ****         }
 450              		.loc 1 770 0
 451              		@ sp needed
 452 001c 7047     		bx	lr
 453              	.L30:
 454 001e C046     		.align	2
 455              	.L29:
 456 0020 50002540 		.word	1076166736
 457 0024 FFFFFFFE 		.word	-16777217
 458              		.cfi_endproc
 459              	.LFE10:
 460              		.size	UART_UartSetCtsPolarity, .-UART_UartSetCtsPolarity
 461              		.section	.text.UART_UartSendBreakBlocking,"ax",%progbits
 462              		.align	2
 463              		.global	UART_UartSendBreakBlocking
 464              		.code	16
 465              		.thumb_func
 466              		.type	UART_UartSendBreakBlocking, %function
 467              	UART_UartSendBreakBlocking:
 468              	.LFB11:
 771:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 772:Generated_Source\PSoC4/UART_UART.c **** 
 773:Generated_Source\PSoC4/UART_UART.c **** 
 774:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 775:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartSendBreakBlocking
 776:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 777:Generated_Source\PSoC4/UART_UART.c ****     *
 778:Generated_Source\PSoC4/UART_UART.c ****     * Sends a break condition (logic low) of specified width on UART TX line.
 779:Generated_Source\PSoC4/UART_UART.c ****     * Blocks until break is completed. Only call this function when UART TX FIFO
 780:Generated_Source\PSoC4/UART_UART.c ****     * and shifter are empty.
 781:Generated_Source\PSoC4/UART_UART.c ****     *
 782:Generated_Source\PSoC4/UART_UART.c ****     * \param breakWidth
 783:Generated_Source\PSoC4/UART_UART.c ****     * Width of break condition. Valid range is 4 to 16 bits.
 784:Generated_Source\PSoC4/UART_UART.c ****     *
 785:Generated_Source\PSoC4/UART_UART.c ****     * \note
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 23


 786:Generated_Source\PSoC4/UART_UART.c ****     * Before sending break all UART TX interrupt sources are disabled. The state
 787:Generated_Source\PSoC4/UART_UART.c ****     * of UART TX interrupt sources is restored before function returns.
 788:Generated_Source\PSoC4/UART_UART.c ****     *
 789:Generated_Source\PSoC4/UART_UART.c ****     * \sideeffect
 790:Generated_Source\PSoC4/UART_UART.c ****     * If this function is called while there is data in the TX FIFO or shifter that
 791:Generated_Source\PSoC4/UART_UART.c ****     * data will be shifted out in packets the size of breakWidth.
 792:Generated_Source\PSoC4/UART_UART.c ****     *
 793:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 794:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartSendBreakBlocking(uint32 breakWidth)
 795:Generated_Source\PSoC4/UART_UART.c ****     {
 469              		.loc 1 795 0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473              	.LVL22:
 474 0000 70B5     		push	{r4, r5, r6, lr}
 475              		.cfi_def_cfa_offset 16
 476              		.cfi_offset 4, -16
 477              		.cfi_offset 5, -12
 478              		.cfi_offset 6, -8
 479              		.cfi_offset 14, -4
 480 0002 0300     		movs	r3, r0
 796:Generated_Source\PSoC4/UART_UART.c ****         uint32 txCtrlReg;
 797:Generated_Source\PSoC4/UART_UART.c ****         uint32 txIntrReg;
 798:Generated_Source\PSoC4/UART_UART.c **** 
 799:Generated_Source\PSoC4/UART_UART.c ****         /* Disable all UART TX interrupt source and clear UART TX Done history */
 800:Generated_Source\PSoC4/UART_UART.c ****         txIntrReg = UART_GetTxInterruptMode();
 481              		.loc 1 800 0
 482 0004 0F4A     		ldr	r2, .L33
 483 0006 1568     		ldr	r5, [r2]
 484              	.LVL23:
 801:Generated_Source\PSoC4/UART_UART.c ****         UART_SetTxInterruptMode(0u);
 485              		.loc 1 801 0
 486 0008 0024     		movs	r4, #0
 487 000a 1460     		str	r4, [r2]
 802:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearTxInterruptSource(UART_INTR_TX_UART_DONE);
 488              		.loc 1 802 0
 489 000c 8021     		movs	r1, #128
 490 000e 8900     		lsls	r1, r1, #2
 491 0010 0D4A     		ldr	r2, .L33+4
 492 0012 1160     		str	r1, [r2]
 803:Generated_Source\PSoC4/UART_UART.c **** 
 804:Generated_Source\PSoC4/UART_UART.c ****         /* Store TX CTRL configuration */
 805:Generated_Source\PSoC4/UART_UART.c ****         txCtrlReg = UART_TX_CTRL_REG;
 493              		.loc 1 805 0
 494 0014 0D4A     		ldr	r2, .L33+8
 495 0016 1668     		ldr	r6, [r2]
 496              	.LVL24:
 806:Generated_Source\PSoC4/UART_UART.c **** 
 807:Generated_Source\PSoC4/UART_UART.c ****         /* Set break width */
 808:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG = (UART_TX_CTRL_REG & (uint32) ~UART_TX_CTRL_DATA_WIDTH_MASK) |
 497              		.loc 1 808 0
 498 0018 1168     		ldr	r1, [r2]
 499 001a 0F20     		movs	r0, #15
 500              	.LVL25:
 501 001c 8143     		bics	r1, r0
 809:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_TX_CTRL_DATA_WIDTH(breakWidth);
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 24


 502              		.loc 1 809 0
 503 001e 013B     		subs	r3, r3, #1
 504              	.LVL26:
 505 0020 1840     		ands	r0, r3
 808:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_TX_CTRL_DATA_WIDTH(breakWidth);
 506              		.loc 1 808 0
 507 0022 0843     		orrs	r0, r1
 508 0024 1060     		str	r0, [r2]
 810:Generated_Source\PSoC4/UART_UART.c **** 
 811:Generated_Source\PSoC4/UART_UART.c ****         /* Generate break */
 812:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_FIFO_WR_REG = 0u;
 509              		.loc 1 812 0
 510 0026 0A4B     		ldr	r3, .L33+12
 511              	.LVL27:
 512 0028 1C60     		str	r4, [r3]
 513              	.L32:
 813:Generated_Source\PSoC4/UART_UART.c **** 
 814:Generated_Source\PSoC4/UART_UART.c ****         /* Wait for break completion */
 815:Generated_Source\PSoC4/UART_UART.c ****         while (0u == (UART_GetTxInterruptSource() & UART_INTR_TX_UART_DONE))
 514              		.loc 1 815 0 discriminator 1
 515 002a 074B     		ldr	r3, .L33+4
 516 002c 1B68     		ldr	r3, [r3]
 517 002e 9B05     		lsls	r3, r3, #22
 518 0030 FBD5     		bpl	.L32
 816:Generated_Source\PSoC4/UART_UART.c ****         {
 817:Generated_Source\PSoC4/UART_UART.c ****         }
 818:Generated_Source\PSoC4/UART_UART.c **** 
 819:Generated_Source\PSoC4/UART_UART.c ****         /* Clear all UART TX interrupt sources to  */
 820:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearTxInterruptSource(UART_INTR_TX_ALL);
 519              		.loc 1 820 0
 520 0032 084A     		ldr	r2, .L33+16
 521 0034 044B     		ldr	r3, .L33+4
 522 0036 1A60     		str	r2, [r3]
 821:Generated_Source\PSoC4/UART_UART.c **** 
 822:Generated_Source\PSoC4/UART_UART.c ****         /* Restore TX interrupt sources and data width */
 823:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG = txCtrlReg;
 523              		.loc 1 823 0
 524 0038 044B     		ldr	r3, .L33+8
 525 003a 1E60     		str	r6, [r3]
 824:Generated_Source\PSoC4/UART_UART.c ****         UART_SetTxInterruptMode(txIntrReg);
 526              		.loc 1 824 0
 527 003c 014B     		ldr	r3, .L33
 528 003e 1D60     		str	r5, [r3]
 825:Generated_Source\PSoC4/UART_UART.c ****     }
 529              		.loc 1 825 0
 530              		@ sp needed
 531              	.LVL28:
 532              	.LVL29:
 533 0040 70BD     		pop	{r4, r5, r6, pc}
 534              	.L34:
 535 0042 C046     		.align	2
 536              	.L33:
 537 0044 880F2540 		.word	1076170632
 538 0048 800F2540 		.word	1076170624
 539 004c 00022540 		.word	1076167168
 540 0050 40022540 		.word	1076167232
 541 0054 F3070000 		.word	2035
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 25


 542              		.cfi_endproc
 543              	.LFE11:
 544              		.size	UART_UartSendBreakBlocking, .-UART_UartSendBreakBlocking
 545              		.text
 546              	.Letext0:
 547              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 548              		.file 3 "Generated_Source\\PSoC4\\UART_PVT.h"
 549              		.file 4 "Generated_Source\\PSoC4\\UART_SPI_UART.h"
 550              		.section	.debug_info,"",%progbits
 551              	.Ldebug_info0:
 552 0000 B3020000 		.4byte	0x2b3
 553 0004 0400     		.2byte	0x4
 554 0006 00000000 		.4byte	.Ldebug_abbrev0
 555 000a 04       		.byte	0x4
 556 000b 01       		.uleb128 0x1
 557 000c ED010000 		.4byte	.LASF39
 558 0010 0C       		.byte	0xc
 559 0011 E7020000 		.4byte	.LASF40
 560 0015 4F010000 		.4byte	.LASF41
 561 0019 00000000 		.4byte	.Ldebug_ranges0+0
 562 001d 00000000 		.4byte	0
 563 0021 00000000 		.4byte	.Ldebug_line0
 564 0025 02       		.uleb128 0x2
 565 0026 01       		.byte	0x1
 566 0027 06       		.byte	0x6
 567 0028 0A030000 		.4byte	.LASF0
 568 002c 02       		.uleb128 0x2
 569 002d 01       		.byte	0x1
 570 002e 08       		.byte	0x8
 571 002f BA000000 		.4byte	.LASF1
 572 0033 02       		.uleb128 0x2
 573 0034 02       		.byte	0x2
 574 0035 05       		.byte	0x5
 575 0036 A7020000 		.4byte	.LASF2
 576 003a 02       		.uleb128 0x2
 577 003b 02       		.byte	0x2
 578 003c 07       		.byte	0x7
 579 003d 02010000 		.4byte	.LASF3
 580 0041 02       		.uleb128 0x2
 581 0042 04       		.byte	0x4
 582 0043 05       		.byte	0x5
 583 0044 C9020000 		.4byte	.LASF4
 584 0048 02       		.uleb128 0x2
 585 0049 04       		.byte	0x4
 586 004a 07       		.byte	0x7
 587 004b E2000000 		.4byte	.LASF5
 588 004f 02       		.uleb128 0x2
 589 0050 08       		.byte	0x8
 590 0051 05       		.byte	0x5
 591 0052 00000000 		.4byte	.LASF6
 592 0056 02       		.uleb128 0x2
 593 0057 08       		.byte	0x8
 594 0058 07       		.byte	0x7
 595 0059 C4010000 		.4byte	.LASF7
 596 005d 03       		.uleb128 0x3
 597 005e 04       		.byte	0x4
 598 005f 05       		.byte	0x5
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 26


 599 0060 696E7400 		.ascii	"int\000"
 600 0064 02       		.uleb128 0x2
 601 0065 04       		.byte	0x4
 602 0066 07       		.byte	0x7
 603 0067 A1010000 		.4byte	.LASF8
 604 006b 04       		.uleb128 0x4
 605 006c 93010000 		.4byte	.LASF9
 606 0070 02       		.byte	0x2
 607 0071 E501     		.2byte	0x1e5
 608 0073 3A000000 		.4byte	0x3a
 609 0077 04       		.uleb128 0x4
 610 0078 9A010000 		.4byte	.LASF10
 611 007c 02       		.byte	0x2
 612 007d E601     		.2byte	0x1e6
 613 007f 48000000 		.4byte	0x48
 614 0083 02       		.uleb128 0x2
 615 0084 04       		.byte	0x4
 616 0085 04       		.byte	0x4
 617 0086 3E000000 		.4byte	.LASF11
 618 008a 02       		.uleb128 0x2
 619 008b 08       		.byte	0x8
 620 008c 04       		.byte	0x4
 621 008d 32010000 		.4byte	.LASF12
 622 0091 04       		.uleb128 0x4
 623 0092 C8000000 		.4byte	.LASF13
 624 0096 02       		.byte	0x2
 625 0097 F501     		.2byte	0x1f5
 626 0099 9D000000 		.4byte	0x9d
 627 009d 02       		.uleb128 0x2
 628 009e 01       		.byte	0x1
 629 009f 08       		.byte	0x8
 630 00a0 A2020000 		.4byte	.LASF14
 631 00a4 04       		.uleb128 0x4
 632 00a5 0E000000 		.4byte	.LASF15
 633 00a9 02       		.byte	0x2
 634 00aa 9002     		.2byte	0x290
 635 00ac B0000000 		.4byte	0xb0
 636 00b0 05       		.uleb128 0x5
 637 00b1 77000000 		.4byte	0x77
 638 00b5 02       		.uleb128 0x2
 639 00b6 08       		.byte	0x8
 640 00b7 04       		.byte	0x4
 641 00b8 DB020000 		.4byte	.LASF16
 642 00bc 02       		.uleb128 0x2
 643 00bd 04       		.byte	0x4
 644 00be 07       		.byte	0x7
 645 00bf 7B020000 		.4byte	.LASF17
 646 00c3 06       		.uleb128 0x6
 647 00c4 AE010000 		.4byte	.LASF18
 648 00c8 01       		.byte	0x1
 649 00c9 F7       		.byte	0xf7
 650 00ca 00000000 		.4byte	.LFB1
 651 00ce A8000000 		.4byte	.LFE1-.LFB1
 652 00d2 01       		.uleb128 0x1
 653 00d3 9C       		.byte	0x9c
 654 00d4 07       		.uleb128 0x7
 655 00d5 CE000000 		.4byte	.LASF19
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 27


 656 00d9 01       		.byte	0x1
 657 00da 3D01     		.2byte	0x13d
 658 00dc 00000000 		.4byte	.LFB2
 659 00e0 24000000 		.4byte	.LFE2-.LFB2
 660 00e4 01       		.uleb128 0x1
 661 00e5 9C       		.byte	0x9c
 662 00e6 07       		.uleb128 0x7
 663 00e7 F4000000 		.4byte	.LASF20
 664 00eb 01       		.byte	0x1
 665 00ec 7101     		.2byte	0x171
 666 00ee 00000000 		.4byte	.LFB3
 667 00f2 28000000 		.4byte	.LFE3-.LFB3
 668 00f6 01       		.uleb128 0x1
 669 00f7 9C       		.byte	0x9c
 670 00f8 08       		.uleb128 0x8
 671 00f9 39010000 		.4byte	.LASF21
 672 00fd 01       		.byte	0x1
 673 00fe B101     		.2byte	0x1b1
 674 0100 00000000 		.4byte	.LFB4
 675 0104 14000000 		.4byte	.LFE4-.LFB4
 676 0108 01       		.uleb128 0x1
 677 0109 9C       		.byte	0x9c
 678 010a 2F010000 		.4byte	0x12f
 679 010e 09       		.uleb128 0x9
 680 010f BC010000 		.4byte	.LASF23
 681 0113 01       		.byte	0x1
 682 0114 B101     		.2byte	0x1b1
 683 0116 77000000 		.4byte	0x77
 684 011a 00000000 		.4byte	.LLST0
 685 011e 0A       		.uleb128 0xa
 686 011f D2020000 		.4byte	.LASF25
 687 0123 01       		.byte	0x1
 688 0124 B301     		.2byte	0x1b3
 689 0126 77000000 		.4byte	0x77
 690 012a 21000000 		.4byte	.LLST1
 691 012e 00       		.byte	0
 692 012f 08       		.uleb128 0x8
 693 0130 24000000 		.4byte	.LASF22
 694 0134 01       		.byte	0x1
 695 0135 CA01     		.2byte	0x1ca
 696 0137 00000000 		.4byte	.LFB5
 697 013b 18000000 		.4byte	.LFE5-.LFB5
 698 013f 01       		.uleb128 0x1
 699 0140 9C       		.byte	0x9c
 700 0141 66010000 		.4byte	0x166
 701 0145 09       		.uleb128 0x9
 702 0146 26010000 		.4byte	.LASF24
 703 014a 01       		.byte	0x1
 704 014b CA01     		.2byte	0x1ca
 705 014d 77000000 		.4byte	0x77
 706 0151 3F000000 		.4byte	.LLST2
 707 0155 0A       		.uleb128 0xa
 708 0156 D2020000 		.4byte	.LASF25
 709 015a 01       		.byte	0x1
 710 015b CC01     		.2byte	0x1cc
 711 015d 77000000 		.4byte	0x77
 712 0161 60000000 		.4byte	.LLST3
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 28


 713 0165 00       		.byte	0
 714 0166 08       		.uleb128 0x8
 715 0167 77000000 		.4byte	.LASF26
 716 016b 01       		.byte	0x1
 717 016c A802     		.2byte	0x2a8
 718 016e 00000000 		.4byte	.LFB6
 719 0172 16000000 		.4byte	.LFE6-.LFB6
 720 0176 01       		.uleb128 0x1
 721 0177 9C       		.byte	0x9c
 722 0178 A6010000 		.4byte	0x1a6
 723 017c 09       		.uleb128 0x9
 724 017d 70000000 		.4byte	.LASF27
 725 0181 01       		.byte	0x1
 726 0182 A802     		.2byte	0x2a8
 727 0184 A6010000 		.4byte	0x1a6
 728 0188 89000000 		.4byte	.LLST4
 729 018c 0A       		.uleb128 0xa
 730 018d E4010000 		.4byte	.LASF28
 731 0191 01       		.byte	0x1
 732 0192 AA02     		.2byte	0x2aa
 733 0194 77000000 		.4byte	0x77
 734 0198 B5000000 		.4byte	.LLST5
 735 019c 0B       		.uleb128 0xb
 736 019d 0C000000 		.4byte	.LVL13
 737 01a1 AA020000 		.4byte	0x2aa
 738 01a5 00       		.byte	0
 739 01a6 0C       		.uleb128 0xc
 740 01a7 04       		.byte	0x4
 741 01a8 AC010000 		.4byte	0x1ac
 742 01ac 0D       		.uleb128 0xd
 743 01ad 91000000 		.4byte	0x91
 744 01b1 08       		.uleb128 0x8
 745 01b2 15010000 		.4byte	.LASF29
 746 01b6 01       		.byte	0x1
 747 01b7 C302     		.2byte	0x2c3
 748 01b9 00000000 		.4byte	.LFB7
 749 01bd 14000000 		.4byte	.LFE7-.LFB7
 750 01c1 01       		.uleb128 0x1
 751 01c2 9C       		.byte	0x9c
 752 01c3 0F020000 		.4byte	0x20f
 753 01c7 09       		.uleb128 0x9
 754 01c8 84020000 		.4byte	.LASF30
 755 01cc 01       		.byte	0x1
 756 01cd C302     		.2byte	0x2c3
 757 01cf 77000000 		.4byte	0x77
 758 01d3 D4000000 		.4byte	.LLST6
 759 01d7 0E       		.uleb128 0xe
 760 01d8 06000000 		.4byte	.LVL18
 761 01dc AA020000 		.4byte	0x2aa
 762 01e0 EC010000 		.4byte	0x1ec
 763 01e4 0F       		.uleb128 0xf
 764 01e5 01       		.uleb128 0x1
 765 01e6 50       		.byte	0x50
 766 01e7 03       		.uleb128 0x3
 767 01e8 F3       		.byte	0xf3
 768 01e9 01       		.uleb128 0x1
 769 01ea 50       		.byte	0x50
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 29


 770 01eb 00       		.byte	0
 771 01ec 0E       		.uleb128 0xe
 772 01ed 0C000000 		.4byte	.LVL19
 773 01f1 AA020000 		.4byte	0x2aa
 774 01f5 FF010000 		.4byte	0x1ff
 775 01f9 0F       		.uleb128 0xf
 776 01fa 01       		.uleb128 0x1
 777 01fb 50       		.byte	0x50
 778 01fc 01       		.uleb128 0x1
 779 01fd 3D       		.byte	0x3d
 780 01fe 00       		.byte	0
 781 01ff 10       		.uleb128 0x10
 782 0200 12000000 		.4byte	.LVL20
 783 0204 AA020000 		.4byte	0x2aa
 784 0208 0F       		.uleb128 0xf
 785 0209 01       		.uleb128 0x1
 786 020a 50       		.byte	0x50
 787 020b 01       		.uleb128 0x1
 788 020c 3A       		.byte	0x3a
 789 020d 00       		.byte	0
 790 020e 00       		.byte	0
 791 020f 07       		.uleb128 0x7
 792 0210 8F020000 		.4byte	.LASF31
 793 0214 01       		.byte	0x1
 794 0215 D502     		.2byte	0x2d5
 795 0217 00000000 		.4byte	.LFB8
 796 021b 14000000 		.4byte	.LFE8-.LFB8
 797 021f 01       		.uleb128 0x1
 798 0220 9C       		.byte	0x9c
 799 0221 07       		.uleb128 0x7
 800 0222 44000000 		.4byte	.LASF32
 801 0226 01       		.byte	0x1
 802 0227 E402     		.2byte	0x2e4
 803 0229 00000000 		.4byte	.LFB9
 804 022d 14000000 		.4byte	.LFE9-.LFB9
 805 0231 01       		.uleb128 0x1
 806 0232 9C       		.byte	0x9c
 807 0233 08       		.uleb128 0x8
 808 0234 B1020000 		.4byte	.LASF33
 809 0238 01       		.byte	0x1
 810 0239 F802     		.2byte	0x2f8
 811 023b 00000000 		.4byte	.LFB10
 812 023f 28000000 		.4byte	.LFE10-.LFB10
 813 0243 01       		.uleb128 0x1
 814 0244 9C       		.byte	0x9c
 815 0245 58020000 		.4byte	0x258
 816 0249 11       		.uleb128 0x11
 817 024a DB010000 		.4byte	.LASF34
 818 024e 01       		.byte	0x1
 819 024f F802     		.2byte	0x2f8
 820 0251 77000000 		.4byte	0x77
 821 0255 01       		.uleb128 0x1
 822 0256 50       		.byte	0x50
 823 0257 00       		.byte	0
 824 0258 08       		.uleb128 0x8
 825 0259 95000000 		.4byte	.LASF35
 826 025d 01       		.byte	0x1
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 30


 827 025e 1A03     		.2byte	0x31a
 828 0260 00000000 		.4byte	.LFB11
 829 0264 58000000 		.4byte	.LFE11-.LFB11
 830 0268 01       		.uleb128 0x1
 831 0269 9C       		.byte	0x9c
 832 026a 9F020000 		.4byte	0x29f
 833 026e 09       		.uleb128 0x9
 834 026f 8A000000 		.4byte	.LASF36
 835 0273 01       		.byte	0x1
 836 0274 1A03     		.2byte	0x31a
 837 0276 77000000 		.4byte	0x77
 838 027a F5000000 		.4byte	.LLST7
 839 027e 0A       		.uleb128 0xa
 840 027f 16030000 		.4byte	.LASF37
 841 0283 01       		.byte	0x1
 842 0284 1C03     		.2byte	0x31c
 843 0286 77000000 		.4byte	0x77
 844 028a 2E010000 		.4byte	.LLST8
 845 028e 0A       		.uleb128 0xa
 846 028f B0000000 		.4byte	.LASF38
 847 0293 01       		.byte	0x1
 848 0294 1D03     		.2byte	0x31d
 849 0296 77000000 		.4byte	0x77
 850 029a 41010000 		.4byte	.LLST9
 851 029e 00       		.byte	0
 852 029f 12       		.uleb128 0x12
 853 02a0 14000000 		.4byte	.LASF42
 854 02a4 03       		.byte	0x3
 855 02a5 5B       		.byte	0x5b
 856 02a6 6B000000 		.4byte	0x6b
 857 02aa 13       		.uleb128 0x13
 858 02ab 58000000 		.4byte	.LASF43
 859 02af 58000000 		.4byte	.LASF43
 860 02b3 04       		.byte	0x4
 861 02b4 4403     		.2byte	0x344
 862 02b6 00       		.byte	0
 863              		.section	.debug_abbrev,"",%progbits
 864              	.Ldebug_abbrev0:
 865 0000 01       		.uleb128 0x1
 866 0001 11       		.uleb128 0x11
 867 0002 01       		.byte	0x1
 868 0003 25       		.uleb128 0x25
 869 0004 0E       		.uleb128 0xe
 870 0005 13       		.uleb128 0x13
 871 0006 0B       		.uleb128 0xb
 872 0007 03       		.uleb128 0x3
 873 0008 0E       		.uleb128 0xe
 874 0009 1B       		.uleb128 0x1b
 875 000a 0E       		.uleb128 0xe
 876 000b 55       		.uleb128 0x55
 877 000c 17       		.uleb128 0x17
 878 000d 11       		.uleb128 0x11
 879 000e 01       		.uleb128 0x1
 880 000f 10       		.uleb128 0x10
 881 0010 17       		.uleb128 0x17
 882 0011 00       		.byte	0
 883 0012 00       		.byte	0
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 31


 884 0013 02       		.uleb128 0x2
 885 0014 24       		.uleb128 0x24
 886 0015 00       		.byte	0
 887 0016 0B       		.uleb128 0xb
 888 0017 0B       		.uleb128 0xb
 889 0018 3E       		.uleb128 0x3e
 890 0019 0B       		.uleb128 0xb
 891 001a 03       		.uleb128 0x3
 892 001b 0E       		.uleb128 0xe
 893 001c 00       		.byte	0
 894 001d 00       		.byte	0
 895 001e 03       		.uleb128 0x3
 896 001f 24       		.uleb128 0x24
 897 0020 00       		.byte	0
 898 0021 0B       		.uleb128 0xb
 899 0022 0B       		.uleb128 0xb
 900 0023 3E       		.uleb128 0x3e
 901 0024 0B       		.uleb128 0xb
 902 0025 03       		.uleb128 0x3
 903 0026 08       		.uleb128 0x8
 904 0027 00       		.byte	0
 905 0028 00       		.byte	0
 906 0029 04       		.uleb128 0x4
 907 002a 16       		.uleb128 0x16
 908 002b 00       		.byte	0
 909 002c 03       		.uleb128 0x3
 910 002d 0E       		.uleb128 0xe
 911 002e 3A       		.uleb128 0x3a
 912 002f 0B       		.uleb128 0xb
 913 0030 3B       		.uleb128 0x3b
 914 0031 05       		.uleb128 0x5
 915 0032 49       		.uleb128 0x49
 916 0033 13       		.uleb128 0x13
 917 0034 00       		.byte	0
 918 0035 00       		.byte	0
 919 0036 05       		.uleb128 0x5
 920 0037 35       		.uleb128 0x35
 921 0038 00       		.byte	0
 922 0039 49       		.uleb128 0x49
 923 003a 13       		.uleb128 0x13
 924 003b 00       		.byte	0
 925 003c 00       		.byte	0
 926 003d 06       		.uleb128 0x6
 927 003e 2E       		.uleb128 0x2e
 928 003f 00       		.byte	0
 929 0040 3F       		.uleb128 0x3f
 930 0041 19       		.uleb128 0x19
 931 0042 03       		.uleb128 0x3
 932 0043 0E       		.uleb128 0xe
 933 0044 3A       		.uleb128 0x3a
 934 0045 0B       		.uleb128 0xb
 935 0046 3B       		.uleb128 0x3b
 936 0047 0B       		.uleb128 0xb
 937 0048 27       		.uleb128 0x27
 938 0049 19       		.uleb128 0x19
 939 004a 11       		.uleb128 0x11
 940 004b 01       		.uleb128 0x1
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 32


 941 004c 12       		.uleb128 0x12
 942 004d 06       		.uleb128 0x6
 943 004e 40       		.uleb128 0x40
 944 004f 18       		.uleb128 0x18
 945 0050 9742     		.uleb128 0x2117
 946 0052 19       		.uleb128 0x19
 947 0053 00       		.byte	0
 948 0054 00       		.byte	0
 949 0055 07       		.uleb128 0x7
 950 0056 2E       		.uleb128 0x2e
 951 0057 00       		.byte	0
 952 0058 3F       		.uleb128 0x3f
 953 0059 19       		.uleb128 0x19
 954 005a 03       		.uleb128 0x3
 955 005b 0E       		.uleb128 0xe
 956 005c 3A       		.uleb128 0x3a
 957 005d 0B       		.uleb128 0xb
 958 005e 3B       		.uleb128 0x3b
 959 005f 05       		.uleb128 0x5
 960 0060 27       		.uleb128 0x27
 961 0061 19       		.uleb128 0x19
 962 0062 11       		.uleb128 0x11
 963 0063 01       		.uleb128 0x1
 964 0064 12       		.uleb128 0x12
 965 0065 06       		.uleb128 0x6
 966 0066 40       		.uleb128 0x40
 967 0067 18       		.uleb128 0x18
 968 0068 9742     		.uleb128 0x2117
 969 006a 19       		.uleb128 0x19
 970 006b 00       		.byte	0
 971 006c 00       		.byte	0
 972 006d 08       		.uleb128 0x8
 973 006e 2E       		.uleb128 0x2e
 974 006f 01       		.byte	0x1
 975 0070 3F       		.uleb128 0x3f
 976 0071 19       		.uleb128 0x19
 977 0072 03       		.uleb128 0x3
 978 0073 0E       		.uleb128 0xe
 979 0074 3A       		.uleb128 0x3a
 980 0075 0B       		.uleb128 0xb
 981 0076 3B       		.uleb128 0x3b
 982 0077 05       		.uleb128 0x5
 983 0078 27       		.uleb128 0x27
 984 0079 19       		.uleb128 0x19
 985 007a 11       		.uleb128 0x11
 986 007b 01       		.uleb128 0x1
 987 007c 12       		.uleb128 0x12
 988 007d 06       		.uleb128 0x6
 989 007e 40       		.uleb128 0x40
 990 007f 18       		.uleb128 0x18
 991 0080 9742     		.uleb128 0x2117
 992 0082 19       		.uleb128 0x19
 993 0083 01       		.uleb128 0x1
 994 0084 13       		.uleb128 0x13
 995 0085 00       		.byte	0
 996 0086 00       		.byte	0
 997 0087 09       		.uleb128 0x9
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 33


 998 0088 05       		.uleb128 0x5
 999 0089 00       		.byte	0
 1000 008a 03       		.uleb128 0x3
 1001 008b 0E       		.uleb128 0xe
 1002 008c 3A       		.uleb128 0x3a
 1003 008d 0B       		.uleb128 0xb
 1004 008e 3B       		.uleb128 0x3b
 1005 008f 05       		.uleb128 0x5
 1006 0090 49       		.uleb128 0x49
 1007 0091 13       		.uleb128 0x13
 1008 0092 02       		.uleb128 0x2
 1009 0093 17       		.uleb128 0x17
 1010 0094 00       		.byte	0
 1011 0095 00       		.byte	0
 1012 0096 0A       		.uleb128 0xa
 1013 0097 34       		.uleb128 0x34
 1014 0098 00       		.byte	0
 1015 0099 03       		.uleb128 0x3
 1016 009a 0E       		.uleb128 0xe
 1017 009b 3A       		.uleb128 0x3a
 1018 009c 0B       		.uleb128 0xb
 1019 009d 3B       		.uleb128 0x3b
 1020 009e 05       		.uleb128 0x5
 1021 009f 49       		.uleb128 0x49
 1022 00a0 13       		.uleb128 0x13
 1023 00a1 02       		.uleb128 0x2
 1024 00a2 17       		.uleb128 0x17
 1025 00a3 00       		.byte	0
 1026 00a4 00       		.byte	0
 1027 00a5 0B       		.uleb128 0xb
 1028 00a6 898201   		.uleb128 0x4109
 1029 00a9 00       		.byte	0
 1030 00aa 11       		.uleb128 0x11
 1031 00ab 01       		.uleb128 0x1
 1032 00ac 31       		.uleb128 0x31
 1033 00ad 13       		.uleb128 0x13
 1034 00ae 00       		.byte	0
 1035 00af 00       		.byte	0
 1036 00b0 0C       		.uleb128 0xc
 1037 00b1 0F       		.uleb128 0xf
 1038 00b2 00       		.byte	0
 1039 00b3 0B       		.uleb128 0xb
 1040 00b4 0B       		.uleb128 0xb
 1041 00b5 49       		.uleb128 0x49
 1042 00b6 13       		.uleb128 0x13
 1043 00b7 00       		.byte	0
 1044 00b8 00       		.byte	0
 1045 00b9 0D       		.uleb128 0xd
 1046 00ba 26       		.uleb128 0x26
 1047 00bb 00       		.byte	0
 1048 00bc 49       		.uleb128 0x49
 1049 00bd 13       		.uleb128 0x13
 1050 00be 00       		.byte	0
 1051 00bf 00       		.byte	0
 1052 00c0 0E       		.uleb128 0xe
 1053 00c1 898201   		.uleb128 0x4109
 1054 00c4 01       		.byte	0x1
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 34


 1055 00c5 11       		.uleb128 0x11
 1056 00c6 01       		.uleb128 0x1
 1057 00c7 31       		.uleb128 0x31
 1058 00c8 13       		.uleb128 0x13
 1059 00c9 01       		.uleb128 0x1
 1060 00ca 13       		.uleb128 0x13
 1061 00cb 00       		.byte	0
 1062 00cc 00       		.byte	0
 1063 00cd 0F       		.uleb128 0xf
 1064 00ce 8A8201   		.uleb128 0x410a
 1065 00d1 00       		.byte	0
 1066 00d2 02       		.uleb128 0x2
 1067 00d3 18       		.uleb128 0x18
 1068 00d4 9142     		.uleb128 0x2111
 1069 00d6 18       		.uleb128 0x18
 1070 00d7 00       		.byte	0
 1071 00d8 00       		.byte	0
 1072 00d9 10       		.uleb128 0x10
 1073 00da 898201   		.uleb128 0x4109
 1074 00dd 01       		.byte	0x1
 1075 00de 11       		.uleb128 0x11
 1076 00df 01       		.uleb128 0x1
 1077 00e0 31       		.uleb128 0x31
 1078 00e1 13       		.uleb128 0x13
 1079 00e2 00       		.byte	0
 1080 00e3 00       		.byte	0
 1081 00e4 11       		.uleb128 0x11
 1082 00e5 05       		.uleb128 0x5
 1083 00e6 00       		.byte	0
 1084 00e7 03       		.uleb128 0x3
 1085 00e8 0E       		.uleb128 0xe
 1086 00e9 3A       		.uleb128 0x3a
 1087 00ea 0B       		.uleb128 0xb
 1088 00eb 3B       		.uleb128 0x3b
 1089 00ec 05       		.uleb128 0x5
 1090 00ed 49       		.uleb128 0x49
 1091 00ee 13       		.uleb128 0x13
 1092 00ef 02       		.uleb128 0x2
 1093 00f0 18       		.uleb128 0x18
 1094 00f1 00       		.byte	0
 1095 00f2 00       		.byte	0
 1096 00f3 12       		.uleb128 0x12
 1097 00f4 34       		.uleb128 0x34
 1098 00f5 00       		.byte	0
 1099 00f6 03       		.uleb128 0x3
 1100 00f7 0E       		.uleb128 0xe
 1101 00f8 3A       		.uleb128 0x3a
 1102 00f9 0B       		.uleb128 0xb
 1103 00fa 3B       		.uleb128 0x3b
 1104 00fb 0B       		.uleb128 0xb
 1105 00fc 49       		.uleb128 0x49
 1106 00fd 13       		.uleb128 0x13
 1107 00fe 3F       		.uleb128 0x3f
 1108 00ff 19       		.uleb128 0x19
 1109 0100 3C       		.uleb128 0x3c
 1110 0101 19       		.uleb128 0x19
 1111 0102 00       		.byte	0
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 35


 1112 0103 00       		.byte	0
 1113 0104 13       		.uleb128 0x13
 1114 0105 2E       		.uleb128 0x2e
 1115 0106 00       		.byte	0
 1116 0107 3F       		.uleb128 0x3f
 1117 0108 19       		.uleb128 0x19
 1118 0109 3C       		.uleb128 0x3c
 1119 010a 19       		.uleb128 0x19
 1120 010b 6E       		.uleb128 0x6e
 1121 010c 0E       		.uleb128 0xe
 1122 010d 03       		.uleb128 0x3
 1123 010e 0E       		.uleb128 0xe
 1124 010f 3A       		.uleb128 0x3a
 1125 0110 0B       		.uleb128 0xb
 1126 0111 3B       		.uleb128 0x3b
 1127 0112 05       		.uleb128 0x5
 1128 0113 00       		.byte	0
 1129 0114 00       		.byte	0
 1130 0115 00       		.byte	0
 1131              		.section	.debug_loc,"",%progbits
 1132              	.Ldebug_loc0:
 1133              	.LLST0:
 1134 0000 00000000 		.4byte	.LVL0
 1135 0004 0A000000 		.4byte	.LVL3
 1136 0008 0100     		.2byte	0x1
 1137 000a 50       		.byte	0x50
 1138 000b 0A000000 		.4byte	.LVL3
 1139 000f 14000000 		.4byte	.LFE4
 1140 0013 0400     		.2byte	0x4
 1141 0015 F3       		.byte	0xf3
 1142 0016 01       		.uleb128 0x1
 1143 0017 50       		.byte	0x50
 1144 0018 9F       		.byte	0x9f
 1145 0019 00000000 		.4byte	0
 1146 001d 00000000 		.4byte	0
 1147              	.LLST1:
 1148 0021 04000000 		.4byte	.LVL1
 1149 0025 0C000000 		.4byte	.LVL4
 1150 0029 0100     		.2byte	0x1
 1151 002b 53       		.byte	0x53
 1152 002c 0C000000 		.4byte	.LVL4
 1153 0030 14000000 		.4byte	.LFE4
 1154 0034 0100     		.2byte	0x1
 1155 0036 50       		.byte	0x50
 1156 0037 00000000 		.4byte	0
 1157 003b 00000000 		.4byte	0
 1158              	.LLST2:
 1159 003f 00000000 		.4byte	.LVL5
 1160 0043 0A000000 		.4byte	.LVL8
 1161 0047 0100     		.2byte	0x1
 1162 0049 50       		.byte	0x50
 1163 004a 0A000000 		.4byte	.LVL8
 1164 004e 18000000 		.4byte	.LFE5
 1165 0052 0400     		.2byte	0x4
 1166 0054 F3       		.byte	0xf3
 1167 0055 01       		.uleb128 0x1
 1168 0056 50       		.byte	0x50
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 36


 1169 0057 9F       		.byte	0x9f
 1170 0058 00000000 		.4byte	0
 1171 005c 00000000 		.4byte	0
 1172              	.LLST3:
 1173 0060 04000000 		.4byte	.LVL6
 1174 0064 08000000 		.4byte	.LVL7
 1175 0068 0100     		.2byte	0x1
 1176 006a 51       		.byte	0x51
 1177 006b 08000000 		.4byte	.LVL7
 1178 006f 0C000000 		.4byte	.LVL9
 1179 0073 0100     		.2byte	0x1
 1180 0075 53       		.byte	0x53
 1181 0076 0C000000 		.4byte	.LVL9
 1182 007a 18000000 		.4byte	.LFE5
 1183 007e 0100     		.2byte	0x1
 1184 0080 50       		.byte	0x50
 1185 0081 00000000 		.4byte	0
 1186 0085 00000000 		.4byte	0
 1187              	.LLST4:
 1188 0089 00000000 		.4byte	.LVL10
 1189 008d 08000000 		.4byte	.LVL12
 1190 0091 0100     		.2byte	0x1
 1191 0093 50       		.byte	0x50
 1192 0094 08000000 		.4byte	.LVL12
 1193 0098 14000000 		.4byte	.LVL16
 1194 009c 0100     		.2byte	0x1
 1195 009e 55       		.byte	0x55
 1196 009f 14000000 		.4byte	.LVL16
 1197 00a3 16000000 		.4byte	.LFE6
 1198 00a7 0400     		.2byte	0x4
 1199 00a9 F3       		.byte	0xf3
 1200 00aa 01       		.uleb128 0x1
 1201 00ab 50       		.byte	0x50
 1202 00ac 9F       		.byte	0x9f
 1203 00ad 00000000 		.4byte	0
 1204 00b1 00000000 		.4byte	0
 1205              	.LLST5:
 1206 00b5 04000000 		.4byte	.LVL11
 1207 00b9 08000000 		.4byte	.LVL12
 1208 00bd 0200     		.2byte	0x2
 1209 00bf 30       		.byte	0x30
 1210 00c0 9F       		.byte	0x9f
 1211 00c1 08000000 		.4byte	.LVL12
 1212 00c5 14000000 		.4byte	.LVL15
 1213 00c9 0100     		.2byte	0x1
 1214 00cb 54       		.byte	0x54
 1215 00cc 00000000 		.4byte	0
 1216 00d0 00000000 		.4byte	0
 1217              	.LLST6:
 1218 00d4 00000000 		.4byte	.LVL17
 1219 00d8 05000000 		.4byte	.LVL18-1
 1220 00dc 0100     		.2byte	0x1
 1221 00de 50       		.byte	0x50
 1222 00df 05000000 		.4byte	.LVL18-1
 1223 00e3 14000000 		.4byte	.LFE7
 1224 00e7 0400     		.2byte	0x4
 1225 00e9 F3       		.byte	0xf3
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 37


 1226 00ea 01       		.uleb128 0x1
 1227 00eb 50       		.byte	0x50
 1228 00ec 9F       		.byte	0x9f
 1229 00ed 00000000 		.4byte	0
 1230 00f1 00000000 		.4byte	0
 1231              	.LLST7:
 1232 00f5 00000000 		.4byte	.LVL22
 1233 00f9 1C000000 		.4byte	.LVL25
 1234 00fd 0100     		.2byte	0x1
 1235 00ff 50       		.byte	0x50
 1236 0100 1C000000 		.4byte	.LVL25
 1237 0104 20000000 		.4byte	.LVL26
 1238 0108 0100     		.2byte	0x1
 1239 010a 53       		.byte	0x53
 1240 010b 20000000 		.4byte	.LVL26
 1241 010f 28000000 		.4byte	.LVL27
 1242 0113 0300     		.2byte	0x3
 1243 0115 73       		.byte	0x73
 1244 0116 01       		.sleb128 1
 1245 0117 9F       		.byte	0x9f
 1246 0118 28000000 		.4byte	.LVL27
 1247 011c 58000000 		.4byte	.LFE11
 1248 0120 0400     		.2byte	0x4
 1249 0122 F3       		.byte	0xf3
 1250 0123 01       		.uleb128 0x1
 1251 0124 50       		.byte	0x50
 1252 0125 9F       		.byte	0x9f
 1253 0126 00000000 		.4byte	0
 1254 012a 00000000 		.4byte	0
 1255              	.LLST8:
 1256 012e 18000000 		.4byte	.LVL24
 1257 0132 40000000 		.4byte	.LVL29
 1258 0136 0100     		.2byte	0x1
 1259 0138 56       		.byte	0x56
 1260 0139 00000000 		.4byte	0
 1261 013d 00000000 		.4byte	0
 1262              	.LLST9:
 1263 0141 08000000 		.4byte	.LVL23
 1264 0145 40000000 		.4byte	.LVL28
 1265 0149 0100     		.2byte	0x1
 1266 014b 55       		.byte	0x55
 1267 014c 40000000 		.4byte	.LVL28
 1268 0150 58000000 		.4byte	.LFE11
 1269 0154 0200     		.2byte	0x2
 1270 0156 73       		.byte	0x73
 1271 0157 00       		.sleb128 0
 1272 0158 00000000 		.4byte	0
 1273 015c 00000000 		.4byte	0
 1274              		.section	.debug_aranges,"",%progbits
 1275 0000 6C000000 		.4byte	0x6c
 1276 0004 0200     		.2byte	0x2
 1277 0006 00000000 		.4byte	.Ldebug_info0
 1278 000a 04       		.byte	0x4
 1279 000b 00       		.byte	0
 1280 000c 0000     		.2byte	0
 1281 000e 0000     		.2byte	0
 1282 0010 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 38


 1283 0014 A8000000 		.4byte	.LFE1-.LFB1
 1284 0018 00000000 		.4byte	.LFB2
 1285 001c 24000000 		.4byte	.LFE2-.LFB2
 1286 0020 00000000 		.4byte	.LFB3
 1287 0024 28000000 		.4byte	.LFE3-.LFB3
 1288 0028 00000000 		.4byte	.LFB4
 1289 002c 14000000 		.4byte	.LFE4-.LFB4
 1290 0030 00000000 		.4byte	.LFB5
 1291 0034 18000000 		.4byte	.LFE5-.LFB5
 1292 0038 00000000 		.4byte	.LFB6
 1293 003c 16000000 		.4byte	.LFE6-.LFB6
 1294 0040 00000000 		.4byte	.LFB7
 1295 0044 14000000 		.4byte	.LFE7-.LFB7
 1296 0048 00000000 		.4byte	.LFB8
 1297 004c 14000000 		.4byte	.LFE8-.LFB8
 1298 0050 00000000 		.4byte	.LFB9
 1299 0054 14000000 		.4byte	.LFE9-.LFB9
 1300 0058 00000000 		.4byte	.LFB10
 1301 005c 28000000 		.4byte	.LFE10-.LFB10
 1302 0060 00000000 		.4byte	.LFB11
 1303 0064 58000000 		.4byte	.LFE11-.LFB11
 1304 0068 00000000 		.4byte	0
 1305 006c 00000000 		.4byte	0
 1306              		.section	.debug_ranges,"",%progbits
 1307              	.Ldebug_ranges0:
 1308 0000 00000000 		.4byte	.LFB1
 1309 0004 A8000000 		.4byte	.LFE1
 1310 0008 00000000 		.4byte	.LFB2
 1311 000c 24000000 		.4byte	.LFE2
 1312 0010 00000000 		.4byte	.LFB3
 1313 0014 28000000 		.4byte	.LFE3
 1314 0018 00000000 		.4byte	.LFB4
 1315 001c 14000000 		.4byte	.LFE4
 1316 0020 00000000 		.4byte	.LFB5
 1317 0024 18000000 		.4byte	.LFE5
 1318 0028 00000000 		.4byte	.LFB6
 1319 002c 16000000 		.4byte	.LFE6
 1320 0030 00000000 		.4byte	.LFB7
 1321 0034 14000000 		.4byte	.LFE7
 1322 0038 00000000 		.4byte	.LFB8
 1323 003c 14000000 		.4byte	.LFE8
 1324 0040 00000000 		.4byte	.LFB9
 1325 0044 14000000 		.4byte	.LFE9
 1326 0048 00000000 		.4byte	.LFB10
 1327 004c 28000000 		.4byte	.LFE10
 1328 0050 00000000 		.4byte	.LFB11
 1329 0054 58000000 		.4byte	.LFE11
 1330 0058 00000000 		.4byte	0
 1331 005c 00000000 		.4byte	0
 1332              		.section	.debug_line,"",%progbits
 1333              	.Ldebug_line0:
 1334 0000 6E010000 		.section	.debug_str,"MS",%progbits,1
 1334      02006700 
 1334      00000201 
 1334      FB0E0D00 
 1334      01010101 
 1335              	.LASF6:
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 39


 1336 0000 6C6F6E67 		.ascii	"long long int\000"
 1336      206C6F6E 
 1336      6720696E 
 1336      7400
 1337              	.LASF15:
 1338 000e 72656733 		.ascii	"reg32\000"
 1338      3200
 1339              	.LASF42:
 1340 0014 55415254 		.ascii	"UART_IntrTxMask\000"
 1340      5F496E74 
 1340      7254784D 
 1340      61736B00 
 1341              	.LASF22:
 1342 0024 55415254 		.ascii	"UART_UartSetRxAddressMask\000"
 1342      5F556172 
 1342      74536574 
 1342      52784164 
 1342      64726573 
 1343              	.LASF11:
 1344 003e 666C6F61 		.ascii	"float\000"
 1344      7400
 1345              	.LASF32:
 1346 0044 55415254 		.ascii	"UART_UartDisableCts\000"
 1346      5F556172 
 1346      74446973 
 1346      61626C65 
 1346      43747300 
 1347              	.LASF43:
 1348 0058 55415254 		.ascii	"UART_SpiUartWriteTxData\000"
 1348      5F537069 
 1348      55617274 
 1348      57726974 
 1348      65547844 
 1349              	.LASF27:
 1350 0070 73747269 		.ascii	"string\000"
 1350      6E6700
 1351              	.LASF26:
 1352 0077 55415254 		.ascii	"UART_UartPutString\000"
 1352      5F556172 
 1352      74507574 
 1352      53747269 
 1352      6E6700
 1353              	.LASF36:
 1354 008a 62726561 		.ascii	"breakWidth\000"
 1354      6B576964 
 1354      746800
 1355              	.LASF35:
 1356 0095 55415254 		.ascii	"UART_UartSendBreakBlocking\000"
 1356      5F556172 
 1356      7453656E 
 1356      64427265 
 1356      616B426C 
 1357              	.LASF38:
 1358 00b0 7478496E 		.ascii	"txIntrReg\000"
 1358      74725265 
 1358      6700
 1359              	.LASF1:
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 40


 1360 00ba 756E7369 		.ascii	"unsigned char\000"
 1360      676E6564 
 1360      20636861 
 1360      7200
 1361              	.LASF13:
 1362 00c8 63686172 		.ascii	"char8\000"
 1362      3800
 1363              	.LASF19:
 1364 00ce 55415254 		.ascii	"UART_UartPostEnable\000"
 1364      5F556172 
 1364      74506F73 
 1364      74456E61 
 1364      626C6500 
 1365              	.LASF5:
 1366 00e2 6C6F6E67 		.ascii	"long unsigned int\000"
 1366      20756E73 
 1366      69676E65 
 1366      6420696E 
 1366      7400
 1367              	.LASF20:
 1368 00f4 55415254 		.ascii	"UART_UartStop\000"
 1368      5F556172 
 1368      7453746F 
 1368      7000
 1369              	.LASF3:
 1370 0102 73686F72 		.ascii	"short unsigned int\000"
 1370      7420756E 
 1370      7369676E 
 1370      65642069 
 1370      6E7400
 1371              	.LASF29:
 1372 0115 55415254 		.ascii	"UART_UartPutCRLF\000"
 1372      5F556172 
 1372      74507574 
 1372      43524C46 
 1372      00
 1373              	.LASF24:
 1374 0126 61646472 		.ascii	"addressMask\000"
 1374      6573734D 
 1374      61736B00 
 1375              	.LASF12:
 1376 0132 646F7562 		.ascii	"double\000"
 1376      6C6500
 1377              	.LASF21:
 1378 0139 55415254 		.ascii	"UART_UartSetRxAddress\000"
 1378      5F556172 
 1378      74536574 
 1378      52784164 
 1378      64726573 
 1379              	.LASF41:
 1380 014f 453A5C44 		.ascii	"E:\\Documents\\Engineering\\Code\\synth-wavetable\\"
 1380      6F63756D 
 1380      656E7473 
 1380      5C456E67 
 1380      696E6565 
 1381 017d 73796E74 		.ascii	"synth-wavetable.cydsn\000"
 1381      682D7761 
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 41


 1381      76657461 
 1381      626C652E 
 1381      63796473 
 1382              	.LASF9:
 1383 0193 75696E74 		.ascii	"uint16\000"
 1383      313600
 1384              	.LASF10:
 1385 019a 75696E74 		.ascii	"uint32\000"
 1385      333200
 1386              	.LASF8:
 1387 01a1 756E7369 		.ascii	"unsigned int\000"
 1387      676E6564 
 1387      20696E74 
 1387      00
 1388              	.LASF18:
 1389 01ae 55415254 		.ascii	"UART_UartInit\000"
 1389      5F556172 
 1389      74496E69 
 1389      7400
 1390              	.LASF23:
 1391 01bc 61646472 		.ascii	"address\000"
 1391      65737300 
 1392              	.LASF7:
 1393 01c4 6C6F6E67 		.ascii	"long long unsigned int\000"
 1393      206C6F6E 
 1393      6720756E 
 1393      7369676E 
 1393      65642069 
 1394              	.LASF34:
 1395 01db 706F6C61 		.ascii	"polarity\000"
 1395      72697479 
 1395      00
 1396              	.LASF28:
 1397 01e4 62756649 		.ascii	"bufIndex\000"
 1397      6E646578 
 1397      00
 1398              	.LASF39:
 1399 01ed 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1399      43313120 
 1399      352E342E 
 1399      31203230 
 1399      31363036 
 1400 0220 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1400      20726576 
 1400      6973696F 
 1400      6E203233 
 1400      37373135 
 1401 0253 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1401      66756E63 
 1401      74696F6E 
 1401      2D736563 
 1401      74696F6E 
 1402              	.LASF17:
 1403 027b 73697A65 		.ascii	"sizetype\000"
 1403      74797065 
 1403      00
 1404              	.LASF30:
ARM GAS  C:\Users\psmus\AppData\Local\Temp\ccT8D2DB.s 			page 42


 1405 0284 74784461 		.ascii	"txDataByte\000"
 1405      74614279 
 1405      746500
 1406              	.LASF31:
 1407 028f 55415254 		.ascii	"UART_UartEnableCts\000"
 1407      5F556172 
 1407      74456E61 
 1407      626C6543 
 1407      747300
 1408              	.LASF14:
 1409 02a2 63686172 		.ascii	"char\000"
 1409      00
 1410              	.LASF2:
 1411 02a7 73686F72 		.ascii	"short int\000"
 1411      7420696E 
 1411      7400
 1412              	.LASF33:
 1413 02b1 55415254 		.ascii	"UART_UartSetCtsPolarity\000"
 1413      5F556172 
 1413      74536574 
 1413      43747350 
 1413      6F6C6172 
 1414              	.LASF4:
 1415 02c9 6C6F6E67 		.ascii	"long int\000"
 1415      20696E74 
 1415      00
 1416              	.LASF25:
 1417 02d2 6D617463 		.ascii	"matchReg\000"
 1417      68526567 
 1417      00
 1418              	.LASF16:
 1419 02db 6C6F6E67 		.ascii	"long double\000"
 1419      20646F75 
 1419      626C6500 
 1420              	.LASF40:
 1421 02e7 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_UART.c\000"
 1421      72617465 
 1421      645F536F 
 1421      75726365 
 1421      5C50536F 
 1422              	.LASF0:
 1423 030a 7369676E 		.ascii	"signed char\000"
 1423      65642063 
 1423      68617200 
 1424              	.LASF37:
 1425 0316 74784374 		.ascii	"txCtrlReg\000"
 1425      726C5265 
 1425      6700
 1426              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
