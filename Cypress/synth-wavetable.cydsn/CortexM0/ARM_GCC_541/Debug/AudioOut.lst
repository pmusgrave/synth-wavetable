ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"AudioOut.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.InitializeAudioOutPath,"ax",%progbits
  20              		.align	2
  21              		.global	InitializeAudioOutPath
  22              		.code	16
  23              		.thumb_func
  24              		.type	InitializeAudioOutPath, %function
  25              	InitializeAudioOutPath:
  26              	.LFB130:
  27              		.file 1 "AudioOut.c"
   1:AudioOut.c    **** /*******************************************************************************
   2:AudioOut.c    **** * File Name: AudioOut.c
   3:AudioOut.c    **** *
   4:AudioOut.c    **** * Version 1.0
   5:AudioOut.c    **** *
   6:AudioOut.c    **** *  Description: This file contains the Audio Out path configuration and 
   7:AudioOut.c    **** *               processing code
   8:AudioOut.c    **** *
   9:AudioOut.c    **** *******************************************************************************
  10:AudioOut.c    **** * Copyright (2018), Cypress Semiconductor Corporation. All rights reserved.
  11:AudioOut.c    **** *******************************************************************************
  12:AudioOut.c    **** * This software, including source code, documentation and related materials
  13:AudioOut.c    **** * (“Software”), is owned by Cypress Semiconductor Corporation or one of its
  14:AudioOut.c    **** * subsidiaries (“Cypress”) and is protected by and subject to worldwide patent
  15:AudioOut.c    **** * protection (United States and foreign), United States copyright laws and
  16:AudioOut.c    **** * international treaty provisions. Therefore, you may use this Software only
  17:AudioOut.c    **** * as provided in the license agreement accompanying the software package from
  18:AudioOut.c    **** * which you obtained this Software (“EULA”).
  19:AudioOut.c    **** *
  20:AudioOut.c    **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  21:AudioOut.c    **** * non-transferable license to copy, modify, and compile the Software source
  22:AudioOut.c    **** * code solely for use in connection with Cypress’s integrated circuit products.
  23:AudioOut.c    **** * Any reproduction, modification, translation, compilation, or representation
  24:AudioOut.c    **** * of this Software except as specified above is prohibited without the express
  25:AudioOut.c    **** * written permission of Cypress.
  26:AudioOut.c    **** *
  27:AudioOut.c    **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND, 
  28:AudioOut.c    **** * EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED 
  29:AudioOut.c    **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress 
  30:AudioOut.c    **** * reserves the right to make changes to the Software without notice. Cypress 
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 2


  31:AudioOut.c    **** * does not assume any liability arising out of the application or use of the 
  32:AudioOut.c    **** * Software or any product or circuit described in the Software. Cypress does 
  33:AudioOut.c    **** * not authorize its products for use in any products where a malfunction or 
  34:AudioOut.c    **** * failure of the Cypress product may reasonably be expected to result in 
  35:AudioOut.c    **** * significant property damage, injury or death (“High Risk Product”). By 
  36:AudioOut.c    **** * including Cypress’s product in a High Risk Product, the manufacturer of such 
  37:AudioOut.c    **** * system or application assumes all risk of such use and in doing so agrees to 
  38:AudioOut.c    **** * indemnify Cypress against all liability.
  39:AudioOut.c    **** *******************************************************************************/
  40:AudioOut.c    **** 
  41:AudioOut.c    **** #include <AudioControl.h>
  42:AudioOut.c    **** #include <Interrupts.h>
  43:AudioOut.c    **** #include <AudioControl.h>
  44:AudioOut.c    **** #include <Config.h>
  45:AudioOut.c    **** #include <AudioOut.h>
  46:AudioOut.c    **** #include <project.h>
  47:AudioOut.c    **** #include <Codec.h>
  48:AudioOut.c    **** #include <math.h>
  49:AudioOut.c    **** #include "waves.h"
  50:AudioOut.c    **** #include "globals.h"
  51:AudioOut.c    **** 
  52:AudioOut.c    **** uint16_t freq;
  53:AudioOut.c    **** uint16_t freq2;
  54:AudioOut.c    **** uint16_t freq3;
  55:AudioOut.c    **** uint16_t freq4;
  56:AudioOut.c    **** uint16_t freq5;
  57:AudioOut.c    **** uint16_t freq6;
  58:AudioOut.c    **** uint16_t freq7;
  59:AudioOut.c    **** uint16_t freq8;
  60:AudioOut.c    **** uint32_t lfo_freq;
  61:AudioOut.c    **** uint16_t lfo_multiplier = 1;
  62:AudioOut.c    **** uint16_t envelope_multiplier = 0;
  63:AudioOut.c    **** 
  64:AudioOut.c    **** CYBIT outPlaying = 0;
  65:AudioOut.c    **** int8_t output_buffer[OUT_BUFSIZE];
  66:AudioOut.c    **** int8_t output_buffer2[OUT_BUFSIZE];
  67:AudioOut.c    **** uint32_t buffer_index;
  68:AudioOut.c    **** uint32_t buffer_index2;
  69:AudioOut.c    **** extern CYBIT audioClkConfigured;
  70:AudioOut.c    **** 
  71:AudioOut.c    **** /*******************************************************************************
  72:AudioOut.c    **** * Function Name: InitializeAudioOutPath
  73:AudioOut.c    **** ********************************************************************************
  74:AudioOut.c    **** * Summary:
  75:AudioOut.c    **** *       This function initializes all the associated DMAs for the Audio OUT
  76:AudioOut.c    **** *       path
  77:AudioOut.c    **** *
  78:AudioOut.c    **** * Parameters:
  79:AudioOut.c    **** *  void
  80:AudioOut.c    **** *
  81:AudioOut.c    **** * Return:
  82:AudioOut.c    **** *  void
  83:AudioOut.c    **** *
  84:AudioOut.c    **** *******************************************************************************/
  85:AudioOut.c    **** void InitializeAudioOutPath(void)
  86:AudioOut.c    **** {
  28              		.loc 1 86 0
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 3


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  87:AudioOut.c    ****     SPI_RxDMA_Start((void *)SPI_RX_FIFO_RD_PTR, (void *)masterRxBuffer);
  38              		.loc 1 87 0
  39 0002 324C     		ldr	r4, .L2
  40 0004 3249     		ldr	r1, .L2+4
  41 0006 2000     		movs	r0, r4
  42 0008 FFF7FEFF 		bl	SPI_RxDMA_Start
  43              	.LVL0:
  88:AudioOut.c    ****     SPI_TxDMA_Start((void *)masterTxBuffer, (void *)SPI_TX_FIFO_WR_PTR);
  44              		.loc 1 88 0
  45 000c 3149     		ldr	r1, .L2+8
  46 000e 3248     		ldr	r0, .L2+12
  47 0010 FFF7FEFF 		bl	SPI_TxDMA_Start
  48              	.LVL1:
  49              	.LBB24:
  50              	.LBB25:
  51              		.file 2 "Generated_Source\\PSoC4/SPI_RxDMA.h"
   1:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
   2:Generated_Source\PSoC4/SPI_RxDMA.h **** * File Name: SPI_RxDMA.h
   3:Generated_Source\PSoC4/SPI_RxDMA.h **** * Version 1.0
   4:Generated_Source\PSoC4/SPI_RxDMA.h **** *
   5:Generated_Source\PSoC4/SPI_RxDMA.h **** * Description:
   6:Generated_Source\PSoC4/SPI_RxDMA.h **** *  This file provides DMA channel defines and API function definitions.
   7:Generated_Source\PSoC4/SPI_RxDMA.h **** *
   8:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
   9:Generated_Source\PSoC4/SPI_RxDMA.h **** * Copyright 2015, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC4/SPI_RxDMA.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC4/SPI_RxDMA.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC4/SPI_RxDMA.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
  14:Generated_Source\PSoC4/SPI_RxDMA.h **** 
  15:Generated_Source\PSoC4/SPI_RxDMA.h **** #ifndef CY_DMA_CHANNEL_SPI_RxDMA_H
  16:Generated_Source\PSoC4/SPI_RxDMA.h **** #define CY_DMA_CHANNEL_SPI_RxDMA_H
  17:Generated_Source\PSoC4/SPI_RxDMA.h **** 
  18:Generated_Source\PSoC4/SPI_RxDMA.h **** #include "CyDMA.h"
  19:Generated_Source\PSoC4/SPI_RxDMA.h **** 
  20:Generated_Source\PSoC4/SPI_RxDMA.h ****     
  21:Generated_Source\PSoC4/SPI_RxDMA.h **** /***************************************
  22:Generated_Source\PSoC4/SPI_RxDMA.h **** *   Conditional Compilation Parameters
  23:Generated_Source\PSoC4/SPI_RxDMA.h **** ***************************************/
  24:Generated_Source\PSoC4/SPI_RxDMA.h **** 
  25:Generated_Source\PSoC4/SPI_RxDMA.h **** #define SPI_RxDMA_CHANNEL           (SPI_RxDMA__CHANNEL_NUMBER)
  26:Generated_Source\PSoC4/SPI_RxDMA.h **** #define SPI_RxDMA_CHANNEL_MASK      ((uint32)(1UL << SPI_RxDMA_CHANNEL))
  27:Generated_Source\PSoC4/SPI_RxDMA.h **** 
  28:Generated_Source\PSoC4/SPI_RxDMA.h **** 
  29:Generated_Source\PSoC4/SPI_RxDMA.h **** /***************************************
  30:Generated_Source\PSoC4/SPI_RxDMA.h **** *        Function Prototypes
  31:Generated_Source\PSoC4/SPI_RxDMA.h **** ***************************************/
  32:Generated_Source\PSoC4/SPI_RxDMA.h **** 
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 4


  33:Generated_Source\PSoC4/SPI_RxDMA.h **** /* Functions specific to this DMA channel */
  34:Generated_Source\PSoC4/SPI_RxDMA.h **** void SPI_RxDMA_Init(void);
  35:Generated_Source\PSoC4/SPI_RxDMA.h **** void SPI_RxDMA_Start(void * srcAddress, void * dstAddress);
  36:Generated_Source\PSoC4/SPI_RxDMA.h **** 
  37:Generated_Source\PSoC4/SPI_RxDMA.h **** /* Inline functions that call global API functions */
  38:Generated_Source\PSoC4/SPI_RxDMA.h **** static void   SPI_RxDMA_ChEnable(void);
  39:Generated_Source\PSoC4/SPI_RxDMA.h **** static void   SPI_RxDMA_ChDisable(void);
  40:Generated_Source\PSoC4/SPI_RxDMA.h **** static void   SPI_RxDMA_Trigger(void);
  41:Generated_Source\PSoC4/SPI_RxDMA.h **** static void   SPI_RxDMA_SetPriority(int32 priority);
  42:Generated_Source\PSoC4/SPI_RxDMA.h **** static int32  SPI_RxDMA_GetPriority(void);
  43:Generated_Source\PSoC4/SPI_RxDMA.h **** static void   SPI_RxDMA_SetNextDescriptor(int32 descriptor);
  44:Generated_Source\PSoC4/SPI_RxDMA.h **** static int32  SPI_RxDMA_GetNextDescriptor(void);
  45:Generated_Source\PSoC4/SPI_RxDMA.h **** static void   SPI_RxDMA_SetConfiguration(int32 descriptor, const cydma_init_struct * config);
  46:Generated_Source\PSoC4/SPI_RxDMA.h **** static void   SPI_RxDMA_ValidateDescriptor(int32 descriptor);
  47:Generated_Source\PSoC4/SPI_RxDMA.h **** static uint32 SPI_RxDMA_GetDescriptorStatus(int32 descriptor);
  48:Generated_Source\PSoC4/SPI_RxDMA.h **** static void   SPI_RxDMA_SetSrcAddress(int32 descriptor, void * srcAddress);
  49:Generated_Source\PSoC4/SPI_RxDMA.h **** static void * SPI_RxDMA_GetSrcAddress(int32 descriptor);
  50:Generated_Source\PSoC4/SPI_RxDMA.h **** static void   SPI_RxDMA_SetDstAddress(int32 descriptor, void * dstAddress);
  51:Generated_Source\PSoC4/SPI_RxDMA.h **** static void * SPI_RxDMA_GetDstAddress(int32 descriptor);
  52:Generated_Source\PSoC4/SPI_RxDMA.h **** static void   SPI_RxDMA_SetDataElementSize(int32 descriptor, uint32 dataElementSize);
  53:Generated_Source\PSoC4/SPI_RxDMA.h **** static uint32 SPI_RxDMA_GetDataElementSize(int32 descriptor);
  54:Generated_Source\PSoC4/SPI_RxDMA.h **** static void   SPI_RxDMA_SetNumDataElements(int32 descriptor, int32 numDataElements);
  55:Generated_Source\PSoC4/SPI_RxDMA.h **** static int32  SPI_RxDMA_GetNumDataElements(int32 descriptor);
  56:Generated_Source\PSoC4/SPI_RxDMA.h **** static void   SPI_RxDMA_SetSrcDstTransferWidth(int32 descriptor, uint32 transferWidth);
  57:Generated_Source\PSoC4/SPI_RxDMA.h **** static uint32 SPI_RxDMA_GetSrcDstTransferWidth(int32 descriptor);
  58:Generated_Source\PSoC4/SPI_RxDMA.h **** static void   SPI_RxDMA_SetAddressIncrement(int32 descriptor, uint32 addressIncrement);
  59:Generated_Source\PSoC4/SPI_RxDMA.h **** static uint32 SPI_RxDMA_GetAddressIncrement(int32 descriptor);
  60:Generated_Source\PSoC4/SPI_RxDMA.h **** static void   SPI_RxDMA_SetTriggerType(int32 descriptor, uint32 triggerType);
  61:Generated_Source\PSoC4/SPI_RxDMA.h **** static uint32 SPI_RxDMA_GetTriggerType(int32 descriptor);
  62:Generated_Source\PSoC4/SPI_RxDMA.h **** static void   SPI_RxDMA_SetTransferMode(int32 descriptor, uint32 transferMode);
  63:Generated_Source\PSoC4/SPI_RxDMA.h **** static uint32 SPI_RxDMA_GetTransferMode(int32 descriptor);
  64:Generated_Source\PSoC4/SPI_RxDMA.h **** static void   SPI_RxDMA_SetPreemptable(int32 descriptor, uint32 preemptable);
  65:Generated_Source\PSoC4/SPI_RxDMA.h **** static uint32 SPI_RxDMA_GetPreemptable(int32 descriptor);
  66:Generated_Source\PSoC4/SPI_RxDMA.h **** static void   SPI_RxDMA_SetPostCompletionActions(int32 descriptor, uint32 actions);
  67:Generated_Source\PSoC4/SPI_RxDMA.h **** static uint32 SPI_RxDMA_GetPostCompletionAction(int32 descriptor);
  68:Generated_Source\PSoC4/SPI_RxDMA.h **** static cydma_callback_t SPI_RxDMA_SetInterruptCallback(cydma_callback_t callback);
  69:Generated_Source\PSoC4/SPI_RxDMA.h **** static cydma_callback_t SPI_RxDMA_GetInterruptCallback(void);
  70:Generated_Source\PSoC4/SPI_RxDMA.h **** 
  71:Generated_Source\PSoC4/SPI_RxDMA.h **** 
  72:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
  73:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_ChEnable
  74:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
  75:Generated_Source\PSoC4/SPI_RxDMA.h **** *
  76:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
  77:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Enables the DMA channel. It is not necessary to call SPI_RxDMA_ChEnable()
  78:Generated_Source\PSoC4/SPI_RxDMA.h **** *  because the SPI_RxDMA_Start() API calls this function, which is the
  79:Generated_Source\PSoC4/SPI_RxDMA.h **** *  preferred method to begin the component operation.
  80:Generated_Source\PSoC4/SPI_RxDMA.h **** *
  81:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
  82:Generated_Source\PSoC4/SPI_RxDMA.h **** *  None.
  83:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
  84:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
  85:Generated_Source\PSoC4/SPI_RxDMA.h **** *  None.
  86:Generated_Source\PSoC4/SPI_RxDMA.h **** *
  87:Generated_Source\PSoC4/SPI_RxDMA.h **** * Side effect:
  88:Generated_Source\PSoC4/SPI_RxDMA.h **** *  If this function is called before SPI_RxDMA_Start(), or SPI_RxDMA_Init()
  89:Generated_Source\PSoC4/SPI_RxDMA.h **** *  or SPI_RxDMA_SetConfiguration(), and SPI_RxDMA_SetSrcAddress()
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 5


  90:Generated_Source\PSoC4/SPI_RxDMA.h **** *  and SPI_RxDMA_SetDstAddress the operation of the DMA is 
  91:Generated_Source\PSoC4/SPI_RxDMA.h **** *  undefined and could result in system data corruption. 
  92:Generated_Source\PSoC4/SPI_RxDMA.h **** *
  93:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
  94:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE void SPI_RxDMA_ChEnable(void)
  95:Generated_Source\PSoC4/SPI_RxDMA.h **** {
  96:Generated_Source\PSoC4/SPI_RxDMA.h ****     CyDmaChEnable(SPI_RxDMA_CHANNEL);
  97:Generated_Source\PSoC4/SPI_RxDMA.h **** }
  98:Generated_Source\PSoC4/SPI_RxDMA.h **** 
  99:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 100:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 101:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_ChDisable
 102:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 103:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 104:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 105:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Disables the DMA channel.
 106:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 107:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 108:Generated_Source\PSoC4/SPI_RxDMA.h **** *  None.
 109:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 110:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 111:Generated_Source\PSoC4/SPI_RxDMA.h **** *  None.
 112:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 113:Generated_Source\PSoC4/SPI_RxDMA.h **** * Side effect:
 114:Generated_Source\PSoC4/SPI_RxDMA.h **** *  If this function is called during a DMA transfer the transfer is aborted. 
 115:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 116:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 117:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE void SPI_RxDMA_ChDisable(void)
 118:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 119:Generated_Source\PSoC4/SPI_RxDMA.h ****     CyDmaChDisable(SPI_RxDMA_CHANNEL);
 120:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 121:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 122:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 123:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 124:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_Trigger
 125:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 126:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 127:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 128:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Triggers the DMA channel, this is useful only for software triggers. This is
 129:Generated_Source\PSoC4/SPI_RxDMA.h **** *  not needed when hardware triggers are used.
 130:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 131:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 132:Generated_Source\PSoC4/SPI_RxDMA.h **** *  None.
 133:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 134:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 135:Generated_Source\PSoC4/SPI_RxDMA.h **** *  None. 
 136:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 137:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 138:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE void SPI_RxDMA_Trigger(void)
 139:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 140:Generated_Source\PSoC4/SPI_RxDMA.h ****     CyDmaTrigger(SPI_RxDMA_CHANNEL);
 141:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 142:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 143:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 144:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 145:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_SetPriority
 146:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 6


 147:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 148:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 149:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Sets the priority for the channel.
 150:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 151:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 152:Generated_Source\PSoC4/SPI_RxDMA.h **** *  priority: Priority for channel. Priority can be 0,1,2, or 3.
 153:Generated_Source\PSoC4/SPI_RxDMA.h **** *            0 is the highest priority.
 154:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 155:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 156:Generated_Source\PSoC4/SPI_RxDMA.h **** *  None.
 157:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 158:Generated_Source\PSoC4/SPI_RxDMA.h **** * Side effect:
 159:Generated_Source\PSoC4/SPI_RxDMA.h **** *  This function should not be called while the channel is enabled.
 160:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 161:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 162:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE void SPI_RxDMA_SetPriority(int32 priority)
 163:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 164:Generated_Source\PSoC4/SPI_RxDMA.h ****     CyDmaSetPriority(SPI_RxDMA_CHANNEL, priority);
 165:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 166:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 167:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 168:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 169:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_GetPriority
 170:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 171:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 172:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 173:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Gets the priority for the channel.
 174:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 175:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 176:Generated_Source\PSoC4/SPI_RxDMA.h **** *  None.
 177:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 178:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 179:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Priority for channel. Priority can be 0,1,2, or 3. 0 is the highest priority.
 180:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 181:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 182:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE int32 SPI_RxDMA_GetPriority(void)
 183:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 184:Generated_Source\PSoC4/SPI_RxDMA.h ****     return (CyDmaGetPriority(SPI_RxDMA_CHANNEL));
 185:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 186:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 187:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 188:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 189:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_SetNextDescriptor
 190:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 191:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 192:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 193:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Sets the descriptor that should be run the next time the channel is
 194:Generated_Source\PSoC4/SPI_RxDMA.h **** *  triggered.
 195:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 196:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 197:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor: Next Descriptor to run (0 or 1).
 198:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 199:Generated_Source\PSoC4/SPI_RxDMA.h **** * Side effect:
 200:Generated_Source\PSoC4/SPI_RxDMA.h **** *  This function should not be called while the channel is enabled.
 201:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 202:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 203:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE void SPI_RxDMA_SetNextDescriptor(int32 descriptor)
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 7


 204:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 205:Generated_Source\PSoC4/SPI_RxDMA.h ****     CyDmaSetNextDescriptor(SPI_RxDMA_CHANNEL, descriptor);
 206:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 207:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 208:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 209:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 210:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_GetNextDescriptor
 211:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 212:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 213:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 214:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Returns the next descriptor that should be run, as set by 
 215:Generated_Source\PSoC4/SPI_RxDMA.h **** *  SPI_RxDMA_SetNextDescriptor().
 216:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 217:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 218:Generated_Source\PSoC4/SPI_RxDMA.h **** *  None.
 219:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 220:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 221:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Next Descriptor to run (0 or 1).
 222:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 223:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 224:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE int32 SPI_RxDMA_GetNextDescriptor(void)
 225:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 226:Generated_Source\PSoC4/SPI_RxDMA.h ****     return (CyDmaGetNextDescriptor(SPI_RxDMA_CHANNEL));
 227:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 228:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 229:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 230:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 231:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_SetConfiguration
 232:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 233:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 234:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 235:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Sets configuration information for the specified descriptor.
 236:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 237:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 238:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 239:Generated_Source\PSoC4/SPI_RxDMA.h **** *  config: Pointer to a configuration structure. Refer to cydma_init_struct
 240:Generated_Source\PSoC4/SPI_RxDMA.h **** *          structure definition in CyDMA_P4.h or the component datasheet.
 241:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 242:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 243:Generated_Source\PSoC4/SPI_RxDMA.h **** *  None.
 244:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 245:Generated_Source\PSoC4/SPI_RxDMA.h **** * Side effect:
 246:Generated_Source\PSoC4/SPI_RxDMA.h **** *  The status register associated with the specified descriptor is reset to
 247:Generated_Source\PSoC4/SPI_RxDMA.h **** *  zero after this function call. This function also validates the descriptor.
 248:Generated_Source\PSoC4/SPI_RxDMA.h **** *  This function should not be called while the descriptor is active.
 249:Generated_Source\PSoC4/SPI_RxDMA.h **** *  This can be checked by calling CyDmaGetStatus().
 250:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 251:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 252:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE void SPI_RxDMA_SetConfiguration(int32 descriptor, const cydma_init_struct * config
 253:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 254:Generated_Source\PSoC4/SPI_RxDMA.h ****     CyDmaSetConfiguration(SPI_RxDMA_CHANNEL, descriptor, config);
 255:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 256:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 257:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 258:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 259:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_ValidateDescriptor
 260:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 8


 261:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 262:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 263:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Validates the specified descriptor after it has been invalidated.
 264:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 265:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 266:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 267:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 268:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 269:Generated_Source\PSoC4/SPI_RxDMA.h **** *  None. 
 270:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 271:Generated_Source\PSoC4/SPI_RxDMA.h **** * Side effect:
 272:Generated_Source\PSoC4/SPI_RxDMA.h **** *  The status register associated with the specified descriptor is reset to
 273:Generated_Source\PSoC4/SPI_RxDMA.h **** *  zero after this function call. This function should not be called while the
 274:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor is active. This can be checked by calling CyDmaGetStatus().
 275:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 276:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 277:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE void SPI_RxDMA_ValidateDescriptor(int32 descriptor)
 278:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 279:Generated_Source\PSoC4/SPI_RxDMA.h ****     CyDmaValidateDescriptor(SPI_RxDMA_CHANNEL, descriptor);
 280:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 281:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 282:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 283:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 284:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_GetDescriptorStatus
 285:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 286:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 287:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 288:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Returns the status of the specified descriptor.
 289:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 290:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 291:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 292:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 293:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 294:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Returns the contents of the specified descriptors status register. Refer to 
 295:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor status register bit definitions in CyDMA_P4.h or the API
 296:Generated_Source\PSoC4/SPI_RxDMA.h **** *  description in the DMA channel datasheet for more information.
 297:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 298:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 299:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE uint32 SPI_RxDMA_GetDescriptorStatus(int32 descriptor)
 300:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 301:Generated_Source\PSoC4/SPI_RxDMA.h ****     return (CyDmaGetDescriptorStatus(SPI_RxDMA_CHANNEL, descriptor));
 302:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 303:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 304:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 305:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 306:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_SetSrcAddress
 307:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 308:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 309:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 310:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Configures the source address for the specified descriptor.
 311:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 312:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 313:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 314:Generated_Source\PSoC4/SPI_RxDMA.h **** *  srcAddress: Address of DMA transfer source.
 315:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 316:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 317:Generated_Source\PSoC4/SPI_RxDMA.h **** *  None.
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 9


 318:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 319:Generated_Source\PSoC4/SPI_RxDMA.h **** * Side effect:
 320:Generated_Source\PSoC4/SPI_RxDMA.h **** *  This function should not be called when the specified descriptor is active
 321:Generated_Source\PSoC4/SPI_RxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 322:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 323:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 324:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE void SPI_RxDMA_SetSrcAddress(int32 descriptor, void * srcAddress)
 325:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 326:Generated_Source\PSoC4/SPI_RxDMA.h ****     CyDmaSetSrcAddress(SPI_RxDMA_CHANNEL, descriptor, srcAddress);
 327:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 328:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 329:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 330:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 331:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_GetSrcAddress
 332:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 333:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 334:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 335:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Returns the source address for the specified descriptor, set by either 
 336:Generated_Source\PSoC4/SPI_RxDMA.h **** *  SPI_RxDMA_Start() or SPI_RxDMA_SetSrcAddress().
 337:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 338:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 339:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor: Specifies descriptor (0 or 1) used by this function.
 340:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 341:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 342:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Source address written to specified descriptor.
 343:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 344:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 345:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE void * SPI_RxDMA_GetSrcAddress(int32 descriptor)
 346:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 347:Generated_Source\PSoC4/SPI_RxDMA.h ****     return (CyDmaGetSrcAddress(SPI_RxDMA_CHANNEL, descriptor));
 348:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 349:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 350:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 351:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 352:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_SetDstAddress
 353:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 354:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 355:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 356:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Configures the destination address for the specified descriptor.
 357:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 358:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 359:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 360:Generated_Source\PSoC4/SPI_RxDMA.h **** *  dstAddress: Address of DMA transfer destination.
 361:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 362:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 363:Generated_Source\PSoC4/SPI_RxDMA.h **** *  None.
 364:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 365:Generated_Source\PSoC4/SPI_RxDMA.h **** * Side effect:
 366:Generated_Source\PSoC4/SPI_RxDMA.h **** *  This function should not be called when the specified descriptor is active
 367:Generated_Source\PSoC4/SPI_RxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 368:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 369:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 370:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE void SPI_RxDMA_SetDstAddress(int32 descriptor, void * dstAddress)
 371:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 372:Generated_Source\PSoC4/SPI_RxDMA.h ****     CyDmaSetDstAddress(SPI_RxDMA_CHANNEL, descriptor, dstAddress);
 373:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 374:Generated_Source\PSoC4/SPI_RxDMA.h **** 
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 10


 375:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 376:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 377:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_GetDstAddress
 378:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 379:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 380:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 381:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Returns the destination address for the specified descriptor, set by either 
 382:Generated_Source\PSoC4/SPI_RxDMA.h **** *  SPI_RxDMA_Start() or SPI_RxDMA_SetDstAddress().
 383:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 384:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 385:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor: Specifies descriptor (0 or 1) used by this function.
 386:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 387:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 388:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Destination address written to specified descriptor.
 389:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 390:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 391:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE void * SPI_RxDMA_GetDstAddress(int32 descriptor)
 392:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 393:Generated_Source\PSoC4/SPI_RxDMA.h ****     return (CyDmaGetDstAddress(SPI_RxDMA_CHANNEL, descriptor));
 394:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 395:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 396:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 397:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 398:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_SetDataElementSize
 399:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 400:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 401:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 402:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Sets the data element size for the specified descriptor.
 403:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 404:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 405:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor:      Descriptor (0 or 1) modified by this function.
 406:Generated_Source\PSoC4/SPI_RxDMA.h **** *  dataElementSize: Specifies the size of the data element. The DMA transfer
 407:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   engine transfers one data element at a time. How these
 408:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   transfers occur is controlled by the transfer mode.
 409:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   Refer to the API bit field definitions in CyDMA_P4.h or API
 410:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   description in the DMA channel datasheet for the parameter
 411:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   options.
 412:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 413:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 414:Generated_Source\PSoC4/SPI_RxDMA.h **** *  None.
 415:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 416:Generated_Source\PSoC4/SPI_RxDMA.h **** * Side effect:
 417:Generated_Source\PSoC4/SPI_RxDMA.h **** *  This function should not be called when the specified descriptor is active
 418:Generated_Source\PSoC4/SPI_RxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 419:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 420:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 421:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE void SPI_RxDMA_SetDataElementSize(int32 descriptor, uint32 dataElementSize)
 422:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 423:Generated_Source\PSoC4/SPI_RxDMA.h ****     CyDmaSetDataElementSize(SPI_RxDMA_CHANNEL, descriptor, dataElementSize);
 424:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 425:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 426:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 427:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 428:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_GetDataElementSize
 429:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 430:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 431:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 11


 432:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Returns the data element size configured for the specified descriptor, set by
 433:Generated_Source\PSoC4/SPI_RxDMA.h **** *  SPI_RxDMA_SetDataElementSize() or SPI_RxDMA_SetConfiguration().
 434:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 435:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 436:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 437:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 438:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 439:Generated_Source\PSoC4/SPI_RxDMA.h **** *  The size of the data element. The DMA transfer engine transfers one data
 440:Generated_Source\PSoC4/SPI_RxDMA.h **** *  element at a time. How these transfers occur is controlled by the transfer
 441:Generated_Source\PSoC4/SPI_RxDMA.h **** *  mode. Refer to the API bit field definitions in CyDMA_P4.h or the API 
 442:Generated_Source\PSoC4/SPI_RxDMA.h **** *  description in the DMA channel datasheet for more information.
 443:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 444:Generated_Source\PSoC4/SPI_RxDMA.h **** * Note:
 445:Generated_Source\PSoC4/SPI_RxDMA.h **** *  The size of the source and destination can be configured to use the
 446:Generated_Source\PSoC4/SPI_RxDMA.h **** *  data element size, or a Word, this is set in SPI_RxDMA_SetSrcDstTransferWidth().
 447:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 448:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 449:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE uint32 SPI_RxDMA_GetDataElementSize(int32 descriptor)
 450:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 451:Generated_Source\PSoC4/SPI_RxDMA.h ****     return (CyDmaGetDataElementSize(SPI_RxDMA_CHANNEL, descriptor));
 452:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 453:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 454:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 455:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 456:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_SetNumDataElements
 457:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 458:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 459:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 460:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Sets the number of data elements to transfer for specified descriptor.
 461:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 462:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 463:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor:      Descriptor (0 or 1) modified by this function.
 464:Generated_Source\PSoC4/SPI_RxDMA.h **** *  numDataElements: Total number of data elements this descriptor transfers.
 465:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   Valid ranges are 1 to 65536.
 466:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 467:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 468:Generated_Source\PSoC4/SPI_RxDMA.h **** *  None.
 469:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 470:Generated_Source\PSoC4/SPI_RxDMA.h **** * Side effect:
 471:Generated_Source\PSoC4/SPI_RxDMA.h **** *  This function should not be called when the specified descriptor is active
 472:Generated_Source\PSoC4/SPI_RxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 473:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 474:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 475:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE void SPI_RxDMA_SetNumDataElements(int32 descriptor, int32 numDataElements)
 476:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 477:Generated_Source\PSoC4/SPI_RxDMA.h ****     CyDmaSetNumDataElements(SPI_RxDMA_CHANNEL, descriptor, numDataElements);
 478:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 479:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 480:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 481:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 482:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_GetNumDataElements
 483:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 484:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 485:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 486:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Returns the number of data elements to be transferred. Only reflects the
 487:Generated_Source\PSoC4/SPI_RxDMA.h **** *  value written by SPI_RxDMA_SetNumDataElements() or SPI_RxDMA_SetConfiguration().
 488:Generated_Source\PSoC4/SPI_RxDMA.h **** *  This does not reflect how many elements have been transferred. For that
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 12


 489:Generated_Source\PSoC4/SPI_RxDMA.h **** *  information use the SPI_RxDMA_GetDescriptorStatus() function.
 490:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 491:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 492:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 493:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 494:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 495:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Number of data elements to transfer.
 496:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 497:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 498:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE int32 SPI_RxDMA_GetNumDataElements(int32 descriptor)
 499:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 500:Generated_Source\PSoC4/SPI_RxDMA.h ****     return (CyDmaGetNumDataElements(SPI_RxDMA_CHANNEL, descriptor));
 501:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 502:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 503:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 504:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 505:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_SetSrcDstTransferWidth
 506:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 507:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 508:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 509:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Sets the width of the source and destination. The DMA can either read and
 510:Generated_Source\PSoC4/SPI_RxDMA.h **** *  write data from the source and destination at the size specified by
 511:Generated_Source\PSoC4/SPI_RxDMA.h **** *  SPI_RxDMA_SetDataElementSize() or by a word (4bytes). This also determines how
 512:Generated_Source\PSoC4/SPI_RxDMA.h **** *  many bytes the addresses are incremented if increment source and destination
 513:Generated_Source\PSoC4/SPI_RxDMA.h **** *  address are turned on.
 514:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 515:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 516:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor:    Descriptor (0 or 1) modified by this function.
 517:Generated_Source\PSoC4/SPI_RxDMA.h **** *  transferWidth: Specifies the source and destination widths. Refer to the API
 518:Generated_Source\PSoC4/SPI_RxDMA.h **** *                 bit field definitions in CyDMA_P4.h or the API description in
 519:Generated_Source\PSoC4/SPI_RxDMA.h **** *                 the DMA channel datasheet for the parameter options.
 520:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 521:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 522:Generated_Source\PSoC4/SPI_RxDMA.h **** *  None.
 523:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 524:Generated_Source\PSoC4/SPI_RxDMA.h **** * Side effect:
 525:Generated_Source\PSoC4/SPI_RxDMA.h **** *  This function should not be called when the specified descriptor is active
 526:Generated_Source\PSoC4/SPI_RxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 527:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 528:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 529:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE void SPI_RxDMA_SetSrcDstTransferWidth(int32 descriptor, uint32 transferWidth)
 530:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 531:Generated_Source\PSoC4/SPI_RxDMA.h ****     CyDmaSetSrcDstTransferWidth(SPI_RxDMA_CHANNEL, descriptor, transferWidth);
 532:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 533:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 534:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 535:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 536:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_GetSrcDstTransferWidth
 537:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 538:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 539:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 540:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Returns the width of the source and destination, as set by 
 541:Generated_Source\PSoC4/SPI_RxDMA.h **** *  SPI_RxDMA_SetSrcDstTransferWidth() or SPI_RxDMA_SetConfiguration().
 542:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 543:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 544:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 545:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 13


 546:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 547:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Width of source and destination. Refer to the API bit field definitions in
 548:Generated_Source\PSoC4/SPI_RxDMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 549:Generated_Source\PSoC4/SPI_RxDMA.h **** *  information.
 550:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 551:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 552:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE uint32 SPI_RxDMA_GetSrcDstTransferWidth(int32 descriptor)
 553:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 554:Generated_Source\PSoC4/SPI_RxDMA.h ****     return (CyDmaGetSrcDstTransferWidth(SPI_RxDMA_CHANNEL, descriptor));
 555:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 556:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 557:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 558:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 559:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_SetAddressIncrement
 560:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 561:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 562:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 563:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Sets whether the source or destination addresses are incremented after the
 564:Generated_Source\PSoC4/SPI_RxDMA.h **** *  transfer of each data element. The amount that the source and destination
 565:Generated_Source\PSoC4/SPI_RxDMA.h **** *  address are incremented is determined by the SPI_RxDMA_SetSrcDstTransferWidth()
 566:Generated_Source\PSoC4/SPI_RxDMA.h **** *  function. The addresses will either be incremented by the data element size
 567:Generated_Source\PSoC4/SPI_RxDMA.h **** *  or by a word (4 bytes).
 568:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 569:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 570:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor:       Descriptor (0 or 1) modified by this function.
 571:Generated_Source\PSoC4/SPI_RxDMA.h **** *  addressIncrement: Address increment settings. Refer to the API bit field
 572:Generated_Source\PSoC4/SPI_RxDMA.h **** *                    definitions in CyDMA_P4.h or the API description in the DMA
 573:Generated_Source\PSoC4/SPI_RxDMA.h **** *                    channel datasheet for the parameter options.
 574:Generated_Source\PSoC4/SPI_RxDMA.h **** *    
 575:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 576:Generated_Source\PSoC4/SPI_RxDMA.h **** *  None.
 577:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 578:Generated_Source\PSoC4/SPI_RxDMA.h **** * Side effect:
 579:Generated_Source\PSoC4/SPI_RxDMA.h **** *  This function should not be called when the specified descriptor is active
 580:Generated_Source\PSoC4/SPI_RxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 581:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 582:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 583:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE void SPI_RxDMA_SetAddressIncrement(int32 descriptor, uint32 addressIncrement)
 584:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 585:Generated_Source\PSoC4/SPI_RxDMA.h ****     CyDmaSetAddressIncrement(SPI_RxDMA_CHANNEL, descriptor, addressIncrement);
 586:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 587:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 588:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 589:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 590:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_GetAddressIncrement
 591:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 592:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 593:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 594:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Returns address increment settings as set by SPI_RxDMA_SetAddressIncrement()
 595:Generated_Source\PSoC4/SPI_RxDMA.h **** *  or SPI_RxDMA_SetConfiguration().
 596:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 597:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 598:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 599:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 600:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 601:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Address increment settings. Refer to the API bit field definitions in
 602:Generated_Source\PSoC4/SPI_RxDMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 14


 603:Generated_Source\PSoC4/SPI_RxDMA.h **** *  information.
 604:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 605:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 606:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE uint32 SPI_RxDMA_GetAddressIncrement(int32 descriptor)
 607:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 608:Generated_Source\PSoC4/SPI_RxDMA.h ****     return (CyDmaGetAddressIncrement(SPI_RxDMA_CHANNEL, descriptor));
 609:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 610:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 611:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 612:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 613:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_SetTriggerType
 614:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 615:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 616:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 617:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Sets the type of input trigger for the DMA For level sensitive triggers sets
 618:Generated_Source\PSoC4/SPI_RxDMA.h **** *  how long the DMA waits for the trigger to go low (deactivate) before
 619:Generated_Source\PSoC4/SPI_RxDMA.h **** *  triggering the channel again.
 620:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 621:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 622:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor:  Descriptor (0 or 1) modified by this function.
 623:Generated_Source\PSoC4/SPI_RxDMA.h **** *  triggerType: Type of DMA trigger. Refer to the API bit field definitions in
 624:Generated_Source\PSoC4/SPI_RxDMA.h **** *               CyDMA_P4.h or the API description in the DMA channel datasheet
 625:Generated_Source\PSoC4/SPI_RxDMA.h **** *               for the parameter options.
 626:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 627:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 628:Generated_Source\PSoC4/SPI_RxDMA.h **** *  None.
 629:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 630:Generated_Source\PSoC4/SPI_RxDMA.h **** * Side effect:
 631:Generated_Source\PSoC4/SPI_RxDMA.h **** *  This function should not be called when the specified descriptor is active
 632:Generated_Source\PSoC4/SPI_RxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 633:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 634:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 635:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE void SPI_RxDMA_SetTriggerType(int32 descriptor, uint32 triggerType)
 636:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 637:Generated_Source\PSoC4/SPI_RxDMA.h ****     CyDmaSetTriggerType(SPI_RxDMA_CHANNEL, descriptor, triggerType);
 638:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 639:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 640:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 641:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 642:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_GetTriggerType
 643:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 644:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 645:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 646:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Returns the trigger deactivation settings as set by SPI_RxDMA_SetTriggerType()
 647:Generated_Source\PSoC4/SPI_RxDMA.h **** *  or SPI_RxDMA_SetConfiguration().
 648:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 649:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 650:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 651:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 652:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 653:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Trigger deactivation settings. Refer to the API bit field definitions in
 654:Generated_Source\PSoC4/SPI_RxDMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 655:Generated_Source\PSoC4/SPI_RxDMA.h **** *  information.
 656:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 657:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 658:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE uint32 SPI_RxDMA_GetTriggerType(int32 descriptor)
 659:Generated_Source\PSoC4/SPI_RxDMA.h **** {
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 15


 660:Generated_Source\PSoC4/SPI_RxDMA.h ****     return (CyDmaGetTriggerType(SPI_RxDMA_CHANNEL, descriptor));
 661:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 662:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 663:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 664:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 665:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_SetTransferMode
 666:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 667:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 668:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 669:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Sets the DMA transfer mode. This determines how the DMA reacts to each trigger
 670:Generated_Source\PSoC4/SPI_RxDMA.h **** *  event.
 671:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 672:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 673:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor:   Descriptor (0 or 1) modified by this function.
 674:Generated_Source\PSoC4/SPI_RxDMA.h **** *  transferMode: Specifies the DMA transfer mode settings. Refer to the API bit
 675:Generated_Source\PSoC4/SPI_RxDMA.h **** *                field definitions in CyDMA_P4.h or the API description in the
 676:Generated_Source\PSoC4/SPI_RxDMA.h **** *                DMA channel datasheet for the parameter options.
 677:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 678:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 679:Generated_Source\PSoC4/SPI_RxDMA.h **** *  None.
 680:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 681:Generated_Source\PSoC4/SPI_RxDMA.h **** * Side effect:
 682:Generated_Source\PSoC4/SPI_RxDMA.h **** *  This function should not be called when the specified descriptor is active
 683:Generated_Source\PSoC4/SPI_RxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 684:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 685:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 686:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE void SPI_RxDMA_SetTransferMode(int32 descriptor, uint32 transferMode)
 687:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 688:Generated_Source\PSoC4/SPI_RxDMA.h ****     CyDmaSetTransferMode(SPI_RxDMA_CHANNEL, descriptor, transferMode);
 689:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 690:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 691:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 692:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 693:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_GetTransferMode
 694:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 695:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 696:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 697:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Returns the transfer mode for the specified descriptor as set by 
 698:Generated_Source\PSoC4/SPI_RxDMA.h **** *  SPI_RxDMA_SetTransferMode() or SPI_RxDMA_SetConfiguration().
 699:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 700:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 701:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 702:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 703:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 704:Generated_Source\PSoC4/SPI_RxDMA.h **** *  DMA transfer mode settings. Refer to the API bit field definitions in
 705:Generated_Source\PSoC4/SPI_RxDMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 706:Generated_Source\PSoC4/SPI_RxDMA.h **** *  information.
 707:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 708:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 709:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE uint32 SPI_RxDMA_GetTransferMode(int32 descriptor)
 710:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 711:Generated_Source\PSoC4/SPI_RxDMA.h ****     return (CyDmaGetTransferMode(SPI_RxDMA_CHANNEL, descriptor));
 712:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 713:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 714:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 715:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 716:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_SetPreemptable
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 16


 717:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 718:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 719:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 720:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Determines if the descriptor is preemptable.
 721:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 722:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 723:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor:  Descriptor (0 or 1) modified by this function.
 724:Generated_Source\PSoC4/SPI_RxDMA.h **** *  preemptable: Descriptor preemption settings. Refer to the API bit field
 725:Generated_Source\PSoC4/SPI_RxDMA.h **** *               definitions in CyDMA_P4.h or the API description in the DMA 
 726:Generated_Source\PSoC4/SPI_RxDMA.h **** *               channel datasheet for the parameter options.
 727:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 728:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 729:Generated_Source\PSoC4/SPI_RxDMA.h **** *  None.
 730:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 731:Generated_Source\PSoC4/SPI_RxDMA.h **** * Side effect:
 732:Generated_Source\PSoC4/SPI_RxDMA.h **** *  This function should not be called when the specified descriptor is active
 733:Generated_Source\PSoC4/SPI_RxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 734:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 735:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 736:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE void SPI_RxDMA_SetPreemptable(int32 descriptor, uint32 preemptable)
 737:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 738:Generated_Source\PSoC4/SPI_RxDMA.h ****     CyDmaSetPreemptable(SPI_RxDMA_CHANNEL, descriptor, preemptable);
 739:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 740:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 741:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 742:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 743:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_GetPreemptable
 744:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 745:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 746:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 747:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Returns whether or not the descriptor is preemptable.
 748:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 749:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 750:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 751:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 752:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 753:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Descriptor preemption setting. Refer to the API bit field definitions in
 754:Generated_Source\PSoC4/SPI_RxDMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 755:Generated_Source\PSoC4/SPI_RxDMA.h **** *  information.
 756:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 757:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 758:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE uint32 SPI_RxDMA_GetPreemptable(int32 descriptor)
 759:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 760:Generated_Source\PSoC4/SPI_RxDMA.h ****     return (CyDmaGetPreemptable(SPI_RxDMA_CHANNEL, descriptor));
 761:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 762:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 763:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 764:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 765:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_SetPostCompletionActions
 766:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 767:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 768:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 769:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Determines what occurs after a descriptor completes.
 770:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 771:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 772:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 773:Generated_Source\PSoC4/SPI_RxDMA.h **** *  actions:    Specifies descriptor post completion actions. Refer to the API
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 17


 774:Generated_Source\PSoC4/SPI_RxDMA.h **** *              bit field definitions in CyDMA_P4.h or the API description in the
 775:Generated_Source\PSoC4/SPI_RxDMA.h **** *              DMA channel datasheet for the parameter options.
 776:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 777:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 778:Generated_Source\PSoC4/SPI_RxDMA.h **** *  None.  
 779:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 780:Generated_Source\PSoC4/SPI_RxDMA.h **** * Side effect:
 781:Generated_Source\PSoC4/SPI_RxDMA.h **** *  This function should not be called when the specified descriptor is active
 782:Generated_Source\PSoC4/SPI_RxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 783:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 784:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 785:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE void SPI_RxDMA_SetPostCompletionActions(int32 descriptor, uint32 actions)
 786:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 787:Generated_Source\PSoC4/SPI_RxDMA.h ****     CyDmaSetPostCompletionActions(SPI_RxDMA_CHANNEL, descriptor, actions);
 788:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 789:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 790:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 791:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 792:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_GetPostCompletionAction
 793:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 794:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 795:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 796:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Returns the post descriptor action settings as set by 
 797:Generated_Source\PSoC4/SPI_RxDMA.h **** *  SPI_RxDMA_SetPostCompletionActions() or SPI_RxDMA_SetConfiguration().
 798:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 799:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 800:Generated_Source\PSoC4/SPI_RxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 801:Generated_Source\PSoC4/SPI_RxDMA.h **** *                   
 802:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 803:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Post descriptor actions. Refer to the API bit field definitions in CyDMA_P4.h
 804:Generated_Source\PSoC4/SPI_RxDMA.h **** *  or the API description in the DMA channel datasheet for more information.
 805:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 806:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 807:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE uint32 SPI_RxDMA_GetPostCompletionAction(int32 descriptor)
 808:Generated_Source\PSoC4/SPI_RxDMA.h **** {
 809:Generated_Source\PSoC4/SPI_RxDMA.h ****     return (CyDmaGetPostCompletionActions(SPI_RxDMA_CHANNEL, descriptor));
 810:Generated_Source\PSoC4/SPI_RxDMA.h **** }
 811:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 812:Generated_Source\PSoC4/SPI_RxDMA.h **** 
 813:Generated_Source\PSoC4/SPI_RxDMA.h **** /*******************************************************************************
 814:Generated_Source\PSoC4/SPI_RxDMA.h **** * Function Name: SPI_RxDMA_SetInterruptCallback
 815:Generated_Source\PSoC4/SPI_RxDMA.h **** ********************************************************************************
 816:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 817:Generated_Source\PSoC4/SPI_RxDMA.h **** * Summary:
 818:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Sets a user defined callback function to be called by the DMA interrupt. The
 819:Generated_Source\PSoC4/SPI_RxDMA.h **** *  function should contain code to process the interrupt request for the 
 820:Generated_Source\PSoC4/SPI_RxDMA.h **** *  associated DMA channel.
 821:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 822:Generated_Source\PSoC4/SPI_RxDMA.h **** * Parameters:
 823:Generated_Source\PSoC4/SPI_RxDMA.h **** *  callback: Pointer to the user defined callback function.
 824:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 825:Generated_Source\PSoC4/SPI_RxDMA.h **** * Return:
 826:Generated_Source\PSoC4/SPI_RxDMA.h **** *  Pointer to the function previously set for the specified channel. 
 827:Generated_Source\PSoC4/SPI_RxDMA.h **** *
 828:Generated_Source\PSoC4/SPI_RxDMA.h **** *******************************************************************************/
 829:Generated_Source\PSoC4/SPI_RxDMA.h **** static CY_INLINE cydma_callback_t SPI_RxDMA_SetInterruptCallback(cydma_callback_t callback)
 830:Generated_Source\PSoC4/SPI_RxDMA.h **** {
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 18


 831:Generated_Source\PSoC4/SPI_RxDMA.h ****     return (CyDmaSetInterruptCallback(SPI_RxDMA_CHANNEL, callback));
  52              		.loc 2 831 0
  53 0014 3149     		ldr	r1, .L2+16
  54 0016 0020     		movs	r0, #0
  55 0018 FFF7FEFF 		bl	CyDmaSetInterruptCallback
  56              	.LVL2:
  57              	.LBE25:
  58              	.LBE24:
  59              	.LBB26:
  60              	.LBB27:
  61              		.file 3 "Generated_Source\\PSoC4/SPI_TxDMA.h"
   1:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
   2:Generated_Source\PSoC4/SPI_TxDMA.h **** * File Name: SPI_TxDMA.h
   3:Generated_Source\PSoC4/SPI_TxDMA.h **** * Version 1.0
   4:Generated_Source\PSoC4/SPI_TxDMA.h **** *
   5:Generated_Source\PSoC4/SPI_TxDMA.h **** * Description:
   6:Generated_Source\PSoC4/SPI_TxDMA.h **** *  This file provides DMA channel defines and API function definitions.
   7:Generated_Source\PSoC4/SPI_TxDMA.h **** *
   8:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
   9:Generated_Source\PSoC4/SPI_TxDMA.h **** * Copyright 2015, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC4/SPI_TxDMA.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC4/SPI_TxDMA.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC4/SPI_TxDMA.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
  14:Generated_Source\PSoC4/SPI_TxDMA.h **** 
  15:Generated_Source\PSoC4/SPI_TxDMA.h **** #ifndef CY_DMA_CHANNEL_SPI_TxDMA_H
  16:Generated_Source\PSoC4/SPI_TxDMA.h **** #define CY_DMA_CHANNEL_SPI_TxDMA_H
  17:Generated_Source\PSoC4/SPI_TxDMA.h **** 
  18:Generated_Source\PSoC4/SPI_TxDMA.h **** #include "CyDMA.h"
  19:Generated_Source\PSoC4/SPI_TxDMA.h **** 
  20:Generated_Source\PSoC4/SPI_TxDMA.h ****     
  21:Generated_Source\PSoC4/SPI_TxDMA.h **** /***************************************
  22:Generated_Source\PSoC4/SPI_TxDMA.h **** *   Conditional Compilation Parameters
  23:Generated_Source\PSoC4/SPI_TxDMA.h **** ***************************************/
  24:Generated_Source\PSoC4/SPI_TxDMA.h **** 
  25:Generated_Source\PSoC4/SPI_TxDMA.h **** #define SPI_TxDMA_CHANNEL           (SPI_TxDMA__CHANNEL_NUMBER)
  26:Generated_Source\PSoC4/SPI_TxDMA.h **** #define SPI_TxDMA_CHANNEL_MASK      ((uint32)(1UL << SPI_TxDMA_CHANNEL))
  27:Generated_Source\PSoC4/SPI_TxDMA.h **** 
  28:Generated_Source\PSoC4/SPI_TxDMA.h **** 
  29:Generated_Source\PSoC4/SPI_TxDMA.h **** /***************************************
  30:Generated_Source\PSoC4/SPI_TxDMA.h **** *        Function Prototypes
  31:Generated_Source\PSoC4/SPI_TxDMA.h **** ***************************************/
  32:Generated_Source\PSoC4/SPI_TxDMA.h **** 
  33:Generated_Source\PSoC4/SPI_TxDMA.h **** /* Functions specific to this DMA channel */
  34:Generated_Source\PSoC4/SPI_TxDMA.h **** void SPI_TxDMA_Init(void);
  35:Generated_Source\PSoC4/SPI_TxDMA.h **** void SPI_TxDMA_Start(void * srcAddress, void * dstAddress);
  36:Generated_Source\PSoC4/SPI_TxDMA.h **** 
  37:Generated_Source\PSoC4/SPI_TxDMA.h **** /* Inline functions that call global API functions */
  38:Generated_Source\PSoC4/SPI_TxDMA.h **** static void   SPI_TxDMA_ChEnable(void);
  39:Generated_Source\PSoC4/SPI_TxDMA.h **** static void   SPI_TxDMA_ChDisable(void);
  40:Generated_Source\PSoC4/SPI_TxDMA.h **** static void   SPI_TxDMA_Trigger(void);
  41:Generated_Source\PSoC4/SPI_TxDMA.h **** static void   SPI_TxDMA_SetPriority(int32 priority);
  42:Generated_Source\PSoC4/SPI_TxDMA.h **** static int32  SPI_TxDMA_GetPriority(void);
  43:Generated_Source\PSoC4/SPI_TxDMA.h **** static void   SPI_TxDMA_SetNextDescriptor(int32 descriptor);
  44:Generated_Source\PSoC4/SPI_TxDMA.h **** static int32  SPI_TxDMA_GetNextDescriptor(void);
  45:Generated_Source\PSoC4/SPI_TxDMA.h **** static void   SPI_TxDMA_SetConfiguration(int32 descriptor, const cydma_init_struct * config);
  46:Generated_Source\PSoC4/SPI_TxDMA.h **** static void   SPI_TxDMA_ValidateDescriptor(int32 descriptor);
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 19


  47:Generated_Source\PSoC4/SPI_TxDMA.h **** static uint32 SPI_TxDMA_GetDescriptorStatus(int32 descriptor);
  48:Generated_Source\PSoC4/SPI_TxDMA.h **** static void   SPI_TxDMA_SetSrcAddress(int32 descriptor, void * srcAddress);
  49:Generated_Source\PSoC4/SPI_TxDMA.h **** static void * SPI_TxDMA_GetSrcAddress(int32 descriptor);
  50:Generated_Source\PSoC4/SPI_TxDMA.h **** static void   SPI_TxDMA_SetDstAddress(int32 descriptor, void * dstAddress);
  51:Generated_Source\PSoC4/SPI_TxDMA.h **** static void * SPI_TxDMA_GetDstAddress(int32 descriptor);
  52:Generated_Source\PSoC4/SPI_TxDMA.h **** static void   SPI_TxDMA_SetDataElementSize(int32 descriptor, uint32 dataElementSize);
  53:Generated_Source\PSoC4/SPI_TxDMA.h **** static uint32 SPI_TxDMA_GetDataElementSize(int32 descriptor);
  54:Generated_Source\PSoC4/SPI_TxDMA.h **** static void   SPI_TxDMA_SetNumDataElements(int32 descriptor, int32 numDataElements);
  55:Generated_Source\PSoC4/SPI_TxDMA.h **** static int32  SPI_TxDMA_GetNumDataElements(int32 descriptor);
  56:Generated_Source\PSoC4/SPI_TxDMA.h **** static void   SPI_TxDMA_SetSrcDstTransferWidth(int32 descriptor, uint32 transferWidth);
  57:Generated_Source\PSoC4/SPI_TxDMA.h **** static uint32 SPI_TxDMA_GetSrcDstTransferWidth(int32 descriptor);
  58:Generated_Source\PSoC4/SPI_TxDMA.h **** static void   SPI_TxDMA_SetAddressIncrement(int32 descriptor, uint32 addressIncrement);
  59:Generated_Source\PSoC4/SPI_TxDMA.h **** static uint32 SPI_TxDMA_GetAddressIncrement(int32 descriptor);
  60:Generated_Source\PSoC4/SPI_TxDMA.h **** static void   SPI_TxDMA_SetTriggerType(int32 descriptor, uint32 triggerType);
  61:Generated_Source\PSoC4/SPI_TxDMA.h **** static uint32 SPI_TxDMA_GetTriggerType(int32 descriptor);
  62:Generated_Source\PSoC4/SPI_TxDMA.h **** static void   SPI_TxDMA_SetTransferMode(int32 descriptor, uint32 transferMode);
  63:Generated_Source\PSoC4/SPI_TxDMA.h **** static uint32 SPI_TxDMA_GetTransferMode(int32 descriptor);
  64:Generated_Source\PSoC4/SPI_TxDMA.h **** static void   SPI_TxDMA_SetPreemptable(int32 descriptor, uint32 preemptable);
  65:Generated_Source\PSoC4/SPI_TxDMA.h **** static uint32 SPI_TxDMA_GetPreemptable(int32 descriptor);
  66:Generated_Source\PSoC4/SPI_TxDMA.h **** static void   SPI_TxDMA_SetPostCompletionActions(int32 descriptor, uint32 actions);
  67:Generated_Source\PSoC4/SPI_TxDMA.h **** static uint32 SPI_TxDMA_GetPostCompletionAction(int32 descriptor);
  68:Generated_Source\PSoC4/SPI_TxDMA.h **** static cydma_callback_t SPI_TxDMA_SetInterruptCallback(cydma_callback_t callback);
  69:Generated_Source\PSoC4/SPI_TxDMA.h **** static cydma_callback_t SPI_TxDMA_GetInterruptCallback(void);
  70:Generated_Source\PSoC4/SPI_TxDMA.h **** 
  71:Generated_Source\PSoC4/SPI_TxDMA.h **** 
  72:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
  73:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_ChEnable
  74:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
  75:Generated_Source\PSoC4/SPI_TxDMA.h **** *
  76:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
  77:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Enables the DMA channel. It is not necessary to call SPI_TxDMA_ChEnable()
  78:Generated_Source\PSoC4/SPI_TxDMA.h **** *  because the SPI_TxDMA_Start() API calls this function, which is the
  79:Generated_Source\PSoC4/SPI_TxDMA.h **** *  preferred method to begin the component operation.
  80:Generated_Source\PSoC4/SPI_TxDMA.h **** *
  81:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
  82:Generated_Source\PSoC4/SPI_TxDMA.h **** *  None.
  83:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
  84:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
  85:Generated_Source\PSoC4/SPI_TxDMA.h **** *  None.
  86:Generated_Source\PSoC4/SPI_TxDMA.h **** *
  87:Generated_Source\PSoC4/SPI_TxDMA.h **** * Side effect:
  88:Generated_Source\PSoC4/SPI_TxDMA.h **** *  If this function is called before SPI_TxDMA_Start(), or SPI_TxDMA_Init()
  89:Generated_Source\PSoC4/SPI_TxDMA.h **** *  or SPI_TxDMA_SetConfiguration(), and SPI_TxDMA_SetSrcAddress()
  90:Generated_Source\PSoC4/SPI_TxDMA.h **** *  and SPI_TxDMA_SetDstAddress the operation of the DMA is 
  91:Generated_Source\PSoC4/SPI_TxDMA.h **** *  undefined and could result in system data corruption. 
  92:Generated_Source\PSoC4/SPI_TxDMA.h **** *
  93:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
  94:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE void SPI_TxDMA_ChEnable(void)
  95:Generated_Source\PSoC4/SPI_TxDMA.h **** {
  96:Generated_Source\PSoC4/SPI_TxDMA.h ****     CyDmaChEnable(SPI_TxDMA_CHANNEL);
  97:Generated_Source\PSoC4/SPI_TxDMA.h **** }
  98:Generated_Source\PSoC4/SPI_TxDMA.h **** 
  99:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 100:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 101:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_ChDisable
 102:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 103:Generated_Source\PSoC4/SPI_TxDMA.h **** *
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 20


 104:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 105:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Disables the DMA channel.
 106:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 107:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 108:Generated_Source\PSoC4/SPI_TxDMA.h **** *  None.
 109:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 110:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 111:Generated_Source\PSoC4/SPI_TxDMA.h **** *  None.
 112:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 113:Generated_Source\PSoC4/SPI_TxDMA.h **** * Side effect:
 114:Generated_Source\PSoC4/SPI_TxDMA.h **** *  If this function is called during a DMA transfer the transfer is aborted. 
 115:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 116:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 117:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE void SPI_TxDMA_ChDisable(void)
 118:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 119:Generated_Source\PSoC4/SPI_TxDMA.h ****     CyDmaChDisable(SPI_TxDMA_CHANNEL);
 120:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 121:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 122:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 123:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 124:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_Trigger
 125:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 126:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 127:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 128:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Triggers the DMA channel, this is useful only for software triggers. This is
 129:Generated_Source\PSoC4/SPI_TxDMA.h **** *  not needed when hardware triggers are used.
 130:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 131:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 132:Generated_Source\PSoC4/SPI_TxDMA.h **** *  None.
 133:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 134:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 135:Generated_Source\PSoC4/SPI_TxDMA.h **** *  None. 
 136:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 137:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 138:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE void SPI_TxDMA_Trigger(void)
 139:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 140:Generated_Source\PSoC4/SPI_TxDMA.h ****     CyDmaTrigger(SPI_TxDMA_CHANNEL);
 141:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 142:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 143:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 144:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 145:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_SetPriority
 146:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 147:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 148:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 149:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Sets the priority for the channel.
 150:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 151:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 152:Generated_Source\PSoC4/SPI_TxDMA.h **** *  priority: Priority for channel. Priority can be 0,1,2, or 3.
 153:Generated_Source\PSoC4/SPI_TxDMA.h **** *            0 is the highest priority.
 154:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 155:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 156:Generated_Source\PSoC4/SPI_TxDMA.h **** *  None.
 157:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 158:Generated_Source\PSoC4/SPI_TxDMA.h **** * Side effect:
 159:Generated_Source\PSoC4/SPI_TxDMA.h **** *  This function should not be called while the channel is enabled.
 160:Generated_Source\PSoC4/SPI_TxDMA.h **** *
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 21


 161:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 162:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE void SPI_TxDMA_SetPriority(int32 priority)
 163:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 164:Generated_Source\PSoC4/SPI_TxDMA.h ****     CyDmaSetPriority(SPI_TxDMA_CHANNEL, priority);
 165:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 166:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 167:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 168:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 169:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_GetPriority
 170:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 171:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 172:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 173:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Gets the priority for the channel.
 174:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 175:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 176:Generated_Source\PSoC4/SPI_TxDMA.h **** *  None.
 177:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 178:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 179:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Priority for channel. Priority can be 0,1,2, or 3. 0 is the highest priority.
 180:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 181:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 182:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE int32 SPI_TxDMA_GetPriority(void)
 183:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 184:Generated_Source\PSoC4/SPI_TxDMA.h ****     return (CyDmaGetPriority(SPI_TxDMA_CHANNEL));
 185:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 186:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 187:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 188:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 189:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_SetNextDescriptor
 190:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 191:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 192:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 193:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Sets the descriptor that should be run the next time the channel is
 194:Generated_Source\PSoC4/SPI_TxDMA.h **** *  triggered.
 195:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 196:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 197:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor: Next Descriptor to run (0 or 1).
 198:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 199:Generated_Source\PSoC4/SPI_TxDMA.h **** * Side effect:
 200:Generated_Source\PSoC4/SPI_TxDMA.h **** *  This function should not be called while the channel is enabled.
 201:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 202:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 203:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE void SPI_TxDMA_SetNextDescriptor(int32 descriptor)
 204:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 205:Generated_Source\PSoC4/SPI_TxDMA.h ****     CyDmaSetNextDescriptor(SPI_TxDMA_CHANNEL, descriptor);
 206:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 207:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 208:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 209:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 210:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_GetNextDescriptor
 211:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 212:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 213:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 214:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Returns the next descriptor that should be run, as set by 
 215:Generated_Source\PSoC4/SPI_TxDMA.h **** *  SPI_TxDMA_SetNextDescriptor().
 216:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 217:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 22


 218:Generated_Source\PSoC4/SPI_TxDMA.h **** *  None.
 219:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 220:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 221:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Next Descriptor to run (0 or 1).
 222:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 223:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 224:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE int32 SPI_TxDMA_GetNextDescriptor(void)
 225:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 226:Generated_Source\PSoC4/SPI_TxDMA.h ****     return (CyDmaGetNextDescriptor(SPI_TxDMA_CHANNEL));
 227:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 228:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 229:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 230:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 231:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_SetConfiguration
 232:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 233:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 234:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 235:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Sets configuration information for the specified descriptor.
 236:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 237:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 238:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 239:Generated_Source\PSoC4/SPI_TxDMA.h **** *  config: Pointer to a configuration structure. Refer to cydma_init_struct
 240:Generated_Source\PSoC4/SPI_TxDMA.h **** *          structure definition in CyDMA_P4.h or the component datasheet.
 241:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 242:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 243:Generated_Source\PSoC4/SPI_TxDMA.h **** *  None.
 244:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 245:Generated_Source\PSoC4/SPI_TxDMA.h **** * Side effect:
 246:Generated_Source\PSoC4/SPI_TxDMA.h **** *  The status register associated with the specified descriptor is reset to
 247:Generated_Source\PSoC4/SPI_TxDMA.h **** *  zero after this function call. This function also validates the descriptor.
 248:Generated_Source\PSoC4/SPI_TxDMA.h **** *  This function should not be called while the descriptor is active.
 249:Generated_Source\PSoC4/SPI_TxDMA.h **** *  This can be checked by calling CyDmaGetStatus().
 250:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 251:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 252:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE void SPI_TxDMA_SetConfiguration(int32 descriptor, const cydma_init_struct * config
 253:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 254:Generated_Source\PSoC4/SPI_TxDMA.h ****     CyDmaSetConfiguration(SPI_TxDMA_CHANNEL, descriptor, config);
 255:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 256:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 257:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 258:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 259:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_ValidateDescriptor
 260:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 261:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 262:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 263:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Validates the specified descriptor after it has been invalidated.
 264:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 265:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 266:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 267:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 268:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 269:Generated_Source\PSoC4/SPI_TxDMA.h **** *  None. 
 270:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 271:Generated_Source\PSoC4/SPI_TxDMA.h **** * Side effect:
 272:Generated_Source\PSoC4/SPI_TxDMA.h **** *  The status register associated with the specified descriptor is reset to
 273:Generated_Source\PSoC4/SPI_TxDMA.h **** *  zero after this function call. This function should not be called while the
 274:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor is active. This can be checked by calling CyDmaGetStatus().
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 23


 275:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 276:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 277:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE void SPI_TxDMA_ValidateDescriptor(int32 descriptor)
 278:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 279:Generated_Source\PSoC4/SPI_TxDMA.h ****     CyDmaValidateDescriptor(SPI_TxDMA_CHANNEL, descriptor);
 280:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 281:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 282:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 283:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 284:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_GetDescriptorStatus
 285:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 286:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 287:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 288:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Returns the status of the specified descriptor.
 289:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 290:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 291:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 292:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 293:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 294:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Returns the contents of the specified descriptors status register. Refer to 
 295:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor status register bit definitions in CyDMA_P4.h or the API
 296:Generated_Source\PSoC4/SPI_TxDMA.h **** *  description in the DMA channel datasheet for more information.
 297:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 298:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 299:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE uint32 SPI_TxDMA_GetDescriptorStatus(int32 descriptor)
 300:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 301:Generated_Source\PSoC4/SPI_TxDMA.h ****     return (CyDmaGetDescriptorStatus(SPI_TxDMA_CHANNEL, descriptor));
 302:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 303:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 304:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 305:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 306:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_SetSrcAddress
 307:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 308:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 309:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 310:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Configures the source address for the specified descriptor.
 311:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 312:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 313:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 314:Generated_Source\PSoC4/SPI_TxDMA.h **** *  srcAddress: Address of DMA transfer source.
 315:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 316:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 317:Generated_Source\PSoC4/SPI_TxDMA.h **** *  None.
 318:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 319:Generated_Source\PSoC4/SPI_TxDMA.h **** * Side effect:
 320:Generated_Source\PSoC4/SPI_TxDMA.h **** *  This function should not be called when the specified descriptor is active
 321:Generated_Source\PSoC4/SPI_TxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 322:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 323:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 324:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE void SPI_TxDMA_SetSrcAddress(int32 descriptor, void * srcAddress)
 325:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 326:Generated_Source\PSoC4/SPI_TxDMA.h ****     CyDmaSetSrcAddress(SPI_TxDMA_CHANNEL, descriptor, srcAddress);
 327:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 328:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 329:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 330:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 331:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_GetSrcAddress
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 24


 332:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 333:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 334:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 335:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Returns the source address for the specified descriptor, set by either 
 336:Generated_Source\PSoC4/SPI_TxDMA.h **** *  SPI_TxDMA_Start() or SPI_TxDMA_SetSrcAddress().
 337:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 338:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 339:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor: Specifies descriptor (0 or 1) used by this function.
 340:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 341:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 342:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Source address written to specified descriptor.
 343:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 344:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 345:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE void * SPI_TxDMA_GetSrcAddress(int32 descriptor)
 346:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 347:Generated_Source\PSoC4/SPI_TxDMA.h ****     return (CyDmaGetSrcAddress(SPI_TxDMA_CHANNEL, descriptor));
 348:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 349:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 350:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 351:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 352:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_SetDstAddress
 353:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 354:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 355:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 356:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Configures the destination address for the specified descriptor.
 357:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 358:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 359:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 360:Generated_Source\PSoC4/SPI_TxDMA.h **** *  dstAddress: Address of DMA transfer destination.
 361:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 362:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 363:Generated_Source\PSoC4/SPI_TxDMA.h **** *  None.
 364:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 365:Generated_Source\PSoC4/SPI_TxDMA.h **** * Side effect:
 366:Generated_Source\PSoC4/SPI_TxDMA.h **** *  This function should not be called when the specified descriptor is active
 367:Generated_Source\PSoC4/SPI_TxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 368:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 369:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 370:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE void SPI_TxDMA_SetDstAddress(int32 descriptor, void * dstAddress)
 371:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 372:Generated_Source\PSoC4/SPI_TxDMA.h ****     CyDmaSetDstAddress(SPI_TxDMA_CHANNEL, descriptor, dstAddress);
 373:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 374:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 375:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 376:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 377:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_GetDstAddress
 378:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 379:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 380:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 381:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Returns the destination address for the specified descriptor, set by either 
 382:Generated_Source\PSoC4/SPI_TxDMA.h **** *  SPI_TxDMA_Start() or SPI_TxDMA_SetDstAddress().
 383:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 384:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 385:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor: Specifies descriptor (0 or 1) used by this function.
 386:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 387:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 388:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Destination address written to specified descriptor.
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 25


 389:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 390:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 391:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE void * SPI_TxDMA_GetDstAddress(int32 descriptor)
 392:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 393:Generated_Source\PSoC4/SPI_TxDMA.h ****     return (CyDmaGetDstAddress(SPI_TxDMA_CHANNEL, descriptor));
 394:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 395:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 396:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 397:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 398:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_SetDataElementSize
 399:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 400:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 401:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 402:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Sets the data element size for the specified descriptor.
 403:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 404:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 405:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor:      Descriptor (0 or 1) modified by this function.
 406:Generated_Source\PSoC4/SPI_TxDMA.h **** *  dataElementSize: Specifies the size of the data element. The DMA transfer
 407:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   engine transfers one data element at a time. How these
 408:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   transfers occur is controlled by the transfer mode.
 409:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   Refer to the API bit field definitions in CyDMA_P4.h or API
 410:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   description in the DMA channel datasheet for the parameter
 411:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   options.
 412:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 413:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 414:Generated_Source\PSoC4/SPI_TxDMA.h **** *  None.
 415:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 416:Generated_Source\PSoC4/SPI_TxDMA.h **** * Side effect:
 417:Generated_Source\PSoC4/SPI_TxDMA.h **** *  This function should not be called when the specified descriptor is active
 418:Generated_Source\PSoC4/SPI_TxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 419:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 420:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 421:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE void SPI_TxDMA_SetDataElementSize(int32 descriptor, uint32 dataElementSize)
 422:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 423:Generated_Source\PSoC4/SPI_TxDMA.h ****     CyDmaSetDataElementSize(SPI_TxDMA_CHANNEL, descriptor, dataElementSize);
 424:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 425:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 426:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 427:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 428:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_GetDataElementSize
 429:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 430:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 431:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 432:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Returns the data element size configured for the specified descriptor, set by
 433:Generated_Source\PSoC4/SPI_TxDMA.h **** *  SPI_TxDMA_SetDataElementSize() or SPI_TxDMA_SetConfiguration().
 434:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 435:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 436:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 437:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 438:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 439:Generated_Source\PSoC4/SPI_TxDMA.h **** *  The size of the data element. The DMA transfer engine transfers one data
 440:Generated_Source\PSoC4/SPI_TxDMA.h **** *  element at a time. How these transfers occur is controlled by the transfer
 441:Generated_Source\PSoC4/SPI_TxDMA.h **** *  mode. Refer to the API bit field definitions in CyDMA_P4.h or the API 
 442:Generated_Source\PSoC4/SPI_TxDMA.h **** *  description in the DMA channel datasheet for more information.
 443:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 444:Generated_Source\PSoC4/SPI_TxDMA.h **** * Note:
 445:Generated_Source\PSoC4/SPI_TxDMA.h **** *  The size of the source and destination can be configured to use the
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 26


 446:Generated_Source\PSoC4/SPI_TxDMA.h **** *  data element size, or a Word, this is set in SPI_TxDMA_SetSrcDstTransferWidth().
 447:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 448:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 449:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE uint32 SPI_TxDMA_GetDataElementSize(int32 descriptor)
 450:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 451:Generated_Source\PSoC4/SPI_TxDMA.h ****     return (CyDmaGetDataElementSize(SPI_TxDMA_CHANNEL, descriptor));
 452:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 453:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 454:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 455:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 456:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_SetNumDataElements
 457:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 458:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 459:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 460:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Sets the number of data elements to transfer for specified descriptor.
 461:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 462:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 463:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor:      Descriptor (0 or 1) modified by this function.
 464:Generated_Source\PSoC4/SPI_TxDMA.h **** *  numDataElements: Total number of data elements this descriptor transfers.
 465:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   Valid ranges are 1 to 65536.
 466:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 467:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 468:Generated_Source\PSoC4/SPI_TxDMA.h **** *  None.
 469:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 470:Generated_Source\PSoC4/SPI_TxDMA.h **** * Side effect:
 471:Generated_Source\PSoC4/SPI_TxDMA.h **** *  This function should not be called when the specified descriptor is active
 472:Generated_Source\PSoC4/SPI_TxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 473:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 474:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 475:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE void SPI_TxDMA_SetNumDataElements(int32 descriptor, int32 numDataElements)
 476:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 477:Generated_Source\PSoC4/SPI_TxDMA.h ****     CyDmaSetNumDataElements(SPI_TxDMA_CHANNEL, descriptor, numDataElements);
 478:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 479:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 480:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 481:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 482:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_GetNumDataElements
 483:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 484:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 485:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 486:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Returns the number of data elements to be transferred. Only reflects the
 487:Generated_Source\PSoC4/SPI_TxDMA.h **** *  value written by SPI_TxDMA_SetNumDataElements() or SPI_TxDMA_SetConfiguration().
 488:Generated_Source\PSoC4/SPI_TxDMA.h **** *  This does not reflect how many elements have been transferred. For that
 489:Generated_Source\PSoC4/SPI_TxDMA.h **** *  information use the SPI_TxDMA_GetDescriptorStatus() function.
 490:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 491:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 492:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 493:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 494:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 495:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Number of data elements to transfer.
 496:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 497:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 498:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE int32 SPI_TxDMA_GetNumDataElements(int32 descriptor)
 499:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 500:Generated_Source\PSoC4/SPI_TxDMA.h ****     return (CyDmaGetNumDataElements(SPI_TxDMA_CHANNEL, descriptor));
 501:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 502:Generated_Source\PSoC4/SPI_TxDMA.h **** 
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 27


 503:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 504:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 505:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_SetSrcDstTransferWidth
 506:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 507:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 508:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 509:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Sets the width of the source and destination. The DMA can either read and
 510:Generated_Source\PSoC4/SPI_TxDMA.h **** *  write data from the source and destination at the size specified by
 511:Generated_Source\PSoC4/SPI_TxDMA.h **** *  SPI_TxDMA_SetDataElementSize() or by a word (4bytes). This also determines how
 512:Generated_Source\PSoC4/SPI_TxDMA.h **** *  many bytes the addresses are incremented if increment source and destination
 513:Generated_Source\PSoC4/SPI_TxDMA.h **** *  address are turned on.
 514:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 515:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 516:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor:    Descriptor (0 or 1) modified by this function.
 517:Generated_Source\PSoC4/SPI_TxDMA.h **** *  transferWidth: Specifies the source and destination widths. Refer to the API
 518:Generated_Source\PSoC4/SPI_TxDMA.h **** *                 bit field definitions in CyDMA_P4.h or the API description in
 519:Generated_Source\PSoC4/SPI_TxDMA.h **** *                 the DMA channel datasheet for the parameter options.
 520:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 521:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 522:Generated_Source\PSoC4/SPI_TxDMA.h **** *  None.
 523:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 524:Generated_Source\PSoC4/SPI_TxDMA.h **** * Side effect:
 525:Generated_Source\PSoC4/SPI_TxDMA.h **** *  This function should not be called when the specified descriptor is active
 526:Generated_Source\PSoC4/SPI_TxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 527:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 528:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 529:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE void SPI_TxDMA_SetSrcDstTransferWidth(int32 descriptor, uint32 transferWidth)
 530:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 531:Generated_Source\PSoC4/SPI_TxDMA.h ****     CyDmaSetSrcDstTransferWidth(SPI_TxDMA_CHANNEL, descriptor, transferWidth);
 532:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 533:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 534:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 535:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 536:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_GetSrcDstTransferWidth
 537:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 538:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 539:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 540:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Returns the width of the source and destination, as set by 
 541:Generated_Source\PSoC4/SPI_TxDMA.h **** *  SPI_TxDMA_SetSrcDstTransferWidth() or SPI_TxDMA_SetConfiguration().
 542:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 543:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 544:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 545:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 546:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 547:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Width of source and destination. Refer to the API bit field definitions in
 548:Generated_Source\PSoC4/SPI_TxDMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 549:Generated_Source\PSoC4/SPI_TxDMA.h **** *  information.
 550:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 551:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 552:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE uint32 SPI_TxDMA_GetSrcDstTransferWidth(int32 descriptor)
 553:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 554:Generated_Source\PSoC4/SPI_TxDMA.h ****     return (CyDmaGetSrcDstTransferWidth(SPI_TxDMA_CHANNEL, descriptor));
 555:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 556:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 557:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 558:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 559:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_SetAddressIncrement
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 28


 560:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 561:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 562:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 563:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Sets whether the source or destination addresses are incremented after the
 564:Generated_Source\PSoC4/SPI_TxDMA.h **** *  transfer of each data element. The amount that the source and destination
 565:Generated_Source\PSoC4/SPI_TxDMA.h **** *  address are incremented is determined by the SPI_TxDMA_SetSrcDstTransferWidth()
 566:Generated_Source\PSoC4/SPI_TxDMA.h **** *  function. The addresses will either be incremented by the data element size
 567:Generated_Source\PSoC4/SPI_TxDMA.h **** *  or by a word (4 bytes).
 568:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 569:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 570:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor:       Descriptor (0 or 1) modified by this function.
 571:Generated_Source\PSoC4/SPI_TxDMA.h **** *  addressIncrement: Address increment settings. Refer to the API bit field
 572:Generated_Source\PSoC4/SPI_TxDMA.h **** *                    definitions in CyDMA_P4.h or the API description in the DMA
 573:Generated_Source\PSoC4/SPI_TxDMA.h **** *                    channel datasheet for the parameter options.
 574:Generated_Source\PSoC4/SPI_TxDMA.h **** *    
 575:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 576:Generated_Source\PSoC4/SPI_TxDMA.h **** *  None.
 577:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 578:Generated_Source\PSoC4/SPI_TxDMA.h **** * Side effect:
 579:Generated_Source\PSoC4/SPI_TxDMA.h **** *  This function should not be called when the specified descriptor is active
 580:Generated_Source\PSoC4/SPI_TxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 581:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 582:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 583:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE void SPI_TxDMA_SetAddressIncrement(int32 descriptor, uint32 addressIncrement)
 584:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 585:Generated_Source\PSoC4/SPI_TxDMA.h ****     CyDmaSetAddressIncrement(SPI_TxDMA_CHANNEL, descriptor, addressIncrement);
 586:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 587:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 588:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 589:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 590:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_GetAddressIncrement
 591:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 592:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 593:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 594:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Returns address increment settings as set by SPI_TxDMA_SetAddressIncrement()
 595:Generated_Source\PSoC4/SPI_TxDMA.h **** *  or SPI_TxDMA_SetConfiguration().
 596:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 597:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 598:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 599:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 600:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 601:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Address increment settings. Refer to the API bit field definitions in
 602:Generated_Source\PSoC4/SPI_TxDMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 603:Generated_Source\PSoC4/SPI_TxDMA.h **** *  information.
 604:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 605:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 606:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE uint32 SPI_TxDMA_GetAddressIncrement(int32 descriptor)
 607:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 608:Generated_Source\PSoC4/SPI_TxDMA.h ****     return (CyDmaGetAddressIncrement(SPI_TxDMA_CHANNEL, descriptor));
 609:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 610:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 611:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 612:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 613:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_SetTriggerType
 614:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 615:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 616:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 29


 617:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Sets the type of input trigger for the DMA For level sensitive triggers sets
 618:Generated_Source\PSoC4/SPI_TxDMA.h **** *  how long the DMA waits for the trigger to go low (deactivate) before
 619:Generated_Source\PSoC4/SPI_TxDMA.h **** *  triggering the channel again.
 620:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 621:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 622:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor:  Descriptor (0 or 1) modified by this function.
 623:Generated_Source\PSoC4/SPI_TxDMA.h **** *  triggerType: Type of DMA trigger. Refer to the API bit field definitions in
 624:Generated_Source\PSoC4/SPI_TxDMA.h **** *               CyDMA_P4.h or the API description in the DMA channel datasheet
 625:Generated_Source\PSoC4/SPI_TxDMA.h **** *               for the parameter options.
 626:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 627:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 628:Generated_Source\PSoC4/SPI_TxDMA.h **** *  None.
 629:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 630:Generated_Source\PSoC4/SPI_TxDMA.h **** * Side effect:
 631:Generated_Source\PSoC4/SPI_TxDMA.h **** *  This function should not be called when the specified descriptor is active
 632:Generated_Source\PSoC4/SPI_TxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 633:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 634:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 635:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE void SPI_TxDMA_SetTriggerType(int32 descriptor, uint32 triggerType)
 636:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 637:Generated_Source\PSoC4/SPI_TxDMA.h ****     CyDmaSetTriggerType(SPI_TxDMA_CHANNEL, descriptor, triggerType);
 638:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 639:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 640:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 641:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 642:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_GetTriggerType
 643:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 644:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 645:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 646:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Returns the trigger deactivation settings as set by SPI_TxDMA_SetTriggerType()
 647:Generated_Source\PSoC4/SPI_TxDMA.h **** *  or SPI_TxDMA_SetConfiguration().
 648:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 649:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 650:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 651:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 652:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 653:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Trigger deactivation settings. Refer to the API bit field definitions in
 654:Generated_Source\PSoC4/SPI_TxDMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 655:Generated_Source\PSoC4/SPI_TxDMA.h **** *  information.
 656:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 657:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 658:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE uint32 SPI_TxDMA_GetTriggerType(int32 descriptor)
 659:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 660:Generated_Source\PSoC4/SPI_TxDMA.h ****     return (CyDmaGetTriggerType(SPI_TxDMA_CHANNEL, descriptor));
 661:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 662:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 663:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 664:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 665:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_SetTransferMode
 666:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 667:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 668:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 669:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Sets the DMA transfer mode. This determines how the DMA reacts to each trigger
 670:Generated_Source\PSoC4/SPI_TxDMA.h **** *  event.
 671:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 672:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 673:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor:   Descriptor (0 or 1) modified by this function.
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 30


 674:Generated_Source\PSoC4/SPI_TxDMA.h **** *  transferMode: Specifies the DMA transfer mode settings. Refer to the API bit
 675:Generated_Source\PSoC4/SPI_TxDMA.h **** *                field definitions in CyDMA_P4.h or the API description in the
 676:Generated_Source\PSoC4/SPI_TxDMA.h **** *                DMA channel datasheet for the parameter options.
 677:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 678:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 679:Generated_Source\PSoC4/SPI_TxDMA.h **** *  None.
 680:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 681:Generated_Source\PSoC4/SPI_TxDMA.h **** * Side effect:
 682:Generated_Source\PSoC4/SPI_TxDMA.h **** *  This function should not be called when the specified descriptor is active
 683:Generated_Source\PSoC4/SPI_TxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 684:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 685:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 686:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE void SPI_TxDMA_SetTransferMode(int32 descriptor, uint32 transferMode)
 687:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 688:Generated_Source\PSoC4/SPI_TxDMA.h ****     CyDmaSetTransferMode(SPI_TxDMA_CHANNEL, descriptor, transferMode);
 689:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 690:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 691:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 692:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 693:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_GetTransferMode
 694:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 695:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 696:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 697:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Returns the transfer mode for the specified descriptor as set by 
 698:Generated_Source\PSoC4/SPI_TxDMA.h **** *  SPI_TxDMA_SetTransferMode() or SPI_TxDMA_SetConfiguration().
 699:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 700:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 701:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 702:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 703:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 704:Generated_Source\PSoC4/SPI_TxDMA.h **** *  DMA transfer mode settings. Refer to the API bit field definitions in
 705:Generated_Source\PSoC4/SPI_TxDMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 706:Generated_Source\PSoC4/SPI_TxDMA.h **** *  information.
 707:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 708:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 709:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE uint32 SPI_TxDMA_GetTransferMode(int32 descriptor)
 710:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 711:Generated_Source\PSoC4/SPI_TxDMA.h ****     return (CyDmaGetTransferMode(SPI_TxDMA_CHANNEL, descriptor));
 712:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 713:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 714:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 715:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 716:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_SetPreemptable
 717:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 718:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 719:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 720:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Determines if the descriptor is preemptable.
 721:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 722:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 723:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor:  Descriptor (0 or 1) modified by this function.
 724:Generated_Source\PSoC4/SPI_TxDMA.h **** *  preemptable: Descriptor preemption settings. Refer to the API bit field
 725:Generated_Source\PSoC4/SPI_TxDMA.h **** *               definitions in CyDMA_P4.h or the API description in the DMA 
 726:Generated_Source\PSoC4/SPI_TxDMA.h **** *               channel datasheet for the parameter options.
 727:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 728:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 729:Generated_Source\PSoC4/SPI_TxDMA.h **** *  None.
 730:Generated_Source\PSoC4/SPI_TxDMA.h **** *
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 31


 731:Generated_Source\PSoC4/SPI_TxDMA.h **** * Side effect:
 732:Generated_Source\PSoC4/SPI_TxDMA.h **** *  This function should not be called when the specified descriptor is active
 733:Generated_Source\PSoC4/SPI_TxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 734:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 735:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 736:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE void SPI_TxDMA_SetPreemptable(int32 descriptor, uint32 preemptable)
 737:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 738:Generated_Source\PSoC4/SPI_TxDMA.h ****     CyDmaSetPreemptable(SPI_TxDMA_CHANNEL, descriptor, preemptable);
 739:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 740:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 741:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 742:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 743:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_GetPreemptable
 744:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 745:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 746:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 747:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Returns whether or not the descriptor is preemptable.
 748:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 749:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 750:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 751:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 752:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 753:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Descriptor preemption setting. Refer to the API bit field definitions in
 754:Generated_Source\PSoC4/SPI_TxDMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 755:Generated_Source\PSoC4/SPI_TxDMA.h **** *  information.
 756:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 757:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 758:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE uint32 SPI_TxDMA_GetPreemptable(int32 descriptor)
 759:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 760:Generated_Source\PSoC4/SPI_TxDMA.h ****     return (CyDmaGetPreemptable(SPI_TxDMA_CHANNEL, descriptor));
 761:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 762:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 763:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 764:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 765:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_SetPostCompletionActions
 766:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 767:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 768:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 769:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Determines what occurs after a descriptor completes.
 770:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 771:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 772:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 773:Generated_Source\PSoC4/SPI_TxDMA.h **** *  actions:    Specifies descriptor post completion actions. Refer to the API
 774:Generated_Source\PSoC4/SPI_TxDMA.h **** *              bit field definitions in CyDMA_P4.h or the API description in the
 775:Generated_Source\PSoC4/SPI_TxDMA.h **** *              DMA channel datasheet for the parameter options.
 776:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 777:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 778:Generated_Source\PSoC4/SPI_TxDMA.h **** *  None.  
 779:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 780:Generated_Source\PSoC4/SPI_TxDMA.h **** * Side effect:
 781:Generated_Source\PSoC4/SPI_TxDMA.h **** *  This function should not be called when the specified descriptor is active
 782:Generated_Source\PSoC4/SPI_TxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 783:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 784:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 785:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE void SPI_TxDMA_SetPostCompletionActions(int32 descriptor, uint32 actions)
 786:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 787:Generated_Source\PSoC4/SPI_TxDMA.h ****     CyDmaSetPostCompletionActions(SPI_TxDMA_CHANNEL, descriptor, actions);
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 32


 788:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 789:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 790:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 791:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 792:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_GetPostCompletionAction
 793:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 794:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 795:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 796:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Returns the post descriptor action settings as set by 
 797:Generated_Source\PSoC4/SPI_TxDMA.h **** *  SPI_TxDMA_SetPostCompletionActions() or SPI_TxDMA_SetConfiguration().
 798:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 799:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 800:Generated_Source\PSoC4/SPI_TxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 801:Generated_Source\PSoC4/SPI_TxDMA.h **** *                   
 802:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 803:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Post descriptor actions. Refer to the API bit field definitions in CyDMA_P4.h
 804:Generated_Source\PSoC4/SPI_TxDMA.h **** *  or the API description in the DMA channel datasheet for more information.
 805:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 806:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 807:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE uint32 SPI_TxDMA_GetPostCompletionAction(int32 descriptor)
 808:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 809:Generated_Source\PSoC4/SPI_TxDMA.h ****     return (CyDmaGetPostCompletionActions(SPI_TxDMA_CHANNEL, descriptor));
 810:Generated_Source\PSoC4/SPI_TxDMA.h **** }
 811:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 812:Generated_Source\PSoC4/SPI_TxDMA.h **** 
 813:Generated_Source\PSoC4/SPI_TxDMA.h **** /*******************************************************************************
 814:Generated_Source\PSoC4/SPI_TxDMA.h **** * Function Name: SPI_TxDMA_SetInterruptCallback
 815:Generated_Source\PSoC4/SPI_TxDMA.h **** ********************************************************************************
 816:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 817:Generated_Source\PSoC4/SPI_TxDMA.h **** * Summary:
 818:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Sets a user defined callback function to be called by the DMA interrupt. The
 819:Generated_Source\PSoC4/SPI_TxDMA.h **** *  function should contain code to process the interrupt request for the 
 820:Generated_Source\PSoC4/SPI_TxDMA.h **** *  associated DMA channel.
 821:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 822:Generated_Source\PSoC4/SPI_TxDMA.h **** * Parameters:
 823:Generated_Source\PSoC4/SPI_TxDMA.h **** *  callback: Pointer to the user defined callback function.
 824:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 825:Generated_Source\PSoC4/SPI_TxDMA.h **** * Return:
 826:Generated_Source\PSoC4/SPI_TxDMA.h **** *  Pointer to the function previously set for the specified channel. 
 827:Generated_Source\PSoC4/SPI_TxDMA.h **** *
 828:Generated_Source\PSoC4/SPI_TxDMA.h **** *******************************************************************************/
 829:Generated_Source\PSoC4/SPI_TxDMA.h **** static CY_INLINE cydma_callback_t SPI_TxDMA_SetInterruptCallback(cydma_callback_t callback)
 830:Generated_Source\PSoC4/SPI_TxDMA.h **** {
 831:Generated_Source\PSoC4/SPI_TxDMA.h ****     return (CyDmaSetInterruptCallback(SPI_TxDMA_CHANNEL, callback));
  62              		.loc 3 831 0
  63 001c 3049     		ldr	r1, .L2+20
  64 001e 0220     		movs	r0, #2
  65 0020 FFF7FEFF 		bl	CyDmaSetInterruptCallback
  66              	.LVL3:
  67              	.LBE27:
  68              	.LBE26:
  89:AudioOut.c    ****     SPI_RxDMA_SetInterruptCallback(SPI_RxDMA_Done_Interrupt);
  90:AudioOut.c    ****     SPI_TxDMA_SetInterruptCallback(SPI_TxDMA_Done_Interrupt);
  91:AudioOut.c    ****     isr_SPIDone_StartEx(SPIDone);
  69              		.loc 1 91 0
  70 0024 2F48     		ldr	r0, .L2+24
  71 0026 FFF7FEFF 		bl	isr_SPIDone_StartEx
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 33


  72              	.LVL4:
  92:AudioOut.c    ****     isr_SPIDone_Enable();
  73              		.loc 1 92 0
  74 002a FFF7FEFF 		bl	isr_SPIDone_Enable
  75              	.LVL5:
  93:AudioOut.c    ****     //I2STxDMA_Start(output_buffer, (void *)I2S_TX_FIFO_0_PTR);
  94:AudioOut.c    ****     
  95:AudioOut.c    ****     
  96:AudioOut.c    ****     I2STxDMA_Init();
  76              		.loc 1 96 0
  77 002e FFF7FEFF 		bl	I2STxDMA_Init
  78              	.LVL6:
  79              	.LBB28:
  80              	.LBB29:
  81              		.file 4 "Generated_Source\\PSoC4/I2STxDMA.h"
   1:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
   2:Generated_Source\PSoC4/I2STxDMA.h **** * File Name: I2STxDMA.h
   3:Generated_Source\PSoC4/I2STxDMA.h **** * Version 1.0
   4:Generated_Source\PSoC4/I2STxDMA.h **** *
   5:Generated_Source\PSoC4/I2STxDMA.h **** * Description:
   6:Generated_Source\PSoC4/I2STxDMA.h **** *  This file provides DMA channel defines and API function definitions.
   7:Generated_Source\PSoC4/I2STxDMA.h **** *
   8:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
   9:Generated_Source\PSoC4/I2STxDMA.h **** * Copyright 2015, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC4/I2STxDMA.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC4/I2STxDMA.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC4/I2STxDMA.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
  14:Generated_Source\PSoC4/I2STxDMA.h **** 
  15:Generated_Source\PSoC4/I2STxDMA.h **** #ifndef CY_DMA_CHANNEL_I2STxDMA_H
  16:Generated_Source\PSoC4/I2STxDMA.h **** #define CY_DMA_CHANNEL_I2STxDMA_H
  17:Generated_Source\PSoC4/I2STxDMA.h **** 
  18:Generated_Source\PSoC4/I2STxDMA.h **** #include "CyDMA.h"
  19:Generated_Source\PSoC4/I2STxDMA.h **** 
  20:Generated_Source\PSoC4/I2STxDMA.h ****     
  21:Generated_Source\PSoC4/I2STxDMA.h **** /***************************************
  22:Generated_Source\PSoC4/I2STxDMA.h **** *   Conditional Compilation Parameters
  23:Generated_Source\PSoC4/I2STxDMA.h **** ***************************************/
  24:Generated_Source\PSoC4/I2STxDMA.h **** 
  25:Generated_Source\PSoC4/I2STxDMA.h **** #define I2STxDMA_CHANNEL           (I2STxDMA__CHANNEL_NUMBER)
  26:Generated_Source\PSoC4/I2STxDMA.h **** #define I2STxDMA_CHANNEL_MASK      ((uint32)(1UL << I2STxDMA_CHANNEL))
  27:Generated_Source\PSoC4/I2STxDMA.h **** 
  28:Generated_Source\PSoC4/I2STxDMA.h **** 
  29:Generated_Source\PSoC4/I2STxDMA.h **** /***************************************
  30:Generated_Source\PSoC4/I2STxDMA.h **** *        Function Prototypes
  31:Generated_Source\PSoC4/I2STxDMA.h **** ***************************************/
  32:Generated_Source\PSoC4/I2STxDMA.h **** 
  33:Generated_Source\PSoC4/I2STxDMA.h **** /* Functions specific to this DMA channel */
  34:Generated_Source\PSoC4/I2STxDMA.h **** void I2STxDMA_Init(void);
  35:Generated_Source\PSoC4/I2STxDMA.h **** void I2STxDMA_Start(void * srcAddress, void * dstAddress);
  36:Generated_Source\PSoC4/I2STxDMA.h **** 
  37:Generated_Source\PSoC4/I2STxDMA.h **** /* Inline functions that call global API functions */
  38:Generated_Source\PSoC4/I2STxDMA.h **** static void   I2STxDMA_ChEnable(void);
  39:Generated_Source\PSoC4/I2STxDMA.h **** static void   I2STxDMA_ChDisable(void);
  40:Generated_Source\PSoC4/I2STxDMA.h **** static void   I2STxDMA_Trigger(void);
  41:Generated_Source\PSoC4/I2STxDMA.h **** static void   I2STxDMA_SetPriority(int32 priority);
  42:Generated_Source\PSoC4/I2STxDMA.h **** static int32  I2STxDMA_GetPriority(void);
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 34


  43:Generated_Source\PSoC4/I2STxDMA.h **** static void   I2STxDMA_SetNextDescriptor(int32 descriptor);
  44:Generated_Source\PSoC4/I2STxDMA.h **** static int32  I2STxDMA_GetNextDescriptor(void);
  45:Generated_Source\PSoC4/I2STxDMA.h **** static void   I2STxDMA_SetConfiguration(int32 descriptor, const cydma_init_struct * config);
  46:Generated_Source\PSoC4/I2STxDMA.h **** static void   I2STxDMA_ValidateDescriptor(int32 descriptor);
  47:Generated_Source\PSoC4/I2STxDMA.h **** static uint32 I2STxDMA_GetDescriptorStatus(int32 descriptor);
  48:Generated_Source\PSoC4/I2STxDMA.h **** static void   I2STxDMA_SetSrcAddress(int32 descriptor, void * srcAddress);
  49:Generated_Source\PSoC4/I2STxDMA.h **** static void * I2STxDMA_GetSrcAddress(int32 descriptor);
  50:Generated_Source\PSoC4/I2STxDMA.h **** static void   I2STxDMA_SetDstAddress(int32 descriptor, void * dstAddress);
  51:Generated_Source\PSoC4/I2STxDMA.h **** static void * I2STxDMA_GetDstAddress(int32 descriptor);
  52:Generated_Source\PSoC4/I2STxDMA.h **** static void   I2STxDMA_SetDataElementSize(int32 descriptor, uint32 dataElementSize);
  53:Generated_Source\PSoC4/I2STxDMA.h **** static uint32 I2STxDMA_GetDataElementSize(int32 descriptor);
  54:Generated_Source\PSoC4/I2STxDMA.h **** static void   I2STxDMA_SetNumDataElements(int32 descriptor, int32 numDataElements);
  55:Generated_Source\PSoC4/I2STxDMA.h **** static int32  I2STxDMA_GetNumDataElements(int32 descriptor);
  56:Generated_Source\PSoC4/I2STxDMA.h **** static void   I2STxDMA_SetSrcDstTransferWidth(int32 descriptor, uint32 transferWidth);
  57:Generated_Source\PSoC4/I2STxDMA.h **** static uint32 I2STxDMA_GetSrcDstTransferWidth(int32 descriptor);
  58:Generated_Source\PSoC4/I2STxDMA.h **** static void   I2STxDMA_SetAddressIncrement(int32 descriptor, uint32 addressIncrement);
  59:Generated_Source\PSoC4/I2STxDMA.h **** static uint32 I2STxDMA_GetAddressIncrement(int32 descriptor);
  60:Generated_Source\PSoC4/I2STxDMA.h **** static void   I2STxDMA_SetTriggerType(int32 descriptor, uint32 triggerType);
  61:Generated_Source\PSoC4/I2STxDMA.h **** static uint32 I2STxDMA_GetTriggerType(int32 descriptor);
  62:Generated_Source\PSoC4/I2STxDMA.h **** static void   I2STxDMA_SetTransferMode(int32 descriptor, uint32 transferMode);
  63:Generated_Source\PSoC4/I2STxDMA.h **** static uint32 I2STxDMA_GetTransferMode(int32 descriptor);
  64:Generated_Source\PSoC4/I2STxDMA.h **** static void   I2STxDMA_SetPreemptable(int32 descriptor, uint32 preemptable);
  65:Generated_Source\PSoC4/I2STxDMA.h **** static uint32 I2STxDMA_GetPreemptable(int32 descriptor);
  66:Generated_Source\PSoC4/I2STxDMA.h **** static void   I2STxDMA_SetPostCompletionActions(int32 descriptor, uint32 actions);
  67:Generated_Source\PSoC4/I2STxDMA.h **** static uint32 I2STxDMA_GetPostCompletionAction(int32 descriptor);
  68:Generated_Source\PSoC4/I2STxDMA.h **** static cydma_callback_t I2STxDMA_SetInterruptCallback(cydma_callback_t callback);
  69:Generated_Source\PSoC4/I2STxDMA.h **** static cydma_callback_t I2STxDMA_GetInterruptCallback(void);
  70:Generated_Source\PSoC4/I2STxDMA.h **** 
  71:Generated_Source\PSoC4/I2STxDMA.h **** 
  72:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
  73:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_ChEnable
  74:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
  75:Generated_Source\PSoC4/I2STxDMA.h **** *
  76:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
  77:Generated_Source\PSoC4/I2STxDMA.h **** *  Enables the DMA channel. It is not necessary to call I2STxDMA_ChEnable()
  78:Generated_Source\PSoC4/I2STxDMA.h **** *  because the I2STxDMA_Start() API calls this function, which is the
  79:Generated_Source\PSoC4/I2STxDMA.h **** *  preferred method to begin the component operation.
  80:Generated_Source\PSoC4/I2STxDMA.h **** *
  81:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
  82:Generated_Source\PSoC4/I2STxDMA.h **** *  None.
  83:Generated_Source\PSoC4/I2STxDMA.h **** *                   
  84:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
  85:Generated_Source\PSoC4/I2STxDMA.h **** *  None.
  86:Generated_Source\PSoC4/I2STxDMA.h **** *
  87:Generated_Source\PSoC4/I2STxDMA.h **** * Side effect:
  88:Generated_Source\PSoC4/I2STxDMA.h **** *  If this function is called before I2STxDMA_Start(), or I2STxDMA_Init()
  89:Generated_Source\PSoC4/I2STxDMA.h **** *  or I2STxDMA_SetConfiguration(), and I2STxDMA_SetSrcAddress()
  90:Generated_Source\PSoC4/I2STxDMA.h **** *  and I2STxDMA_SetDstAddress the operation of the DMA is 
  91:Generated_Source\PSoC4/I2STxDMA.h **** *  undefined and could result in system data corruption. 
  92:Generated_Source\PSoC4/I2STxDMA.h **** *
  93:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
  94:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE void I2STxDMA_ChEnable(void)
  95:Generated_Source\PSoC4/I2STxDMA.h **** {
  96:Generated_Source\PSoC4/I2STxDMA.h ****     CyDmaChEnable(I2STxDMA_CHANNEL);
  97:Generated_Source\PSoC4/I2STxDMA.h **** }
  98:Generated_Source\PSoC4/I2STxDMA.h **** 
  99:Generated_Source\PSoC4/I2STxDMA.h **** 
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 35


 100:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 101:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_ChDisable
 102:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 103:Generated_Source\PSoC4/I2STxDMA.h **** *
 104:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 105:Generated_Source\PSoC4/I2STxDMA.h **** *  Disables the DMA channel.
 106:Generated_Source\PSoC4/I2STxDMA.h **** *
 107:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 108:Generated_Source\PSoC4/I2STxDMA.h **** *  None.
 109:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 110:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 111:Generated_Source\PSoC4/I2STxDMA.h **** *  None.
 112:Generated_Source\PSoC4/I2STxDMA.h **** *
 113:Generated_Source\PSoC4/I2STxDMA.h **** * Side effect:
 114:Generated_Source\PSoC4/I2STxDMA.h **** *  If this function is called during a DMA transfer the transfer is aborted. 
 115:Generated_Source\PSoC4/I2STxDMA.h **** *
 116:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 117:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE void I2STxDMA_ChDisable(void)
 118:Generated_Source\PSoC4/I2STxDMA.h **** {
 119:Generated_Source\PSoC4/I2STxDMA.h ****     CyDmaChDisable(I2STxDMA_CHANNEL);
 120:Generated_Source\PSoC4/I2STxDMA.h **** }
 121:Generated_Source\PSoC4/I2STxDMA.h **** 
 122:Generated_Source\PSoC4/I2STxDMA.h **** 
 123:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 124:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_Trigger
 125:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 126:Generated_Source\PSoC4/I2STxDMA.h **** *
 127:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 128:Generated_Source\PSoC4/I2STxDMA.h **** *  Triggers the DMA channel, this is useful only for software triggers. This is
 129:Generated_Source\PSoC4/I2STxDMA.h **** *  not needed when hardware triggers are used.
 130:Generated_Source\PSoC4/I2STxDMA.h **** *
 131:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 132:Generated_Source\PSoC4/I2STxDMA.h **** *  None.
 133:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 134:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 135:Generated_Source\PSoC4/I2STxDMA.h **** *  None. 
 136:Generated_Source\PSoC4/I2STxDMA.h **** *
 137:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 138:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE void I2STxDMA_Trigger(void)
 139:Generated_Source\PSoC4/I2STxDMA.h **** {
 140:Generated_Source\PSoC4/I2STxDMA.h ****     CyDmaTrigger(I2STxDMA_CHANNEL);
 141:Generated_Source\PSoC4/I2STxDMA.h **** }
 142:Generated_Source\PSoC4/I2STxDMA.h **** 
 143:Generated_Source\PSoC4/I2STxDMA.h **** 
 144:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 145:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_SetPriority
 146:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 147:Generated_Source\PSoC4/I2STxDMA.h **** *
 148:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 149:Generated_Source\PSoC4/I2STxDMA.h **** *  Sets the priority for the channel.
 150:Generated_Source\PSoC4/I2STxDMA.h **** *
 151:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 152:Generated_Source\PSoC4/I2STxDMA.h **** *  priority: Priority for channel. Priority can be 0,1,2, or 3.
 153:Generated_Source\PSoC4/I2STxDMA.h **** *            0 is the highest priority.
 154:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 155:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 156:Generated_Source\PSoC4/I2STxDMA.h **** *  None.
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 36


 157:Generated_Source\PSoC4/I2STxDMA.h **** *
 158:Generated_Source\PSoC4/I2STxDMA.h **** * Side effect:
 159:Generated_Source\PSoC4/I2STxDMA.h **** *  This function should not be called while the channel is enabled.
 160:Generated_Source\PSoC4/I2STxDMA.h **** *
 161:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 162:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE void I2STxDMA_SetPriority(int32 priority)
 163:Generated_Source\PSoC4/I2STxDMA.h **** {
 164:Generated_Source\PSoC4/I2STxDMA.h ****     CyDmaSetPriority(I2STxDMA_CHANNEL, priority);
 165:Generated_Source\PSoC4/I2STxDMA.h **** }
 166:Generated_Source\PSoC4/I2STxDMA.h **** 
 167:Generated_Source\PSoC4/I2STxDMA.h **** 
 168:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 169:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_GetPriority
 170:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 171:Generated_Source\PSoC4/I2STxDMA.h **** *
 172:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 173:Generated_Source\PSoC4/I2STxDMA.h **** *  Gets the priority for the channel.
 174:Generated_Source\PSoC4/I2STxDMA.h **** *
 175:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 176:Generated_Source\PSoC4/I2STxDMA.h **** *  None.
 177:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 178:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 179:Generated_Source\PSoC4/I2STxDMA.h **** *  Priority for channel. Priority can be 0,1,2, or 3. 0 is the highest priority.
 180:Generated_Source\PSoC4/I2STxDMA.h **** *
 181:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 182:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE int32 I2STxDMA_GetPriority(void)
 183:Generated_Source\PSoC4/I2STxDMA.h **** {
 184:Generated_Source\PSoC4/I2STxDMA.h ****     return (CyDmaGetPriority(I2STxDMA_CHANNEL));
 185:Generated_Source\PSoC4/I2STxDMA.h **** }
 186:Generated_Source\PSoC4/I2STxDMA.h **** 
 187:Generated_Source\PSoC4/I2STxDMA.h **** 
 188:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 189:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_SetNextDescriptor
 190:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 191:Generated_Source\PSoC4/I2STxDMA.h **** *
 192:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 193:Generated_Source\PSoC4/I2STxDMA.h **** *  Sets the descriptor that should be run the next time the channel is
 194:Generated_Source\PSoC4/I2STxDMA.h **** *  triggered.
 195:Generated_Source\PSoC4/I2STxDMA.h **** *
 196:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 197:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor: Next Descriptor to run (0 or 1).
 198:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 199:Generated_Source\PSoC4/I2STxDMA.h **** * Side effect:
 200:Generated_Source\PSoC4/I2STxDMA.h **** *  This function should not be called while the channel is enabled.
 201:Generated_Source\PSoC4/I2STxDMA.h **** *
 202:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 203:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE void I2STxDMA_SetNextDescriptor(int32 descriptor)
 204:Generated_Source\PSoC4/I2STxDMA.h **** {
 205:Generated_Source\PSoC4/I2STxDMA.h ****     CyDmaSetNextDescriptor(I2STxDMA_CHANNEL, descriptor);
 206:Generated_Source\PSoC4/I2STxDMA.h **** }
 207:Generated_Source\PSoC4/I2STxDMA.h **** 
 208:Generated_Source\PSoC4/I2STxDMA.h **** 
 209:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 210:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_GetNextDescriptor
 211:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 212:Generated_Source\PSoC4/I2STxDMA.h **** *
 213:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 37


 214:Generated_Source\PSoC4/I2STxDMA.h **** *  Returns the next descriptor that should be run, as set by 
 215:Generated_Source\PSoC4/I2STxDMA.h **** *  I2STxDMA_SetNextDescriptor().
 216:Generated_Source\PSoC4/I2STxDMA.h **** *
 217:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 218:Generated_Source\PSoC4/I2STxDMA.h **** *  None.
 219:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 220:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 221:Generated_Source\PSoC4/I2STxDMA.h **** *  Next Descriptor to run (0 or 1).
 222:Generated_Source\PSoC4/I2STxDMA.h **** *
 223:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 224:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE int32 I2STxDMA_GetNextDescriptor(void)
 225:Generated_Source\PSoC4/I2STxDMA.h **** {
 226:Generated_Source\PSoC4/I2STxDMA.h ****     return (CyDmaGetNextDescriptor(I2STxDMA_CHANNEL));
 227:Generated_Source\PSoC4/I2STxDMA.h **** }
 228:Generated_Source\PSoC4/I2STxDMA.h **** 
 229:Generated_Source\PSoC4/I2STxDMA.h **** 
 230:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 231:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_SetConfiguration
 232:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 233:Generated_Source\PSoC4/I2STxDMA.h **** *
 234:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 235:Generated_Source\PSoC4/I2STxDMA.h **** *  Sets configuration information for the specified descriptor.
 236:Generated_Source\PSoC4/I2STxDMA.h **** *
 237:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 238:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 239:Generated_Source\PSoC4/I2STxDMA.h **** *  config: Pointer to a configuration structure. Refer to cydma_init_struct
 240:Generated_Source\PSoC4/I2STxDMA.h **** *          structure definition in CyDMA_P4.h or the component datasheet.
 241:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 242:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 243:Generated_Source\PSoC4/I2STxDMA.h **** *  None.
 244:Generated_Source\PSoC4/I2STxDMA.h **** *
 245:Generated_Source\PSoC4/I2STxDMA.h **** * Side effect:
 246:Generated_Source\PSoC4/I2STxDMA.h **** *  The status register associated with the specified descriptor is reset to
 247:Generated_Source\PSoC4/I2STxDMA.h **** *  zero after this function call. This function also validates the descriptor.
 248:Generated_Source\PSoC4/I2STxDMA.h **** *  This function should not be called while the descriptor is active.
 249:Generated_Source\PSoC4/I2STxDMA.h **** *  This can be checked by calling CyDmaGetStatus().
 250:Generated_Source\PSoC4/I2STxDMA.h **** *
 251:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 252:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE void I2STxDMA_SetConfiguration(int32 descriptor, const cydma_init_struct * config)
 253:Generated_Source\PSoC4/I2STxDMA.h **** {
 254:Generated_Source\PSoC4/I2STxDMA.h ****     CyDmaSetConfiguration(I2STxDMA_CHANNEL, descriptor, config);
 255:Generated_Source\PSoC4/I2STxDMA.h **** }
 256:Generated_Source\PSoC4/I2STxDMA.h **** 
 257:Generated_Source\PSoC4/I2STxDMA.h **** 
 258:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 259:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_ValidateDescriptor
 260:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 261:Generated_Source\PSoC4/I2STxDMA.h **** *
 262:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 263:Generated_Source\PSoC4/I2STxDMA.h **** *  Validates the specified descriptor after it has been invalidated.
 264:Generated_Source\PSoC4/I2STxDMA.h **** *
 265:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 266:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 267:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 268:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 269:Generated_Source\PSoC4/I2STxDMA.h **** *  None. 
 270:Generated_Source\PSoC4/I2STxDMA.h **** *
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 38


 271:Generated_Source\PSoC4/I2STxDMA.h **** * Side effect:
 272:Generated_Source\PSoC4/I2STxDMA.h **** *  The status register associated with the specified descriptor is reset to
 273:Generated_Source\PSoC4/I2STxDMA.h **** *  zero after this function call. This function should not be called while the
 274:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor is active. This can be checked by calling CyDmaGetStatus().
 275:Generated_Source\PSoC4/I2STxDMA.h **** *
 276:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 277:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE void I2STxDMA_ValidateDescriptor(int32 descriptor)
 278:Generated_Source\PSoC4/I2STxDMA.h **** {
 279:Generated_Source\PSoC4/I2STxDMA.h ****     CyDmaValidateDescriptor(I2STxDMA_CHANNEL, descriptor);
 280:Generated_Source\PSoC4/I2STxDMA.h **** }
 281:Generated_Source\PSoC4/I2STxDMA.h **** 
 282:Generated_Source\PSoC4/I2STxDMA.h **** 
 283:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 284:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_GetDescriptorStatus
 285:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 286:Generated_Source\PSoC4/I2STxDMA.h **** *
 287:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 288:Generated_Source\PSoC4/I2STxDMA.h **** *  Returns the status of the specified descriptor.
 289:Generated_Source\PSoC4/I2STxDMA.h **** *
 290:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 291:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 292:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 293:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 294:Generated_Source\PSoC4/I2STxDMA.h **** *  Returns the contents of the specified descriptors status register. Refer to 
 295:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor status register bit definitions in CyDMA_P4.h or the API
 296:Generated_Source\PSoC4/I2STxDMA.h **** *  description in the DMA channel datasheet for more information.
 297:Generated_Source\PSoC4/I2STxDMA.h **** *
 298:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 299:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE uint32 I2STxDMA_GetDescriptorStatus(int32 descriptor)
 300:Generated_Source\PSoC4/I2STxDMA.h **** {
 301:Generated_Source\PSoC4/I2STxDMA.h ****     return (CyDmaGetDescriptorStatus(I2STxDMA_CHANNEL, descriptor));
 302:Generated_Source\PSoC4/I2STxDMA.h **** }
 303:Generated_Source\PSoC4/I2STxDMA.h **** 
 304:Generated_Source\PSoC4/I2STxDMA.h **** 
 305:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 306:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_SetSrcAddress
 307:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 308:Generated_Source\PSoC4/I2STxDMA.h **** *
 309:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 310:Generated_Source\PSoC4/I2STxDMA.h **** *  Configures the source address for the specified descriptor.
 311:Generated_Source\PSoC4/I2STxDMA.h **** *
 312:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 313:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 314:Generated_Source\PSoC4/I2STxDMA.h **** *  srcAddress: Address of DMA transfer source.
 315:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 316:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 317:Generated_Source\PSoC4/I2STxDMA.h **** *  None.
 318:Generated_Source\PSoC4/I2STxDMA.h **** *
 319:Generated_Source\PSoC4/I2STxDMA.h **** * Side effect:
 320:Generated_Source\PSoC4/I2STxDMA.h **** *  This function should not be called when the specified descriptor is active
 321:Generated_Source\PSoC4/I2STxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 322:Generated_Source\PSoC4/I2STxDMA.h **** *
 323:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 324:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE void I2STxDMA_SetSrcAddress(int32 descriptor, void * srcAddress)
 325:Generated_Source\PSoC4/I2STxDMA.h **** {
 326:Generated_Source\PSoC4/I2STxDMA.h ****     CyDmaSetSrcAddress(I2STxDMA_CHANNEL, descriptor, srcAddress);
 327:Generated_Source\PSoC4/I2STxDMA.h **** }
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 39


 328:Generated_Source\PSoC4/I2STxDMA.h **** 
 329:Generated_Source\PSoC4/I2STxDMA.h **** 
 330:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 331:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_GetSrcAddress
 332:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 333:Generated_Source\PSoC4/I2STxDMA.h **** *
 334:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 335:Generated_Source\PSoC4/I2STxDMA.h **** *  Returns the source address for the specified descriptor, set by either 
 336:Generated_Source\PSoC4/I2STxDMA.h **** *  I2STxDMA_Start() or I2STxDMA_SetSrcAddress().
 337:Generated_Source\PSoC4/I2STxDMA.h **** *
 338:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 339:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor: Specifies descriptor (0 or 1) used by this function.
 340:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 341:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 342:Generated_Source\PSoC4/I2STxDMA.h **** *  Source address written to specified descriptor.
 343:Generated_Source\PSoC4/I2STxDMA.h **** *
 344:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 345:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE void * I2STxDMA_GetSrcAddress(int32 descriptor)
 346:Generated_Source\PSoC4/I2STxDMA.h **** {
 347:Generated_Source\PSoC4/I2STxDMA.h ****     return (CyDmaGetSrcAddress(I2STxDMA_CHANNEL, descriptor));
 348:Generated_Source\PSoC4/I2STxDMA.h **** }
 349:Generated_Source\PSoC4/I2STxDMA.h **** 
 350:Generated_Source\PSoC4/I2STxDMA.h **** 
 351:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 352:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_SetDstAddress
 353:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 354:Generated_Source\PSoC4/I2STxDMA.h **** *
 355:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 356:Generated_Source\PSoC4/I2STxDMA.h **** *  Configures the destination address for the specified descriptor.
 357:Generated_Source\PSoC4/I2STxDMA.h **** *
 358:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 359:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 360:Generated_Source\PSoC4/I2STxDMA.h **** *  dstAddress: Address of DMA transfer destination.
 361:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 362:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 363:Generated_Source\PSoC4/I2STxDMA.h **** *  None.
 364:Generated_Source\PSoC4/I2STxDMA.h **** *
 365:Generated_Source\PSoC4/I2STxDMA.h **** * Side effect:
 366:Generated_Source\PSoC4/I2STxDMA.h **** *  This function should not be called when the specified descriptor is active
 367:Generated_Source\PSoC4/I2STxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 368:Generated_Source\PSoC4/I2STxDMA.h **** *
 369:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 370:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE void I2STxDMA_SetDstAddress(int32 descriptor, void * dstAddress)
 371:Generated_Source\PSoC4/I2STxDMA.h **** {
 372:Generated_Source\PSoC4/I2STxDMA.h ****     CyDmaSetDstAddress(I2STxDMA_CHANNEL, descriptor, dstAddress);
 373:Generated_Source\PSoC4/I2STxDMA.h **** }
 374:Generated_Source\PSoC4/I2STxDMA.h **** 
 375:Generated_Source\PSoC4/I2STxDMA.h **** 
 376:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 377:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_GetDstAddress
 378:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 379:Generated_Source\PSoC4/I2STxDMA.h **** *
 380:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 381:Generated_Source\PSoC4/I2STxDMA.h **** *  Returns the destination address for the specified descriptor, set by either 
 382:Generated_Source\PSoC4/I2STxDMA.h **** *  I2STxDMA_Start() or I2STxDMA_SetDstAddress().
 383:Generated_Source\PSoC4/I2STxDMA.h **** *
 384:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 40


 385:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor: Specifies descriptor (0 or 1) used by this function.
 386:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 387:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 388:Generated_Source\PSoC4/I2STxDMA.h **** *  Destination address written to specified descriptor.
 389:Generated_Source\PSoC4/I2STxDMA.h **** *
 390:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 391:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE void * I2STxDMA_GetDstAddress(int32 descriptor)
 392:Generated_Source\PSoC4/I2STxDMA.h **** {
 393:Generated_Source\PSoC4/I2STxDMA.h ****     return (CyDmaGetDstAddress(I2STxDMA_CHANNEL, descriptor));
 394:Generated_Source\PSoC4/I2STxDMA.h **** }
 395:Generated_Source\PSoC4/I2STxDMA.h **** 
 396:Generated_Source\PSoC4/I2STxDMA.h **** 
 397:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 398:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_SetDataElementSize
 399:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 400:Generated_Source\PSoC4/I2STxDMA.h **** *
 401:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 402:Generated_Source\PSoC4/I2STxDMA.h **** *  Sets the data element size for the specified descriptor.
 403:Generated_Source\PSoC4/I2STxDMA.h **** *
 404:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 405:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor:      Descriptor (0 or 1) modified by this function.
 406:Generated_Source\PSoC4/I2STxDMA.h **** *  dataElementSize: Specifies the size of the data element. The DMA transfer
 407:Generated_Source\PSoC4/I2STxDMA.h **** *                   engine transfers one data element at a time. How these
 408:Generated_Source\PSoC4/I2STxDMA.h **** *                   transfers occur is controlled by the transfer mode.
 409:Generated_Source\PSoC4/I2STxDMA.h **** *                   Refer to the API bit field definitions in CyDMA_P4.h or API
 410:Generated_Source\PSoC4/I2STxDMA.h **** *                   description in the DMA channel datasheet for the parameter
 411:Generated_Source\PSoC4/I2STxDMA.h **** *                   options.
 412:Generated_Source\PSoC4/I2STxDMA.h **** *
 413:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 414:Generated_Source\PSoC4/I2STxDMA.h **** *  None.
 415:Generated_Source\PSoC4/I2STxDMA.h **** *
 416:Generated_Source\PSoC4/I2STxDMA.h **** * Side effect:
 417:Generated_Source\PSoC4/I2STxDMA.h **** *  This function should not be called when the specified descriptor is active
 418:Generated_Source\PSoC4/I2STxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 419:Generated_Source\PSoC4/I2STxDMA.h **** *
 420:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 421:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE void I2STxDMA_SetDataElementSize(int32 descriptor, uint32 dataElementSize)
 422:Generated_Source\PSoC4/I2STxDMA.h **** {
 423:Generated_Source\PSoC4/I2STxDMA.h ****     CyDmaSetDataElementSize(I2STxDMA_CHANNEL, descriptor, dataElementSize);
 424:Generated_Source\PSoC4/I2STxDMA.h **** }
 425:Generated_Source\PSoC4/I2STxDMA.h **** 
 426:Generated_Source\PSoC4/I2STxDMA.h **** 
 427:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 428:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_GetDataElementSize
 429:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 430:Generated_Source\PSoC4/I2STxDMA.h **** *
 431:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 432:Generated_Source\PSoC4/I2STxDMA.h **** *  Returns the data element size configured for the specified descriptor, set by
 433:Generated_Source\PSoC4/I2STxDMA.h **** *  I2STxDMA_SetDataElementSize() or I2STxDMA_SetConfiguration().
 434:Generated_Source\PSoC4/I2STxDMA.h **** *
 435:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 436:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 437:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 438:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 439:Generated_Source\PSoC4/I2STxDMA.h **** *  The size of the data element. The DMA transfer engine transfers one data
 440:Generated_Source\PSoC4/I2STxDMA.h **** *  element at a time. How these transfers occur is controlled by the transfer
 441:Generated_Source\PSoC4/I2STxDMA.h **** *  mode. Refer to the API bit field definitions in CyDMA_P4.h or the API 
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 41


 442:Generated_Source\PSoC4/I2STxDMA.h **** *  description in the DMA channel datasheet for more information.
 443:Generated_Source\PSoC4/I2STxDMA.h **** *
 444:Generated_Source\PSoC4/I2STxDMA.h **** * Note:
 445:Generated_Source\PSoC4/I2STxDMA.h **** *  The size of the source and destination can be configured to use the
 446:Generated_Source\PSoC4/I2STxDMA.h **** *  data element size, or a Word, this is set in I2STxDMA_SetSrcDstTransferWidth().
 447:Generated_Source\PSoC4/I2STxDMA.h **** *
 448:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 449:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE uint32 I2STxDMA_GetDataElementSize(int32 descriptor)
 450:Generated_Source\PSoC4/I2STxDMA.h **** {
 451:Generated_Source\PSoC4/I2STxDMA.h ****     return (CyDmaGetDataElementSize(I2STxDMA_CHANNEL, descriptor));
 452:Generated_Source\PSoC4/I2STxDMA.h **** }
 453:Generated_Source\PSoC4/I2STxDMA.h **** 
 454:Generated_Source\PSoC4/I2STxDMA.h **** 
 455:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 456:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_SetNumDataElements
 457:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 458:Generated_Source\PSoC4/I2STxDMA.h **** *
 459:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 460:Generated_Source\PSoC4/I2STxDMA.h **** *  Sets the number of data elements to transfer for specified descriptor.
 461:Generated_Source\PSoC4/I2STxDMA.h **** *
 462:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 463:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor:      Descriptor (0 or 1) modified by this function.
 464:Generated_Source\PSoC4/I2STxDMA.h **** *  numDataElements: Total number of data elements this descriptor transfers.
 465:Generated_Source\PSoC4/I2STxDMA.h **** *                   Valid ranges are 1 to 65536.
 466:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 467:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 468:Generated_Source\PSoC4/I2STxDMA.h **** *  None.
 469:Generated_Source\PSoC4/I2STxDMA.h **** *
 470:Generated_Source\PSoC4/I2STxDMA.h **** * Side effect:
 471:Generated_Source\PSoC4/I2STxDMA.h **** *  This function should not be called when the specified descriptor is active
 472:Generated_Source\PSoC4/I2STxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 473:Generated_Source\PSoC4/I2STxDMA.h **** *
 474:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 475:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE void I2STxDMA_SetNumDataElements(int32 descriptor, int32 numDataElements)
 476:Generated_Source\PSoC4/I2STxDMA.h **** {
 477:Generated_Source\PSoC4/I2STxDMA.h ****     CyDmaSetNumDataElements(I2STxDMA_CHANNEL, descriptor, numDataElements);
  82              		.loc 4 477 0
  83 0032 8025     		movs	r5, #128
  84 0034 6D01     		lsls	r5, r5, #5
  85 0036 2A00     		movs	r2, r5
  86 0038 0021     		movs	r1, #0
  87 003a 0120     		movs	r0, #1
  88 003c FFF7FEFF 		bl	CyDmaSetNumDataElements
  89              	.LVL7:
  90              	.LBE29:
  91              	.LBE28:
  92              	.LBB30:
  93              	.LBB31:
  94 0040 2A00     		movs	r2, r5
  95 0042 0121     		movs	r1, #1
  96 0044 0120     		movs	r0, #1
  97 0046 FFF7FEFF 		bl	CyDmaSetNumDataElements
  98              	.LVL8:
  99              	.LBE31:
 100              	.LBE30:
 101              	.LBB32:
 102              	.LBB33:
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 42


 326:Generated_Source\PSoC4/I2STxDMA.h **** }
 103              		.loc 4 326 0
 104 004a 2200     		movs	r2, r4
 105 004c 0021     		movs	r1, #0
 106 004e 0120     		movs	r0, #1
 107 0050 FFF7FEFF 		bl	CyDmaSetSrcAddress
 108              	.LVL9:
 109              	.LBE33:
 110              	.LBE32:
 111              	.LBB34:
 112              	.LBB35:
 113 0054 244A     		ldr	r2, .L2+28
 114 0056 0021     		movs	r1, #0
 115 0058 0120     		movs	r0, #1
 116 005a FFF7FEFF 		bl	CyDmaSetSrcAddress
 117              	.LVL10:
 118              	.LBE35:
 119              	.LBE34:
 120              	.LBB36:
 121              	.LBB37:
 372:Generated_Source\PSoC4/I2STxDMA.h **** }
 122              		.loc 4 372 0
 123 005e 234A     		ldr	r2, .L2+32
 124 0060 0021     		movs	r1, #0
 125 0062 0120     		movs	r0, #1
 126 0064 FFF7FEFF 		bl	CyDmaSetDstAddress
 127              	.LVL11:
 128              	.LBE37:
 129              	.LBE36:
 130              	.LBB38:
 131              	.LBB39:
 478:Generated_Source\PSoC4/I2STxDMA.h **** }
 479:Generated_Source\PSoC4/I2STxDMA.h **** 
 480:Generated_Source\PSoC4/I2STxDMA.h **** 
 481:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 482:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_GetNumDataElements
 483:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 484:Generated_Source\PSoC4/I2STxDMA.h **** *
 485:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 486:Generated_Source\PSoC4/I2STxDMA.h **** *  Returns the number of data elements to be transferred. Only reflects the
 487:Generated_Source\PSoC4/I2STxDMA.h **** *  value written by I2STxDMA_SetNumDataElements() or I2STxDMA_SetConfiguration().
 488:Generated_Source\PSoC4/I2STxDMA.h **** *  This does not reflect how many elements have been transferred. For that
 489:Generated_Source\PSoC4/I2STxDMA.h **** *  information use the I2STxDMA_GetDescriptorStatus() function.
 490:Generated_Source\PSoC4/I2STxDMA.h **** *
 491:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 492:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 493:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 494:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 495:Generated_Source\PSoC4/I2STxDMA.h **** *  Number of data elements to transfer.
 496:Generated_Source\PSoC4/I2STxDMA.h **** *
 497:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 498:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE int32 I2STxDMA_GetNumDataElements(int32 descriptor)
 499:Generated_Source\PSoC4/I2STxDMA.h **** {
 500:Generated_Source\PSoC4/I2STxDMA.h ****     return (CyDmaGetNumDataElements(I2STxDMA_CHANNEL, descriptor));
 501:Generated_Source\PSoC4/I2STxDMA.h **** }
 502:Generated_Source\PSoC4/I2STxDMA.h **** 
 503:Generated_Source\PSoC4/I2STxDMA.h **** 
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 43


 504:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 505:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_SetSrcDstTransferWidth
 506:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 507:Generated_Source\PSoC4/I2STxDMA.h **** *
 508:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 509:Generated_Source\PSoC4/I2STxDMA.h **** *  Sets the width of the source and destination. The DMA can either read and
 510:Generated_Source\PSoC4/I2STxDMA.h **** *  write data from the source and destination at the size specified by
 511:Generated_Source\PSoC4/I2STxDMA.h **** *  I2STxDMA_SetDataElementSize() or by a word (4bytes). This also determines how
 512:Generated_Source\PSoC4/I2STxDMA.h **** *  many bytes the addresses are incremented if increment source and destination
 513:Generated_Source\PSoC4/I2STxDMA.h **** *  address are turned on.
 514:Generated_Source\PSoC4/I2STxDMA.h **** *
 515:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 516:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor:    Descriptor (0 or 1) modified by this function.
 517:Generated_Source\PSoC4/I2STxDMA.h **** *  transferWidth: Specifies the source and destination widths. Refer to the API
 518:Generated_Source\PSoC4/I2STxDMA.h **** *                 bit field definitions in CyDMA_P4.h or the API description in
 519:Generated_Source\PSoC4/I2STxDMA.h **** *                 the DMA channel datasheet for the parameter options.
 520:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 521:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 522:Generated_Source\PSoC4/I2STxDMA.h **** *  None.
 523:Generated_Source\PSoC4/I2STxDMA.h **** *
 524:Generated_Source\PSoC4/I2STxDMA.h **** * Side effect:
 525:Generated_Source\PSoC4/I2STxDMA.h **** *  This function should not be called when the specified descriptor is active
 526:Generated_Source\PSoC4/I2STxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 527:Generated_Source\PSoC4/I2STxDMA.h **** *
 528:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 529:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE void I2STxDMA_SetSrcDstTransferWidth(int32 descriptor, uint32 transferWidth)
 530:Generated_Source\PSoC4/I2STxDMA.h **** {
 531:Generated_Source\PSoC4/I2STxDMA.h ****     CyDmaSetSrcDstTransferWidth(I2STxDMA_CHANNEL, descriptor, transferWidth);
 532:Generated_Source\PSoC4/I2STxDMA.h **** }
 533:Generated_Source\PSoC4/I2STxDMA.h **** 
 534:Generated_Source\PSoC4/I2STxDMA.h **** 
 535:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 536:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_GetSrcDstTransferWidth
 537:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 538:Generated_Source\PSoC4/I2STxDMA.h **** *
 539:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 540:Generated_Source\PSoC4/I2STxDMA.h **** *  Returns the width of the source and destination, as set by 
 541:Generated_Source\PSoC4/I2STxDMA.h **** *  I2STxDMA_SetSrcDstTransferWidth() or I2STxDMA_SetConfiguration().
 542:Generated_Source\PSoC4/I2STxDMA.h **** *
 543:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 544:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 545:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 546:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 547:Generated_Source\PSoC4/I2STxDMA.h **** *  Width of source and destination. Refer to the API bit field definitions in
 548:Generated_Source\PSoC4/I2STxDMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 549:Generated_Source\PSoC4/I2STxDMA.h **** *  information.
 550:Generated_Source\PSoC4/I2STxDMA.h **** *
 551:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 552:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE uint32 I2STxDMA_GetSrcDstTransferWidth(int32 descriptor)
 553:Generated_Source\PSoC4/I2STxDMA.h **** {
 554:Generated_Source\PSoC4/I2STxDMA.h ****     return (CyDmaGetSrcDstTransferWidth(I2STxDMA_CHANNEL, descriptor));
 555:Generated_Source\PSoC4/I2STxDMA.h **** }
 556:Generated_Source\PSoC4/I2STxDMA.h **** 
 557:Generated_Source\PSoC4/I2STxDMA.h **** 
 558:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 559:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_SetAddressIncrement
 560:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 44


 561:Generated_Source\PSoC4/I2STxDMA.h **** *
 562:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 563:Generated_Source\PSoC4/I2STxDMA.h **** *  Sets whether the source or destination addresses are incremented after the
 564:Generated_Source\PSoC4/I2STxDMA.h **** *  transfer of each data element. The amount that the source and destination
 565:Generated_Source\PSoC4/I2STxDMA.h **** *  address are incremented is determined by the I2STxDMA_SetSrcDstTransferWidth()
 566:Generated_Source\PSoC4/I2STxDMA.h **** *  function. The addresses will either be incremented by the data element size
 567:Generated_Source\PSoC4/I2STxDMA.h **** *  or by a word (4 bytes).
 568:Generated_Source\PSoC4/I2STxDMA.h **** *
 569:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 570:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor:       Descriptor (0 or 1) modified by this function.
 571:Generated_Source\PSoC4/I2STxDMA.h **** *  addressIncrement: Address increment settings. Refer to the API bit field
 572:Generated_Source\PSoC4/I2STxDMA.h **** *                    definitions in CyDMA_P4.h or the API description in the DMA
 573:Generated_Source\PSoC4/I2STxDMA.h **** *                    channel datasheet for the parameter options.
 574:Generated_Source\PSoC4/I2STxDMA.h **** *    
 575:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 576:Generated_Source\PSoC4/I2STxDMA.h **** *  None.
 577:Generated_Source\PSoC4/I2STxDMA.h **** *
 578:Generated_Source\PSoC4/I2STxDMA.h **** * Side effect:
 579:Generated_Source\PSoC4/I2STxDMA.h **** *  This function should not be called when the specified descriptor is active
 580:Generated_Source\PSoC4/I2STxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 581:Generated_Source\PSoC4/I2STxDMA.h **** *
 582:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 583:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE void I2STxDMA_SetAddressIncrement(int32 descriptor, uint32 addressIncrement)
 584:Generated_Source\PSoC4/I2STxDMA.h **** {
 585:Generated_Source\PSoC4/I2STxDMA.h ****     CyDmaSetAddressIncrement(I2STxDMA_CHANNEL, descriptor, addressIncrement);
 586:Generated_Source\PSoC4/I2STxDMA.h **** }
 587:Generated_Source\PSoC4/I2STxDMA.h **** 
 588:Generated_Source\PSoC4/I2STxDMA.h **** 
 589:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 590:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_GetAddressIncrement
 591:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 592:Generated_Source\PSoC4/I2STxDMA.h **** *
 593:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 594:Generated_Source\PSoC4/I2STxDMA.h **** *  Returns address increment settings as set by I2STxDMA_SetAddressIncrement()
 595:Generated_Source\PSoC4/I2STxDMA.h **** *  or I2STxDMA_SetConfiguration().
 596:Generated_Source\PSoC4/I2STxDMA.h **** *
 597:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 598:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 599:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 600:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 601:Generated_Source\PSoC4/I2STxDMA.h **** *  Address increment settings. Refer to the API bit field definitions in
 602:Generated_Source\PSoC4/I2STxDMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 603:Generated_Source\PSoC4/I2STxDMA.h **** *  information.
 604:Generated_Source\PSoC4/I2STxDMA.h **** *
 605:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 606:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE uint32 I2STxDMA_GetAddressIncrement(int32 descriptor)
 607:Generated_Source\PSoC4/I2STxDMA.h **** {
 608:Generated_Source\PSoC4/I2STxDMA.h ****     return (CyDmaGetAddressIncrement(I2STxDMA_CHANNEL, descriptor));
 609:Generated_Source\PSoC4/I2STxDMA.h **** }
 610:Generated_Source\PSoC4/I2STxDMA.h **** 
 611:Generated_Source\PSoC4/I2STxDMA.h **** 
 612:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 613:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_SetTriggerType
 614:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 615:Generated_Source\PSoC4/I2STxDMA.h **** *
 616:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 617:Generated_Source\PSoC4/I2STxDMA.h **** *  Sets the type of input trigger for the DMA For level sensitive triggers sets
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 45


 618:Generated_Source\PSoC4/I2STxDMA.h **** *  how long the DMA waits for the trigger to go low (deactivate) before
 619:Generated_Source\PSoC4/I2STxDMA.h **** *  triggering the channel again.
 620:Generated_Source\PSoC4/I2STxDMA.h **** *
 621:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 622:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor:  Descriptor (0 or 1) modified by this function.
 623:Generated_Source\PSoC4/I2STxDMA.h **** *  triggerType: Type of DMA trigger. Refer to the API bit field definitions in
 624:Generated_Source\PSoC4/I2STxDMA.h **** *               CyDMA_P4.h or the API description in the DMA channel datasheet
 625:Generated_Source\PSoC4/I2STxDMA.h **** *               for the parameter options.
 626:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 627:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 628:Generated_Source\PSoC4/I2STxDMA.h **** *  None.
 629:Generated_Source\PSoC4/I2STxDMA.h **** *
 630:Generated_Source\PSoC4/I2STxDMA.h **** * Side effect:
 631:Generated_Source\PSoC4/I2STxDMA.h **** *  This function should not be called when the specified descriptor is active
 632:Generated_Source\PSoC4/I2STxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 633:Generated_Source\PSoC4/I2STxDMA.h **** *
 634:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 635:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE void I2STxDMA_SetTriggerType(int32 descriptor, uint32 triggerType)
 636:Generated_Source\PSoC4/I2STxDMA.h **** {
 637:Generated_Source\PSoC4/I2STxDMA.h ****     CyDmaSetTriggerType(I2STxDMA_CHANNEL, descriptor, triggerType);
 638:Generated_Source\PSoC4/I2STxDMA.h **** }
 639:Generated_Source\PSoC4/I2STxDMA.h **** 
 640:Generated_Source\PSoC4/I2STxDMA.h **** 
 641:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 642:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_GetTriggerType
 643:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 644:Generated_Source\PSoC4/I2STxDMA.h **** *
 645:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 646:Generated_Source\PSoC4/I2STxDMA.h **** *  Returns the trigger deactivation settings as set by I2STxDMA_SetTriggerType()
 647:Generated_Source\PSoC4/I2STxDMA.h **** *  or I2STxDMA_SetConfiguration().
 648:Generated_Source\PSoC4/I2STxDMA.h **** *
 649:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 650:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 651:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 652:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 653:Generated_Source\PSoC4/I2STxDMA.h **** *  Trigger deactivation settings. Refer to the API bit field definitions in
 654:Generated_Source\PSoC4/I2STxDMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 655:Generated_Source\PSoC4/I2STxDMA.h **** *  information.
 656:Generated_Source\PSoC4/I2STxDMA.h **** *
 657:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 658:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE uint32 I2STxDMA_GetTriggerType(int32 descriptor)
 659:Generated_Source\PSoC4/I2STxDMA.h **** {
 660:Generated_Source\PSoC4/I2STxDMA.h ****     return (CyDmaGetTriggerType(I2STxDMA_CHANNEL, descriptor));
 661:Generated_Source\PSoC4/I2STxDMA.h **** }
 662:Generated_Source\PSoC4/I2STxDMA.h **** 
 663:Generated_Source\PSoC4/I2STxDMA.h **** 
 664:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 665:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_SetTransferMode
 666:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 667:Generated_Source\PSoC4/I2STxDMA.h **** *
 668:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 669:Generated_Source\PSoC4/I2STxDMA.h **** *  Sets the DMA transfer mode. This determines how the DMA reacts to each trigger
 670:Generated_Source\PSoC4/I2STxDMA.h **** *  event.
 671:Generated_Source\PSoC4/I2STxDMA.h **** *
 672:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 673:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor:   Descriptor (0 or 1) modified by this function.
 674:Generated_Source\PSoC4/I2STxDMA.h **** *  transferMode: Specifies the DMA transfer mode settings. Refer to the API bit
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 46


 675:Generated_Source\PSoC4/I2STxDMA.h **** *                field definitions in CyDMA_P4.h or the API description in the
 676:Generated_Source\PSoC4/I2STxDMA.h **** *                DMA channel datasheet for the parameter options.
 677:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 678:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 679:Generated_Source\PSoC4/I2STxDMA.h **** *  None.
 680:Generated_Source\PSoC4/I2STxDMA.h **** *
 681:Generated_Source\PSoC4/I2STxDMA.h **** * Side effect:
 682:Generated_Source\PSoC4/I2STxDMA.h **** *  This function should not be called when the specified descriptor is active
 683:Generated_Source\PSoC4/I2STxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 684:Generated_Source\PSoC4/I2STxDMA.h **** *
 685:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 686:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE void I2STxDMA_SetTransferMode(int32 descriptor, uint32 transferMode)
 687:Generated_Source\PSoC4/I2STxDMA.h **** {
 688:Generated_Source\PSoC4/I2STxDMA.h ****     CyDmaSetTransferMode(I2STxDMA_CHANNEL, descriptor, transferMode);
 689:Generated_Source\PSoC4/I2STxDMA.h **** }
 690:Generated_Source\PSoC4/I2STxDMA.h **** 
 691:Generated_Source\PSoC4/I2STxDMA.h **** 
 692:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 693:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_GetTransferMode
 694:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 695:Generated_Source\PSoC4/I2STxDMA.h **** *
 696:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 697:Generated_Source\PSoC4/I2STxDMA.h **** *  Returns the transfer mode for the specified descriptor as set by 
 698:Generated_Source\PSoC4/I2STxDMA.h **** *  I2STxDMA_SetTransferMode() or I2STxDMA_SetConfiguration().
 699:Generated_Source\PSoC4/I2STxDMA.h **** *
 700:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 701:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 702:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 703:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 704:Generated_Source\PSoC4/I2STxDMA.h **** *  DMA transfer mode settings. Refer to the API bit field definitions in
 705:Generated_Source\PSoC4/I2STxDMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 706:Generated_Source\PSoC4/I2STxDMA.h **** *  information.
 707:Generated_Source\PSoC4/I2STxDMA.h **** *
 708:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 709:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE uint32 I2STxDMA_GetTransferMode(int32 descriptor)
 710:Generated_Source\PSoC4/I2STxDMA.h **** {
 711:Generated_Source\PSoC4/I2STxDMA.h ****     return (CyDmaGetTransferMode(I2STxDMA_CHANNEL, descriptor));
 712:Generated_Source\PSoC4/I2STxDMA.h **** }
 713:Generated_Source\PSoC4/I2STxDMA.h **** 
 714:Generated_Source\PSoC4/I2STxDMA.h **** 
 715:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 716:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_SetPreemptable
 717:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 718:Generated_Source\PSoC4/I2STxDMA.h **** *
 719:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 720:Generated_Source\PSoC4/I2STxDMA.h **** *  Determines if the descriptor is preemptable.
 721:Generated_Source\PSoC4/I2STxDMA.h **** *
 722:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 723:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor:  Descriptor (0 or 1) modified by this function.
 724:Generated_Source\PSoC4/I2STxDMA.h **** *  preemptable: Descriptor preemption settings. Refer to the API bit field
 725:Generated_Source\PSoC4/I2STxDMA.h **** *               definitions in CyDMA_P4.h or the API description in the DMA 
 726:Generated_Source\PSoC4/I2STxDMA.h **** *               channel datasheet for the parameter options.
 727:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 728:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 729:Generated_Source\PSoC4/I2STxDMA.h **** *  None.
 730:Generated_Source\PSoC4/I2STxDMA.h **** *
 731:Generated_Source\PSoC4/I2STxDMA.h **** * Side effect:
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 47


 732:Generated_Source\PSoC4/I2STxDMA.h **** *  This function should not be called when the specified descriptor is active
 733:Generated_Source\PSoC4/I2STxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 734:Generated_Source\PSoC4/I2STxDMA.h **** *
 735:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 736:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE void I2STxDMA_SetPreemptable(int32 descriptor, uint32 preemptable)
 737:Generated_Source\PSoC4/I2STxDMA.h **** {
 738:Generated_Source\PSoC4/I2STxDMA.h ****     CyDmaSetPreemptable(I2STxDMA_CHANNEL, descriptor, preemptable);
 739:Generated_Source\PSoC4/I2STxDMA.h **** }
 740:Generated_Source\PSoC4/I2STxDMA.h **** 
 741:Generated_Source\PSoC4/I2STxDMA.h **** 
 742:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 743:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_GetPreemptable
 744:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 745:Generated_Source\PSoC4/I2STxDMA.h **** *
 746:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 747:Generated_Source\PSoC4/I2STxDMA.h **** *  Returns whether or not the descriptor is preemptable.
 748:Generated_Source\PSoC4/I2STxDMA.h **** *
 749:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 750:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 751:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 752:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 753:Generated_Source\PSoC4/I2STxDMA.h **** *  Descriptor preemption setting. Refer to the API bit field definitions in
 754:Generated_Source\PSoC4/I2STxDMA.h **** *  CyDMA_P4.h or the API description in the DMA channel datasheet for more
 755:Generated_Source\PSoC4/I2STxDMA.h **** *  information.
 756:Generated_Source\PSoC4/I2STxDMA.h **** *
 757:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 758:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE uint32 I2STxDMA_GetPreemptable(int32 descriptor)
 759:Generated_Source\PSoC4/I2STxDMA.h **** {
 760:Generated_Source\PSoC4/I2STxDMA.h ****     return (CyDmaGetPreemptable(I2STxDMA_CHANNEL, descriptor));
 761:Generated_Source\PSoC4/I2STxDMA.h **** }
 762:Generated_Source\PSoC4/I2STxDMA.h **** 
 763:Generated_Source\PSoC4/I2STxDMA.h **** 
 764:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 765:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_SetPostCompletionActions
 766:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 767:Generated_Source\PSoC4/I2STxDMA.h **** *
 768:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 769:Generated_Source\PSoC4/I2STxDMA.h **** *  Determines what occurs after a descriptor completes.
 770:Generated_Source\PSoC4/I2STxDMA.h **** *
 771:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 772:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 773:Generated_Source\PSoC4/I2STxDMA.h **** *  actions:    Specifies descriptor post completion actions. Refer to the API
 774:Generated_Source\PSoC4/I2STxDMA.h **** *              bit field definitions in CyDMA_P4.h or the API description in the
 775:Generated_Source\PSoC4/I2STxDMA.h **** *              DMA channel datasheet for the parameter options.
 776:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 777:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 778:Generated_Source\PSoC4/I2STxDMA.h **** *  None.  
 779:Generated_Source\PSoC4/I2STxDMA.h **** *
 780:Generated_Source\PSoC4/I2STxDMA.h **** * Side effect:
 781:Generated_Source\PSoC4/I2STxDMA.h **** *  This function should not be called when the specified descriptor is active
 782:Generated_Source\PSoC4/I2STxDMA.h **** *  in the DMA transfer engine. This can be checked by calling CyDmaGetStatus(). 
 783:Generated_Source\PSoC4/I2STxDMA.h **** *
 784:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 785:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE void I2STxDMA_SetPostCompletionActions(int32 descriptor, uint32 actions)
 786:Generated_Source\PSoC4/I2STxDMA.h **** {
 787:Generated_Source\PSoC4/I2STxDMA.h ****     CyDmaSetPostCompletionActions(I2STxDMA_CHANNEL, descriptor, actions);
 788:Generated_Source\PSoC4/I2STxDMA.h **** }
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 48


 789:Generated_Source\PSoC4/I2STxDMA.h **** 
 790:Generated_Source\PSoC4/I2STxDMA.h **** 
 791:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 792:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_GetPostCompletionAction
 793:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 794:Generated_Source\PSoC4/I2STxDMA.h **** *
 795:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 796:Generated_Source\PSoC4/I2STxDMA.h **** *  Returns the post descriptor action settings as set by 
 797:Generated_Source\PSoC4/I2STxDMA.h **** *  I2STxDMA_SetPostCompletionActions() or I2STxDMA_SetConfiguration().
 798:Generated_Source\PSoC4/I2STxDMA.h **** *
 799:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 800:Generated_Source\PSoC4/I2STxDMA.h **** *  descriptor: Descriptor (0 or 1) modified by this function.
 801:Generated_Source\PSoC4/I2STxDMA.h **** *                   
 802:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 803:Generated_Source\PSoC4/I2STxDMA.h **** *  Post descriptor actions. Refer to the API bit field definitions in CyDMA_P4.h
 804:Generated_Source\PSoC4/I2STxDMA.h **** *  or the API description in the DMA channel datasheet for more information.
 805:Generated_Source\PSoC4/I2STxDMA.h **** *
 806:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 807:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE uint32 I2STxDMA_GetPostCompletionAction(int32 descriptor)
 808:Generated_Source\PSoC4/I2STxDMA.h **** {
 809:Generated_Source\PSoC4/I2STxDMA.h ****     return (CyDmaGetPostCompletionActions(I2STxDMA_CHANNEL, descriptor));
 810:Generated_Source\PSoC4/I2STxDMA.h **** }
 811:Generated_Source\PSoC4/I2STxDMA.h **** 
 812:Generated_Source\PSoC4/I2STxDMA.h **** 
 813:Generated_Source\PSoC4/I2STxDMA.h **** /*******************************************************************************
 814:Generated_Source\PSoC4/I2STxDMA.h **** * Function Name: I2STxDMA_SetInterruptCallback
 815:Generated_Source\PSoC4/I2STxDMA.h **** ********************************************************************************
 816:Generated_Source\PSoC4/I2STxDMA.h **** *
 817:Generated_Source\PSoC4/I2STxDMA.h **** * Summary:
 818:Generated_Source\PSoC4/I2STxDMA.h **** *  Sets a user defined callback function to be called by the DMA interrupt. The
 819:Generated_Source\PSoC4/I2STxDMA.h **** *  function should contain code to process the interrupt request for the 
 820:Generated_Source\PSoC4/I2STxDMA.h **** *  associated DMA channel.
 821:Generated_Source\PSoC4/I2STxDMA.h **** *
 822:Generated_Source\PSoC4/I2STxDMA.h **** * Parameters:
 823:Generated_Source\PSoC4/I2STxDMA.h **** *  callback: Pointer to the user defined callback function.
 824:Generated_Source\PSoC4/I2STxDMA.h **** *
 825:Generated_Source\PSoC4/I2STxDMA.h **** * Return:
 826:Generated_Source\PSoC4/I2STxDMA.h **** *  Pointer to the function previously set for the specified channel. 
 827:Generated_Source\PSoC4/I2STxDMA.h **** *
 828:Generated_Source\PSoC4/I2STxDMA.h **** *******************************************************************************/
 829:Generated_Source\PSoC4/I2STxDMA.h **** static CY_INLINE cydma_callback_t I2STxDMA_SetInterruptCallback(cydma_callback_t callback)
 830:Generated_Source\PSoC4/I2STxDMA.h **** {
 831:Generated_Source\PSoC4/I2STxDMA.h ****     return (CyDmaSetInterruptCallback(I2STxDMA_CHANNEL, callback));
 132              		.loc 4 831 0
 133 0068 214C     		ldr	r4, .L2+36
 134 006a 2100     		movs	r1, r4
 135 006c 0120     		movs	r0, #1
 136 006e FFF7FEFF 		bl	CyDmaSetInterruptCallback
 137              	.LVL12:
 138              	.LBE39:
 139              	.LBE38:
 140              	.LBB40:
 141              	.LBB41:
  96:Generated_Source\PSoC4/I2STxDMA.h **** }
 142              		.loc 4 96 0
 143 0072 0120     		movs	r0, #1
 144 0074 FFF7FEFF 		bl	CyDmaChEnable
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 49


 145              	.LVL13:
 146              	.LBE41:
 147              	.LBE40:
 148              	.LBB42:
 149              	.LBB43:
 279:Generated_Source\PSoC4/I2STxDMA.h **** }
 150              		.loc 4 279 0
 151 0078 0021     		movs	r1, #0
 152 007a 0120     		movs	r0, #1
 153 007c FFF7FEFF 		bl	CyDmaValidateDescriptor
 154              	.LVL14:
 155              	.LBE43:
 156              	.LBE42:
 157              	.LBB44:
 158              	.LBB45:
 159 0080 0121     		movs	r1, #1
 160 0082 0120     		movs	r0, #1
 161 0084 FFF7FEFF 		bl	CyDmaValidateDescriptor
 162              	.LVL15:
 163              	.LBE45:
 164              	.LBE44:
  97:AudioOut.c    **** 	I2STxDMA_SetNumDataElements(0, OUT_BUFSIZE);
  98:AudioOut.c    ****     I2STxDMA_SetNumDataElements(1, OUT_BUFSIZE);
  99:AudioOut.c    ****     I2STxDMA_SetSrcAddress(0, (void *) SPI_RX_FIFO_RD_PTR);
 100:AudioOut.c    ****     I2STxDMA_SetSrcAddress(0, (void *) output_buffer);
 101:AudioOut.c    **** 	I2STxDMA_SetDstAddress(0, (void *) I2S_TX_FIFO_0_PTR);
 102:AudioOut.c    ****     //I2STxDMA_SetSrcAddress(1, (void *) output_buffer2);
 103:AudioOut.c    **** 	//I2STxDMA_SetDstAddress(1, (void *) I2S_TX_FIFO_0_PTR);
 104:AudioOut.c    ****     I2STxDMA_SetInterruptCallback(I2STxDone);
 105:AudioOut.c    ****     I2STxDMA_ChEnable();
 106:AudioOut.c    ****     
 107:AudioOut.c    ****     
 108:AudioOut.c    ****     /* Start other DMA channels to begin data transfer. */
 109:AudioOut.c    ****     
 110:AudioOut.c    ****     
 111:AudioOut.c    **** 	/* Validate descriptor */
 112:AudioOut.c    ****     I2STxDMA_ValidateDescriptor(0);
 113:AudioOut.c    ****     I2STxDMA_ValidateDescriptor(1);
 114:AudioOut.c    ****     //SPI_RxDMA_ValidateDescriptor(0);
 115:AudioOut.c    ****     
 116:AudioOut.c    ****     /* Start interrupts */
 117:AudioOut.c    ****     isr_I2STxDone_StartEx(I2STxDone);
 165              		.loc 1 117 0
 166 0088 2000     		movs	r0, r4
 167 008a FFF7FEFF 		bl	isr_I2STxDone_StartEx
 168              	.LVL16:
 118:AudioOut.c    ****     isr_I2STxDone_Enable();
 169              		.loc 1 118 0
 170 008e FFF7FEFF 		bl	isr_I2STxDone_Enable
 171              	.LVL17:
 119:AudioOut.c    ****     CyIntEnable(CYDMA_INTR_NUMBER);
 172              		.loc 1 119 0
 173 0092 0E20     		movs	r0, #14
 174 0094 FFF7FEFF 		bl	CyIntEnable
 175              	.LVL18:
 120:AudioOut.c    ****     
 121:AudioOut.c    ****     freq = 1000;
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 50


 176              		.loc 1 121 0
 177 0098 FA22     		movs	r2, #250
 178 009a 9200     		lsls	r2, r2, #2
 179 009c 154B     		ldr	r3, .L2+40
 180 009e 1A80     		strh	r2, [r3]
 122:AudioOut.c    ****     freq2 = 200;
 181              		.loc 1 122 0
 182 00a0 C822     		movs	r2, #200
 183 00a2 154B     		ldr	r3, .L2+44
 184 00a4 1A80     		strh	r2, [r3]
 123:AudioOut.c    ****     freq3 = 300;
 185              		.loc 1 123 0
 186 00a6 6432     		adds	r2, r2, #100
 187 00a8 144B     		ldr	r3, .L2+48
 188 00aa 1A80     		strh	r2, [r3]
 124:AudioOut.c    ****     freq4 = 400;
 189              		.loc 1 124 0
 190 00ac 6432     		adds	r2, r2, #100
 191 00ae 144B     		ldr	r3, .L2+52
 192 00b0 1A80     		strh	r2, [r3]
 125:AudioOut.c    ****     freq5 = 500;
 193              		.loc 1 125 0
 194 00b2 6432     		adds	r2, r2, #100
 195 00b4 134B     		ldr	r3, .L2+56
 196 00b6 1A80     		strh	r2, [r3]
 126:AudioOut.c    ****     freq6 = 600;
 197              		.loc 1 126 0
 198 00b8 6432     		adds	r2, r2, #100
 199 00ba 134B     		ldr	r3, .L2+60
 200 00bc 1A80     		strh	r2, [r3]
 127:AudioOut.c    ****     freq7 = 700;
 201              		.loc 1 127 0
 202 00be 6432     		adds	r2, r2, #100
 203 00c0 124B     		ldr	r3, .L2+64
 204 00c2 1A80     		strh	r2, [r3]
 128:AudioOut.c    ****     freq8 = 800;
 205              		.loc 1 128 0
 206 00c4 6432     		adds	r2, r2, #100
 207 00c6 124B     		ldr	r3, .L2+68
 208 00c8 1A80     		strh	r2, [r3]
 129:AudioOut.c    **** }
 209              		.loc 1 129 0
 210              		@ sp needed
 211 00ca 70BD     		pop	{r4, r5, r6, pc}
 212              	.L3:
 213              		.align	2
 214              	.L2:
 215 00cc 40032540 		.word	1076167488
 216 00d0 00000000 		.word	masterRxBuffer
 217 00d4 40022540 		.word	1076167232
 218 00d8 00000000 		.word	masterTxBuffer
 219 00dc 00000000 		.word	SPI_RxDMA_Done_Interrupt
 220 00e0 00000000 		.word	SPI_TxDMA_Done_Interrupt
 221 00e4 00000000 		.word	SPIDone
 222 00e8 00000000 		.word	output_buffer
 223 00ec 45000F40 		.word	1074724933
 224 00f0 00000000 		.word	I2STxDone
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 51


 225 00f4 00000000 		.word	freq
 226 00f8 00000000 		.word	freq2
 227 00fc 00000000 		.word	freq3
 228 0100 00000000 		.word	freq4
 229 0104 00000000 		.word	freq5
 230 0108 00000000 		.word	freq6
 231 010c 00000000 		.word	freq7
 232 0110 00000000 		.word	freq8
 233              		.cfi_endproc
 234              	.LFE130:
 235              		.size	InitializeAudioOutPath, .-InitializeAudioOutPath
 236              		.section	.text.ProcessAudioOut,"ax",%progbits
 237              		.align	2
 238              		.global	ProcessAudioOut
 239              		.code	16
 240              		.thumb_func
 241              		.type	ProcessAudioOut, %function
 242              	ProcessAudioOut:
 243              	.LFB131:
 130:AudioOut.c    **** 
 131:AudioOut.c    **** /*******************************************************************************
 132:AudioOut.c    **** * Function Name: ProcessAudioOut
 133:AudioOut.c    **** ********************************************************************************
 134:AudioOut.c    **** * Summary:
 135:AudioOut.c    **** *        Handle audio out data, setup USB DMA and trigger the DMA to transfer 
 136:AudioOut.c    **** *        audio samples from SRAM USB endpoint memory to SRAM audio circular 
 137:AudioOut.c    **** *        buffer. The API also starts the I2S transmit when USB audio out streaming 
 138:AudioOut.c    **** *        is active
 139:AudioOut.c    **** *
 140:AudioOut.c    **** * Parameters:
 141:AudioOut.c    **** *  void
 142:AudioOut.c    **** *
 143:AudioOut.c    **** * Return:
 144:AudioOut.c    **** *  void
 145:AudioOut.c    **** *
 146:AudioOut.c    **** *******************************************************************************/
 147:AudioOut.c    **** 
 148:AudioOut.c    **** void ProcessAudioOut(int8_t* buffer) 
 149:AudioOut.c    **** {
 244              		.loc 1 149 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 56
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              	.LVL19:
 249 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 250              		.cfi_def_cfa_offset 20
 251              		.cfi_offset 4, -20
 252              		.cfi_offset 5, -16
 253              		.cfi_offset 6, -12
 254              		.cfi_offset 7, -8
 255              		.cfi_offset 14, -4
 256 0002 5F46     		mov	r7, fp
 257 0004 5646     		mov	r6, r10
 258 0006 4D46     		mov	r5, r9
 259 0008 4446     		mov	r4, r8
 260 000a F0B4     		push	{r4, r5, r6, r7}
 261              		.cfi_def_cfa_offset 36
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 52


 262              		.cfi_offset 8, -36
 263              		.cfi_offset 9, -32
 264              		.cfi_offset 10, -28
 265              		.cfi_offset 11, -24
 266 000c 8FB0     		sub	sp, sp, #60
 267              		.cfi_def_cfa_offset 96
 268 000e 0D90     		str	r0, [sp, #52]
 150:AudioOut.c    ****     static uint32_t index;
 151:AudioOut.c    ****     static uint32_t index2;
 152:AudioOut.c    ****     static uint32_t index3;
 153:AudioOut.c    ****     static uint32_t index4;
 154:AudioOut.c    ****     static uint32_t index5;
 155:AudioOut.c    ****     static uint32_t index6;
 156:AudioOut.c    ****     static uint32_t index7;
 157:AudioOut.c    ****     static uint32_t index8;
 158:AudioOut.c    ****     
 159:AudioOut.c    ****     static uint32_t lfo_index;
 160:AudioOut.c    ****     lfo_index += lfo_freq;
 269              		.loc 1 160 0
 270 0010 844A     		ldr	r2, .L7
 271 0012 854B     		ldr	r3, .L7+4
 272 0014 1B68     		ldr	r3, [r3]
 273 0016 1168     		ldr	r1, [r2]
 274 0018 8C46     		mov	ip, r1
 275 001a 6344     		add	r3, r3, ip
 276 001c 1360     		str	r3, [r2]
 161:AudioOut.c    ****     lfo_multiplier = lfo_sine[(lfo_index>>8) % 256];
 277              		.loc 1 161 0
 278 001e 1B0A     		lsrs	r3, r3, #8
 279 0020 FF22     		movs	r2, #255
 280 0022 1340     		ands	r3, r2
 281 0024 814A     		ldr	r2, .L7+8
 282 0026 D25C     		ldrb	r2, [r2, r3]
 283 0028 814B     		ldr	r3, .L7+12
 284 002a 1A80     		strh	r2, [r3]
 285              	.LVL20:
 286              	.LBB46:
 162:AudioOut.c    ****     
 163:AudioOut.c    ****     //*index = *index + freq;
 164:AudioOut.c    ****     //buffer[0] = base_sine[((*index)>>10)%N];
 165:AudioOut.c    ****     for(int i = 0; i < OUT_BUFSIZE; i++){
 287              		.loc 1 165 0
 288 002c 0023     		movs	r3, #0
 289 002e 0193     		str	r3, [sp, #4]
 290 0030 EBE0     		b	.L5
 291              	.LVL21:
 292              	.L6:
 293              	.LBB47:
 166:AudioOut.c    ****         index += v1.freq; //* lfo_multiplier)>>8;
 294              		.loc 1 166 0 discriminator 3
 295 0032 804B     		ldr	r3, .L7+16
 296 0034 9A46     		mov	r10, r3
 297 0036 7B4B     		ldr	r3, .L7
 298 0038 5246     		mov	r2, r10
 299              	.LVL22:
 300 003a 9268     		ldr	r2, [r2, #8]
 301 003c 5968     		ldr	r1, [r3, #4]
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 53


 302 003e 8C46     		mov	ip, r1
 303 0040 6244     		add	r2, r2, ip
 304 0042 9346     		mov	fp, r2
 305 0044 5A60     		str	r2, [r3, #4]
 167:AudioOut.c    ****         index2 += v2.freq;
 306              		.loc 1 167 0 discriminator 3
 307 0046 7C4A     		ldr	r2, .L7+20
 308 0048 9146     		mov	r9, r2
 309 004a 9268     		ldr	r2, [r2, #8]
 310 004c 9968     		ldr	r1, [r3, #8]
 311 004e 8C46     		mov	ip, r1
 312 0050 6244     		add	r2, r2, ip
 313 0052 1000     		movs	r0, r2
 314 0054 9A60     		str	r2, [r3, #8]
 168:AudioOut.c    ****         index3 += v3.freq;
 315              		.loc 1 168 0 discriminator 3
 316 0056 794A     		ldr	r2, .L7+24
 317 0058 9046     		mov	r8, r2
 318 005a 9268     		ldr	r2, [r2, #8]
 319 005c DC68     		ldr	r4, [r3, #12]
 320 005e A446     		mov	ip, r4
 321 0060 6244     		add	r2, r2, ip
 322 0062 1100     		movs	r1, r2
 323 0064 DA60     		str	r2, [r3, #12]
 169:AudioOut.c    ****         index4 += v4.freq;
 324              		.loc 1 169 0 discriminator 3
 325 0066 764A     		ldr	r2, .L7+28
 326 0068 0C92     		str	r2, [sp, #48]
 327 006a 9268     		ldr	r2, [r2, #8]
 328 006c 1C69     		ldr	r4, [r3, #16]
 329 006e A446     		mov	ip, r4
 330 0070 6244     		add	r2, r2, ip
 331 0072 1A61     		str	r2, [r3, #16]
 170:AudioOut.c    ****         index5 += v5.freq;
 332              		.loc 1 170 0 discriminator 3
 333 0074 734C     		ldr	r4, .L7+32
 334 0076 A468     		ldr	r4, [r4, #8]
 335 0078 5D69     		ldr	r5, [r3, #20]
 336 007a AC46     		mov	ip, r5
 337 007c 6444     		add	r4, r4, ip
 338 007e 0294     		str	r4, [sp, #8]
 339 0080 5C61     		str	r4, [r3, #20]
 171:AudioOut.c    ****         index6 += v6.freq;
 340              		.loc 1 171 0 discriminator 3
 341 0082 714E     		ldr	r6, .L7+36
 342 0084 B568     		ldr	r5, [r6, #8]
 343 0086 2F00     		movs	r7, r5
 344 0088 9D69     		ldr	r5, [r3, #24]
 345 008a AC46     		mov	ip, r5
 346 008c 6744     		add	r7, r7, ip
 347 008e 0397     		str	r7, [sp, #12]
 348 0090 9F61     		str	r7, [r3, #24]
 172:AudioOut.c    ****         index7 += v7.freq;
 349              		.loc 1 172 0 discriminator 3
 350 0092 6E4D     		ldr	r5, .L7+40
 351 0094 AC68     		ldr	r4, [r5, #8]
 352 0096 2700     		movs	r7, r4
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 54


 353 0098 DC69     		ldr	r4, [r3, #28]
 354 009a A446     		mov	ip, r4
 355 009c 6744     		add	r7, r7, ip
 356 009e 0497     		str	r7, [sp, #16]
 357 00a0 DF61     		str	r7, [r3, #28]
 173:AudioOut.c    ****         index8 += v8.freq;
 358              		.loc 1 173 0 discriminator 3
 359 00a2 6B4C     		ldr	r4, .L7+44
 360 00a4 A468     		ldr	r4, [r4, #8]
 361 00a6 2700     		movs	r7, r4
 362 00a8 1C6A     		ldr	r4, [r3, #32]
 363 00aa A446     		mov	ip, r4
 364 00ac 6744     		add	r7, r7, ip
 365 00ae 0597     		str	r7, [sp, #20]
 366 00b0 1F62     		str	r7, [r3, #32]
 174:AudioOut.c    ****         
 175:AudioOut.c    ****         /*int32_t value = base_sq[((index)>>8) & 0xFFF];
 176:AudioOut.c    ****         + ((base_sine[(index2>>8) & 0xFFF]))
 177:AudioOut.c    ****         + (base_sine[(index3>>8) & 0xFFF])
 178:AudioOut.c    ****         + (base_sine[(index4>>8) & 0xFFF])
 179:AudioOut.c    ****         + (base_sine[(index5>>8) & 0xFFF])
 180:AudioOut.c    ****         + (base_sine[(index6>>8) & 0xFFF])
 181:AudioOut.c    ****         + (base_sine[(index7>>8) & 0xFFF])
 182:AudioOut.c    ****         + (base_sine[(index8>>8) & 0xFFF])
 183:AudioOut.c    ****         */
 184:AudioOut.c    ****         
 185:AudioOut.c    ****         uint32_t sq_portion = ((base_sq[(index>>8) & 0xFFF] * v1.env_multiplier)>>8) * ((65535-wave
 367              		.loc 1 185 0 discriminator 3
 368 00b2 5B46     		mov	r3, fp
 369 00b4 1B0A     		lsrs	r3, r3, #8
 370 00b6 1B05     		lsls	r3, r3, #20
 371 00b8 1B0D     		lsrs	r3, r3, #20
 372 00ba 1C00     		movs	r4, r3
 373 00bc 654B     		ldr	r3, .L7+48
 374 00be 0694     		str	r4, [sp, #24]
 375 00c0 1C57     		ldrsb	r4, [r3, r4]
 376 00c2 A346     		mov	fp, r4
 377 00c4 5446     		mov	r4, r10
 378 00c6 A488     		ldrh	r4, [r4, #4]
 379 00c8 A246     		mov	r10, r4
 380 00ca 5C46     		mov	r4, fp
 381 00cc 5746     		mov	r7, r10
 382 00ce 7C43     		muls	r4, r7
 383 00d0 2712     		asrs	r7, r4, #8
 384 00d2 BB46     		mov	fp, r7
 186:AudioOut.c    ****         + ((base_sq[(index2>>8) & 0xFFF] * v2.env_multiplier)>>8) * ((65535-waveshape)>>8)
 385              		.loc 1 186 0 discriminator 3
 386 00d4 000A     		lsrs	r0, r0, #8
 387 00d6 0005     		lsls	r0, r0, #20
 388 00d8 000D     		lsrs	r0, r0, #20
 389 00da 0790     		str	r0, [sp, #28]
 390 00dc 1856     		ldrsb	r0, [r3, r0]
 391 00de 4F46     		mov	r7, r9
 392 00e0 BC88     		ldrh	r4, [r7, #4]
 393 00e2 0894     		str	r4, [sp, #32]
 394 00e4 6043     		muls	r0, r4
 395 00e6 0012     		asrs	r0, r0, #8
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 55


 396 00e8 5844     		add	r0, r0, fp
 187:AudioOut.c    ****         + ((base_sq[(index3>>8) & 0xFFF] * v3.env_multiplier)>>8) * ((65535-waveshape)>>8)
 397              		.loc 1 187 0 discriminator 3
 398 00ea 090A     		lsrs	r1, r1, #8
 399 00ec 0905     		lsls	r1, r1, #20
 400 00ee 090D     		lsrs	r1, r1, #20
 401 00f0 0991     		str	r1, [sp, #36]
 402 00f2 5956     		ldrsb	r1, [r3, r1]
 403 00f4 4746     		mov	r7, r8
 404 00f6 BC88     		ldrh	r4, [r7, #4]
 405 00f8 0A94     		str	r4, [sp, #40]
 406 00fa 6143     		muls	r1, r4
 407 00fc 0912     		asrs	r1, r1, #8
 408 00fe 4018     		adds	r0, r0, r1
 188:AudioOut.c    ****         + ((base_sq[(index4>>8) & 0xFFF] * v4.env_multiplier)>>8) * ((65535-waveshape)>>8)
 409              		.loc 1 188 0 discriminator 3
 410 0100 120A     		lsrs	r2, r2, #8
 411 0102 1205     		lsls	r2, r2, #20
 412 0104 120D     		lsrs	r2, r2, #20
 413 0106 0B92     		str	r2, [sp, #44]
 414 0108 9956     		ldrsb	r1, [r3, r2]
 415 010a 0C9F     		ldr	r7, [sp, #48]
 416 010c BA88     		ldrh	r2, [r7, #4]
 417 010e 0C92     		str	r2, [sp, #48]
 418 0110 5143     		muls	r1, r2
 419 0112 0912     		asrs	r1, r1, #8
 420 0114 4018     		adds	r0, r0, r1
 189:AudioOut.c    ****         + ((base_sq[(index5>>8) & 0xFFF] * v5.env_multiplier)>>8) * ((65535-waveshape)>>8)
 421              		.loc 1 189 0 discriminator 3
 422 0116 0299     		ldr	r1, [sp, #8]
 423 0118 0A0A     		lsrs	r2, r1, #8
 424 011a 1205     		lsls	r2, r2, #20
 425 011c 120D     		lsrs	r2, r2, #20
 426 011e 9F56     		ldrsb	r7, [r3, r2]
 427 0120 4849     		ldr	r1, .L7+32
 428 0122 8988     		ldrh	r1, [r1, #4]
 429 0124 4F43     		muls	r7, r1
 430 0126 3F12     		asrs	r7, r7, #8
 431 0128 8446     		mov	ip, r0
 432 012a BC44     		add	ip, ip, r7
 190:AudioOut.c    ****         + ((base_sq[(index6>>8) & 0xFFF] * v6.env_multiplier)>>8) * ((65535-waveshape)>>8)
 433              		.loc 1 190 0 discriminator 3
 434 012c 0398     		ldr	r0, [sp, #12]
 435 012e 070A     		lsrs	r7, r0, #8
 436 0130 3F05     		lsls	r7, r7, #20
 437 0132 3F0D     		lsrs	r7, r7, #20
 438 0134 D857     		ldrsb	r0, [r3, r7]
 439 0136 8046     		mov	r8, r0
 440 0138 B088     		ldrh	r0, [r6, #4]
 441 013a 4646     		mov	r6, r8
 442 013c 4643     		muls	r6, r0
 443 013e 3612     		asrs	r6, r6, #8
 444 0140 B346     		mov	fp, r6
 445 0142 E344     		add	fp, fp, ip
 191:AudioOut.c    ****         + ((base_sq[(index7>>8) & 0xFFF] * v7.env_multiplier)>>8) * ((65535-waveshape)>>8)
 446              		.loc 1 191 0 discriminator 3
 447 0144 049E     		ldr	r6, [sp, #16]
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 56


 448 0146 360A     		lsrs	r6, r6, #8
 449 0148 3605     		lsls	r6, r6, #20
 450 014a 360D     		lsrs	r6, r6, #20
 451 014c 9C57     		ldrsb	r4, [r3, r6]
 452 014e AD88     		ldrh	r5, [r5, #4]
 453 0150 AC46     		mov	ip, r5
 454 0152 2500     		movs	r5, r4
 455 0154 6446     		mov	r4, ip
 456 0156 6543     		muls	r5, r4
 457 0158 2D12     		asrs	r5, r5, #8
 458 015a A846     		mov	r8, r5
 459 015c D844     		add	r8, r8, fp
 192:AudioOut.c    ****         + ((base_sq[(index8>>8) & 0xFFF] * v8.env_multiplier)>>8) * ((65535-waveshape)>>8);
 460              		.loc 1 192 0 discriminator 3
 461 015e 059D     		ldr	r5, [sp, #20]
 462 0160 2D0A     		lsrs	r5, r5, #8
 463 0162 2D05     		lsls	r5, r5, #20
 464 0164 2C0D     		lsrs	r4, r5, #20
 465 0166 0294     		str	r4, [sp, #8]
 466 0168 1C57     		ldrsb	r4, [r3, r4]
 467 016a 394B     		ldr	r3, .L7+44
 468 016c 9B88     		ldrh	r3, [r3, #4]
 469 016e 0393     		str	r3, [sp, #12]
 470 0170 5C43     		muls	r4, r3
 471 0172 2412     		asrs	r4, r4, #8
 185:AudioOut.c    ****         + ((base_sq[(index2>>8) & 0xFFF] * v2.env_multiplier)>>8) * ((65535-waveshape)>>8)
 472              		.loc 1 185 0 discriminator 3
 473 0174 384B     		ldr	r3, .L7+52
 474 0176 1B88     		ldrh	r3, [r3]
 475 0178 9B46     		mov	fp, r3
 476 017a 384B     		ldr	r3, .L7+56
 477 017c 5D46     		mov	r5, fp
 478 017e 5B1B     		subs	r3, r3, r5
 479 0180 1D12     		asrs	r5, r3, #8
 480              		.loc 1 192 0 discriminator 3
 481 0182 4444     		add	r4, r4, r8
 482 0184 2B00     		movs	r3, r5
 483 0186 6343     		muls	r3, r4
 484 0188 9846     		mov	r8, r3
 485              	.LVL23:
 193:AudioOut.c    ****         
 194:AudioOut.c    ****         uint32_t sine_portion = ((base_sine[(index>>8) & 0xFFF] * v1.env_multiplier)>>8) * (wavesha
 486              		.loc 1 194 0 discriminator 3
 487 018a 354C     		ldr	r4, .L7+60
 488 018c 069B     		ldr	r3, [sp, #24]
 489              	.LVL24:
 490 018e 5D00     		lsls	r5, r3, #1
 491 0190 2D5F     		ldrsh	r5, [r5, r4]
 492 0192 5346     		mov	r3, r10
 493 0194 6B43     		muls	r3, r5
 494 0196 1D12     		asrs	r5, r3, #8
 495 0198 AA46     		mov	r10, r5
 195:AudioOut.c    ****         + ((base_sine[(index2>>8) & 0xFFF] * v2.env_multiplier)>>8) * (waveshape>>8)
 496              		.loc 1 195 0 discriminator 3
 497 019a 079B     		ldr	r3, [sp, #28]
 498 019c 5D00     		lsls	r5, r3, #1
 499 019e 2D5F     		ldrsh	r5, [r5, r4]
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 57


 500 01a0 089B     		ldr	r3, [sp, #32]
 501 01a2 6B43     		muls	r3, r5
 502 01a4 1D12     		asrs	r5, r3, #8
 503 01a6 A946     		mov	r9, r5
 504 01a8 CA44     		add	r10, r10, r9
 196:AudioOut.c    ****         + ((base_sine[(index3>>8) & 0xFFF] * v3.env_multiplier)>>8) * (waveshape>>8)
 505              		.loc 1 196 0 discriminator 3
 506 01aa 099B     		ldr	r3, [sp, #36]
 507 01ac 5D00     		lsls	r5, r3, #1
 508 01ae 2D5F     		ldrsh	r5, [r5, r4]
 509 01b0 0A9B     		ldr	r3, [sp, #40]
 510 01b2 6B43     		muls	r3, r5
 511 01b4 1D12     		asrs	r5, r3, #8
 512 01b6 A946     		mov	r9, r5
 513 01b8 D144     		add	r9, r9, r10
 197:AudioOut.c    ****         + ((base_sine[(index4>>8) & 0xFFF] * v4.env_multiplier)>>8) * (waveshape>>8)
 514              		.loc 1 197 0 discriminator 3
 515 01ba 0B9B     		ldr	r3, [sp, #44]
 516 01bc 5D00     		lsls	r5, r3, #1
 517 01be 2D5F     		ldrsh	r5, [r5, r4]
 518 01c0 0C9B     		ldr	r3, [sp, #48]
 519 01c2 6B43     		muls	r3, r5
 520 01c4 1B12     		asrs	r3, r3, #8
 521 01c6 9A46     		mov	r10, r3
 522 01c8 D144     		add	r9, r9, r10
 198:AudioOut.c    ****         + ((base_sine[(index5>>8) & 0xFFF] * v5.env_multiplier)>>8) * (waveshape>>8)
 523              		.loc 1 198 0 discriminator 3
 524 01ca 5200     		lsls	r2, r2, #1
 525 01cc 125F     		ldrsh	r2, [r2, r4]
 526 01ce 5143     		muls	r1, r2
 527 01d0 0912     		asrs	r1, r1, #8
 528 01d2 4944     		add	r1, r1, r9
 199:AudioOut.c    ****         + ((base_sine[(index6>>8) & 0xFFF] * v6.env_multiplier)>>8) * (waveshape>>8)
 529              		.loc 1 199 0 discriminator 3
 530 01d4 7F00     		lsls	r7, r7, #1
 531 01d6 3A5F     		ldrsh	r2, [r7, r4]
 532 01d8 5043     		muls	r0, r2
 533 01da 0012     		asrs	r0, r0, #8
 534 01dc 0818     		adds	r0, r1, r0
 200:AudioOut.c    ****         + ((base_sine[(index7>>8) & 0xFFF] * v7.env_multiplier)>>8) * (waveshape>>8)
 535              		.loc 1 200 0 discriminator 3
 536 01de 7600     		lsls	r6, r6, #1
 537 01e0 365F     		ldrsh	r6, [r6, r4]
 538 01e2 6346     		mov	r3, ip
 539 01e4 5E43     		muls	r6, r3
 540 01e6 3612     		asrs	r6, r6, #8
 541 01e8 8019     		adds	r0, r0, r6
 201:AudioOut.c    ****         + ((base_sine[(index8>>8) & 0xFFF] * v8.env_multiplier)>>8) * (waveshape>>8);
 542              		.loc 1 201 0 discriminator 3
 543 01ea 029A     		ldr	r2, [sp, #8]
 544 01ec 5500     		lsls	r5, r2, #1
 545 01ee 2D5F     		ldrsh	r5, [r5, r4]
 546 01f0 039B     		ldr	r3, [sp, #12]
 547 01f2 6B43     		muls	r3, r5
 548 01f4 1D12     		asrs	r5, r3, #8
 194:AudioOut.c    ****         + ((base_sine[(index2>>8) & 0xFFF] * v2.env_multiplier)>>8) * (waveshape>>8)
 549              		.loc 1 194 0 discriminator 3
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 58


 550 01f6 5B46     		mov	r3, fp
 551 01f8 1A0A     		lsrs	r2, r3, #8
 552              		.loc 1 201 0 discriminator 3
 553 01fa 4319     		adds	r3, r0, r5
 554 01fc 5343     		muls	r3, r2
 555              	.LVL25:
 202:AudioOut.c    ****         //buffer[i] = value;
 203:AudioOut.c    ****         
 204:AudioOut.c    ****         //int8_t sine_portion = (base_sine[(index>>8) & 0xFFF] * waveshape>>6)>>8;
 205:AudioOut.c    ****         //uint8_t sq_portion = (base_sq[((index)>>8) & 0xFFF] * (65535-waveshape)>>6)>>8;
 206:AudioOut.c    ****         buffer[i] = sine_portion + sq_portion;//((value + 8*AMPLITUDE) * 2*AMPLITUDE) / (32*AMPLITU
 556              		.loc 1 206 0 discriminator 3
 557 01fe 4344     		add	r3, r3, r8
 558              	.LVL26:
 559 0200 0D99     		ldr	r1, [sp, #52]
 560 0202 019A     		ldr	r2, [sp, #4]
 561              	.LVL27:
 562 0204 8B54     		strb	r3, [r1, r2]
 563              	.LBE47:
 165:AudioOut.c    ****         index += v1.freq; //* lfo_multiplier)>>8;
 564              		.loc 1 165 0 discriminator 3
 565 0206 531C     		adds	r3, r2, #1
 566 0208 0193     		str	r3, [sp, #4]
 567              	.LVL28:
 568              	.L5:
 165:AudioOut.c    ****         index += v1.freq; //* lfo_multiplier)>>8;
 569              		.loc 1 165 0 is_stmt 0 discriminator 1
 570 020a 164B     		ldr	r3, .L7+64
 571 020c 019A     		ldr	r2, [sp, #4]
 572 020e 9A42     		cmp	r2, r3
 573 0210 00DC     		bgt	.LCB564
 574 0212 0EE7     		b	.L6	@long jump
 575              	.LCB564:
 576              	.LBE46:
 207:AudioOut.c    ****         
 208:AudioOut.c    ****         ///2 + buffer[i-1]/2;// + buffer[i-2]/3;
 209:AudioOut.c    ****     }
 210:AudioOut.c    **** }
 577              		.loc 1 210 0 is_stmt 1
 578 0214 0FB0     		add	sp, sp, #60
 579              		@ sp needed
 580 0216 3CBC     		pop	{r2, r3, r4, r5}
 581 0218 9046     		mov	r8, r2
 582 021a 9946     		mov	r9, r3
 583 021c A246     		mov	r10, r4
 584 021e AB46     		mov	fp, r5
 585 0220 F0BD     		pop	{r4, r5, r6, r7, pc}
 586              	.L8:
 587 0222 C046     		.align	2
 588              	.L7:
 589 0224 00000000 		.word	.LANCHOR0
 590 0228 00000000 		.word	lfo_freq
 591 022c 00000000 		.word	lfo_sine
 592 0230 00000000 		.word	.LANCHOR1
 593 0234 00000000 		.word	v1
 594 0238 00000000 		.word	v2
 595 023c 00000000 		.word	v3
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 59


 596 0240 00000000 		.word	v4
 597 0244 00000000 		.word	v5
 598 0248 00000000 		.word	v6
 599 024c 00000000 		.word	v7
 600 0250 00000000 		.word	v8
 601 0254 00000000 		.word	base_sq
 602 0258 00000000 		.word	waveshape
 603 025c FFFF0000 		.word	65535
 604 0260 00000000 		.word	base_sine
 605 0264 FF0F0000 		.word	4095
 606              		.cfi_endproc
 607              	.LFE131:
 608              		.size	ProcessAudioOut, .-ProcessAudioOut
 609              		.section	.text.Stop_I2S_Tx,"ax",%progbits
 610              		.align	2
 611              		.global	Stop_I2S_Tx
 612              		.code	16
 613              		.thumb_func
 614              		.type	Stop_I2S_Tx, %function
 615              	Stop_I2S_Tx:
 616              	.LFB132:
 211:AudioOut.c    **** 
 212:AudioOut.c    **** /*******************************************************************************
 213:AudioOut.c    **** * Function Name: Stop_I2S_Tx
 214:AudioOut.c    **** ********************************************************************************
 215:AudioOut.c    **** * Summary:
 216:AudioOut.c    **** *        This function stops the I2S data transmission by disabling the I2S and 
 217:AudioOut.c    **** *        transmit DMA.
 218:AudioOut.c    **** *
 219:AudioOut.c    **** * Parameters:
 220:AudioOut.c    **** *  void
 221:AudioOut.c    **** *
 222:AudioOut.c    **** * Return:
 223:AudioOut.c    **** *  void
 224:AudioOut.c    **** *
 225:AudioOut.c    **** *******************************************************************************/
 226:AudioOut.c    **** void Stop_I2S_Tx(void) CYREENTRANT
 227:AudioOut.c    **** {
 617              		.loc 1 227 0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              		@ link register save eliminated.
 228:AudioOut.c    ****     //
 229:AudioOut.c    ****     //if(outPlaying)
 230:AudioOut.c    ****     //{       
 231:AudioOut.c    ****         //UART_UartPutString("Stopping I2S\r\n");
 232:AudioOut.c    ****         //I2S_DisableTx();     /* Stop I2S Transmit (Mute), I2S output clocks still active */
 233:AudioOut.c    ****         
 234:AudioOut.c    ****         //CyDelayUs(20); /* Provide enough time for DMA to transfer the last audio samples complete
 235:AudioOut.c    ****    
 236:AudioOut.c    ****         /* Stop / Disable DMA - Needed to reset to start of chain */
 237:AudioOut.c    ****         //I2STxDMA_ChDisable();
 238:AudioOut.c    **** 		
 239:AudioOut.c    **** 		/* Make DMA transaction count zero */ 
 240:AudioOut.c    ****         //CYDMA_DESCR_BASE.descriptor[I2STxDMA_CHANNEL][0].status &= 0xFFFF0000;
 241:AudioOut.c    **** 		
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 60


 242:AudioOut.c    ****         /* Disable power to speaker output */
 243:AudioOut.c    ****         //Codec_PowerOffControl(CODEC_POWER_CTRL_OUTPD);
 244:AudioOut.c    ****     //}    
 245:AudioOut.c    **** }
 622              		.loc 1 245 0
 623              		@ sp needed
 624 0000 7047     		bx	lr
 625              		.cfi_endproc
 626              	.LFE132:
 627              		.size	Stop_I2S_Tx, .-Stop_I2S_Tx
 628              		.comm	buffer_index2,4,4
 629              		.comm	buffer_index,4,4
 630              		.comm	output_buffer2,4096,4
 631              		.comm	output_buffer,4096,4
 632              		.global	outPlaying
 633              		.global	envelope_multiplier
 634              		.global	lfo_multiplier
 635              		.comm	lfo_freq,4,4
 636              		.comm	freq8,2,2
 637              		.comm	freq7,2,2
 638              		.comm	freq6,2,2
 639              		.comm	freq5,2,2
 640              		.comm	freq4,2,2
 641              		.comm	freq3,2,2
 642              		.comm	freq2,2,2
 643              		.comm	freq,2,2
 644              		.comm	v8,16,4
 645              		.comm	v7,16,4
 646              		.comm	v6,16,4
 647              		.comm	v5,16,4
 648              		.comm	v4,16,4
 649              		.comm	v3,16,4
 650              		.comm	v2,16,4
 651              		.comm	v1,16,4
 652              		.comm	lfo_sine,256,4
 653              		.comm	base_sq,4096,4
 654              		.comm	base_pos_saw,4096,4
 655              		.comm	base_sine,8192,4
 656 0002 C046     		.data
 657              		.align	1
 658              		.set	.LANCHOR1,. + 0
 659              		.type	lfo_multiplier, %object
 660              		.size	lfo_multiplier, 2
 661              	lfo_multiplier:
 662 0000 0100     		.short	1
 663              		.bss
 664              		.align	2
 665              		.set	.LANCHOR0,. + 0
 666              		.type	lfo_index.8138, %object
 667              		.size	lfo_index.8138, 4
 668              	lfo_index.8138:
 669 0000 00000000 		.space	4
 670              		.type	index.8130, %object
 671              		.size	index.8130, 4
 672              	index.8130:
 673 0004 00000000 		.space	4
 674              		.type	index2.8131, %object
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 61


 675              		.size	index2.8131, 4
 676              	index2.8131:
 677 0008 00000000 		.space	4
 678              		.type	index3.8132, %object
 679              		.size	index3.8132, 4
 680              	index3.8132:
 681 000c 00000000 		.space	4
 682              		.type	index4.8133, %object
 683              		.size	index4.8133, 4
 684              	index4.8133:
 685 0010 00000000 		.space	4
 686              		.type	index5.8134, %object
 687              		.size	index5.8134, 4
 688              	index5.8134:
 689 0014 00000000 		.space	4
 690              		.type	index6.8135, %object
 691              		.size	index6.8135, 4
 692              	index6.8135:
 693 0018 00000000 		.space	4
 694              		.type	index7.8136, %object
 695              		.size	index7.8136, 4
 696              	index7.8136:
 697 001c 00000000 		.space	4
 698              		.type	index8.8137, %object
 699              		.size	index8.8137, 4
 700              	index8.8137:
 701 0020 00000000 		.space	4
 702              		.type	outPlaying, %object
 703              		.size	outPlaying, 1
 704              	outPlaying:
 705 0024 00       		.space	1
 706 0025 00       		.space	1
 707              		.type	envelope_multiplier, %object
 708              		.size	envelope_multiplier, 2
 709              	envelope_multiplier:
 710 0026 0000     		.space	2
 711              		.text
 712              	.Letext0:
 713              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 714              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 715              		.file 7 "Generated_Source\\PSoC4/cytypes.h"
 716              		.file 8 "Generated_Source\\PSoC4/CyDMA.h"
 717              		.file 9 "oscillator.h"
 718              		.file 10 "waves.h"
 719              		.file 11 "globals.h"
 720              		.file 12 "Generated_Source\\PSoC4/isr_SPIDone.h"
 721              		.file 13 "Generated_Source\\PSoC4/isr_I2STxDone.h"
 722              		.file 14 "Generated_Source\\PSoC4/CyLib.h"
 723              		.section	.debug_info,"",%progbits
 724              	.Ldebug_info0:
 725 0000 40090000 		.4byte	0x940
 726 0004 0400     		.2byte	0x4
 727 0006 00000000 		.4byte	.Ldebug_abbrev0
 728 000a 04       		.byte	0x4
 729 000b 01       		.uleb128 0x1
 730 000c DD000000 		.4byte	.LASF96
 731 0010 0C       		.byte	0xc
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 62


 732 0011 7A020000 		.4byte	.LASF97
 733 0015 85020000 		.4byte	.LASF98
 734 0019 00000000 		.4byte	.Ldebug_ranges0+0
 735 001d 00000000 		.4byte	0
 736 0021 00000000 		.4byte	.Ldebug_line0
 737 0025 02       		.uleb128 0x2
 738 0026 A3010000 		.4byte	.LASF0
 739 002a 05       		.byte	0x5
 740 002b 1B       		.byte	0x1b
 741 002c 30000000 		.4byte	0x30
 742 0030 03       		.uleb128 0x3
 743 0031 01       		.byte	0x1
 744 0032 06       		.byte	0x6
 745 0033 61030000 		.4byte	.LASF2
 746 0037 02       		.uleb128 0x2
 747 0038 DA050000 		.4byte	.LASF1
 748 003c 05       		.byte	0x5
 749 003d 1D       		.byte	0x1d
 750 003e 42000000 		.4byte	0x42
 751 0042 03       		.uleb128 0x3
 752 0043 01       		.byte	0x1
 753 0044 08       		.byte	0x8
 754 0045 45030000 		.4byte	.LASF3
 755 0049 02       		.uleb128 0x2
 756 004a 18000000 		.4byte	.LASF4
 757 004e 05       		.byte	0x5
 758 004f 29       		.byte	0x29
 759 0050 54000000 		.4byte	0x54
 760 0054 03       		.uleb128 0x3
 761 0055 02       		.byte	0x2
 762 0056 05       		.byte	0x5
 763 0057 D3000000 		.4byte	.LASF5
 764 005b 02       		.uleb128 0x2
 765 005c C8000000 		.4byte	.LASF6
 766 0060 05       		.byte	0x5
 767 0061 2B       		.byte	0x2b
 768 0062 66000000 		.4byte	0x66
 769 0066 03       		.uleb128 0x3
 770 0067 02       		.byte	0x2
 771 0068 07       		.byte	0x7
 772 0069 4C040000 		.4byte	.LASF7
 773 006d 03       		.uleb128 0x3
 774 006e 04       		.byte	0x4
 775 006f 05       		.byte	0x5
 776 0070 1C020000 		.4byte	.LASF8
 777 0074 02       		.uleb128 0x2
 778 0075 28050000 		.4byte	.LASF9
 779 0079 05       		.byte	0x5
 780 007a 41       		.byte	0x41
 781 007b 7F000000 		.4byte	0x7f
 782 007f 03       		.uleb128 0x3
 783 0080 04       		.byte	0x4
 784 0081 07       		.byte	0x7
 785 0082 E5040000 		.4byte	.LASF10
 786 0086 03       		.uleb128 0x3
 787 0087 08       		.byte	0x8
 788 0088 05       		.byte	0x5
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 63


 789 0089 E9010000 		.4byte	.LASF11
 790 008d 03       		.uleb128 0x3
 791 008e 08       		.byte	0x8
 792 008f 07       		.byte	0x7
 793 0090 6D030000 		.4byte	.LASF12
 794 0094 04       		.uleb128 0x4
 795 0095 04       		.byte	0x4
 796 0096 05       		.byte	0x5
 797 0097 696E7400 		.ascii	"int\000"
 798 009b 03       		.uleb128 0x3
 799 009c 04       		.byte	0x4
 800 009d 07       		.byte	0x7
 801 009e B2030000 		.4byte	.LASF13
 802 00a2 02       		.uleb128 0x2
 803 00a3 53000000 		.4byte	.LASF14
 804 00a7 06       		.byte	0x6
 805 00a8 14       		.byte	0x14
 806 00a9 25000000 		.4byte	0x25
 807 00ad 02       		.uleb128 0x2
 808 00ae 54050000 		.4byte	.LASF15
 809 00b2 06       		.byte	0x6
 810 00b3 18       		.byte	0x18
 811 00b4 37000000 		.4byte	0x37
 812 00b8 02       		.uleb128 0x2
 813 00b9 5F040000 		.4byte	.LASF16
 814 00bd 06       		.byte	0x6
 815 00be 20       		.byte	0x20
 816 00bf 49000000 		.4byte	0x49
 817 00c3 02       		.uleb128 0x2
 818 00c4 D7030000 		.4byte	.LASF17
 819 00c8 06       		.byte	0x6
 820 00c9 24       		.byte	0x24
 821 00ca 5B000000 		.4byte	0x5b
 822 00ce 02       		.uleb128 0x2
 823 00cf 9E030000 		.4byte	.LASF18
 824 00d3 06       		.byte	0x6
 825 00d4 30       		.byte	0x30
 826 00d5 74000000 		.4byte	0x74
 827 00d9 05       		.uleb128 0x5
 828 00da 9D010000 		.4byte	.LASF19
 829 00de 07       		.byte	0x7
 830 00df E401     		.2byte	0x1e4
 831 00e1 42000000 		.4byte	0x42
 832 00e5 05       		.uleb128 0x5
 833 00e6 D9040000 		.4byte	.LASF20
 834 00ea 07       		.byte	0x7
 835 00eb E601     		.2byte	0x1e6
 836 00ed 7F000000 		.4byte	0x7f
 837 00f1 05       		.uleb128 0x5
 838 00f2 F7040000 		.4byte	.LASF21
 839 00f6 07       		.byte	0x7
 840 00f7 E901     		.2byte	0x1e9
 841 00f9 6D000000 		.4byte	0x6d
 842 00fd 03       		.uleb128 0x3
 843 00fe 04       		.byte	0x4
 844 00ff 04       		.byte	0x4
 845 0100 CE010000 		.4byte	.LASF22
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 64


 846 0104 03       		.uleb128 0x3
 847 0105 08       		.byte	0x8
 848 0106 04       		.byte	0x4
 849 0107 FD040000 		.4byte	.LASF23
 850 010b 03       		.uleb128 0x3
 851 010c 01       		.byte	0x1
 852 010d 08       		.byte	0x8
 853 010e 30040000 		.4byte	.LASF24
 854 0112 05       		.uleb128 0x5
 855 0113 E0040000 		.4byte	.LASF25
 856 0117 07       		.byte	0x7
 857 0118 8E02     		.2byte	0x28e
 858 011a 1E010000 		.4byte	0x11e
 859 011e 06       		.uleb128 0x6
 860 011f D9000000 		.4byte	0xd9
 861 0123 05       		.uleb128 0x5
 862 0124 FE030000 		.4byte	.LASF26
 863 0128 07       		.byte	0x7
 864 0129 9002     		.2byte	0x290
 865 012b 2F010000 		.4byte	0x12f
 866 012f 06       		.uleb128 0x6
 867 0130 E5000000 		.4byte	0xe5
 868 0134 07       		.uleb128 0x7
 869 0135 04       		.byte	0x4
 870 0136 3A010000 		.4byte	0x13a
 871 013a 08       		.uleb128 0x8
 872 013b 03       		.uleb128 0x3
 873 013c 08       		.byte	0x8
 874 013d 04       		.byte	0x4
 875 013e 00000000 		.4byte	.LASF27
 876 0142 03       		.uleb128 0x3
 877 0143 04       		.byte	0x4
 878 0144 07       		.byte	0x7
 879 0145 84050000 		.4byte	.LASF28
 880 0149 09       		.uleb128 0x9
 881 014a 04       		.byte	0x4
 882 014b 02       		.uleb128 0x2
 883 014c B3050000 		.4byte	.LASF29
 884 0150 08       		.byte	0x8
 885 0151 67       		.byte	0x67
 886 0152 34010000 		.4byte	0x134
 887 0156 0A       		.uleb128 0xa
 888 0157 B4040000 		.4byte	.LASF99
 889 015b 10       		.byte	0x10
 890 015c 09       		.byte	0x9
 891 015d 05       		.byte	0x5
 892 015e 9F010000 		.4byte	0x19f
 893 0162 0B       		.uleb128 0xb
 894 0163 78000000 		.4byte	.LASF30
 895 0167 09       		.byte	0x9
 896 0168 06       		.byte	0x6
 897 0169 CE000000 		.4byte	0xce
 898 016d 00       		.byte	0
 899 016e 0B       		.uleb128 0xb
 900 016f DB020000 		.4byte	.LASF31
 901 0173 09       		.byte	0x9
 902 0174 07       		.byte	0x7
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 65


 903 0175 C3000000 		.4byte	0xc3
 904 0179 04       		.byte	0x4
 905 017a 0B       		.uleb128 0xb
 906 017b 69020000 		.4byte	.LASF32
 907 017f 09       		.byte	0x9
 908 0180 08       		.byte	0x8
 909 0181 AD000000 		.4byte	0xad
 910 0185 06       		.byte	0x6
 911 0186 0B       		.uleb128 0xb
 912 0187 E4010000 		.4byte	.LASF33
 913 018b 09       		.byte	0x9
 914 018c 09       		.byte	0x9
 915 018d 94000000 		.4byte	0x94
 916 0191 08       		.byte	0x8
 917 0192 0B       		.uleb128 0xb
 918 0193 6D000000 		.4byte	.LASF34
 919 0197 09       		.byte	0x9
 920 0198 0A       		.byte	0xa
 921 0199 AD000000 		.4byte	0xad
 922 019d 0C       		.byte	0xc
 923 019e 00       		.byte	0
 924 019f 0C       		.uleb128 0xc
 925 01a0 43020000 		.4byte	.LASF37
 926 01a4 04       		.byte	0x4
 927 01a5 1501     		.2byte	0x115
 928 01a7 03       		.byte	0x3
 929 01a8 B9010000 		.4byte	0x1b9
 930 01ac 0D       		.uleb128 0xd
 931 01ad E4050000 		.4byte	.LASF35
 932 01b1 04       		.byte	0x4
 933 01b2 1501     		.2byte	0x115
 934 01b4 F1000000 		.4byte	0xf1
 935 01b8 00       		.byte	0
 936 01b9 0E       		.uleb128 0xe
 937 01ba BC010000 		.4byte	.LASF100
 938 01be 04       		.byte	0x4
 939 01bf 5E       		.byte	0x5e
 940 01c0 03       		.byte	0x3
 941 01c1 0F       		.uleb128 0xf
 942 01c2 25020000 		.4byte	.LASF44
 943 01c6 04       		.byte	0x4
 944 01c7 3D03     		.2byte	0x33d
 945 01c9 4B010000 		.4byte	0x14b
 946 01cd 03       		.byte	0x3
 947 01ce DF010000 		.4byte	0x1df
 948 01d2 0D       		.uleb128 0xd
 949 01d3 8D050000 		.4byte	.LASF36
 950 01d7 04       		.byte	0x4
 951 01d8 3D03     		.2byte	0x33d
 952 01da 4B010000 		.4byte	0x14b
 953 01de 00       		.byte	0
 954 01df 0C       		.uleb128 0xc
 955 01e0 3D050000 		.4byte	.LASF38
 956 01e4 04       		.byte	0x4
 957 01e5 7201     		.2byte	0x172
 958 01e7 03       		.byte	0x3
 959 01e8 05020000 		.4byte	0x205
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 66


 960 01ec 0D       		.uleb128 0xd
 961 01ed E4050000 		.4byte	.LASF35
 962 01f1 04       		.byte	0x4
 963 01f2 7201     		.2byte	0x172
 964 01f4 F1000000 		.4byte	0xf1
 965 01f8 0D       		.uleb128 0xd
 966 01f9 3A000000 		.4byte	.LASF39
 967 01fd 04       		.byte	0x4
 968 01fe 7201     		.2byte	0x172
 969 0200 49010000 		.4byte	0x149
 970 0204 00       		.byte	0
 971 0205 0C       		.uleb128 0xc
 972 0206 2E030000 		.4byte	.LASF40
 973 020a 04       		.byte	0x4
 974 020b 4401     		.2byte	0x144
 975 020d 03       		.byte	0x3
 976 020e 2B020000 		.4byte	0x22b
 977 0212 0D       		.uleb128 0xd
 978 0213 E4050000 		.4byte	.LASF35
 979 0217 04       		.byte	0x4
 980 0218 4401     		.2byte	0x144
 981 021a F1000000 		.4byte	0xf1
 982 021e 0D       		.uleb128 0xd
 983 021f A2040000 		.4byte	.LASF41
 984 0223 04       		.byte	0x4
 985 0224 4401     		.2byte	0x144
 986 0226 49010000 		.4byte	0x149
 987 022a 00       		.byte	0
 988 022b 0C       		.uleb128 0xc
 989 022c 67040000 		.4byte	.LASF42
 990 0230 04       		.byte	0x4
 991 0231 DB01     		.2byte	0x1db
 992 0233 03       		.byte	0x3
 993 0234 51020000 		.4byte	0x251
 994 0238 0D       		.uleb128 0xd
 995 0239 E4050000 		.4byte	.LASF35
 996 023d 04       		.byte	0x4
 997 023e DB01     		.2byte	0x1db
 998 0240 F1000000 		.4byte	0xf1
 999 0244 0D       		.uleb128 0xd
 1000 0245 AC010000 		.4byte	.LASF43
 1001 0249 04       		.byte	0x4
 1002 024a DB01     		.2byte	0x1db
 1003 024c F1000000 		.4byte	0xf1
 1004 0250 00       		.byte	0
 1005 0251 0F       		.uleb128 0xf
 1006 0252 7E010000 		.4byte	.LASF45
 1007 0256 03       		.byte	0x3
 1008 0257 3D03     		.2byte	0x33d
 1009 0259 4B010000 		.4byte	0x14b
 1010 025d 03       		.byte	0x3
 1011 025e 6F020000 		.4byte	0x26f
 1012 0262 0D       		.uleb128 0xd
 1013 0263 8D050000 		.4byte	.LASF36
 1014 0267 03       		.byte	0x3
 1015 0268 3D03     		.2byte	0x33d
 1016 026a 4B010000 		.4byte	0x14b
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 67


 1017 026e 00       		.byte	0
 1018 026f 0F       		.uleb128 0xf
 1019 0270 BA040000 		.4byte	.LASF46
 1020 0274 02       		.byte	0x2
 1021 0275 3D03     		.2byte	0x33d
 1022 0277 4B010000 		.4byte	0x14b
 1023 027b 03       		.byte	0x3
 1024 027c 8D020000 		.4byte	0x28d
 1025 0280 0D       		.uleb128 0xd
 1026 0281 8D050000 		.4byte	.LASF36
 1027 0285 02       		.byte	0x2
 1028 0286 3D03     		.2byte	0x33d
 1029 0288 4B010000 		.4byte	0x14b
 1030 028c 00       		.byte	0
 1031 028d 10       		.uleb128 0x10
 1032 028e F7010000 		.4byte	.LASF47
 1033 0292 01       		.byte	0x1
 1034 0293 55       		.byte	0x55
 1035 0294 00000000 		.4byte	.LFB130
 1036 0298 14010000 		.4byte	.LFE130-.LFB130
 1037 029c 01       		.uleb128 0x1
 1038 029d 9C       		.byte	0x9c
 1039 029e 5E050000 		.4byte	0x55e
 1040 02a2 11       		.uleb128 0x11
 1041 02a3 6F020000 		.4byte	0x26f
 1042 02a7 14000000 		.4byte	.LBB24
 1043 02ab 08000000 		.4byte	.LBE24-.LBB24
 1044 02af 01       		.byte	0x1
 1045 02b0 59       		.byte	0x59
 1046 02b1 CA020000 		.4byte	0x2ca
 1047 02b5 12       		.uleb128 0x12
 1048 02b6 80020000 		.4byte	0x280
 1049 02ba 13       		.uleb128 0x13
 1050 02bb 1C000000 		.4byte	.LVL2
 1051 02bf A9080000 		.4byte	0x8a9
 1052 02c3 14       		.uleb128 0x14
 1053 02c4 01       		.uleb128 0x1
 1054 02c5 50       		.byte	0x50
 1055 02c6 01       		.uleb128 0x1
 1056 02c7 30       		.byte	0x30
 1057 02c8 00       		.byte	0
 1058 02c9 00       		.byte	0
 1059 02ca 11       		.uleb128 0x11
 1060 02cb 51020000 		.4byte	0x251
 1061 02cf 1C000000 		.4byte	.LBB26
 1062 02d3 08000000 		.4byte	.LBE26-.LBB26
 1063 02d7 01       		.byte	0x1
 1064 02d8 5A       		.byte	0x5a
 1065 02d9 F2020000 		.4byte	0x2f2
 1066 02dd 12       		.uleb128 0x12
 1067 02de 62020000 		.4byte	0x262
 1068 02e2 13       		.uleb128 0x13
 1069 02e3 24000000 		.4byte	.LVL3
 1070 02e7 A9080000 		.4byte	0x8a9
 1071 02eb 14       		.uleb128 0x14
 1072 02ec 01       		.uleb128 0x1
 1073 02ed 50       		.byte	0x50
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 68


 1074 02ee 01       		.uleb128 0x1
 1075 02ef 32       		.byte	0x32
 1076 02f0 00       		.byte	0
 1077 02f1 00       		.byte	0
 1078 02f2 11       		.uleb128 0x11
 1079 02f3 2B020000 		.4byte	0x22b
 1080 02f7 32000000 		.4byte	.LBB28
 1081 02fb 0E000000 		.4byte	.LBE28-.LBB28
 1082 02ff 01       		.byte	0x1
 1083 0300 61       		.byte	0x61
 1084 0301 32030000 		.4byte	0x332
 1085 0305 15       		.uleb128 0x15
 1086 0306 44020000 		.4byte	0x244
 1087 030a 00000000 		.4byte	.LLST0
 1088 030e 15       		.uleb128 0x15
 1089 030f 38020000 		.4byte	0x238
 1090 0313 16000000 		.4byte	.LLST1
 1091 0317 13       		.uleb128 0x13
 1092 0318 40000000 		.4byte	.LVL7
 1093 031c B4080000 		.4byte	0x8b4
 1094 0320 14       		.uleb128 0x14
 1095 0321 01       		.uleb128 0x1
 1096 0322 50       		.byte	0x50
 1097 0323 01       		.uleb128 0x1
 1098 0324 31       		.byte	0x31
 1099 0325 14       		.uleb128 0x14
 1100 0326 01       		.uleb128 0x1
 1101 0327 51       		.byte	0x51
 1102 0328 01       		.uleb128 0x1
 1103 0329 30       		.byte	0x30
 1104 032a 14       		.uleb128 0x14
 1105 032b 01       		.uleb128 0x1
 1106 032c 52       		.byte	0x52
 1107 032d 02       		.uleb128 0x2
 1108 032e 75       		.byte	0x75
 1109 032f 00       		.sleb128 0
 1110 0330 00       		.byte	0
 1111 0331 00       		.byte	0
 1112 0332 11       		.uleb128 0x11
 1113 0333 2B020000 		.4byte	0x22b
 1114 0337 40000000 		.4byte	.LBB30
 1115 033b 0A000000 		.4byte	.LBE30-.LBB30
 1116 033f 01       		.byte	0x1
 1117 0340 62       		.byte	0x62
 1118 0341 72030000 		.4byte	0x372
 1119 0345 15       		.uleb128 0x15
 1120 0346 44020000 		.4byte	0x244
 1121 034a 2A000000 		.4byte	.LLST2
 1122 034e 15       		.uleb128 0x15
 1123 034f 38020000 		.4byte	0x238
 1124 0353 40000000 		.4byte	.LLST3
 1125 0357 13       		.uleb128 0x13
 1126 0358 4A000000 		.4byte	.LVL8
 1127 035c B4080000 		.4byte	0x8b4
 1128 0360 14       		.uleb128 0x14
 1129 0361 01       		.uleb128 0x1
 1130 0362 50       		.byte	0x50
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 69


 1131 0363 01       		.uleb128 0x1
 1132 0364 31       		.byte	0x31
 1133 0365 14       		.uleb128 0x14
 1134 0366 01       		.uleb128 0x1
 1135 0367 51       		.byte	0x51
 1136 0368 01       		.uleb128 0x1
 1137 0369 31       		.byte	0x31
 1138 036a 14       		.uleb128 0x14
 1139 036b 01       		.uleb128 0x1
 1140 036c 52       		.byte	0x52
 1141 036d 02       		.uleb128 0x2
 1142 036e 75       		.byte	0x75
 1143 036f 00       		.sleb128 0
 1144 0370 00       		.byte	0
 1145 0371 00       		.byte	0
 1146 0372 11       		.uleb128 0x11
 1147 0373 05020000 		.4byte	0x205
 1148 0377 4A000000 		.4byte	.LBB32
 1149 037b 0A000000 		.4byte	.LBE32-.LBB32
 1150 037f 01       		.byte	0x1
 1151 0380 63       		.byte	0x63
 1152 0381 B2030000 		.4byte	0x3b2
 1153 0385 15       		.uleb128 0x15
 1154 0386 1E020000 		.4byte	0x21e
 1155 038a 54000000 		.4byte	.LLST4
 1156 038e 15       		.uleb128 0x15
 1157 038f 12020000 		.4byte	0x212
 1158 0393 6C000000 		.4byte	.LLST5
 1159 0397 13       		.uleb128 0x13
 1160 0398 54000000 		.4byte	.LVL9
 1161 039c BF080000 		.4byte	0x8bf
 1162 03a0 14       		.uleb128 0x14
 1163 03a1 01       		.uleb128 0x1
 1164 03a2 50       		.byte	0x50
 1165 03a3 01       		.uleb128 0x1
 1166 03a4 31       		.byte	0x31
 1167 03a5 14       		.uleb128 0x14
 1168 03a6 01       		.uleb128 0x1
 1169 03a7 51       		.byte	0x51
 1170 03a8 01       		.uleb128 0x1
 1171 03a9 30       		.byte	0x30
 1172 03aa 14       		.uleb128 0x14
 1173 03ab 01       		.uleb128 0x1
 1174 03ac 52       		.byte	0x52
 1175 03ad 02       		.uleb128 0x2
 1176 03ae 74       		.byte	0x74
 1177 03af 00       		.sleb128 0
 1178 03b0 00       		.byte	0
 1179 03b1 00       		.byte	0
 1180 03b2 11       		.uleb128 0x11
 1181 03b3 05020000 		.4byte	0x205
 1182 03b7 54000000 		.4byte	.LBB34
 1183 03bb 0A000000 		.4byte	.LBE34-.LBB34
 1184 03bf 01       		.byte	0x1
 1185 03c0 64       		.byte	0x64
 1186 03c1 F5030000 		.4byte	0x3f5
 1187 03c5 15       		.uleb128 0x15
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 70


 1188 03c6 1E020000 		.4byte	0x21e
 1189 03ca 80000000 		.4byte	.LLST6
 1190 03ce 15       		.uleb128 0x15
 1191 03cf 12020000 		.4byte	0x212
 1192 03d3 98000000 		.4byte	.LLST7
 1193 03d7 13       		.uleb128 0x13
 1194 03d8 5E000000 		.4byte	.LVL10
 1195 03dc BF080000 		.4byte	0x8bf
 1196 03e0 14       		.uleb128 0x14
 1197 03e1 01       		.uleb128 0x1
 1198 03e2 50       		.byte	0x50
 1199 03e3 01       		.uleb128 0x1
 1200 03e4 31       		.byte	0x31
 1201 03e5 14       		.uleb128 0x14
 1202 03e6 01       		.uleb128 0x1
 1203 03e7 51       		.byte	0x51
 1204 03e8 01       		.uleb128 0x1
 1205 03e9 30       		.byte	0x30
 1206 03ea 14       		.uleb128 0x14
 1207 03eb 01       		.uleb128 0x1
 1208 03ec 52       		.byte	0x52
 1209 03ed 05       		.uleb128 0x5
 1210 03ee 03       		.byte	0x3
 1211 03ef 00000000 		.4byte	output_buffer
 1212 03f3 00       		.byte	0
 1213 03f4 00       		.byte	0
 1214 03f5 11       		.uleb128 0x11
 1215 03f6 DF010000 		.4byte	0x1df
 1216 03fa 5E000000 		.4byte	.LBB36
 1217 03fe 0A000000 		.4byte	.LBE36-.LBB36
 1218 0402 01       		.byte	0x1
 1219 0403 65       		.byte	0x65
 1220 0404 38040000 		.4byte	0x438
 1221 0408 15       		.uleb128 0x15
 1222 0409 F8010000 		.4byte	0x1f8
 1223 040d AC000000 		.4byte	.LLST8
 1224 0411 15       		.uleb128 0x15
 1225 0412 EC010000 		.4byte	0x1ec
 1226 0416 C4000000 		.4byte	.LLST9
 1227 041a 13       		.uleb128 0x13
 1228 041b 68000000 		.4byte	.LVL11
 1229 041f CA080000 		.4byte	0x8ca
 1230 0423 14       		.uleb128 0x14
 1231 0424 01       		.uleb128 0x1
 1232 0425 50       		.byte	0x50
 1233 0426 01       		.uleb128 0x1
 1234 0427 31       		.byte	0x31
 1235 0428 14       		.uleb128 0x14
 1236 0429 01       		.uleb128 0x1
 1237 042a 51       		.byte	0x51
 1238 042b 01       		.uleb128 0x1
 1239 042c 30       		.byte	0x30
 1240 042d 14       		.uleb128 0x14
 1241 042e 01       		.uleb128 0x1
 1242 042f 52       		.byte	0x52
 1243 0430 05       		.uleb128 0x5
 1244 0431 0C       		.byte	0xc
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 71


 1245 0432 45000F40 		.4byte	0x400f0045
 1246 0436 00       		.byte	0
 1247 0437 00       		.byte	0
 1248 0438 11       		.uleb128 0x11
 1249 0439 C1010000 		.4byte	0x1c1
 1250 043d 68000000 		.4byte	.LBB38
 1251 0441 0A000000 		.4byte	.LBE38-.LBB38
 1252 0445 01       		.byte	0x1
 1253 0446 68       		.byte	0x68
 1254 0447 66040000 		.4byte	0x466
 1255 044b 12       		.uleb128 0x12
 1256 044c D2010000 		.4byte	0x1d2
 1257 0450 13       		.uleb128 0x13
 1258 0451 72000000 		.4byte	.LVL12
 1259 0455 A9080000 		.4byte	0x8a9
 1260 0459 14       		.uleb128 0x14
 1261 045a 01       		.uleb128 0x1
 1262 045b 50       		.byte	0x50
 1263 045c 01       		.uleb128 0x1
 1264 045d 31       		.byte	0x31
 1265 045e 14       		.uleb128 0x14
 1266 045f 01       		.uleb128 0x1
 1267 0460 51       		.byte	0x51
 1268 0461 02       		.uleb128 0x2
 1269 0462 74       		.byte	0x74
 1270 0463 00       		.sleb128 0
 1271 0464 00       		.byte	0
 1272 0465 00       		.byte	0
 1273 0466 11       		.uleb128 0x11
 1274 0467 B9010000 		.4byte	0x1b9
 1275 046b 72000000 		.4byte	.LBB40
 1276 046f 06000000 		.4byte	.LBE40-.LBB40
 1277 0473 01       		.byte	0x1
 1278 0474 69       		.byte	0x69
 1279 0475 89040000 		.4byte	0x489
 1280 0479 13       		.uleb128 0x13
 1281 047a 78000000 		.4byte	.LVL13
 1282 047e D5080000 		.4byte	0x8d5
 1283 0482 14       		.uleb128 0x14
 1284 0483 01       		.uleb128 0x1
 1285 0484 50       		.byte	0x50
 1286 0485 01       		.uleb128 0x1
 1287 0486 31       		.byte	0x31
 1288 0487 00       		.byte	0
 1289 0488 00       		.byte	0
 1290 0489 11       		.uleb128 0x11
 1291 048a 9F010000 		.4byte	0x19f
 1292 048e 78000000 		.4byte	.LBB42
 1293 0492 08000000 		.4byte	.LBE42-.LBB42
 1294 0496 01       		.byte	0x1
 1295 0497 70       		.byte	0x70
 1296 0498 BA040000 		.4byte	0x4ba
 1297 049c 15       		.uleb128 0x15
 1298 049d AC010000 		.4byte	0x1ac
 1299 04a1 D8000000 		.4byte	.LLST10
 1300 04a5 13       		.uleb128 0x13
 1301 04a6 80000000 		.4byte	.LVL14
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 72


 1302 04aa E0080000 		.4byte	0x8e0
 1303 04ae 14       		.uleb128 0x14
 1304 04af 01       		.uleb128 0x1
 1305 04b0 50       		.byte	0x50
 1306 04b1 01       		.uleb128 0x1
 1307 04b2 31       		.byte	0x31
 1308 04b3 14       		.uleb128 0x14
 1309 04b4 01       		.uleb128 0x1
 1310 04b5 51       		.byte	0x51
 1311 04b6 01       		.uleb128 0x1
 1312 04b7 30       		.byte	0x30
 1313 04b8 00       		.byte	0
 1314 04b9 00       		.byte	0
 1315 04ba 11       		.uleb128 0x11
 1316 04bb 9F010000 		.4byte	0x19f
 1317 04bf 80000000 		.4byte	.LBB44
 1318 04c3 08000000 		.4byte	.LBE44-.LBB44
 1319 04c7 01       		.byte	0x1
 1320 04c8 71       		.byte	0x71
 1321 04c9 EB040000 		.4byte	0x4eb
 1322 04cd 15       		.uleb128 0x15
 1323 04ce AC010000 		.4byte	0x1ac
 1324 04d2 EC000000 		.4byte	.LLST11
 1325 04d6 13       		.uleb128 0x13
 1326 04d7 88000000 		.4byte	.LVL15
 1327 04db E0080000 		.4byte	0x8e0
 1328 04df 14       		.uleb128 0x14
 1329 04e0 01       		.uleb128 0x1
 1330 04e1 50       		.byte	0x50
 1331 04e2 01       		.uleb128 0x1
 1332 04e3 31       		.byte	0x31
 1333 04e4 14       		.uleb128 0x14
 1334 04e5 01       		.uleb128 0x1
 1335 04e6 51       		.byte	0x51
 1336 04e7 01       		.uleb128 0x1
 1337 04e8 31       		.byte	0x31
 1338 04e9 00       		.byte	0
 1339 04ea 00       		.byte	0
 1340 04eb 16       		.uleb128 0x16
 1341 04ec 0C000000 		.4byte	.LVL0
 1342 04f0 EB080000 		.4byte	0x8eb
 1343 04f4 FF040000 		.4byte	0x4ff
 1344 04f8 14       		.uleb128 0x14
 1345 04f9 01       		.uleb128 0x1
 1346 04fa 50       		.byte	0x50
 1347 04fb 02       		.uleb128 0x2
 1348 04fc 74       		.byte	0x74
 1349 04fd 00       		.sleb128 0
 1350 04fe 00       		.byte	0
 1351 04ff 16       		.uleb128 0x16
 1352 0500 14000000 		.4byte	.LVL1
 1353 0504 F6080000 		.4byte	0x8f6
 1354 0508 16050000 		.4byte	0x516
 1355 050c 14       		.uleb128 0x14
 1356 050d 01       		.uleb128 0x1
 1357 050e 51       		.byte	0x51
 1358 050f 05       		.uleb128 0x5
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 73


 1359 0510 0C       		.byte	0xc
 1360 0511 40022540 		.4byte	0x40250240
 1361 0515 00       		.byte	0
 1362 0516 17       		.uleb128 0x17
 1363 0517 2A000000 		.4byte	.LVL4
 1364 051b 01090000 		.4byte	0x901
 1365 051f 17       		.uleb128 0x17
 1366 0520 2E000000 		.4byte	.LVL5
 1367 0524 0C090000 		.4byte	0x90c
 1368 0528 17       		.uleb128 0x17
 1369 0529 32000000 		.4byte	.LVL6
 1370 052d 17090000 		.4byte	0x917
 1371 0531 16       		.uleb128 0x16
 1372 0532 8E000000 		.4byte	.LVL16
 1373 0536 22090000 		.4byte	0x922
 1374 053a 45050000 		.4byte	0x545
 1375 053e 14       		.uleb128 0x14
 1376 053f 01       		.uleb128 0x1
 1377 0540 50       		.byte	0x50
 1378 0541 02       		.uleb128 0x2
 1379 0542 74       		.byte	0x74
 1380 0543 00       		.sleb128 0
 1381 0544 00       		.byte	0
 1382 0545 17       		.uleb128 0x17
 1383 0546 92000000 		.4byte	.LVL17
 1384 054a 2D090000 		.4byte	0x92d
 1385 054e 13       		.uleb128 0x13
 1386 054f 98000000 		.4byte	.LVL18
 1387 0553 38090000 		.4byte	0x938
 1388 0557 14       		.uleb128 0x14
 1389 0558 01       		.uleb128 0x1
 1390 0559 50       		.byte	0x50
 1391 055a 01       		.uleb128 0x1
 1392 055b 3E       		.byte	0x3e
 1393 055c 00       		.byte	0
 1394 055d 00       		.byte	0
 1395 055e 10       		.uleb128 0x10
 1396 055f 74050000 		.4byte	.LASF48
 1397 0563 01       		.byte	0x1
 1398 0564 94       		.byte	0x94
 1399 0565 00000000 		.4byte	.LFB131
 1400 0569 68020000 		.4byte	.LFE131-.LFB131
 1401 056d 01       		.uleb128 0x1
 1402 056e 9C       		.byte	0x9c
 1403 056f 5B060000 		.4byte	0x65b
 1404 0573 18       		.uleb128 0x18
 1405 0574 AD040000 		.4byte	.LASF101
 1406 0578 01       		.byte	0x1
 1407 0579 94       		.byte	0x94
 1408 057a 5B060000 		.4byte	0x65b
 1409 057e 00010000 		.4byte	.LLST12
 1410 0582 19       		.uleb128 0x19
 1411 0583 78010000 		.4byte	.LASF49
 1412 0587 01       		.byte	0x1
 1413 0588 96       		.byte	0x96
 1414 0589 CE000000 		.4byte	0xce
 1415 058d 05       		.uleb128 0x5
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 74


 1416 058e 03       		.byte	0x3
 1417 058f 04000000 		.4byte	index.8130
 1418 0593 19       		.uleb128 0x19
 1419 0594 82000000 		.4byte	.LASF50
 1420 0598 01       		.byte	0x1
 1421 0599 97       		.byte	0x97
 1422 059a CE000000 		.4byte	0xce
 1423 059e 05       		.uleb128 0x5
 1424 059f 03       		.byte	0x3
 1425 05a0 08000000 		.4byte	index2.8131
 1426 05a4 19       		.uleb128 0x19
 1427 05a5 89000000 		.4byte	.LASF51
 1428 05a9 01       		.byte	0x1
 1429 05aa 98       		.byte	0x98
 1430 05ab CE000000 		.4byte	0xce
 1431 05af 05       		.uleb128 0x5
 1432 05b0 03       		.byte	0x3
 1433 05b1 0C000000 		.4byte	index3.8132
 1434 05b5 19       		.uleb128 0x19
 1435 05b6 90000000 		.4byte	.LASF52
 1436 05ba 01       		.byte	0x1
 1437 05bb 99       		.byte	0x99
 1438 05bc CE000000 		.4byte	0xce
 1439 05c0 05       		.uleb128 0x5
 1440 05c1 03       		.byte	0x3
 1441 05c2 10000000 		.4byte	index4.8133
 1442 05c6 19       		.uleb128 0x19
 1443 05c7 97000000 		.4byte	.LASF53
 1444 05cb 01       		.byte	0x1
 1445 05cc 9A       		.byte	0x9a
 1446 05cd CE000000 		.4byte	0xce
 1447 05d1 05       		.uleb128 0x5
 1448 05d2 03       		.byte	0x3
 1449 05d3 14000000 		.4byte	index5.8134
 1450 05d7 19       		.uleb128 0x19
 1451 05d8 9E000000 		.4byte	.LASF54
 1452 05dc 01       		.byte	0x1
 1453 05dd 9B       		.byte	0x9b
 1454 05de CE000000 		.4byte	0xce
 1455 05e2 05       		.uleb128 0x5
 1456 05e3 03       		.byte	0x3
 1457 05e4 18000000 		.4byte	index6.8135
 1458 05e8 19       		.uleb128 0x19
 1459 05e9 A5000000 		.4byte	.LASF55
 1460 05ed 01       		.byte	0x1
 1461 05ee 9C       		.byte	0x9c
 1462 05ef CE000000 		.4byte	0xce
 1463 05f3 05       		.uleb128 0x5
 1464 05f4 03       		.byte	0x3
 1465 05f5 1C000000 		.4byte	index7.8136
 1466 05f9 19       		.uleb128 0x19
 1467 05fa AC000000 		.4byte	.LASF56
 1468 05fe 01       		.byte	0x1
 1469 05ff 9D       		.byte	0x9d
 1470 0600 CE000000 		.4byte	0xce
 1471 0604 05       		.uleb128 0x5
 1472 0605 03       		.byte	0x3
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 75


 1473 0606 20000000 		.4byte	index8.8137
 1474 060a 19       		.uleb128 0x19
 1475 060b 33050000 		.4byte	.LASF57
 1476 060f 01       		.byte	0x1
 1477 0610 9F       		.byte	0x9f
 1478 0611 CE000000 		.4byte	0xce
 1479 0615 05       		.uleb128 0x5
 1480 0616 03       		.byte	0x3
 1481 0617 00000000 		.4byte	lfo_index.8138
 1482 061b 1A       		.uleb128 0x1a
 1483 061c 2C000000 		.4byte	.LBB46
 1484 0620 E8010000 		.4byte	.LBE46-.LBB46
 1485 0624 1B       		.uleb128 0x1b
 1486 0625 6900     		.ascii	"i\000"
 1487 0627 01       		.byte	0x1
 1488 0628 A5       		.byte	0xa5
 1489 0629 94000000 		.4byte	0x94
 1490 062d 1F010000 		.4byte	.LLST13
 1491 0631 1A       		.uleb128 0x1a
 1492 0632 32000000 		.4byte	.LBB47
 1493 0636 D4010000 		.4byte	.LBE47-.LBB47
 1494 063a 1C       		.uleb128 0x1c
 1495 063b ED030000 		.4byte	.LASF58
 1496 063f 01       		.byte	0x1
 1497 0640 B9       		.byte	0xb9
 1498 0641 CE000000 		.4byte	0xce
 1499 0645 4B010000 		.4byte	.LLST14
 1500 0649 1C       		.uleb128 0x1c
 1501 064a 6B010000 		.4byte	.LASF59
 1502 064e 01       		.byte	0x1
 1503 064f C2       		.byte	0xc2
 1504 0650 CE000000 		.4byte	0xce
 1505 0654 69010000 		.4byte	.LLST15
 1506 0658 00       		.byte	0
 1507 0659 00       		.byte	0
 1508 065a 00       		.byte	0
 1509 065b 07       		.uleb128 0x7
 1510 065c 04       		.byte	0x4
 1511 065d A2000000 		.4byte	0xa2
 1512 0661 1D       		.uleb128 0x1d
 1513 0662 83040000 		.4byte	.LASF102
 1514 0666 01       		.byte	0x1
 1515 0667 E2       		.byte	0xe2
 1516 0668 00000000 		.4byte	.LFB132
 1517 066c 02000000 		.4byte	.LFE132-.LFB132
 1518 0670 01       		.uleb128 0x1
 1519 0671 9C       		.byte	0x9c
 1520 0672 1E       		.uleb128 0x1e
 1521 0673 B8000000 		.4byte	0xb8
 1522 0677 83060000 		.4byte	0x683
 1523 067b 1F       		.uleb128 0x1f
 1524 067c 42010000 		.4byte	0x142
 1525 0680 FF0F     		.2byte	0xfff
 1526 0682 00       		.byte	0
 1527 0683 20       		.uleb128 0x20
 1528 0684 5F020000 		.4byte	.LASF60
 1529 0688 0A       		.byte	0xa
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 76


 1530 0689 0F       		.byte	0xf
 1531 068a 72060000 		.4byte	0x672
 1532 068e 05       		.uleb128 0x5
 1533 068f 03       		.byte	0x3
 1534 0690 00000000 		.4byte	base_sine
 1535 0694 1E       		.uleb128 0x1e
 1536 0695 A2000000 		.4byte	0xa2
 1537 0699 A5060000 		.4byte	0x6a5
 1538 069d 1F       		.uleb128 0x1f
 1539 069e 42010000 		.4byte	0x142
 1540 06a2 FF0F     		.2byte	0xfff
 1541 06a4 00       		.byte	0
 1542 06a5 20       		.uleb128 0x20
 1543 06a6 11030000 		.4byte	.LASF61
 1544 06aa 0A       		.byte	0xa
 1545 06ab 10       		.byte	0x10
 1546 06ac 94060000 		.4byte	0x694
 1547 06b0 05       		.uleb128 0x5
 1548 06b1 03       		.byte	0x3
 1549 06b2 00000000 		.4byte	base_pos_saw
 1550 06b6 20       		.uleb128 0x20
 1551 06b7 44040000 		.4byte	.LASF62
 1552 06bb 0A       		.byte	0xa
 1553 06bc 13       		.byte	0x13
 1554 06bd 94060000 		.4byte	0x694
 1555 06c1 05       		.uleb128 0x5
 1556 06c2 03       		.byte	0x3
 1557 06c3 00000000 		.4byte	base_sq
 1558 06c7 1E       		.uleb128 0x1e
 1559 06c8 AD000000 		.4byte	0xad
 1560 06cc D7060000 		.4byte	0x6d7
 1561 06d0 21       		.uleb128 0x21
 1562 06d1 42010000 		.4byte	0x142
 1563 06d5 FF       		.byte	0xff
 1564 06d6 00       		.byte	0
 1565 06d7 20       		.uleb128 0x20
 1566 06d8 13040000 		.4byte	.LASF63
 1567 06dc 0A       		.byte	0xa
 1568 06dd 15       		.byte	0x15
 1569 06de C7060000 		.4byte	0x6c7
 1570 06e2 05       		.uleb128 0x5
 1571 06e3 03       		.byte	0x3
 1572 06e4 00000000 		.4byte	lfo_sine
 1573 06e8 1E       		.uleb128 0x1e
 1574 06e9 A2000000 		.4byte	0xa2
 1575 06ed F8060000 		.4byte	0x6f8
 1576 06f1 21       		.uleb128 0x21
 1577 06f2 42010000 		.4byte	0x142
 1578 06f6 1F       		.byte	0x1f
 1579 06f7 00       		.byte	0
 1580 06f8 22       		.uleb128 0x22
 1581 06f9 35040000 		.4byte	.LASF64
 1582 06fd 0B       		.byte	0xb
 1583 06fe 0B       		.byte	0xb
 1584 06ff E8060000 		.4byte	0x6e8
 1585 0703 22       		.uleb128 0x22
 1586 0704 96050000 		.4byte	.LASF65
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 77


 1587 0708 0B       		.byte	0xb
 1588 0709 0C       		.byte	0xc
 1589 070a E8060000 		.4byte	0x6e8
 1590 070e 20       		.uleb128 0x20
 1591 070f E4010000 		.4byte	.LASF33
 1592 0713 01       		.byte	0x1
 1593 0714 34       		.byte	0x34
 1594 0715 C3000000 		.4byte	0xc3
 1595 0719 05       		.uleb128 0x5
 1596 071a 03       		.byte	0x3
 1597 071b 00000000 		.4byte	freq
 1598 071f 20       		.uleb128 0x20
 1599 0720 0C000000 		.4byte	.LASF66
 1600 0724 01       		.byte	0x1
 1601 0725 35       		.byte	0x35
 1602 0726 C3000000 		.4byte	0xc3
 1603 072a 05       		.uleb128 0x5
 1604 072b 03       		.byte	0x3
 1605 072c 00000000 		.4byte	freq2
 1606 0730 20       		.uleb128 0x20
 1607 0731 12000000 		.4byte	.LASF67
 1608 0735 01       		.byte	0x1
 1609 0736 36       		.byte	0x36
 1610 0737 C3000000 		.4byte	0xc3
 1611 073b 05       		.uleb128 0x5
 1612 073c 03       		.byte	0x3
 1613 073d 00000000 		.4byte	freq3
 1614 0741 20       		.uleb128 0x20
 1615 0742 F8030000 		.4byte	.LASF68
 1616 0746 01       		.byte	0x1
 1617 0747 37       		.byte	0x37
 1618 0748 C3000000 		.4byte	0xc3
 1619 074c 05       		.uleb128 0x5
 1620 074d 03       		.byte	0x3
 1621 074e 00000000 		.4byte	freq4
 1622 0752 20       		.uleb128 0x20
 1623 0753 22000000 		.4byte	.LASF69
 1624 0757 01       		.byte	0x1
 1625 0758 38       		.byte	0x38
 1626 0759 C3000000 		.4byte	0xc3
 1627 075d 05       		.uleb128 0x5
 1628 075e 03       		.byte	0x3
 1629 075f 00000000 		.4byte	freq5
 1630 0763 20       		.uleb128 0x20
 1631 0764 2E000000 		.4byte	.LASF70
 1632 0768 01       		.byte	0x1
 1633 0769 3A       		.byte	0x3a
 1634 076a C3000000 		.4byte	0xc3
 1635 076e 05       		.uleb128 0x5
 1636 076f 03       		.byte	0x3
 1637 0770 00000000 		.4byte	freq7
 1638 0774 20       		.uleb128 0x20
 1639 0775 34000000 		.4byte	.LASF71
 1640 0779 01       		.byte	0x1
 1641 077a 3B       		.byte	0x3b
 1642 077b C3000000 		.4byte	0xc3
 1643 077f 05       		.uleb128 0x5
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 78


 1644 0780 03       		.byte	0x3
 1645 0781 00000000 		.4byte	freq8
 1646 0785 20       		.uleb128 0x20
 1647 0786 5C050000 		.4byte	.LASF72
 1648 078a 01       		.byte	0x1
 1649 078b 3C       		.byte	0x3c
 1650 078c CE000000 		.4byte	0xce
 1651 0790 05       		.uleb128 0x5
 1652 0791 03       		.byte	0x3
 1653 0792 00000000 		.4byte	lfo_freq
 1654 0796 20       		.uleb128 0x20
 1655 0797 65050000 		.4byte	.LASF73
 1656 079b 01       		.byte	0x1
 1657 079c 3D       		.byte	0x3d
 1658 079d C3000000 		.4byte	0xc3
 1659 07a1 05       		.uleb128 0x5
 1660 07a2 03       		.byte	0x3
 1661 07a3 00000000 		.4byte	lfo_multiplier
 1662 07a7 20       		.uleb128 0x20
 1663 07a8 1C040000 		.4byte	.LASF74
 1664 07ac 01       		.byte	0x1
 1665 07ad 3E       		.byte	0x3e
 1666 07ae C3000000 		.4byte	0xc3
 1667 07b2 05       		.uleb128 0x5
 1668 07b3 03       		.byte	0x3
 1669 07b4 00000000 		.4byte	envelope_multiplier
 1670 07b8 22       		.uleb128 0x22
 1671 07b9 D1020000 		.4byte	.LASF75
 1672 07bd 0B       		.byte	0xb
 1673 07be 1E       		.byte	0x1e
 1674 07bf C3000000 		.4byte	0xc3
 1675 07c3 23       		.uleb128 0x23
 1676 07c4 763100   		.ascii	"v1\000"
 1677 07c7 0B       		.byte	0xb
 1678 07c8 20       		.byte	0x20
 1679 07c9 56010000 		.4byte	0x156
 1680 07cd 05       		.uleb128 0x5
 1681 07ce 03       		.byte	0x3
 1682 07cf 00000000 		.4byte	v1
 1683 07d3 23       		.uleb128 0x23
 1684 07d4 763200   		.ascii	"v2\000"
 1685 07d7 0B       		.byte	0xb
 1686 07d8 21       		.byte	0x21
 1687 07d9 56010000 		.4byte	0x156
 1688 07dd 05       		.uleb128 0x5
 1689 07de 03       		.byte	0x3
 1690 07df 00000000 		.4byte	v2
 1691 07e3 23       		.uleb128 0x23
 1692 07e4 763300   		.ascii	"v3\000"
 1693 07e7 0B       		.byte	0xb
 1694 07e8 22       		.byte	0x22
 1695 07e9 56010000 		.4byte	0x156
 1696 07ed 05       		.uleb128 0x5
 1697 07ee 03       		.byte	0x3
 1698 07ef 00000000 		.4byte	v3
 1699 07f3 23       		.uleb128 0x23
 1700 07f4 763400   		.ascii	"v4\000"
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 79


 1701 07f7 0B       		.byte	0xb
 1702 07f8 23       		.byte	0x23
 1703 07f9 56010000 		.4byte	0x156
 1704 07fd 05       		.uleb128 0x5
 1705 07fe 03       		.byte	0x3
 1706 07ff 00000000 		.4byte	v4
 1707 0803 23       		.uleb128 0x23
 1708 0804 763500   		.ascii	"v5\000"
 1709 0807 0B       		.byte	0xb
 1710 0808 24       		.byte	0x24
 1711 0809 56010000 		.4byte	0x156
 1712 080d 05       		.uleb128 0x5
 1713 080e 03       		.byte	0x3
 1714 080f 00000000 		.4byte	v5
 1715 0813 23       		.uleb128 0x23
 1716 0814 763600   		.ascii	"v6\000"
 1717 0817 0B       		.byte	0xb
 1718 0818 25       		.byte	0x25
 1719 0819 56010000 		.4byte	0x156
 1720 081d 05       		.uleb128 0x5
 1721 081e 03       		.byte	0x3
 1722 081f 00000000 		.4byte	v6
 1723 0823 23       		.uleb128 0x23
 1724 0824 763700   		.ascii	"v7\000"
 1725 0827 0B       		.byte	0xb
 1726 0828 26       		.byte	0x26
 1727 0829 56010000 		.4byte	0x156
 1728 082d 05       		.uleb128 0x5
 1729 082e 03       		.byte	0x3
 1730 082f 00000000 		.4byte	v7
 1731 0833 23       		.uleb128 0x23
 1732 0834 763800   		.ascii	"v8\000"
 1733 0837 0B       		.byte	0xb
 1734 0838 27       		.byte	0x27
 1735 0839 56010000 		.4byte	0x156
 1736 083d 05       		.uleb128 0x5
 1737 083e 03       		.byte	0x3
 1738 083f 00000000 		.4byte	v8
 1739 0843 20       		.uleb128 0x20
 1740 0844 0E020000 		.4byte	.LASF76
 1741 0848 01       		.byte	0x1
 1742 0849 41       		.byte	0x41
 1743 084a 94060000 		.4byte	0x694
 1744 084e 05       		.uleb128 0x5
 1745 084f 03       		.byte	0x3
 1746 0850 00000000 		.4byte	output_buffer
 1747 0854 20       		.uleb128 0x20
 1748 0855 04040000 		.4byte	.LASF77
 1749 0859 01       		.byte	0x1
 1750 085a 42       		.byte	0x42
 1751 085b 94060000 		.4byte	0x694
 1752 085f 05       		.uleb128 0x5
 1753 0860 03       		.byte	0x3
 1754 0861 00000000 		.4byte	output_buffer2
 1755 0865 20       		.uleb128 0x20
 1756 0866 E0030000 		.4byte	.LASF78
 1757 086a 01       		.byte	0x1
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 80


 1758 086b 43       		.byte	0x43
 1759 086c CE000000 		.4byte	0xce
 1760 0870 05       		.uleb128 0x5
 1761 0871 03       		.byte	0x3
 1762 0872 00000000 		.4byte	buffer_index
 1763 0876 20       		.uleb128 0x20
 1764 0877 45000000 		.4byte	.LASF79
 1765 087b 01       		.byte	0x1
 1766 087c 44       		.byte	0x44
 1767 087d CE000000 		.4byte	0xce
 1768 0881 05       		.uleb128 0x5
 1769 0882 03       		.byte	0x3
 1770 0883 00000000 		.4byte	buffer_index2
 1771 0887 20       		.uleb128 0x20
 1772 0888 28000000 		.4byte	.LASF80
 1773 088c 01       		.byte	0x1
 1774 088d 39       		.byte	0x39
 1775 088e C3000000 		.4byte	0xc3
 1776 0892 05       		.uleb128 0x5
 1777 0893 03       		.byte	0x3
 1778 0894 00000000 		.4byte	freq6
 1779 0898 20       		.uleb128 0x20
 1780 0899 A7030000 		.4byte	.LASF81
 1781 089d 01       		.byte	0x1
 1782 089e 40       		.byte	0x40
 1783 089f D9000000 		.4byte	0xd9
 1784 08a3 05       		.uleb128 0x5
 1785 08a4 03       		.byte	0x3
 1786 08a5 00000000 		.4byte	outPlaying
 1787 08a9 24       		.uleb128 0x24
 1788 08aa 84030000 		.4byte	.LASF82
 1789 08ae 84030000 		.4byte	.LASF82
 1790 08b2 08       		.byte	0x8
 1791 08b3 7B       		.byte	0x7b
 1792 08b4 24       		.uleb128 0x24
 1793 08b5 BF030000 		.4byte	.LASF83
 1794 08b9 BF030000 		.4byte	.LASF83
 1795 08bd 08       		.byte	0x8
 1796 08be 9C       		.byte	0x9c
 1797 08bf 24       		.uleb128 0x24
 1798 08c0 5A000000 		.4byte	.LASF84
 1799 08c4 5A000000 		.4byte	.LASF84
 1800 08c8 08       		.byte	0x8
 1801 08c9 93       		.byte	0x93
 1802 08ca 24       		.uleb128 0x24
 1803 08cb FE020000 		.4byte	.LASF85
 1804 08cf FE020000 		.4byte	.LASF85
 1805 08d3 08       		.byte	0x8
 1806 08d4 96       		.byte	0x96
 1807 08d5 24       		.uleb128 0x24
 1808 08d6 A5050000 		.4byte	.LASF86
 1809 08da A5050000 		.4byte	.LASF86
 1810 08de 08       		.byte	0x8
 1811 08df 82       		.byte	0x82
 1812 08e0 24       		.uleb128 0x24
 1813 08e1 10050000 		.4byte	.LASF87
 1814 08e5 10050000 		.4byte	.LASF87
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 81


 1815 08e9 08       		.byte	0x8
 1816 08ea 8F       		.byte	0x8f
 1817 08eb 24       		.uleb128 0x24
 1818 08ec D4010000 		.4byte	.LASF88
 1819 08f0 D4010000 		.4byte	.LASF88
 1820 08f4 02       		.byte	0x2
 1821 08f5 23       		.byte	0x23
 1822 08f6 24       		.uleb128 0x24
 1823 08f7 1E030000 		.4byte	.LASF89
 1824 08fb 1E030000 		.4byte	.LASF89
 1825 08ff 03       		.byte	0x3
 1826 0900 23       		.byte	0x23
 1827 0901 24       		.uleb128 0x24
 1828 0902 EA020000 		.4byte	.LASF90
 1829 0906 EA020000 		.4byte	.LASF90
 1830 090a 0C       		.byte	0xc
 1831 090b 18       		.byte	0x18
 1832 090c 24       		.uleb128 0x24
 1833 090d 8F040000 		.4byte	.LASF91
 1834 0911 8F040000 		.4byte	.LASF91
 1835 0915 0C       		.byte	0xc
 1836 0916 23       		.byte	0x23
 1837 0917 24       		.uleb128 0x24
 1838 0918 53030000 		.4byte	.LASF92
 1839 091c 53030000 		.4byte	.LASF92
 1840 0920 04       		.byte	0x4
 1841 0921 22       		.byte	0x22
 1842 0922 24       		.uleb128 0x24
 1843 0923 C4050000 		.4byte	.LASF93
 1844 0927 C4050000 		.4byte	.LASF93
 1845 092b 0D       		.byte	0xd
 1846 092c 18       		.byte	0x18
 1847 092d 24       		.uleb128 0x24
 1848 092e B3000000 		.4byte	.LASF94
 1849 0932 B3000000 		.4byte	.LASF94
 1850 0936 0D       		.byte	0xd
 1851 0937 23       		.byte	0x23
 1852 0938 24       		.uleb128 0x24
 1853 0939 04050000 		.4byte	.LASF95
 1854 093d 04050000 		.4byte	.LASF95
 1855 0941 0E       		.byte	0xe
 1856 0942 C3       		.byte	0xc3
 1857 0943 00       		.byte	0
 1858              		.section	.debug_abbrev,"",%progbits
 1859              	.Ldebug_abbrev0:
 1860 0000 01       		.uleb128 0x1
 1861 0001 11       		.uleb128 0x11
 1862 0002 01       		.byte	0x1
 1863 0003 25       		.uleb128 0x25
 1864 0004 0E       		.uleb128 0xe
 1865 0005 13       		.uleb128 0x13
 1866 0006 0B       		.uleb128 0xb
 1867 0007 03       		.uleb128 0x3
 1868 0008 0E       		.uleb128 0xe
 1869 0009 1B       		.uleb128 0x1b
 1870 000a 0E       		.uleb128 0xe
 1871 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 82


 1872 000c 17       		.uleb128 0x17
 1873 000d 11       		.uleb128 0x11
 1874 000e 01       		.uleb128 0x1
 1875 000f 10       		.uleb128 0x10
 1876 0010 17       		.uleb128 0x17
 1877 0011 00       		.byte	0
 1878 0012 00       		.byte	0
 1879 0013 02       		.uleb128 0x2
 1880 0014 16       		.uleb128 0x16
 1881 0015 00       		.byte	0
 1882 0016 03       		.uleb128 0x3
 1883 0017 0E       		.uleb128 0xe
 1884 0018 3A       		.uleb128 0x3a
 1885 0019 0B       		.uleb128 0xb
 1886 001a 3B       		.uleb128 0x3b
 1887 001b 0B       		.uleb128 0xb
 1888 001c 49       		.uleb128 0x49
 1889 001d 13       		.uleb128 0x13
 1890 001e 00       		.byte	0
 1891 001f 00       		.byte	0
 1892 0020 03       		.uleb128 0x3
 1893 0021 24       		.uleb128 0x24
 1894 0022 00       		.byte	0
 1895 0023 0B       		.uleb128 0xb
 1896 0024 0B       		.uleb128 0xb
 1897 0025 3E       		.uleb128 0x3e
 1898 0026 0B       		.uleb128 0xb
 1899 0027 03       		.uleb128 0x3
 1900 0028 0E       		.uleb128 0xe
 1901 0029 00       		.byte	0
 1902 002a 00       		.byte	0
 1903 002b 04       		.uleb128 0x4
 1904 002c 24       		.uleb128 0x24
 1905 002d 00       		.byte	0
 1906 002e 0B       		.uleb128 0xb
 1907 002f 0B       		.uleb128 0xb
 1908 0030 3E       		.uleb128 0x3e
 1909 0031 0B       		.uleb128 0xb
 1910 0032 03       		.uleb128 0x3
 1911 0033 08       		.uleb128 0x8
 1912 0034 00       		.byte	0
 1913 0035 00       		.byte	0
 1914 0036 05       		.uleb128 0x5
 1915 0037 16       		.uleb128 0x16
 1916 0038 00       		.byte	0
 1917 0039 03       		.uleb128 0x3
 1918 003a 0E       		.uleb128 0xe
 1919 003b 3A       		.uleb128 0x3a
 1920 003c 0B       		.uleb128 0xb
 1921 003d 3B       		.uleb128 0x3b
 1922 003e 05       		.uleb128 0x5
 1923 003f 49       		.uleb128 0x49
 1924 0040 13       		.uleb128 0x13
 1925 0041 00       		.byte	0
 1926 0042 00       		.byte	0
 1927 0043 06       		.uleb128 0x6
 1928 0044 35       		.uleb128 0x35
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 83


 1929 0045 00       		.byte	0
 1930 0046 49       		.uleb128 0x49
 1931 0047 13       		.uleb128 0x13
 1932 0048 00       		.byte	0
 1933 0049 00       		.byte	0
 1934 004a 07       		.uleb128 0x7
 1935 004b 0F       		.uleb128 0xf
 1936 004c 00       		.byte	0
 1937 004d 0B       		.uleb128 0xb
 1938 004e 0B       		.uleb128 0xb
 1939 004f 49       		.uleb128 0x49
 1940 0050 13       		.uleb128 0x13
 1941 0051 00       		.byte	0
 1942 0052 00       		.byte	0
 1943 0053 08       		.uleb128 0x8
 1944 0054 15       		.uleb128 0x15
 1945 0055 00       		.byte	0
 1946 0056 27       		.uleb128 0x27
 1947 0057 19       		.uleb128 0x19
 1948 0058 00       		.byte	0
 1949 0059 00       		.byte	0
 1950 005a 09       		.uleb128 0x9
 1951 005b 0F       		.uleb128 0xf
 1952 005c 00       		.byte	0
 1953 005d 0B       		.uleb128 0xb
 1954 005e 0B       		.uleb128 0xb
 1955 005f 00       		.byte	0
 1956 0060 00       		.byte	0
 1957 0061 0A       		.uleb128 0xa
 1958 0062 13       		.uleb128 0x13
 1959 0063 01       		.byte	0x1
 1960 0064 03       		.uleb128 0x3
 1961 0065 0E       		.uleb128 0xe
 1962 0066 0B       		.uleb128 0xb
 1963 0067 0B       		.uleb128 0xb
 1964 0068 3A       		.uleb128 0x3a
 1965 0069 0B       		.uleb128 0xb
 1966 006a 3B       		.uleb128 0x3b
 1967 006b 0B       		.uleb128 0xb
 1968 006c 01       		.uleb128 0x1
 1969 006d 13       		.uleb128 0x13
 1970 006e 00       		.byte	0
 1971 006f 00       		.byte	0
 1972 0070 0B       		.uleb128 0xb
 1973 0071 0D       		.uleb128 0xd
 1974 0072 00       		.byte	0
 1975 0073 03       		.uleb128 0x3
 1976 0074 0E       		.uleb128 0xe
 1977 0075 3A       		.uleb128 0x3a
 1978 0076 0B       		.uleb128 0xb
 1979 0077 3B       		.uleb128 0x3b
 1980 0078 0B       		.uleb128 0xb
 1981 0079 49       		.uleb128 0x49
 1982 007a 13       		.uleb128 0x13
 1983 007b 38       		.uleb128 0x38
 1984 007c 0B       		.uleb128 0xb
 1985 007d 00       		.byte	0
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 84


 1986 007e 00       		.byte	0
 1987 007f 0C       		.uleb128 0xc
 1988 0080 2E       		.uleb128 0x2e
 1989 0081 01       		.byte	0x1
 1990 0082 03       		.uleb128 0x3
 1991 0083 0E       		.uleb128 0xe
 1992 0084 3A       		.uleb128 0x3a
 1993 0085 0B       		.uleb128 0xb
 1994 0086 3B       		.uleb128 0x3b
 1995 0087 05       		.uleb128 0x5
 1996 0088 27       		.uleb128 0x27
 1997 0089 19       		.uleb128 0x19
 1998 008a 20       		.uleb128 0x20
 1999 008b 0B       		.uleb128 0xb
 2000 008c 01       		.uleb128 0x1
 2001 008d 13       		.uleb128 0x13
 2002 008e 00       		.byte	0
 2003 008f 00       		.byte	0
 2004 0090 0D       		.uleb128 0xd
 2005 0091 05       		.uleb128 0x5
 2006 0092 00       		.byte	0
 2007 0093 03       		.uleb128 0x3
 2008 0094 0E       		.uleb128 0xe
 2009 0095 3A       		.uleb128 0x3a
 2010 0096 0B       		.uleb128 0xb
 2011 0097 3B       		.uleb128 0x3b
 2012 0098 05       		.uleb128 0x5
 2013 0099 49       		.uleb128 0x49
 2014 009a 13       		.uleb128 0x13
 2015 009b 00       		.byte	0
 2016 009c 00       		.byte	0
 2017 009d 0E       		.uleb128 0xe
 2018 009e 2E       		.uleb128 0x2e
 2019 009f 00       		.byte	0
 2020 00a0 03       		.uleb128 0x3
 2021 00a1 0E       		.uleb128 0xe
 2022 00a2 3A       		.uleb128 0x3a
 2023 00a3 0B       		.uleb128 0xb
 2024 00a4 3B       		.uleb128 0x3b
 2025 00a5 0B       		.uleb128 0xb
 2026 00a6 27       		.uleb128 0x27
 2027 00a7 19       		.uleb128 0x19
 2028 00a8 20       		.uleb128 0x20
 2029 00a9 0B       		.uleb128 0xb
 2030 00aa 00       		.byte	0
 2031 00ab 00       		.byte	0
 2032 00ac 0F       		.uleb128 0xf
 2033 00ad 2E       		.uleb128 0x2e
 2034 00ae 01       		.byte	0x1
 2035 00af 03       		.uleb128 0x3
 2036 00b0 0E       		.uleb128 0xe
 2037 00b1 3A       		.uleb128 0x3a
 2038 00b2 0B       		.uleb128 0xb
 2039 00b3 3B       		.uleb128 0x3b
 2040 00b4 05       		.uleb128 0x5
 2041 00b5 27       		.uleb128 0x27
 2042 00b6 19       		.uleb128 0x19
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 85


 2043 00b7 49       		.uleb128 0x49
 2044 00b8 13       		.uleb128 0x13
 2045 00b9 20       		.uleb128 0x20
 2046 00ba 0B       		.uleb128 0xb
 2047 00bb 01       		.uleb128 0x1
 2048 00bc 13       		.uleb128 0x13
 2049 00bd 00       		.byte	0
 2050 00be 00       		.byte	0
 2051 00bf 10       		.uleb128 0x10
 2052 00c0 2E       		.uleb128 0x2e
 2053 00c1 01       		.byte	0x1
 2054 00c2 3F       		.uleb128 0x3f
 2055 00c3 19       		.uleb128 0x19
 2056 00c4 03       		.uleb128 0x3
 2057 00c5 0E       		.uleb128 0xe
 2058 00c6 3A       		.uleb128 0x3a
 2059 00c7 0B       		.uleb128 0xb
 2060 00c8 3B       		.uleb128 0x3b
 2061 00c9 0B       		.uleb128 0xb
 2062 00ca 27       		.uleb128 0x27
 2063 00cb 19       		.uleb128 0x19
 2064 00cc 11       		.uleb128 0x11
 2065 00cd 01       		.uleb128 0x1
 2066 00ce 12       		.uleb128 0x12
 2067 00cf 06       		.uleb128 0x6
 2068 00d0 40       		.uleb128 0x40
 2069 00d1 18       		.uleb128 0x18
 2070 00d2 9742     		.uleb128 0x2117
 2071 00d4 19       		.uleb128 0x19
 2072 00d5 01       		.uleb128 0x1
 2073 00d6 13       		.uleb128 0x13
 2074 00d7 00       		.byte	0
 2075 00d8 00       		.byte	0
 2076 00d9 11       		.uleb128 0x11
 2077 00da 1D       		.uleb128 0x1d
 2078 00db 01       		.byte	0x1
 2079 00dc 31       		.uleb128 0x31
 2080 00dd 13       		.uleb128 0x13
 2081 00de 11       		.uleb128 0x11
 2082 00df 01       		.uleb128 0x1
 2083 00e0 12       		.uleb128 0x12
 2084 00e1 06       		.uleb128 0x6
 2085 00e2 58       		.uleb128 0x58
 2086 00e3 0B       		.uleb128 0xb
 2087 00e4 59       		.uleb128 0x59
 2088 00e5 0B       		.uleb128 0xb
 2089 00e6 01       		.uleb128 0x1
 2090 00e7 13       		.uleb128 0x13
 2091 00e8 00       		.byte	0
 2092 00e9 00       		.byte	0
 2093 00ea 12       		.uleb128 0x12
 2094 00eb 05       		.uleb128 0x5
 2095 00ec 00       		.byte	0
 2096 00ed 31       		.uleb128 0x31
 2097 00ee 13       		.uleb128 0x13
 2098 00ef 00       		.byte	0
 2099 00f0 00       		.byte	0
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 86


 2100 00f1 13       		.uleb128 0x13
 2101 00f2 898201   		.uleb128 0x4109
 2102 00f5 01       		.byte	0x1
 2103 00f6 11       		.uleb128 0x11
 2104 00f7 01       		.uleb128 0x1
 2105 00f8 31       		.uleb128 0x31
 2106 00f9 13       		.uleb128 0x13
 2107 00fa 00       		.byte	0
 2108 00fb 00       		.byte	0
 2109 00fc 14       		.uleb128 0x14
 2110 00fd 8A8201   		.uleb128 0x410a
 2111 0100 00       		.byte	0
 2112 0101 02       		.uleb128 0x2
 2113 0102 18       		.uleb128 0x18
 2114 0103 9142     		.uleb128 0x2111
 2115 0105 18       		.uleb128 0x18
 2116 0106 00       		.byte	0
 2117 0107 00       		.byte	0
 2118 0108 15       		.uleb128 0x15
 2119 0109 05       		.uleb128 0x5
 2120 010a 00       		.byte	0
 2121 010b 31       		.uleb128 0x31
 2122 010c 13       		.uleb128 0x13
 2123 010d 02       		.uleb128 0x2
 2124 010e 17       		.uleb128 0x17
 2125 010f 00       		.byte	0
 2126 0110 00       		.byte	0
 2127 0111 16       		.uleb128 0x16
 2128 0112 898201   		.uleb128 0x4109
 2129 0115 01       		.byte	0x1
 2130 0116 11       		.uleb128 0x11
 2131 0117 01       		.uleb128 0x1
 2132 0118 31       		.uleb128 0x31
 2133 0119 13       		.uleb128 0x13
 2134 011a 01       		.uleb128 0x1
 2135 011b 13       		.uleb128 0x13
 2136 011c 00       		.byte	0
 2137 011d 00       		.byte	0
 2138 011e 17       		.uleb128 0x17
 2139 011f 898201   		.uleb128 0x4109
 2140 0122 00       		.byte	0
 2141 0123 11       		.uleb128 0x11
 2142 0124 01       		.uleb128 0x1
 2143 0125 31       		.uleb128 0x31
 2144 0126 13       		.uleb128 0x13
 2145 0127 00       		.byte	0
 2146 0128 00       		.byte	0
 2147 0129 18       		.uleb128 0x18
 2148 012a 05       		.uleb128 0x5
 2149 012b 00       		.byte	0
 2150 012c 03       		.uleb128 0x3
 2151 012d 0E       		.uleb128 0xe
 2152 012e 3A       		.uleb128 0x3a
 2153 012f 0B       		.uleb128 0xb
 2154 0130 3B       		.uleb128 0x3b
 2155 0131 0B       		.uleb128 0xb
 2156 0132 49       		.uleb128 0x49
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 87


 2157 0133 13       		.uleb128 0x13
 2158 0134 02       		.uleb128 0x2
 2159 0135 17       		.uleb128 0x17
 2160 0136 00       		.byte	0
 2161 0137 00       		.byte	0
 2162 0138 19       		.uleb128 0x19
 2163 0139 34       		.uleb128 0x34
 2164 013a 00       		.byte	0
 2165 013b 03       		.uleb128 0x3
 2166 013c 0E       		.uleb128 0xe
 2167 013d 3A       		.uleb128 0x3a
 2168 013e 0B       		.uleb128 0xb
 2169 013f 3B       		.uleb128 0x3b
 2170 0140 0B       		.uleb128 0xb
 2171 0141 49       		.uleb128 0x49
 2172 0142 13       		.uleb128 0x13
 2173 0143 02       		.uleb128 0x2
 2174 0144 18       		.uleb128 0x18
 2175 0145 00       		.byte	0
 2176 0146 00       		.byte	0
 2177 0147 1A       		.uleb128 0x1a
 2178 0148 0B       		.uleb128 0xb
 2179 0149 01       		.byte	0x1
 2180 014a 11       		.uleb128 0x11
 2181 014b 01       		.uleb128 0x1
 2182 014c 12       		.uleb128 0x12
 2183 014d 06       		.uleb128 0x6
 2184 014e 00       		.byte	0
 2185 014f 00       		.byte	0
 2186 0150 1B       		.uleb128 0x1b
 2187 0151 34       		.uleb128 0x34
 2188 0152 00       		.byte	0
 2189 0153 03       		.uleb128 0x3
 2190 0154 08       		.uleb128 0x8
 2191 0155 3A       		.uleb128 0x3a
 2192 0156 0B       		.uleb128 0xb
 2193 0157 3B       		.uleb128 0x3b
 2194 0158 0B       		.uleb128 0xb
 2195 0159 49       		.uleb128 0x49
 2196 015a 13       		.uleb128 0x13
 2197 015b 02       		.uleb128 0x2
 2198 015c 17       		.uleb128 0x17
 2199 015d 00       		.byte	0
 2200 015e 00       		.byte	0
 2201 015f 1C       		.uleb128 0x1c
 2202 0160 34       		.uleb128 0x34
 2203 0161 00       		.byte	0
 2204 0162 03       		.uleb128 0x3
 2205 0163 0E       		.uleb128 0xe
 2206 0164 3A       		.uleb128 0x3a
 2207 0165 0B       		.uleb128 0xb
 2208 0166 3B       		.uleb128 0x3b
 2209 0167 0B       		.uleb128 0xb
 2210 0168 49       		.uleb128 0x49
 2211 0169 13       		.uleb128 0x13
 2212 016a 02       		.uleb128 0x2
 2213 016b 17       		.uleb128 0x17
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 88


 2214 016c 00       		.byte	0
 2215 016d 00       		.byte	0
 2216 016e 1D       		.uleb128 0x1d
 2217 016f 2E       		.uleb128 0x2e
 2218 0170 00       		.byte	0
 2219 0171 3F       		.uleb128 0x3f
 2220 0172 19       		.uleb128 0x19
 2221 0173 03       		.uleb128 0x3
 2222 0174 0E       		.uleb128 0xe
 2223 0175 3A       		.uleb128 0x3a
 2224 0176 0B       		.uleb128 0xb
 2225 0177 3B       		.uleb128 0x3b
 2226 0178 0B       		.uleb128 0xb
 2227 0179 27       		.uleb128 0x27
 2228 017a 19       		.uleb128 0x19
 2229 017b 11       		.uleb128 0x11
 2230 017c 01       		.uleb128 0x1
 2231 017d 12       		.uleb128 0x12
 2232 017e 06       		.uleb128 0x6
 2233 017f 40       		.uleb128 0x40
 2234 0180 18       		.uleb128 0x18
 2235 0181 9742     		.uleb128 0x2117
 2236 0183 19       		.uleb128 0x19
 2237 0184 00       		.byte	0
 2238 0185 00       		.byte	0
 2239 0186 1E       		.uleb128 0x1e
 2240 0187 01       		.uleb128 0x1
 2241 0188 01       		.byte	0x1
 2242 0189 49       		.uleb128 0x49
 2243 018a 13       		.uleb128 0x13
 2244 018b 01       		.uleb128 0x1
 2245 018c 13       		.uleb128 0x13
 2246 018d 00       		.byte	0
 2247 018e 00       		.byte	0
 2248 018f 1F       		.uleb128 0x1f
 2249 0190 21       		.uleb128 0x21
 2250 0191 00       		.byte	0
 2251 0192 49       		.uleb128 0x49
 2252 0193 13       		.uleb128 0x13
 2253 0194 2F       		.uleb128 0x2f
 2254 0195 05       		.uleb128 0x5
 2255 0196 00       		.byte	0
 2256 0197 00       		.byte	0
 2257 0198 20       		.uleb128 0x20
 2258 0199 34       		.uleb128 0x34
 2259 019a 00       		.byte	0
 2260 019b 03       		.uleb128 0x3
 2261 019c 0E       		.uleb128 0xe
 2262 019d 3A       		.uleb128 0x3a
 2263 019e 0B       		.uleb128 0xb
 2264 019f 3B       		.uleb128 0x3b
 2265 01a0 0B       		.uleb128 0xb
 2266 01a1 49       		.uleb128 0x49
 2267 01a2 13       		.uleb128 0x13
 2268 01a3 3F       		.uleb128 0x3f
 2269 01a4 19       		.uleb128 0x19
 2270 01a5 02       		.uleb128 0x2
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 89


 2271 01a6 18       		.uleb128 0x18
 2272 01a7 00       		.byte	0
 2273 01a8 00       		.byte	0
 2274 01a9 21       		.uleb128 0x21
 2275 01aa 21       		.uleb128 0x21
 2276 01ab 00       		.byte	0
 2277 01ac 49       		.uleb128 0x49
 2278 01ad 13       		.uleb128 0x13
 2279 01ae 2F       		.uleb128 0x2f
 2280 01af 0B       		.uleb128 0xb
 2281 01b0 00       		.byte	0
 2282 01b1 00       		.byte	0
 2283 01b2 22       		.uleb128 0x22
 2284 01b3 34       		.uleb128 0x34
 2285 01b4 00       		.byte	0
 2286 01b5 03       		.uleb128 0x3
 2287 01b6 0E       		.uleb128 0xe
 2288 01b7 3A       		.uleb128 0x3a
 2289 01b8 0B       		.uleb128 0xb
 2290 01b9 3B       		.uleb128 0x3b
 2291 01ba 0B       		.uleb128 0xb
 2292 01bb 49       		.uleb128 0x49
 2293 01bc 13       		.uleb128 0x13
 2294 01bd 3F       		.uleb128 0x3f
 2295 01be 19       		.uleb128 0x19
 2296 01bf 3C       		.uleb128 0x3c
 2297 01c0 19       		.uleb128 0x19
 2298 01c1 00       		.byte	0
 2299 01c2 00       		.byte	0
 2300 01c3 23       		.uleb128 0x23
 2301 01c4 34       		.uleb128 0x34
 2302 01c5 00       		.byte	0
 2303 01c6 03       		.uleb128 0x3
 2304 01c7 08       		.uleb128 0x8
 2305 01c8 3A       		.uleb128 0x3a
 2306 01c9 0B       		.uleb128 0xb
 2307 01ca 3B       		.uleb128 0x3b
 2308 01cb 0B       		.uleb128 0xb
 2309 01cc 49       		.uleb128 0x49
 2310 01cd 13       		.uleb128 0x13
 2311 01ce 3F       		.uleb128 0x3f
 2312 01cf 19       		.uleb128 0x19
 2313 01d0 02       		.uleb128 0x2
 2314 01d1 18       		.uleb128 0x18
 2315 01d2 00       		.byte	0
 2316 01d3 00       		.byte	0
 2317 01d4 24       		.uleb128 0x24
 2318 01d5 2E       		.uleb128 0x2e
 2319 01d6 00       		.byte	0
 2320 01d7 3F       		.uleb128 0x3f
 2321 01d8 19       		.uleb128 0x19
 2322 01d9 3C       		.uleb128 0x3c
 2323 01da 19       		.uleb128 0x19
 2324 01db 6E       		.uleb128 0x6e
 2325 01dc 0E       		.uleb128 0xe
 2326 01dd 03       		.uleb128 0x3
 2327 01de 0E       		.uleb128 0xe
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 90


 2328 01df 3A       		.uleb128 0x3a
 2329 01e0 0B       		.uleb128 0xb
 2330 01e1 3B       		.uleb128 0x3b
 2331 01e2 0B       		.uleb128 0xb
 2332 01e3 00       		.byte	0
 2333 01e4 00       		.byte	0
 2334 01e5 00       		.byte	0
 2335              		.section	.debug_loc,"",%progbits
 2336              	.Ldebug_loc0:
 2337              	.LLST0:
 2338 0000 32000000 		.4byte	.LVL6
 2339 0004 40000000 		.4byte	.LVL7
 2340 0008 0400     		.2byte	0x4
 2341 000a 0A       		.byte	0xa
 2342 000b 0010     		.2byte	0x1000
 2343 000d 9F       		.byte	0x9f
 2344 000e 00000000 		.4byte	0
 2345 0012 00000000 		.4byte	0
 2346              	.LLST1:
 2347 0016 32000000 		.4byte	.LVL6
 2348 001a 40000000 		.4byte	.LVL7
 2349 001e 0200     		.2byte	0x2
 2350 0020 30       		.byte	0x30
 2351 0021 9F       		.byte	0x9f
 2352 0022 00000000 		.4byte	0
 2353 0026 00000000 		.4byte	0
 2354              	.LLST2:
 2355 002a 40000000 		.4byte	.LVL7
 2356 002e 4A000000 		.4byte	.LVL8
 2357 0032 0400     		.2byte	0x4
 2358 0034 0A       		.byte	0xa
 2359 0035 0010     		.2byte	0x1000
 2360 0037 9F       		.byte	0x9f
 2361 0038 00000000 		.4byte	0
 2362 003c 00000000 		.4byte	0
 2363              	.LLST3:
 2364 0040 40000000 		.4byte	.LVL7
 2365 0044 4A000000 		.4byte	.LVL8
 2366 0048 0200     		.2byte	0x2
 2367 004a 31       		.byte	0x31
 2368 004b 9F       		.byte	0x9f
 2369 004c 00000000 		.4byte	0
 2370 0050 00000000 		.4byte	0
 2371              	.LLST4:
 2372 0054 4A000000 		.4byte	.LVL8
 2373 0058 54000000 		.4byte	.LVL9
 2374 005c 0600     		.2byte	0x6
 2375 005e 0C       		.byte	0xc
 2376 005f 40032540 		.4byte	0x40250340
 2377 0063 9F       		.byte	0x9f
 2378 0064 00000000 		.4byte	0
 2379 0068 00000000 		.4byte	0
 2380              	.LLST5:
 2381 006c 4A000000 		.4byte	.LVL8
 2382 0070 54000000 		.4byte	.LVL9
 2383 0074 0200     		.2byte	0x2
 2384 0076 30       		.byte	0x30
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 91


 2385 0077 9F       		.byte	0x9f
 2386 0078 00000000 		.4byte	0
 2387 007c 00000000 		.4byte	0
 2388              	.LLST6:
 2389 0080 54000000 		.4byte	.LVL9
 2390 0084 5E000000 		.4byte	.LVL10
 2391 0088 0600     		.2byte	0x6
 2392 008a 03       		.byte	0x3
 2393 008b 00000000 		.4byte	output_buffer
 2394 008f 9F       		.byte	0x9f
 2395 0090 00000000 		.4byte	0
 2396 0094 00000000 		.4byte	0
 2397              	.LLST7:
 2398 0098 54000000 		.4byte	.LVL9
 2399 009c 5E000000 		.4byte	.LVL10
 2400 00a0 0200     		.2byte	0x2
 2401 00a2 30       		.byte	0x30
 2402 00a3 9F       		.byte	0x9f
 2403 00a4 00000000 		.4byte	0
 2404 00a8 00000000 		.4byte	0
 2405              	.LLST8:
 2406 00ac 5E000000 		.4byte	.LVL10
 2407 00b0 68000000 		.4byte	.LVL11
 2408 00b4 0600     		.2byte	0x6
 2409 00b6 0C       		.byte	0xc
 2410 00b7 45000F40 		.4byte	0x400f0045
 2411 00bb 9F       		.byte	0x9f
 2412 00bc 00000000 		.4byte	0
 2413 00c0 00000000 		.4byte	0
 2414              	.LLST9:
 2415 00c4 5E000000 		.4byte	.LVL10
 2416 00c8 68000000 		.4byte	.LVL11
 2417 00cc 0200     		.2byte	0x2
 2418 00ce 30       		.byte	0x30
 2419 00cf 9F       		.byte	0x9f
 2420 00d0 00000000 		.4byte	0
 2421 00d4 00000000 		.4byte	0
 2422              	.LLST10:
 2423 00d8 78000000 		.4byte	.LVL13
 2424 00dc 80000000 		.4byte	.LVL14
 2425 00e0 0200     		.2byte	0x2
 2426 00e2 30       		.byte	0x30
 2427 00e3 9F       		.byte	0x9f
 2428 00e4 00000000 		.4byte	0
 2429 00e8 00000000 		.4byte	0
 2430              	.LLST11:
 2431 00ec 80000000 		.4byte	.LVL14
 2432 00f0 88000000 		.4byte	.LVL15
 2433 00f4 0200     		.2byte	0x2
 2434 00f6 31       		.byte	0x31
 2435 00f7 9F       		.byte	0x9f
 2436 00f8 00000000 		.4byte	0
 2437 00fc 00000000 		.4byte	0
 2438              	.LLST12:
 2439 0100 00000000 		.4byte	.LVL19
 2440 0104 32000000 		.4byte	.LVL21
 2441 0108 0100     		.2byte	0x1
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 92


 2442 010a 50       		.byte	0x50
 2443 010b 32000000 		.4byte	.LVL21
 2444 010f 68020000 		.4byte	.LFE131
 2445 0113 0200     		.2byte	0x2
 2446 0115 91       		.byte	0x91
 2447 0116 54       		.sleb128 -44
 2448 0117 00000000 		.4byte	0
 2449 011b 00000000 		.4byte	0
 2450              	.LLST13:
 2451 011f 2C000000 		.4byte	.LVL20
 2452 0123 32000000 		.4byte	.LVL21
 2453 0127 0200     		.2byte	0x2
 2454 0129 30       		.byte	0x30
 2455 012a 9F       		.byte	0x9f
 2456 012b 32000000 		.4byte	.LVL21
 2457 012f 3A000000 		.4byte	.LVL22
 2458 0133 0100     		.2byte	0x1
 2459 0135 52       		.byte	0x52
 2460 0136 3A000000 		.4byte	.LVL22
 2461 013a 68020000 		.4byte	.LFE131
 2462 013e 0300     		.2byte	0x3
 2463 0140 91       		.byte	0x91
 2464 0141 A47F     		.sleb128 -92
 2465 0143 00000000 		.4byte	0
 2466 0147 00000000 		.4byte	0
 2467              	.LLST14:
 2468 014b 8A010000 		.4byte	.LVL23
 2469 014f 8E010000 		.4byte	.LVL24
 2470 0153 0100     		.2byte	0x1
 2471 0155 53       		.byte	0x53
 2472 0156 8E010000 		.4byte	.LVL24
 2473 015a 0A020000 		.4byte	.LVL28
 2474 015e 0100     		.2byte	0x1
 2475 0160 58       		.byte	0x58
 2476 0161 00000000 		.4byte	0
 2477 0165 00000000 		.4byte	0
 2478              	.LLST15:
 2479 0169 FE010000 		.4byte	.LVL25
 2480 016d 00020000 		.4byte	.LVL26
 2481 0171 0100     		.2byte	0x1
 2482 0173 53       		.byte	0x53
 2483 0174 00020000 		.4byte	.LVL26
 2484 0178 04020000 		.4byte	.LVL27
 2485 017c 0900     		.2byte	0x9
 2486 017e 70       		.byte	0x70
 2487 017f 00       		.sleb128 0
 2488 0180 75       		.byte	0x75
 2489 0181 00       		.sleb128 0
 2490 0182 22       		.byte	0x22
 2491 0183 72       		.byte	0x72
 2492 0184 00       		.sleb128 0
 2493 0185 1E       		.byte	0x1e
 2494 0186 9F       		.byte	0x9f
 2495 0187 04020000 		.4byte	.LVL27
 2496 018b 0A020000 		.4byte	.LVL28
 2497 018f 0B00     		.2byte	0xb
 2498 0191 70       		.byte	0x70
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 93


 2499 0192 00       		.sleb128 0
 2500 0193 75       		.byte	0x75
 2501 0194 00       		.sleb128 0
 2502 0195 22       		.byte	0x22
 2503 0196 7B       		.byte	0x7b
 2504 0197 00       		.sleb128 0
 2505 0198 38       		.byte	0x38
 2506 0199 25       		.byte	0x25
 2507 019a 1E       		.byte	0x1e
 2508 019b 9F       		.byte	0x9f
 2509 019c 00000000 		.4byte	0
 2510 01a0 00000000 		.4byte	0
 2511              		.section	.debug_aranges,"",%progbits
 2512 0000 2C000000 		.4byte	0x2c
 2513 0004 0200     		.2byte	0x2
 2514 0006 00000000 		.4byte	.Ldebug_info0
 2515 000a 04       		.byte	0x4
 2516 000b 00       		.byte	0
 2517 000c 0000     		.2byte	0
 2518 000e 0000     		.2byte	0
 2519 0010 00000000 		.4byte	.LFB130
 2520 0014 14010000 		.4byte	.LFE130-.LFB130
 2521 0018 00000000 		.4byte	.LFB131
 2522 001c 68020000 		.4byte	.LFE131-.LFB131
 2523 0020 00000000 		.4byte	.LFB132
 2524 0024 02000000 		.4byte	.LFE132-.LFB132
 2525 0028 00000000 		.4byte	0
 2526 002c 00000000 		.4byte	0
 2527              		.section	.debug_ranges,"",%progbits
 2528              	.Ldebug_ranges0:
 2529 0000 00000000 		.4byte	.LFB130
 2530 0004 14010000 		.4byte	.LFE130
 2531 0008 00000000 		.4byte	.LFB131
 2532 000c 68020000 		.4byte	.LFE131
 2533 0010 00000000 		.4byte	.LFB132
 2534 0014 02000000 		.4byte	.LFE132
 2535 0018 00000000 		.4byte	0
 2536 001c 00000000 		.4byte	0
 2537              		.section	.debug_line,"",%progbits
 2538              	.Ldebug_line0:
 2539 0000 F4020000 		.section	.debug_str,"MS",%progbits,1
 2539      0200D001 
 2539      00000201 
 2539      FB0E0D00 
 2539      01010101 
 2540              	.LASF27:
 2541 0000 6C6F6E67 		.ascii	"long double\000"
 2541      20646F75 
 2541      626C6500 
 2542              	.LASF66:
 2543 000c 66726571 		.ascii	"freq2\000"
 2543      3200
 2544              	.LASF67:
 2545 0012 66726571 		.ascii	"freq3\000"
 2545      3300
 2546              	.LASF4:
 2547 0018 5F5F696E 		.ascii	"__int16_t\000"
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 94


 2547      7431365F 
 2547      7400
 2548              	.LASF69:
 2549 0022 66726571 		.ascii	"freq5\000"
 2549      3500
 2550              	.LASF80:
 2551 0028 66726571 		.ascii	"freq6\000"
 2551      3600
 2552              	.LASF70:
 2553 002e 66726571 		.ascii	"freq7\000"
 2553      3700
 2554              	.LASF71:
 2555 0034 66726571 		.ascii	"freq8\000"
 2555      3800
 2556              	.LASF39:
 2557 003a 64737441 		.ascii	"dstAddress\000"
 2557      64647265 
 2557      737300
 2558              	.LASF79:
 2559 0045 62756666 		.ascii	"buffer_index2\000"
 2559      65725F69 
 2559      6E646578 
 2559      3200
 2560              	.LASF14:
 2561 0053 696E7438 		.ascii	"int8_t\000"
 2561      5F7400
 2562              	.LASF84:
 2563 005a 4379446D 		.ascii	"CyDmaSetSrcAddress\000"
 2563      61536574 
 2563      53726341 
 2563      64647265 
 2563      737300
 2564              	.LASF34:
 2565 006d 6E6F7465 		.ascii	"note_index\000"
 2565      5F696E64 
 2565      657800
 2566              	.LASF30:
 2567 0078 656E765F 		.ascii	"env_index\000"
 2567      696E6465 
 2567      7800
 2568              	.LASF50:
 2569 0082 696E6465 		.ascii	"index2\000"
 2569      783200
 2570              	.LASF51:
 2571 0089 696E6465 		.ascii	"index3\000"
 2571      783300
 2572              	.LASF52:
 2573 0090 696E6465 		.ascii	"index4\000"
 2573      783400
 2574              	.LASF53:
 2575 0097 696E6465 		.ascii	"index5\000"
 2575      783500
 2576              	.LASF54:
 2577 009e 696E6465 		.ascii	"index6\000"
 2577      783600
 2578              	.LASF55:
 2579 00a5 696E6465 		.ascii	"index7\000"
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 95


 2579      783700
 2580              	.LASF56:
 2581 00ac 696E6465 		.ascii	"index8\000"
 2581      783800
 2582              	.LASF94:
 2583 00b3 6973725F 		.ascii	"isr_I2STxDone_Enable\000"
 2583      49325354 
 2583      78446F6E 
 2583      655F456E 
 2583      61626C65 
 2584              	.LASF6:
 2585 00c8 5F5F7569 		.ascii	"__uint16_t\000"
 2585      6E743136 
 2585      5F7400
 2586              	.LASF5:
 2587 00d3 73686F72 		.ascii	"short int\000"
 2587      7420696E 
 2587      7400
 2588              	.LASF96:
 2589 00dd 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2589      43313120 
 2589      352E342E 
 2589      31203230 
 2589      31363036 
 2590 0110 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2590      20726576 
 2590      6973696F 
 2590      6E203233 
 2590      37373135 
 2591 0143 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2591      66756E63 
 2591      74696F6E 
 2591      2D736563 
 2591      74696F6E 
 2592              	.LASF59:
 2593 016b 73696E65 		.ascii	"sine_portion\000"
 2593      5F706F72 
 2593      74696F6E 
 2593      00
 2594              	.LASF49:
 2595 0178 696E6465 		.ascii	"index\000"
 2595      7800
 2596              	.LASF45:
 2597 017e 5350495F 		.ascii	"SPI_TxDMA_SetInterruptCallback\000"
 2597      5478444D 
 2597      415F5365 
 2597      74496E74 
 2597      65727275 
 2598              	.LASF19:
 2599 019d 75696E74 		.ascii	"uint8\000"
 2599      3800
 2600              	.LASF0:
 2601 01a3 5F5F696E 		.ascii	"__int8_t\000"
 2601      74385F74 
 2601      00
 2602              	.LASF43:
 2603 01ac 6E756D44 		.ascii	"numDataElements\000"
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 96


 2603      61746145 
 2603      6C656D65 
 2603      6E747300 
 2604              	.LASF100:
 2605 01bc 49325354 		.ascii	"I2STxDMA_ChEnable\000"
 2605      78444D41 
 2605      5F436845 
 2605      6E61626C 
 2605      6500
 2606              	.LASF22:
 2607 01ce 666C6F61 		.ascii	"float\000"
 2607      7400
 2608              	.LASF88:
 2609 01d4 5350495F 		.ascii	"SPI_RxDMA_Start\000"
 2609      5278444D 
 2609      415F5374 
 2609      61727400 
 2610              	.LASF33:
 2611 01e4 66726571 		.ascii	"freq\000"
 2611      00
 2612              	.LASF11:
 2613 01e9 6C6F6E67 		.ascii	"long long int\000"
 2613      206C6F6E 
 2613      6720696E 
 2613      7400
 2614              	.LASF47:
 2615 01f7 496E6974 		.ascii	"InitializeAudioOutPath\000"
 2615      69616C69 
 2615      7A654175 
 2615      64696F4F 
 2615      75745061 
 2616              	.LASF76:
 2617 020e 6F757470 		.ascii	"output_buffer\000"
 2617      75745F62 
 2617      75666665 
 2617      7200
 2618              	.LASF8:
 2619 021c 6C6F6E67 		.ascii	"long int\000"
 2619      20696E74 
 2619      00
 2620              	.LASF44:
 2621 0225 49325354 		.ascii	"I2STxDMA_SetInterruptCallback\000"
 2621      78444D41 
 2621      5F536574 
 2621      496E7465 
 2621      72727570 
 2622              	.LASF37:
 2623 0243 49325354 		.ascii	"I2STxDMA_ValidateDescriptor\000"
 2623      78444D41 
 2623      5F56616C 
 2623      69646174 
 2623      65446573 
 2624              	.LASF60:
 2625 025f 62617365 		.ascii	"base_sine\000"
 2625      5F73696E 
 2625      6500
 2626              	.LASF32:
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 97


 2627 0269 63757272 		.ascii	"current_env_mode\000"
 2627      656E745F 
 2627      656E765F 
 2627      6D6F6465 
 2627      00
 2628              	.LASF97:
 2629 027a 41756469 		.ascii	"AudioOut.c\000"
 2629      6F4F7574 
 2629      2E6300
 2630              	.LASF98:
 2631 0285 453A5C44 		.ascii	"E:\\Documents\\Engineering\\Code\\synth-wavetable\\"
 2631      6F63756D 
 2631      656E7473 
 2631      5C456E67 
 2631      696E6565 
 2632 02b3 43797072 		.ascii	"Cypress\\synth-wavetable.cydsn\000"
 2632      6573735C 
 2632      73796E74 
 2632      682D7761 
 2632      76657461 
 2633              	.LASF75:
 2634 02d1 77617665 		.ascii	"waveshape\000"
 2634      73686170 
 2634      6500
 2635              	.LASF31:
 2636 02db 656E765F 		.ascii	"env_multiplier\000"
 2636      6D756C74 
 2636      69706C69 
 2636      657200
 2637              	.LASF90:
 2638 02ea 6973725F 		.ascii	"isr_SPIDone_StartEx\000"
 2638      53504944 
 2638      6F6E655F 
 2638      53746172 
 2638      74457800 
 2639              	.LASF85:
 2640 02fe 4379446D 		.ascii	"CyDmaSetDstAddress\000"
 2640      61536574 
 2640      44737441 
 2640      64647265 
 2640      737300
 2641              	.LASF61:
 2642 0311 62617365 		.ascii	"base_pos_saw\000"
 2642      5F706F73 
 2642      5F736177 
 2642      00
 2643              	.LASF89:
 2644 031e 5350495F 		.ascii	"SPI_TxDMA_Start\000"
 2644      5478444D 
 2644      415F5374 
 2644      61727400 
 2645              	.LASF40:
 2646 032e 49325354 		.ascii	"I2STxDMA_SetSrcAddress\000"
 2646      78444D41 
 2646      5F536574 
 2646      53726341 
 2646      64647265 
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 98


 2647              	.LASF3:
 2648 0345 756E7369 		.ascii	"unsigned char\000"
 2648      676E6564 
 2648      20636861 
 2648      7200
 2649              	.LASF92:
 2650 0353 49325354 		.ascii	"I2STxDMA_Init\000"
 2650      78444D41 
 2650      5F496E69 
 2650      7400
 2651              	.LASF2:
 2652 0361 7369676E 		.ascii	"signed char\000"
 2652      65642063 
 2652      68617200 
 2653              	.LASF12:
 2654 036d 6C6F6E67 		.ascii	"long long unsigned int\000"
 2654      206C6F6E 
 2654      6720756E 
 2654      7369676E 
 2654      65642069 
 2655              	.LASF82:
 2656 0384 4379446D 		.ascii	"CyDmaSetInterruptCallback\000"
 2656      61536574 
 2656      496E7465 
 2656      72727570 
 2656      7443616C 
 2657              	.LASF18:
 2658 039e 75696E74 		.ascii	"uint32_t\000"
 2658      33325F74 
 2658      00
 2659              	.LASF81:
 2660 03a7 6F757450 		.ascii	"outPlaying\000"
 2660      6C617969 
 2660      6E6700
 2661              	.LASF13:
 2662 03b2 756E7369 		.ascii	"unsigned int\000"
 2662      676E6564 
 2662      20696E74 
 2662      00
 2663              	.LASF83:
 2664 03bf 4379446D 		.ascii	"CyDmaSetNumDataElements\000"
 2664      61536574 
 2664      4E756D44 
 2664      61746145 
 2664      6C656D65 
 2665              	.LASF17:
 2666 03d7 75696E74 		.ascii	"uint16_t\000"
 2666      31365F74 
 2666      00
 2667              	.LASF78:
 2668 03e0 62756666 		.ascii	"buffer_index\000"
 2668      65725F69 
 2668      6E646578 
 2668      00
 2669              	.LASF58:
 2670 03ed 73715F70 		.ascii	"sq_portion\000"
 2670      6F727469 
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 99


 2670      6F6E00
 2671              	.LASF68:
 2672 03f8 66726571 		.ascii	"freq4\000"
 2672      3400
 2673              	.LASF26:
 2674 03fe 72656733 		.ascii	"reg32\000"
 2674      3200
 2675              	.LASF77:
 2676 0404 6F757470 		.ascii	"output_buffer2\000"
 2676      75745F62 
 2676      75666665 
 2676      723200
 2677              	.LASF63:
 2678 0413 6C666F5F 		.ascii	"lfo_sine\000"
 2678      73696E65 
 2678      00
 2679              	.LASF74:
 2680 041c 656E7665 		.ascii	"envelope_multiplier\000"
 2680      6C6F7065 
 2680      5F6D756C 
 2680      7469706C 
 2680      69657200 
 2681              	.LASF24:
 2682 0430 63686172 		.ascii	"char\000"
 2682      00
 2683              	.LASF64:
 2684 0435 6D617374 		.ascii	"masterTxBuffer\000"
 2684      65725478 
 2684      42756666 
 2684      657200
 2685              	.LASF62:
 2686 0444 62617365 		.ascii	"base_sq\000"
 2686      5F737100 
 2687              	.LASF7:
 2688 044c 73686F72 		.ascii	"short unsigned int\000"
 2688      7420756E 
 2688      7369676E 
 2688      65642069 
 2688      6E7400
 2689              	.LASF16:
 2690 045f 696E7431 		.ascii	"int16_t\000"
 2690      365F7400 
 2691              	.LASF42:
 2692 0467 49325354 		.ascii	"I2STxDMA_SetNumDataElements\000"
 2692      78444D41 
 2692      5F536574 
 2692      4E756D44 
 2692      61746145 
 2693              	.LASF102:
 2694 0483 53746F70 		.ascii	"Stop_I2S_Tx\000"
 2694      5F493253 
 2694      5F547800 
 2695              	.LASF91:
 2696 048f 6973725F 		.ascii	"isr_SPIDone_Enable\000"
 2696      53504944 
 2696      6F6E655F 
 2696      456E6162 
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 100


 2696      6C6500
 2697              	.LASF41:
 2698 04a2 73726341 		.ascii	"srcAddress\000"
 2698      64647265 
 2698      737300
 2699              	.LASF101:
 2700 04ad 62756666 		.ascii	"buffer\000"
 2700      657200
 2701              	.LASF99:
 2702 04b4 766F6963 		.ascii	"voice\000"
 2702      6500
 2703              	.LASF46:
 2704 04ba 5350495F 		.ascii	"SPI_RxDMA_SetInterruptCallback\000"
 2704      5278444D 
 2704      415F5365 
 2704      74496E74 
 2704      65727275 
 2705              	.LASF20:
 2706 04d9 75696E74 		.ascii	"uint32\000"
 2706      333200
 2707              	.LASF25:
 2708 04e0 72656738 		.ascii	"reg8\000"
 2708      00
 2709              	.LASF10:
 2710 04e5 6C6F6E67 		.ascii	"long unsigned int\000"
 2710      20756E73 
 2710      69676E65 
 2710      6420696E 
 2710      7400
 2711              	.LASF21:
 2712 04f7 696E7433 		.ascii	"int32\000"
 2712      3200
 2713              	.LASF23:
 2714 04fd 646F7562 		.ascii	"double\000"
 2714      6C6500
 2715              	.LASF95:
 2716 0504 4379496E 		.ascii	"CyIntEnable\000"
 2716      74456E61 
 2716      626C6500 
 2717              	.LASF87:
 2718 0510 4379446D 		.ascii	"CyDmaValidateDescriptor\000"
 2718      6156616C 
 2718      69646174 
 2718      65446573 
 2718      63726970 
 2719              	.LASF9:
 2720 0528 5F5F7569 		.ascii	"__uint32_t\000"
 2720      6E743332 
 2720      5F7400
 2721              	.LASF57:
 2722 0533 6C666F5F 		.ascii	"lfo_index\000"
 2722      696E6465 
 2722      7800
 2723              	.LASF38:
 2724 053d 49325354 		.ascii	"I2STxDMA_SetDstAddress\000"
 2724      78444D41 
 2724      5F536574 
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 101


 2724      44737441 
 2724      64647265 
 2725              	.LASF15:
 2726 0554 75696E74 		.ascii	"uint8_t\000"
 2726      385F7400 
 2727              	.LASF72:
 2728 055c 6C666F5F 		.ascii	"lfo_freq\000"
 2728      66726571 
 2728      00
 2729              	.LASF73:
 2730 0565 6C666F5F 		.ascii	"lfo_multiplier\000"
 2730      6D756C74 
 2730      69706C69 
 2730      657200
 2731              	.LASF48:
 2732 0574 50726F63 		.ascii	"ProcessAudioOut\000"
 2732      65737341 
 2732      7564696F 
 2732      4F757400 
 2733              	.LASF28:
 2734 0584 73697A65 		.ascii	"sizetype\000"
 2734      74797065 
 2734      00
 2735              	.LASF36:
 2736 058d 63616C6C 		.ascii	"callback\000"
 2736      6261636B 
 2736      00
 2737              	.LASF65:
 2738 0596 6D617374 		.ascii	"masterRxBuffer\000"
 2738      65725278 
 2738      42756666 
 2738      657200
 2739              	.LASF86:
 2740 05a5 4379446D 		.ascii	"CyDmaChEnable\000"
 2740      61436845 
 2740      6E61626C 
 2740      6500
 2741              	.LASF29:
 2742 05b3 6379646D 		.ascii	"cydma_callback_t\000"
 2742      615F6361 
 2742      6C6C6261 
 2742      636B5F74 
 2742      00
 2743              	.LASF93:
 2744 05c4 6973725F 		.ascii	"isr_I2STxDone_StartEx\000"
 2744      49325354 
 2744      78446F6E 
 2744      655F5374 
 2744      61727445 
 2745              	.LASF1:
 2746 05da 5F5F7569 		.ascii	"__uint8_t\000"
 2746      6E74385F 
 2746      7400
 2747              	.LASF35:
 2748 05e4 64657363 		.ascii	"descriptor\000"
 2748      72697074 
 2748      6F7200
ARM GAS  C:\Users\psmus\AppData\Local\Temp\cc7FfqyC.s 			page 102


 2749              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
