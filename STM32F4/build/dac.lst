ARM GAS  /tmp/ccdyiyl6.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"dac.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Dac_SendData,"ax",%progbits
  18              		.align	1
  19              		.global	Dac_SendData
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Dac_SendData:
  26              	.LFB131:
  27              		.file 1 "Src/dac.c"
   1:Src/dac.c     **** #include "dac.h"
   2:Src/dac.c     **** #include "globals.h"
   3:Src/dac.c     **** #include <stdbool.h>
   4:Src/dac.c     **** #include <stdint.h>
   5:Src/dac.c     **** 
   6:Src/dac.c     **** #define I2C_WRITE_OPERATION		(0x00)
   7:Src/dac.c     **** 
   8:Src/dac.c     **** I2C_HandleTypeDef* hi2c;
   9:Src/dac.c     **** 
  10:Src/dac.c     **** //static uint16_t Dac_analogPathSetting = DAC_DEF_ANALOG_CTRL;
  11:Src/dac.c     **** //uint32 Dac_powerControlSetting = DAC_DEF_POWER_CTRL;
  12:Src/dac.c     **** 
  13:Src/dac.c     **** /*******************************************************************************
  14:Src/dac.c     **** * Function Name: Dac_Init
  15:Src/dac.c     **** ********************************************************************************
  16:Src/dac.c     **** * Summary:
  17:Src/dac.c     **** *   Initializes the codec with default settings.
  18:Src/dac.c     **** *
  19:Src/dac.c     **** *
  20:Src/dac.c     **** * Parameters:
  21:Src/dac.c     **** *	None
  22:Src/dac.c     **** *
  23:Src/dac.c     **** * Return:
  24:Src/dac.c     **** *   uint8_t - I2C master transaction error status
  25:Src/dac.c     **** *				DacI2CM_I2C_MSTR_NO_ERROR - Function complete without error
  26:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_ARB_LOST - Master lost arbitration: INTR_MASTER_I2C_ARB_LOST
  27:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_LB_NAK - Last Byte NACKed: INTR_MASTER_I2C_NACK
  28:Src/dac.c     **** *				DacI2CM_I2C_MSTR_NOT_READY - Master on the bus or Slave operation is in progress
  29:Src/dac.c     **** *				DacI2CM_I2C_MSTR_BUS_BUSY - Bus is busy, process not started
  30:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_ABORT_START - Slave was addressed before master begin Start
  31:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_BUS_ERR - Bus error has: INTR_MASTER_I2C_BUS_ERROR
ARM GAS  /tmp/ccdyiyl6.s 			page 2


  32:Src/dac.c     **** *
  33:Src/dac.c     **** *******************************************************************************/
  34:Src/dac.c     **** uint8_t Dac_Init(I2C_HandleTypeDef* i2c_handle)
  35:Src/dac.c     **** {
  36:Src/dac.c     ****   hi2c = i2c_handle;
  37:Src/dac.c     **** 
  38:Src/dac.c     ****   //PDN_Write(0);
  39:Src/dac.c     ****   //CyDelay(10);
  40:Src/dac.c     ****   //PDN_Write(1);
  41:Src/dac.c     ****   //CSN_Write(0);
  42:Src/dac.c     **** 
  43:Src/dac.c     ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_13, GPIO_PIN_RESET);
  44:Src/dac.c     ****   HAL_Delay(10);
  45:Src/dac.c     ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_13, GPIO_PIN_SET);
  46:Src/dac.c     ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_RESET);
  47:Src/dac.c     **** 
  48:Src/dac.c     **** 	uint8_t ret = 0;
  49:Src/dac.c     **** 
  50:Src/dac.c     ****   if(hi2c){
  51:Src/dac.c     ****     ret = Dac_ResetOverI2C();
  52:Src/dac.c     ****     //CyDelay(DAC_RESET_WAIT_DELAY);
  53:Src/dac.c     ****     HAL_Delay(DAC_RESET_WAIT_DELAY);
  54:Src/dac.c     **** 
  55:Src/dac.c     ****     ret = Dac_SendData(DAC_REG_INTERFACE_SET, 0b10000111);
  56:Src/dac.c     ****   }
  57:Src/dac.c     **** 
  58:Src/dac.c     **** 	return ret;
  59:Src/dac.c     **** }
  60:Src/dac.c     **** 
  61:Src/dac.c     **** /*******************************************************************************
  62:Src/dac.c     **** * Function Name: Dac_SendData
  63:Src/dac.c     **** ********************************************************************************
  64:Src/dac.c     **** * Summary:
  65:Src/dac.c     **** *   Low level API to send data to codec over I2C.
  66:Src/dac.c     **** *
  67:Src/dac.c     **** *
  68:Src/dac.c     **** * Parameters:  
  69:Src/dac.c     **** *	regAddr - Address of the codec register to be updated
  70:Src/dac.c     **** *	data - 16-bit data to be updated in the register
  71:Src/dac.c     **** *
  72:Src/dac.c     **** * Return:
  73:Src/dac.c     **** *   uint8_t - I2C master transaction error status
  74:Src/dac.c     **** *				DacI2CM_I2C_MSTR_NO_ERROR - Function complete without error                       
  75:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_ARB_LOST - Master lost arbitration: INTR_MASTER_I2C_ARB_LOST    
  76:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_LB_NAK - Last Byte NACKed: INTR_MASTER_I2C_NACK               
  77:Src/dac.c     **** *				DacI2CM_I2C_MSTR_NOT_READY - Master on the bus or Slave operation is in progress  
  78:Src/dac.c     **** *				DacI2CM_I2C_MSTR_BUS_BUSY - Bus is busy, process not started
  79:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_ABORT_START - Slave was addressed before master begin Start
  80:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_BUS_ERR - Bus error has: INTR_MASTER_I2C_BUS_ERROR 
  81:Src/dac.c     **** *
  82:Src/dac.c     **** *******************************************************************************/
  83:Src/dac.c     **** uint8_t Dac_SendData(uint8_t regAddr, uint16_t data)
  84:Src/dac.c     **** {
  28              		.loc 1 84 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccdyiyl6.s 			page 3


  32              	.LVL0:
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 20
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 85B0     		sub	sp, sp, #20
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 40
  44              	.LVL1:
  85:Src/dac.c     ****   uint8_t temp = 0;
  86:Src/dac.c     ****   uint8_t byte = I2C_WRITE_OPERATION;
  45              		.loc 1 86 0
  46 0004 0023     		movs	r3, #0
  47 0006 8DF80F30 		strb	r3, [sp, #15]
  87:Src/dac.c     ****   if(hi2c){
  48              		.loc 1 87 0
  49 000a 154B     		ldr	r3, .L5
  50 000c 1F68     		ldr	r7, [r3]
  51 000e 2FB3     		cbz	r7, .L3
  52 0010 0C46     		mov	r4, r1
  53 0012 0546     		mov	r5, r0
  88:Src/dac.c     ****     temp = HAL_I2C_Master_Transmit(hi2c, DAC_I2C_ADDR, &byte, 8, 100);
  54              		.loc 1 88 0
  55 0014 6426     		movs	r6, #100
  56 0016 0096     		str	r6, [sp]
  57 0018 0823     		movs	r3, #8
  58 001a 0DF10F02 		add	r2, sp, #15
  59 001e 1A21     		movs	r1, #26
  60              	.LVL2:
  61 0020 3846     		mov	r0, r7
  62              	.LVL3:
  63 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
  64              	.LVL4:
  89:Src/dac.c     ****     //    if(temp == HAL_OK) {
  90:Src/dac.c     ****       byte = ((regAddr << 0x01) | ((data>>8) & 0x01));
  65              		.loc 1 90 0
  66 0026 C4F30020 		ubfx	r0, r4, #8, #1
  67 002a 40EA4500 		orr	r0, r0, r5, lsl #1
  68 002e 8DF80F00 		strb	r0, [sp, #15]
  91:Src/dac.c     ****       temp = HAL_I2C_Master_Transmit(hi2c, DAC_I2C_ADDR, &byte, 8, 100);
  69              		.loc 1 91 0
  70 0032 0B4D     		ldr	r5, .L5
  71 0034 0096     		str	r6, [sp]
  72 0036 0823     		movs	r3, #8
  73 0038 0DF10F02 		add	r2, sp, #15
  74 003c 1A21     		movs	r1, #26
  75 003e 2868     		ldr	r0, [r5]
  76 0040 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
  77              	.LVL5:
  92:Src/dac.c     ****       //if(temp == HAL_OK) {
  93:Src/dac.c     ****         byte = (data&0xFF);
  78              		.loc 1 93 0
  79 0044 8DF80F40 		strb	r4, [sp, #15]
ARM GAS  /tmp/ccdyiyl6.s 			page 4


  94:Src/dac.c     ****         temp = HAL_I2C_Master_Transmit(hi2c, DAC_I2C_ADDR, &byte, 8, 100);
  80              		.loc 1 94 0
  81 0048 2868     		ldr	r0, [r5]
  82 004a 0096     		str	r6, [sp]
  83 004c 0823     		movs	r3, #8
  84 004e 0DF10F02 		add	r2, sp, #15
  85 0052 1A21     		movs	r1, #26
  86 0054 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
  87              	.LVL6:
  88              	.L2:
  95:Src/dac.c     ****         //}
  96:Src/dac.c     ****         // }
  97:Src/dac.c     ****   }
  98:Src/dac.c     **** 
  99:Src/dac.c     ****   return temp;
 100:Src/dac.c     **** 
 101:Src/dac.c     ****   /*
 102:Src/dac.c     ****   temp = DacI2CM_I2CMasterSendStart(DAC_I2C_ADDR, I2C_WRITE_OPERATION);
 103:Src/dac.c     **** 
 104:Src/dac.c     **** 	if(temp == DacI2CM_I2C_MSTR_NO_ERROR)
 105:Src/dac.c     **** 	{
 106:Src/dac.c     **** 		temp = DacI2CM_I2CMasterWriteByte(((regAddr << 0x01) | (HI8(data) & 0x01)));
 107:Src/dac.c     **** 
 108:Src/dac.c     **** 		if(temp == DacI2CM_I2C_MSTR_NO_ERROR)
 109:Src/dac.c     **** 		{
 110:Src/dac.c     **** 			temp = DacI2CM_I2CMasterWriteByte(LO8(data));
 111:Src/dac.c     **** 
 112:Src/dac.c     **** 			if(temp == DacI2CM_I2C_MSTR_NO_ERROR)
 113:Src/dac.c     **** 			{
 114:Src/dac.c     **** 				temp = DacI2CM_I2CMasterSendStop();
 115:Src/dac.c     **** 			}
 116:Src/dac.c     **** 		}
 117:Src/dac.c     **** 	}
 118:Src/dac.c     **** 
 119:Src/dac.c     **** 	return temp;
 120:Src/dac.c     ****   */
 121:Src/dac.c     **** }
  89              		.loc 1 121 0
  90 0058 05B0     		add	sp, sp, #20
  91              	.LCFI2:
  92              		.cfi_remember_state
  93              		.cfi_def_cfa_offset 20
  94              		@ sp needed
  95 005a F0BD     		pop	{r4, r5, r6, r7, pc}
  96              	.LVL7:
  97              	.L3:
  98              	.LCFI3:
  99              		.cfi_restore_state
  85:Src/dac.c     ****   uint8_t byte = I2C_WRITE_OPERATION;
 100              		.loc 1 85 0
 101 005c 0020     		movs	r0, #0
 102              	.LVL8:
 103 005e FBE7     		b	.L2
 104              	.L6:
 105              		.align	2
 106              	.L5:
 107 0060 00000000 		.word	hi2c
ARM GAS  /tmp/ccdyiyl6.s 			page 5


 108              		.cfi_endproc
 109              	.LFE131:
 111              		.section	.text.Dac_ResetOverI2C,"ax",%progbits
 112              		.align	1
 113              		.global	Dac_ResetOverI2C
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	Dac_ResetOverI2C:
 120              	.LFB132:
 122:Src/dac.c     **** 
 123:Src/dac.c     **** /*******************************************************************************
 124:Src/dac.c     **** * Function Name: Dac_SetSamplingRate
 125:Src/dac.c     **** ********************************************************************************
 126:Src/dac.c     **** * Summary:
 127:Src/dac.c     **** *   This function sets the sampling rate of the codec. Note that the codec must be deactivated 
 128:Src/dac.c     **** *	before configuring the sample rate.
 129:Src/dac.c     **** *
 130:Src/dac.c     **** *
 131:Src/dac.c     **** * Parameters:  
 132:Src/dac.c     **** *	srCtrlField - Sampling control register settings 
 133:Src/dac.c     **** *					
 134:Src/dac.c     **** *
 135:Src/dac.c     **** * Return:
 136:Src/dac.c     **** *   uint8_t - I2C master transaction error status
 137:Src/dac.c     **** *				DacI2CM_I2C_MSTR_NO_ERROR - Function complete without error                       
 138:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_ARB_LOST - Master lost arbitration: INTR_MASTER_I2C_ARB_LOST    
 139:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_LB_NAK - Last Byte NACKed: INTR_MASTER_I2C_NACK               
 140:Src/dac.c     **** *				DacI2CM_I2C_MSTR_NOT_READY - Master on the bus or Slave operation is in progress  
 141:Src/dac.c     **** *				DacI2CM_I2C_MSTR_BUS_BUSY - Bus is busy, process not started
 142:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_ABORT_START - Slave was addressed before master begin Start
 143:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_BUS_ERR - Bus error has: INTR_MASTER_I2C_BUS_ERROR 
 144:Src/dac.c     **** *
 145:Src/dac.c     **** *******************************************************************************
 146:Src/dac.c     **** uint8_t Dac_SetSamplingRate(uint8_t srCtrlField)
 147:Src/dac.c     **** {		
 148:Src/dac.c     **** 	 This function modifies the BOSR & SR bits of sampling rate control register.
 149:Src/dac.c     ****      * srCtrlField : bit[0] - BOSR, bit[1:4] - SR.
 150:Src/dac.c     ****      
 151:Src/dac.c     ****     return Dac_SendData(DAC_REG_SAMPLING_CTRL, srCtrlField);;
 152:Src/dac.c     **** }
 153:Src/dac.c     **** */
 154:Src/dac.c     **** 
 155:Src/dac.c     **** /*******************************************************************************
 156:Src/dac.c     **** * Function Name: Dac_AdjustBothHeadphoneVolume
 157:Src/dac.c     **** ********************************************************************************
 158:Src/dac.c     **** * Summary:
 159:Src/dac.c     **** *   This function updates the volume of both the left and right channels of the
 160:Src/dac.c     **** * 	headphone output.
 161:Src/dac.c     **** *
 162:Src/dac.c     **** *
 163:Src/dac.c     **** * Parameters:  
 164:Src/dac.c     **** *	volume - 0 - Mute
 165:Src/dac.c     **** *			 1 to DAC_HP_VOLUME_MAX levels
 166:Src/dac.c     **** *
 167:Src/dac.c     **** * Return:
ARM GAS  /tmp/ccdyiyl6.s 			page 6


 168:Src/dac.c     **** *   uint8_t - I2C master transaction error status
 169:Src/dac.c     **** *				DacI2CM_I2C_MSTR_NO_ERROR - Function complete without error                       
 170:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_ARB_LOST - Master lost arbitration: INTR_MASTER_I2C_ARB_LOST    
 171:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_LB_NAK - Last Byte NACKed: INTR_MASTER_I2C_NACK               
 172:Src/dac.c     **** *				DacI2CM_I2C_MSTR_NOT_READY - Master on the bus or Slave operation is in progress  
 173:Src/dac.c     **** *				DacI2CM_I2C_MSTR_BUS_BUSY - Bus is busy, process not started
 174:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_ABORT_START - Slave was addressed before master begin Start
 175:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_BUS_ERR - Bus error has: INTR_MASTER_I2C_BUS_ERROR 
 176:Src/dac.c     **** *
 177:Src/dac.c     **** *******************************************************************************
 178:Src/dac.c     **** 
 179:Src/dac.c     **** uint8_t Dac_AdjustBothHeadphoneVolume(uint8_t volume)
 180:Src/dac.c     **** {
 181:Src/dac.c     **** 	if(volume > DAC_HP_VOLUME_MAX)
 182:Src/dac.c     **** 	{
 183:Src/dac.c     **** 		volume = DAC_HP_VOLUME_MAX;
 184:Src/dac.c     **** 	}
 185:Src/dac.c     **** 	
 186:Src/dac.c     **** 	return Dac_SendData(DAC_REG_LCH_VOLUME, (volume + (DAC_LHPOUT_BOTH + DAC_LHPOUT_LZCEN + DAC_HP_MUT
 187:Src/dac.c     **** }
 188:Src/dac.c     **** 
 189:Src/dac.c     **** 
 190:Src/dac.c     **** *******************************************************************************
 191:Src/dac.c     **** * Function Name: Dac_Activate
 192:Src/dac.c     **** ********************************************************************************
 193:Src/dac.c     **** * Summary:
 194:Src/dac.c     **** *   Activates the codec - This function is called in conjunction with Dac_Deactivate API
 195:Src/dac.c     **** *	after successful configuration update of the codec.
 196:Src/dac.c     **** *
 197:Src/dac.c     **** *
 198:Src/dac.c     **** * Parameters:  
 199:Src/dac.c     **** *	None
 200:Src/dac.c     **** *
 201:Src/dac.c     **** * Return:
 202:Src/dac.c     **** *   uint8_t - I2C master transaction error status
 203:Src/dac.c     **** *				DacI2CM_I2C_MSTR_NO_ERROR - Function complete without error                       
 204:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_ARB_LOST - Master lost arbitration: INTR_MASTER_I2C_ARB_LOST    
 205:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_LB_NAK - Last Byte NACKed: INTR_MASTER_I2C_NACK               
 206:Src/dac.c     **** *				DacI2CM_I2C_MSTR_NOT_READY - Master on the bus or Slave operation is in progress  
 207:Src/dac.c     **** *				DacI2CM_I2C_MSTR_BUS_BUSY - Bus is busy, process not started
 208:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_ABORT_START - Slave was addressed before master begin Start
 209:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_BUS_ERR - Bus error has: INTR_MASTER_I2C_BUS_ERROR 
 210:Src/dac.c     **** *
 211:Src/dac.c     **** *******************************************************************************
 212:Src/dac.c     **** uint8_t Dac_Activate(void)
 213:Src/dac.c     **** {
 214:Src/dac.c     **** 	return Dac_SendData(DAC_REG_ACTIVATE, DAC_CTRL_ACTIVATE); 
 215:Src/dac.c     **** }
 216:Src/dac.c     **** */
 217:Src/dac.c     **** /*******************************************************************************
 218:Src/dac.c     **** * Function Name: Dac_Deactivate
 219:Src/dac.c     **** ********************************************************************************
 220:Src/dac.c     **** * Summary:
 221:Src/dac.c     **** *   Deactivates the DAC - the configuration is retained, just the DAC input/outputs are
 222:Src/dac.c     **** *	disabled. The function should be called before changing any setting in the codec over I2C
 223:Src/dac.c     **** *
 224:Src/dac.c     **** *
ARM GAS  /tmp/ccdyiyl6.s 			page 7


 225:Src/dac.c     **** * Parameters:  
 226:Src/dac.c     **** *	None
 227:Src/dac.c     **** *
 228:Src/dac.c     **** * Return:
 229:Src/dac.c     **** *   uint8_t - I2C master transaction error status
 230:Src/dac.c     **** *				DacI2CM_I2C_MSTR_NO_ERROR - Function complete without error                       
 231:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_ARB_LOST - Master lost arbitration: INTR_MASTER_I2C_ARB_LOST    
 232:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_LB_NAK - Last Byte NACKed: INTR_MASTER_I2C_NACK               
 233:Src/dac.c     **** *				DacI2CM_I2C_MSTR_NOT_READY - Master on the bus or Slave operation is in progress  
 234:Src/dac.c     **** *				DacI2CM_I2C_MSTR_BUS_BUSY - Bus is busy, process not started
 235:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_ABORT_START - Slave was addressed before master begin Start
 236:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_BUS_ERR - Bus error has: INTR_MASTER_I2C_BUS_ERROR 
 237:Src/dac.c     **** *
 238:Src/dac.c     **** *******************************************************************************
 239:Src/dac.c     **** uint8_t Dac_Deactivate(void)
 240:Src/dac.c     **** {
 241:Src/dac.c     **** 	return Dac_SendData(DAC_REG_ACTIVATE, DAC_CTRL_DEACTIVATE); 
 242:Src/dac.c     **** }
 243:Src/dac.c     **** */
 244:Src/dac.c     **** 
 245:Src/dac.c     **** /*******************************************************************************
 246:Src/dac.c     **** * Function Name: Dac_ResetOverI2C
 247:Src/dac.c     **** ********************************************************************************
 248:Src/dac.c     **** * Summary:
 249:Src/dac.c     **** *   Resets the codec by sending an I2C command
 250:Src/dac.c     **** *
 251:Src/dac.c     **** * Parameters:  
 252:Src/dac.c     **** *	None
 253:Src/dac.c     **** *
 254:Src/dac.c     **** * Return:
 255:Src/dac.c     **** *   uint8_t - I2C master transaction error status
 256:Src/dac.c     **** *				DacI2CM_I2C_MSTR_NO_ERROR - Function complete without error                       
 257:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_ARB_LOST - Master lost arbitration: INTR_MASTER_I2C_ARB_LOST    
 258:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_LB_NAK - Last Byte NACKed: INTR_MASTER_I2C_NACK               
 259:Src/dac.c     **** *				DacI2CM_I2C_MSTR_NOT_READY - Master on the bus or Slave operation is in progress  
 260:Src/dac.c     **** *				DacI2CM_I2C_MSTR_BUS_BUSY - Bus is busy, process not started
 261:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_ABORT_START - Slave was addressed before master begin Start
 262:Src/dac.c     **** *				DacI2CM_I2C_MSTR_ERR_BUS_ERR - Bus error has: INTR_MASTER_I2C_BUS_ERROR 
 263:Src/dac.c     **** *
 264:Src/dac.c     **** *******************************************************************************/
 265:Src/dac.c     **** uint8_t Dac_ResetOverI2C(void)
 266:Src/dac.c     **** {
 121              		.loc 1 266 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125 0000 08B5     		push	{r3, lr}
 126              	.LCFI4:
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 3, -8
 129              		.cfi_offset 14, -4
 267:Src/dac.c     **** 	return Dac_SendData(DAC_REG_RESET, DAC_CTRL_RESET);
 130              		.loc 1 267 0
 131 0002 0021     		movs	r1, #0
 132 0004 0846     		mov	r0, r1
 133 0006 FFF7FEFF 		bl	Dac_SendData
 134              	.LVL9:
ARM GAS  /tmp/ccdyiyl6.s 			page 8


 268:Src/dac.c     **** }
 135              		.loc 1 268 0
 136 000a 08BD     		pop	{r3, pc}
 137              		.cfi_endproc
 138              	.LFE132:
 140              		.section	.text.Dac_Init,"ax",%progbits
 141              		.align	1
 142              		.global	Dac_Init
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv4-sp-d16
 148              	Dac_Init:
 149              	.LFB130:
  35:Src/dac.c     ****   hi2c = i2c_handle;
 150              		.loc 1 35 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              	.LVL10:
 155 0000 38B5     		push	{r3, r4, r5, lr}
 156              	.LCFI5:
 157              		.cfi_def_cfa_offset 16
 158              		.cfi_offset 3, -16
 159              		.cfi_offset 4, -12
 160              		.cfi_offset 5, -8
 161              		.cfi_offset 14, -4
  36:Src/dac.c     **** 
 162              		.loc 1 36 0
 163 0002 134D     		ldr	r5, .L13
 164 0004 2860     		str	r0, [r5]
  43:Src/dac.c     ****   HAL_Delay(10);
 165              		.loc 1 43 0
 166 0006 134C     		ldr	r4, .L13+4
 167 0008 0022     		movs	r2, #0
 168 000a 4FF40051 		mov	r1, #8192
 169 000e 2046     		mov	r0, r4
 170              	.LVL11:
 171 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 172              	.LVL12:
  44:Src/dac.c     ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_13, GPIO_PIN_SET);
 173              		.loc 1 44 0
 174 0014 0A20     		movs	r0, #10
 175 0016 FFF7FEFF 		bl	HAL_Delay
 176              	.LVL13:
  45:Src/dac.c     ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_RESET);
 177              		.loc 1 45 0
 178 001a 0122     		movs	r2, #1
 179 001c 4FF40051 		mov	r1, #8192
 180 0020 2046     		mov	r0, r4
 181 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 182              	.LVL14:
  46:Src/dac.c     **** 
 183              		.loc 1 46 0
 184 0026 0022     		movs	r2, #0
 185 0028 4FF48051 		mov	r1, #4096
 186 002c 2046     		mov	r0, r4
ARM GAS  /tmp/ccdyiyl6.s 			page 9


 187 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 188              	.LVL15:
  50:Src/dac.c     ****     ret = Dac_ResetOverI2C();
 189              		.loc 1 50 0
 190 0032 2B68     		ldr	r3, [r5]
 191 0034 4BB1     		cbz	r3, .L11
  51:Src/dac.c     ****     //CyDelay(DAC_RESET_WAIT_DELAY);
 192              		.loc 1 51 0
 193 0036 FFF7FEFF 		bl	Dac_ResetOverI2C
 194              	.LVL16:
  53:Src/dac.c     **** 
 195              		.loc 1 53 0
 196 003a 0A20     		movs	r0, #10
 197 003c FFF7FEFF 		bl	HAL_Delay
 198              	.LVL17:
  55:Src/dac.c     ****   }
 199              		.loc 1 55 0
 200 0040 8721     		movs	r1, #135
 201 0042 0020     		movs	r0, #0
 202 0044 FFF7FEFF 		bl	Dac_SendData
 203              	.LVL18:
 204 0048 38BD     		pop	{r3, r4, r5, pc}
 205              	.LVL19:
 206              	.L11:
  48:Src/dac.c     **** 
 207              		.loc 1 48 0
 208 004a 0020     		movs	r0, #0
 209              	.LVL20:
  59:Src/dac.c     **** 
 210              		.loc 1 59 0
 211 004c 38BD     		pop	{r3, r4, r5, pc}
 212              	.L14:
 213 004e 00BF     		.align	2
 214              	.L13:
 215 0050 00000000 		.word	hi2c
 216 0054 00100240 		.word	1073876992
 217              		.cfi_endproc
 218              	.LFE130:
 220              		.comm	hi2c,4,4
 221              		.text
 222              	.Letext0:
 223              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 224              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 225              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 226              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 227              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 228              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 229              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 230              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 231              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 232              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 233              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 234              		.file 13 "Inc/globals.h"
 235              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccdyiyl6.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 dac.c
     /tmp/ccdyiyl6.s:18     .text.Dac_SendData:0000000000000000 $t
     /tmp/ccdyiyl6.s:25     .text.Dac_SendData:0000000000000000 Dac_SendData
     /tmp/ccdyiyl6.s:107    .text.Dac_SendData:0000000000000060 $d
                            *COM*:0000000000000004 hi2c
     /tmp/ccdyiyl6.s:112    .text.Dac_ResetOverI2C:0000000000000000 $t
     /tmp/ccdyiyl6.s:119    .text.Dac_ResetOverI2C:0000000000000000 Dac_ResetOverI2C
     /tmp/ccdyiyl6.s:141    .text.Dac_Init:0000000000000000 $t
     /tmp/ccdyiyl6.s:148    .text.Dac_Init:0000000000000000 Dac_Init
     /tmp/ccdyiyl6.s:215    .text.Dac_Init:0000000000000050 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_I2C_Master_Transmit
HAL_GPIO_WritePin
HAL_Delay
