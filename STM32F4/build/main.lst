ARM GAS  /tmp/ccQy69MG.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB138:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
ARM GAS  /tmp/ccQy69MG.s 			page 2


  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* USER CODE END PD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  45:Src/main.c    **** DAC_HandleTypeDef hdac;
  46:Src/main.c    **** 
  47:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  48:Src/main.c    **** 
  49:Src/main.c    **** I2S_HandleTypeDef hi2s2;
  50:Src/main.c    **** 
  51:Src/main.c    **** SPI_HandleTypeDef hspi1;
  52:Src/main.c    **** 
  53:Src/main.c    **** TIM_HandleTypeDef htim6;
  54:Src/main.c    **** 
  55:Src/main.c    **** UART_HandleTypeDef huart4;
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE BEGIN PV */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE END PV */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  62:Src/main.c    **** void SystemClock_Config(void);
  63:Src/main.c    **** static void MX_GPIO_Init(void);
  64:Src/main.c    **** static void MX_DAC_Init(void);
  65:Src/main.c    **** static void MX_I2C1_Init(void);
  66:Src/main.c    **** static void MX_I2S2_Init(void);
  67:Src/main.c    **** static void MX_SPI1_Init(void);
  68:Src/main.c    **** static void MX_TIM6_Init(void);
  69:Src/main.c    **** static void MX_UART4_Init(void);
  70:Src/main.c    **** /* USER CODE BEGIN PFP */
  71:Src/main.c    **** 
  72:Src/main.c    **** /* USER CODE END PFP */
  73:Src/main.c    **** 
  74:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  75:Src/main.c    **** /* USER CODE BEGIN 0 */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* USER CODE END 0 */
  78:Src/main.c    **** 
  79:Src/main.c    **** /**
  80:Src/main.c    ****   * @brief  The application entry point.
  81:Src/main.c    ****   * @retval int
  82:Src/main.c    ****   */
  83:Src/main.c    **** int main(void)
  84:Src/main.c    **** {
  85:Src/main.c    ****   /* USER CODE BEGIN 1 */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE END 1 */
  88:Src/main.c    ****   
  89:Src/main.c    **** 
ARM GAS  /tmp/ccQy69MG.s 			page 3


  90:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  93:Src/main.c    ****   HAL_Init();
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* USER CODE BEGIN Init */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* USER CODE END Init */
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* Configure the system clock */
 100:Src/main.c    ****   SystemClock_Config();
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* USER CODE END SysInit */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* Initialize all configured peripherals */
 107:Src/main.c    ****   MX_GPIO_Init();
 108:Src/main.c    ****   MX_DAC_Init();
 109:Src/main.c    ****   MX_I2C1_Init();
 110:Src/main.c    ****   MX_I2S2_Init();
 111:Src/main.c    ****   MX_SPI1_Init();
 112:Src/main.c    ****   MX_TIM6_Init();
 113:Src/main.c    ****   MX_UART4_Init();
 114:Src/main.c    ****   /* USER CODE BEGIN 2 */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* USER CODE END 2 */
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* Infinite loop */
 119:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 120:Src/main.c    ****   while (1)
 121:Src/main.c    ****   {
 122:Src/main.c    ****     /* USER CODE END WHILE */
 123:Src/main.c    **** 
 124:Src/main.c    ****     /* USER CODE BEGIN 3 */
 125:Src/main.c    ****   }
 126:Src/main.c    ****   /* USER CODE END 3 */
 127:Src/main.c    **** }
 128:Src/main.c    **** 
 129:Src/main.c    **** /**
 130:Src/main.c    ****   * @brief System Clock Configuration
 131:Src/main.c    ****   * @retval None
 132:Src/main.c    ****   */
 133:Src/main.c    **** void SystemClock_Config(void)
 134:Src/main.c    **** {
 135:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 136:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 137:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 138:Src/main.c    **** 
 139:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 140:Src/main.c    ****   */
 141:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 142:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 143:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 144:Src/main.c    ****   */
 145:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 146:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  /tmp/ccQy69MG.s 			page 4


 147:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 151:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 125;
 152:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 153:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 154:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 155:Src/main.c    ****   {
 156:Src/main.c    ****     Error_Handler();
 157:Src/main.c    ****   }
 158:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 159:Src/main.c    ****   */
 160:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 161:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 162:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 163:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 164:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 165:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 166:Src/main.c    **** 
 167:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 168:Src/main.c    ****   {
 169:Src/main.c    ****     Error_Handler();
 170:Src/main.c    ****   }
 171:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2S;
 172:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SN = 50;
 173:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 174:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 175:Src/main.c    ****   {
 176:Src/main.c    ****     Error_Handler();
 177:Src/main.c    ****   }
 178:Src/main.c    **** }
 179:Src/main.c    **** 
 180:Src/main.c    **** /**
 181:Src/main.c    ****   * @brief DAC Initialization Function
 182:Src/main.c    ****   * @param None
 183:Src/main.c    ****   * @retval None
 184:Src/main.c    ****   */
 185:Src/main.c    **** static void MX_DAC_Init(void)
 186:Src/main.c    **** {
 187:Src/main.c    **** 
 188:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 0 */
 189:Src/main.c    **** 
 190:Src/main.c    ****   /* USER CODE END DAC_Init 0 */
 191:Src/main.c    **** 
 192:Src/main.c    ****   DAC_ChannelConfTypeDef sConfig = {0};
 193:Src/main.c    **** 
 194:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 1 */
 195:Src/main.c    **** 
 196:Src/main.c    ****   /* USER CODE END DAC_Init 1 */
 197:Src/main.c    ****   /** DAC Initialization 
 198:Src/main.c    ****   */
 199:Src/main.c    ****   hdac.Instance = DAC;
 200:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 201:Src/main.c    ****   {
 202:Src/main.c    ****     Error_Handler();
 203:Src/main.c    ****   }
ARM GAS  /tmp/ccQy69MG.s 			page 5


 204:Src/main.c    ****   /** DAC channel OUT1 config 
 205:Src/main.c    ****   */
 206:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 207:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 208:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 209:Src/main.c    ****   {
 210:Src/main.c    ****     Error_Handler();
 211:Src/main.c    ****   }
 212:Src/main.c    ****   /** DAC channel OUT2 config 
 213:Src/main.c    ****   */
 214:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 215:Src/main.c    ****   {
 216:Src/main.c    ****     Error_Handler();
 217:Src/main.c    ****   }
 218:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 2 */
 219:Src/main.c    **** 
 220:Src/main.c    ****   /* USER CODE END DAC_Init 2 */
 221:Src/main.c    **** 
 222:Src/main.c    **** }
 223:Src/main.c    **** 
 224:Src/main.c    **** /**
 225:Src/main.c    ****   * @brief I2C1 Initialization Function
 226:Src/main.c    ****   * @param None
 227:Src/main.c    ****   * @retval None
 228:Src/main.c    ****   */
 229:Src/main.c    **** static void MX_I2C1_Init(void)
 230:Src/main.c    **** {
 231:Src/main.c    **** 
 232:Src/main.c    ****   /* USER CODE BEGIN I2C1_Init 0 */
 233:Src/main.c    **** 
 234:Src/main.c    ****   /* USER CODE END I2C1_Init 0 */
 235:Src/main.c    **** 
 236:Src/main.c    ****   /* USER CODE BEGIN I2C1_Init 1 */
 237:Src/main.c    **** 
 238:Src/main.c    ****   /* USER CODE END I2C1_Init 1 */
 239:Src/main.c    ****   hi2c1.Instance = I2C1;
 240:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 241:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 242:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 243:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 244:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 245:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 246:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 247:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 248:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 249:Src/main.c    ****   {
 250:Src/main.c    ****     Error_Handler();
 251:Src/main.c    ****   }
 252:Src/main.c    ****   /** Configure Analogue filter 
 253:Src/main.c    ****   */
 254:Src/main.c    ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 255:Src/main.c    ****   {
 256:Src/main.c    ****     Error_Handler();
 257:Src/main.c    ****   }
 258:Src/main.c    ****   /** Configure Digital filter 
 259:Src/main.c    ****   */
 260:Src/main.c    ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
ARM GAS  /tmp/ccQy69MG.s 			page 6


 261:Src/main.c    ****   {
 262:Src/main.c    ****     Error_Handler();
 263:Src/main.c    ****   }
 264:Src/main.c    ****   /* USER CODE BEGIN I2C1_Init 2 */
 265:Src/main.c    **** 
 266:Src/main.c    ****   /* USER CODE END I2C1_Init 2 */
 267:Src/main.c    **** 
 268:Src/main.c    **** }
 269:Src/main.c    **** 
 270:Src/main.c    **** /**
 271:Src/main.c    ****   * @brief I2S2 Initialization Function
 272:Src/main.c    ****   * @param None
 273:Src/main.c    ****   * @retval None
 274:Src/main.c    ****   */
 275:Src/main.c    **** static void MX_I2S2_Init(void)
 276:Src/main.c    **** {
 277:Src/main.c    **** 
 278:Src/main.c    ****   /* USER CODE BEGIN I2S2_Init 0 */
 279:Src/main.c    **** 
 280:Src/main.c    ****   /* USER CODE END I2S2_Init 0 */
 281:Src/main.c    **** 
 282:Src/main.c    ****   /* USER CODE BEGIN I2S2_Init 1 */
 283:Src/main.c    **** 
 284:Src/main.c    ****   /* USER CODE END I2S2_Init 1 */
 285:Src/main.c    ****   hi2s2.Instance = SPI2;
 286:Src/main.c    ****   hi2s2.Init.Mode = I2S_MODE_MASTER_TX;
 287:Src/main.c    ****   hi2s2.Init.Standard = I2S_STANDARD_PHILIPS;
 288:Src/main.c    ****   hi2s2.Init.DataFormat = I2S_DATAFORMAT_32B;
 289:Src/main.c    ****   hi2s2.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 290:Src/main.c    ****   hi2s2.Init.AudioFreq = I2S_AUDIOFREQ_44K;
 291:Src/main.c    ****   hi2s2.Init.CPOL = I2S_CPOL_LOW;
 292:Src/main.c    ****   hi2s2.Init.ClockSource = I2S_CLOCK_PLL;
 293:Src/main.c    ****   hi2s2.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_ENABLE;
 294:Src/main.c    ****   if (HAL_I2S_Init(&hi2s2) != HAL_OK)
 295:Src/main.c    ****   {
 296:Src/main.c    ****     Error_Handler();
 297:Src/main.c    ****   }
 298:Src/main.c    ****   /* USER CODE BEGIN I2S2_Init 2 */
 299:Src/main.c    **** 
 300:Src/main.c    ****   /* USER CODE END I2S2_Init 2 */
 301:Src/main.c    **** 
 302:Src/main.c    **** }
 303:Src/main.c    **** 
 304:Src/main.c    **** /**
 305:Src/main.c    ****   * @brief SPI1 Initialization Function
 306:Src/main.c    ****   * @param None
 307:Src/main.c    ****   * @retval None
 308:Src/main.c    ****   */
 309:Src/main.c    **** static void MX_SPI1_Init(void)
 310:Src/main.c    **** {
 311:Src/main.c    **** 
 312:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 313:Src/main.c    **** 
 314:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 315:Src/main.c    **** 
 316:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 317:Src/main.c    **** 
ARM GAS  /tmp/ccQy69MG.s 			page 7


 318:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 319:Src/main.c    ****   /* SPI1 parameter configuration*/
 320:Src/main.c    ****   hspi1.Instance = SPI1;
 321:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_SLAVE;
 322:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 323:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 324:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 325:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 326:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_INPUT;
 327:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 328:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 329:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 330:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 331:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 332:Src/main.c    ****   {
 333:Src/main.c    ****     Error_Handler();
 334:Src/main.c    ****   }
 335:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 336:Src/main.c    **** 
 337:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 338:Src/main.c    **** 
 339:Src/main.c    **** }
 340:Src/main.c    **** 
 341:Src/main.c    **** /**
 342:Src/main.c    ****   * @brief TIM6 Initialization Function
 343:Src/main.c    ****   * @param None
 344:Src/main.c    ****   * @retval None
 345:Src/main.c    ****   */
 346:Src/main.c    **** static void MX_TIM6_Init(void)
 347:Src/main.c    **** {
 348:Src/main.c    **** 
 349:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 0 */
 350:Src/main.c    **** 
 351:Src/main.c    ****   /* USER CODE END TIM6_Init 0 */
 352:Src/main.c    **** 
 353:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 354:Src/main.c    **** 
 355:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 1 */
 356:Src/main.c    **** 
 357:Src/main.c    ****   /* USER CODE END TIM6_Init 1 */
 358:Src/main.c    ****   htim6.Instance = TIM6;
 359:Src/main.c    ****   htim6.Init.Prescaler = 0;
 360:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 361:Src/main.c    ****   htim6.Init.Period = 1290;
 362:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 363:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 364:Src/main.c    ****   {
 365:Src/main.c    ****     Error_Handler();
 366:Src/main.c    ****   }
 367:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 368:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 369:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 370:Src/main.c    ****   {
 371:Src/main.c    ****     Error_Handler();
 372:Src/main.c    ****   }
 373:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 2 */
 374:Src/main.c    **** 
ARM GAS  /tmp/ccQy69MG.s 			page 8


 375:Src/main.c    ****   /* USER CODE END TIM6_Init 2 */
 376:Src/main.c    **** 
 377:Src/main.c    **** }
 378:Src/main.c    **** 
 379:Src/main.c    **** /**
 380:Src/main.c    ****   * @brief UART4 Initialization Function
 381:Src/main.c    ****   * @param None
 382:Src/main.c    ****   * @retval None
 383:Src/main.c    ****   */
 384:Src/main.c    **** static void MX_UART4_Init(void)
 385:Src/main.c    **** {
 386:Src/main.c    **** 
 387:Src/main.c    ****   /* USER CODE BEGIN UART4_Init 0 */
 388:Src/main.c    **** 
 389:Src/main.c    ****   /* USER CODE END UART4_Init 0 */
 390:Src/main.c    **** 
 391:Src/main.c    ****   /* USER CODE BEGIN UART4_Init 1 */
 392:Src/main.c    **** 
 393:Src/main.c    ****   /* USER CODE END UART4_Init 1 */
 394:Src/main.c    ****   huart4.Instance = UART4;
 395:Src/main.c    ****   huart4.Init.BaudRate = 9600;
 396:Src/main.c    ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 397:Src/main.c    ****   huart4.Init.StopBits = UART_STOPBITS_1;
 398:Src/main.c    ****   huart4.Init.Parity = UART_PARITY_NONE;
 399:Src/main.c    ****   huart4.Init.Mode = UART_MODE_TX_RX;
 400:Src/main.c    ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 401:Src/main.c    ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 402:Src/main.c    ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 403:Src/main.c    ****   {
 404:Src/main.c    ****     Error_Handler();
 405:Src/main.c    ****   }
 406:Src/main.c    ****   /* USER CODE BEGIN UART4_Init 2 */
 407:Src/main.c    **** 
 408:Src/main.c    ****   /* USER CODE END UART4_Init 2 */
 409:Src/main.c    **** 
 410:Src/main.c    **** }
 411:Src/main.c    **** 
 412:Src/main.c    **** /**
 413:Src/main.c    ****   * @brief GPIO Initialization Function
 414:Src/main.c    ****   * @param None
 415:Src/main.c    ****   * @retval None
 416:Src/main.c    ****   */
 417:Src/main.c    **** static void MX_GPIO_Init(void)
 418:Src/main.c    **** {
  27              		.loc 1 418 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 8BB0     		sub	sp, sp, #44
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 56
ARM GAS  /tmp/ccQy69MG.s 			page 9


 419:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 419 0
  41 0004 0024     		movs	r4, #0
  42 0006 0594     		str	r4, [sp, #20]
  43 0008 0694     		str	r4, [sp, #24]
  44 000a 0794     		str	r4, [sp, #28]
  45 000c 0894     		str	r4, [sp, #32]
  46 000e 0994     		str	r4, [sp, #36]
  47              	.LBB2:
 420:Src/main.c    **** 
 421:Src/main.c    ****   /* GPIO Ports Clock Enable */
 422:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  48              		.loc 1 422 0
  49 0010 0194     		str	r4, [sp, #4]
  50 0012 1E4B     		ldr	r3, .L3
  51 0014 1A6B     		ldr	r2, [r3, #48]
  52 0016 42F00402 		orr	r2, r2, #4
  53 001a 1A63     		str	r2, [r3, #48]
  54 001c 1A6B     		ldr	r2, [r3, #48]
  55 001e 02F00402 		and	r2, r2, #4
  56 0022 0192     		str	r2, [sp, #4]
  57 0024 019A     		ldr	r2, [sp, #4]
  58              	.LBE2:
  59              	.LBB3:
 423:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  60              		.loc 1 423 0
  61 0026 0294     		str	r4, [sp, #8]
  62 0028 1A6B     		ldr	r2, [r3, #48]
  63 002a 42F00102 		orr	r2, r2, #1
  64 002e 1A63     		str	r2, [r3, #48]
  65 0030 1A6B     		ldr	r2, [r3, #48]
  66 0032 02F00102 		and	r2, r2, #1
  67 0036 0292     		str	r2, [sp, #8]
  68 0038 029A     		ldr	r2, [sp, #8]
  69              	.LBE3:
  70              	.LBB4:
 424:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  71              		.loc 1 424 0
  72 003a 0394     		str	r4, [sp, #12]
  73 003c 1A6B     		ldr	r2, [r3, #48]
  74 003e 42F01002 		orr	r2, r2, #16
  75 0042 1A63     		str	r2, [r3, #48]
  76 0044 1A6B     		ldr	r2, [r3, #48]
  77 0046 02F01002 		and	r2, r2, #16
  78 004a 0392     		str	r2, [sp, #12]
  79 004c 039A     		ldr	r2, [sp, #12]
  80              	.LBE4:
  81              	.LBB5:
 425:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  82              		.loc 1 425 0
  83 004e 0494     		str	r4, [sp, #16]
  84 0050 1A6B     		ldr	r2, [r3, #48]
  85 0052 42F00202 		orr	r2, r2, #2
  86 0056 1A63     		str	r2, [r3, #48]
  87 0058 1B6B     		ldr	r3, [r3, #48]
  88 005a 03F00203 		and	r3, r3, #2
  89 005e 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccQy69MG.s 			page 10


  90 0060 049B     		ldr	r3, [sp, #16]
  91              	.LBE5:
 426:Src/main.c    **** 
 427:Src/main.c    ****   /*Configure GPIO pin Output Level */
 428:Src/main.c    ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
  92              		.loc 1 428 0
  93 0062 0B4D     		ldr	r5, .L3+4
  94 0064 2246     		mov	r2, r4
  95 0066 4FF4FC51 		mov	r1, #8064
  96 006a 2846     		mov	r0, r5
  97 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
  98              	.LVL0:
 429:Src/main.c    ****                           |GPIO_PIN_11|GPIO_PIN_12, GPIO_PIN_RESET);
 430:Src/main.c    **** 
 431:Src/main.c    ****   /*Configure GPIO pins : PE7 PE8 PE9 PE10 
 432:Src/main.c    ****                            PE11 PE12 */
 433:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
  99              		.loc 1 433 0
 100 0070 4FF4FC53 		mov	r3, #8064
 101 0074 0593     		str	r3, [sp, #20]
 434:Src/main.c    ****                           |GPIO_PIN_11|GPIO_PIN_12;
 435:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 102              		.loc 1 435 0
 103 0076 0123     		movs	r3, #1
 104 0078 0693     		str	r3, [sp, #24]
 436:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 105              		.loc 1 436 0
 106 007a 0794     		str	r4, [sp, #28]
 437:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 107              		.loc 1 437 0
 108 007c 0894     		str	r4, [sp, #32]
 438:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 109              		.loc 1 438 0
 110 007e 05A9     		add	r1, sp, #20
 111 0080 2846     		mov	r0, r5
 112 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 113              	.LVL1:
 439:Src/main.c    **** 
 440:Src/main.c    **** }
 114              		.loc 1 440 0
 115 0086 0BB0     		add	sp, sp, #44
 116              	.LCFI2:
 117              		.cfi_def_cfa_offset 12
 118              		@ sp needed
 119 0088 30BD     		pop	{r4, r5, pc}
 120              	.L4:
 121 008a 00BF     		.align	2
 122              	.L3:
 123 008c 00380240 		.word	1073887232
 124 0090 00100240 		.word	1073876992
 125              		.cfi_endproc
 126              	.LFE138:
 128              		.section	.text.MX_DAC_Init,"ax",%progbits
 129              		.align	1
 130              		.syntax unified
 131              		.thumb
 132              		.thumb_func
ARM GAS  /tmp/ccQy69MG.s 			page 11


 133              		.fpu fpv4-sp-d16
 135              	MX_DAC_Init:
 136              	.LFB132:
 186:Src/main.c    **** 
 137              		.loc 1 186 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 8
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141 0000 30B5     		push	{r4, r5, lr}
 142              	.LCFI3:
 143              		.cfi_def_cfa_offset 12
 144              		.cfi_offset 4, -12
 145              		.cfi_offset 5, -8
 146              		.cfi_offset 14, -4
 147 0002 83B0     		sub	sp, sp, #12
 148              	.LCFI4:
 149              		.cfi_def_cfa_offset 24
 192:Src/main.c    **** 
 150              		.loc 1 192 0
 151 0004 0024     		movs	r4, #0
 152 0006 0094     		str	r4, [sp]
 153 0008 0194     		str	r4, [sp, #4]
 199:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 154              		.loc 1 199 0
 155 000a 0A4D     		ldr	r5, .L7
 156 000c 0A4B     		ldr	r3, .L7+4
 157 000e 2B60     		str	r3, [r5]
 200:Src/main.c    ****   {
 158              		.loc 1 200 0
 159 0010 2846     		mov	r0, r5
 160 0012 FFF7FEFF 		bl	HAL_DAC_Init
 161              	.LVL2:
 206:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 162              		.loc 1 206 0
 163 0016 0094     		str	r4, [sp]
 207:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 164              		.loc 1 207 0
 165 0018 0194     		str	r4, [sp, #4]
 208:Src/main.c    ****   {
 166              		.loc 1 208 0
 167 001a 2246     		mov	r2, r4
 168 001c 6946     		mov	r1, sp
 169 001e 2846     		mov	r0, r5
 170 0020 FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 171              	.LVL3:
 214:Src/main.c    ****   {
 172              		.loc 1 214 0
 173 0024 1022     		movs	r2, #16
 174 0026 6946     		mov	r1, sp
 175 0028 2846     		mov	r0, r5
 176 002a FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 177              	.LVL4:
 222:Src/main.c    **** 
 178              		.loc 1 222 0
 179 002e 03B0     		add	sp, sp, #12
 180              	.LCFI5:
 181              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccQy69MG.s 			page 12


 182              		@ sp needed
 183 0030 30BD     		pop	{r4, r5, pc}
 184              	.L8:
 185 0032 00BF     		.align	2
 186              	.L7:
 187 0034 00000000 		.word	hdac
 188 0038 00740040 		.word	1073771520
 189              		.cfi_endproc
 190              	.LFE132:
 192              		.section	.text.MX_I2C1_Init,"ax",%progbits
 193              		.align	1
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu fpv4-sp-d16
 199              	MX_I2C1_Init:
 200              	.LFB133:
 230:Src/main.c    **** 
 201              		.loc 1 230 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 38B5     		push	{r3, r4, r5, lr}
 206              	.LCFI6:
 207              		.cfi_def_cfa_offset 16
 208              		.cfi_offset 3, -16
 209              		.cfi_offset 4, -12
 210              		.cfi_offset 5, -8
 211              		.cfi_offset 14, -4
 239:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 212              		.loc 1 239 0
 213 0002 0D4C     		ldr	r4, .L11
 214 0004 0D4B     		ldr	r3, .L11+4
 215 0006 2360     		str	r3, [r4]
 240:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 216              		.loc 1 240 0
 217 0008 0D4B     		ldr	r3, .L11+8
 218 000a 6360     		str	r3, [r4, #4]
 241:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 219              		.loc 1 241 0
 220 000c 0025     		movs	r5, #0
 221 000e A560     		str	r5, [r4, #8]
 242:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 222              		.loc 1 242 0
 223 0010 E560     		str	r5, [r4, #12]
 243:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 224              		.loc 1 243 0
 225 0012 4FF48043 		mov	r3, #16384
 226 0016 2361     		str	r3, [r4, #16]
 244:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 227              		.loc 1 244 0
 228 0018 6561     		str	r5, [r4, #20]
 245:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 229              		.loc 1 245 0
 230 001a A561     		str	r5, [r4, #24]
 246:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 231              		.loc 1 246 0
ARM GAS  /tmp/ccQy69MG.s 			page 13


 232 001c E561     		str	r5, [r4, #28]
 247:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 233              		.loc 1 247 0
 234 001e 2562     		str	r5, [r4, #32]
 248:Src/main.c    ****   {
 235              		.loc 1 248 0
 236 0020 2046     		mov	r0, r4
 237 0022 FFF7FEFF 		bl	HAL_I2C_Init
 238              	.LVL5:
 254:Src/main.c    ****   {
 239              		.loc 1 254 0
 240 0026 2946     		mov	r1, r5
 241 0028 2046     		mov	r0, r4
 242 002a FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 243              	.LVL6:
 260:Src/main.c    ****   {
 244              		.loc 1 260 0
 245 002e 2946     		mov	r1, r5
 246 0030 2046     		mov	r0, r4
 247 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 248              	.LVL7:
 249 0036 38BD     		pop	{r3, r4, r5, pc}
 250              	.L12:
 251              		.align	2
 252              	.L11:
 253 0038 00000000 		.word	hi2c1
 254 003c 00540040 		.word	1073763328
 255 0040 A0860100 		.word	100000
 256              		.cfi_endproc
 257              	.LFE133:
 259              		.section	.text.MX_I2S2_Init,"ax",%progbits
 260              		.align	1
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 264              		.fpu fpv4-sp-d16
 266              	MX_I2S2_Init:
 267              	.LFB134:
 276:Src/main.c    **** 
 268              		.loc 1 276 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272 0000 08B5     		push	{r3, lr}
 273              	.LCFI7:
 274              		.cfi_def_cfa_offset 8
 275              		.cfi_offset 3, -8
 276              		.cfi_offset 14, -4
 285:Src/main.c    ****   hi2s2.Init.Mode = I2S_MODE_MASTER_TX;
 277              		.loc 1 285 0
 278 0002 0A48     		ldr	r0, .L15
 279 0004 0A4B     		ldr	r3, .L15+4
 280 0006 0360     		str	r3, [r0]
 286:Src/main.c    ****   hi2s2.Init.Standard = I2S_STANDARD_PHILIPS;
 281              		.loc 1 286 0
 282 0008 4FF40072 		mov	r2, #512
 283 000c 4260     		str	r2, [r0, #4]
ARM GAS  /tmp/ccQy69MG.s 			page 14


 287:Src/main.c    ****   hi2s2.Init.DataFormat = I2S_DATAFORMAT_32B;
 284              		.loc 1 287 0
 285 000e 0023     		movs	r3, #0
 286 0010 8360     		str	r3, [r0, #8]
 288:Src/main.c    ****   hi2s2.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 287              		.loc 1 288 0
 288 0012 0521     		movs	r1, #5
 289 0014 C160     		str	r1, [r0, #12]
 289:Src/main.c    ****   hi2s2.Init.AudioFreq = I2S_AUDIOFREQ_44K;
 290              		.loc 1 289 0
 291 0016 0261     		str	r2, [r0, #16]
 290:Src/main.c    ****   hi2s2.Init.CPOL = I2S_CPOL_LOW;
 292              		.loc 1 290 0
 293 0018 4AF64442 		movw	r2, #44100
 294 001c 4261     		str	r2, [r0, #20]
 291:Src/main.c    ****   hi2s2.Init.ClockSource = I2S_CLOCK_PLL;
 295              		.loc 1 291 0
 296 001e 8361     		str	r3, [r0, #24]
 292:Src/main.c    ****   hi2s2.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_ENABLE;
 297              		.loc 1 292 0
 298 0020 C361     		str	r3, [r0, #28]
 293:Src/main.c    ****   if (HAL_I2S_Init(&hi2s2) != HAL_OK)
 299              		.loc 1 293 0
 300 0022 0123     		movs	r3, #1
 301 0024 0362     		str	r3, [r0, #32]
 294:Src/main.c    ****   {
 302              		.loc 1 294 0
 303 0026 FFF7FEFF 		bl	HAL_I2S_Init
 304              	.LVL8:
 305 002a 08BD     		pop	{r3, pc}
 306              	.L16:
 307              		.align	2
 308              	.L15:
 309 002c 00000000 		.word	hi2s2
 310 0030 00380040 		.word	1073756160
 311              		.cfi_endproc
 312              	.LFE134:
 314              		.section	.text.MX_SPI1_Init,"ax",%progbits
 315              		.align	1
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 319              		.fpu fpv4-sp-d16
 321              	MX_SPI1_Init:
 322              	.LFB135:
 310:Src/main.c    **** 
 323              		.loc 1 310 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327 0000 08B5     		push	{r3, lr}
 328              	.LCFI8:
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 3, -8
 331              		.cfi_offset 14, -4
 320:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_SLAVE;
 332              		.loc 1 320 0
ARM GAS  /tmp/ccQy69MG.s 			page 15


 333 0002 0948     		ldr	r0, .L19
 334 0004 094B     		ldr	r3, .L19+4
 335 0006 0360     		str	r3, [r0]
 321:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 336              		.loc 1 321 0
 337 0008 0023     		movs	r3, #0
 338 000a 4360     		str	r3, [r0, #4]
 322:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 339              		.loc 1 322 0
 340 000c 8360     		str	r3, [r0, #8]
 323:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 341              		.loc 1 323 0
 342 000e C360     		str	r3, [r0, #12]
 324:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 343              		.loc 1 324 0
 344 0010 0361     		str	r3, [r0, #16]
 325:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_INPUT;
 345              		.loc 1 325 0
 346 0012 4361     		str	r3, [r0, #20]
 326:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 347              		.loc 1 326 0
 348 0014 8361     		str	r3, [r0, #24]
 327:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 349              		.loc 1 327 0
 350 0016 0362     		str	r3, [r0, #32]
 328:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 351              		.loc 1 328 0
 352 0018 4362     		str	r3, [r0, #36]
 329:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 353              		.loc 1 329 0
 354 001a 8362     		str	r3, [r0, #40]
 330:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 355              		.loc 1 330 0
 356 001c 0A23     		movs	r3, #10
 357 001e C362     		str	r3, [r0, #44]
 331:Src/main.c    ****   {
 358              		.loc 1 331 0
 359 0020 FFF7FEFF 		bl	HAL_SPI_Init
 360              	.LVL9:
 361 0024 08BD     		pop	{r3, pc}
 362              	.L20:
 363 0026 00BF     		.align	2
 364              	.L19:
 365 0028 00000000 		.word	hspi1
 366 002c 00300140 		.word	1073819648
 367              		.cfi_endproc
 368              	.LFE135:
 370              		.section	.text.MX_TIM6_Init,"ax",%progbits
 371              		.align	1
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 375              		.fpu fpv4-sp-d16
 377              	MX_TIM6_Init:
 378              	.LFB136:
 347:Src/main.c    **** 
 379              		.loc 1 347 0
ARM GAS  /tmp/ccQy69MG.s 			page 16


 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 8
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383 0000 30B5     		push	{r4, r5, lr}
 384              	.LCFI9:
 385              		.cfi_def_cfa_offset 12
 386              		.cfi_offset 4, -12
 387              		.cfi_offset 5, -8
 388              		.cfi_offset 14, -4
 389 0002 83B0     		sub	sp, sp, #12
 390              	.LCFI10:
 391              		.cfi_def_cfa_offset 24
 353:Src/main.c    **** 
 392              		.loc 1 353 0
 393 0004 0025     		movs	r5, #0
 394 0006 0095     		str	r5, [sp]
 395 0008 0195     		str	r5, [sp, #4]
 358:Src/main.c    ****   htim6.Init.Prescaler = 0;
 396              		.loc 1 358 0
 397 000a 0A4C     		ldr	r4, .L23
 398 000c 0A4B     		ldr	r3, .L23+4
 399 000e 2360     		str	r3, [r4]
 359:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 400              		.loc 1 359 0
 401 0010 6560     		str	r5, [r4, #4]
 360:Src/main.c    ****   htim6.Init.Period = 1290;
 402              		.loc 1 360 0
 403 0012 A560     		str	r5, [r4, #8]
 361:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 404              		.loc 1 361 0
 405 0014 40F20A53 		movw	r3, #1290
 406 0018 E360     		str	r3, [r4, #12]
 362:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 407              		.loc 1 362 0
 408 001a A561     		str	r5, [r4, #24]
 363:Src/main.c    ****   {
 409              		.loc 1 363 0
 410 001c 2046     		mov	r0, r4
 411 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 412              	.LVL10:
 367:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 413              		.loc 1 367 0
 414 0022 0095     		str	r5, [sp]
 368:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 415              		.loc 1 368 0
 416 0024 0195     		str	r5, [sp, #4]
 369:Src/main.c    ****   {
 417              		.loc 1 369 0
 418 0026 6946     		mov	r1, sp
 419 0028 2046     		mov	r0, r4
 420 002a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 421              	.LVL11:
 377:Src/main.c    **** 
 422              		.loc 1 377 0
 423 002e 03B0     		add	sp, sp, #12
 424              	.LCFI11:
 425              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccQy69MG.s 			page 17


 426              		@ sp needed
 427 0030 30BD     		pop	{r4, r5, pc}
 428              	.L24:
 429 0032 00BF     		.align	2
 430              	.L23:
 431 0034 00000000 		.word	htim6
 432 0038 00100040 		.word	1073745920
 433              		.cfi_endproc
 434              	.LFE136:
 436              		.section	.text.MX_UART4_Init,"ax",%progbits
 437              		.align	1
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 441              		.fpu fpv4-sp-d16
 443              	MX_UART4_Init:
 444              	.LFB137:
 385:Src/main.c    **** 
 445              		.loc 1 385 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449 0000 08B5     		push	{r3, lr}
 450              	.LCFI12:
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 3, -8
 453              		.cfi_offset 14, -4
 394:Src/main.c    ****   huart4.Init.BaudRate = 9600;
 454              		.loc 1 394 0
 455 0002 0848     		ldr	r0, .L27
 456 0004 084B     		ldr	r3, .L27+4
 457 0006 0360     		str	r3, [r0]
 395:Src/main.c    ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 458              		.loc 1 395 0
 459 0008 4FF41653 		mov	r3, #9600
 460 000c 4360     		str	r3, [r0, #4]
 396:Src/main.c    ****   huart4.Init.StopBits = UART_STOPBITS_1;
 461              		.loc 1 396 0
 462 000e 0023     		movs	r3, #0
 463 0010 8360     		str	r3, [r0, #8]
 397:Src/main.c    ****   huart4.Init.Parity = UART_PARITY_NONE;
 464              		.loc 1 397 0
 465 0012 C360     		str	r3, [r0, #12]
 398:Src/main.c    ****   huart4.Init.Mode = UART_MODE_TX_RX;
 466              		.loc 1 398 0
 467 0014 0361     		str	r3, [r0, #16]
 399:Src/main.c    ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 468              		.loc 1 399 0
 469 0016 0C22     		movs	r2, #12
 470 0018 4261     		str	r2, [r0, #20]
 400:Src/main.c    ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 471              		.loc 1 400 0
 472 001a 8361     		str	r3, [r0, #24]
 401:Src/main.c    ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 473              		.loc 1 401 0
 474 001c C361     		str	r3, [r0, #28]
 402:Src/main.c    ****   {
ARM GAS  /tmp/ccQy69MG.s 			page 18


 475              		.loc 1 402 0
 476 001e FFF7FEFF 		bl	HAL_UART_Init
 477              	.LVL12:
 478 0022 08BD     		pop	{r3, pc}
 479              	.L28:
 480              		.align	2
 481              	.L27:
 482 0024 00000000 		.word	huart4
 483 0028 004C0040 		.word	1073761280
 484              		.cfi_endproc
 485              	.LFE137:
 487              		.section	.text.SystemClock_Config,"ax",%progbits
 488              		.align	1
 489              		.global	SystemClock_Config
 490              		.syntax unified
 491              		.thumb
 492              		.thumb_func
 493              		.fpu fpv4-sp-d16
 495              	SystemClock_Config:
 496              	.LFB131:
 134:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 497              		.loc 1 134 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 128
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 502              	.LCFI13:
 503              		.cfi_def_cfa_offset 20
 504              		.cfi_offset 4, -20
 505              		.cfi_offset 5, -16
 506              		.cfi_offset 6, -12
 507              		.cfi_offset 7, -8
 508              		.cfi_offset 14, -4
 509 0002 A1B0     		sub	sp, sp, #132
 510              	.LCFI14:
 511              		.cfi_def_cfa_offset 152
 135:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 512              		.loc 1 135 0
 513 0004 3025     		movs	r5, #48
 514 0006 2A46     		mov	r2, r5
 515 0008 0021     		movs	r1, #0
 516 000a 14A8     		add	r0, sp, #80
 517 000c FFF7FEFF 		bl	memset
 518              	.LVL13:
 136:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 519              		.loc 1 136 0
 520 0010 0024     		movs	r4, #0
 521 0012 0F94     		str	r4, [sp, #60]
 522 0014 1094     		str	r4, [sp, #64]
 523 0016 1194     		str	r4, [sp, #68]
 524 0018 1294     		str	r4, [sp, #72]
 525 001a 1394     		str	r4, [sp, #76]
 137:Src/main.c    **** 
 526              		.loc 1 137 0
 527 001c 2A46     		mov	r2, r5
 528 001e 2146     		mov	r1, r4
 529 0020 03A8     		add	r0, sp, #12
ARM GAS  /tmp/ccQy69MG.s 			page 19


 530 0022 FFF7FEFF 		bl	memset
 531              	.LVL14:
 532              	.LBB6:
 141:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 533              		.loc 1 141 0
 534 0026 0194     		str	r4, [sp, #4]
 535 0028 1F4B     		ldr	r3, .L31
 536 002a 1A6C     		ldr	r2, [r3, #64]
 537 002c 42F08052 		orr	r2, r2, #268435456
 538 0030 1A64     		str	r2, [r3, #64]
 539 0032 1B6C     		ldr	r3, [r3, #64]
 540 0034 03F08053 		and	r3, r3, #268435456
 541 0038 0193     		str	r3, [sp, #4]
 542 003a 019B     		ldr	r3, [sp, #4]
 543              	.LBE6:
 544              	.LBB7:
 142:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 545              		.loc 1 142 0
 546 003c 0294     		str	r4, [sp, #8]
 547 003e 1B4A     		ldr	r2, .L31+4
 548 0040 1368     		ldr	r3, [r2]
 549 0042 23F44043 		bic	r3, r3, #49152
 550 0046 43F40043 		orr	r3, r3, #32768
 551 004a 1360     		str	r3, [r2]
 552 004c 1368     		ldr	r3, [r2]
 553 004e 03F44043 		and	r3, r3, #49152
 554 0052 0293     		str	r3, [sp, #8]
 555 0054 029B     		ldr	r3, [sp, #8]
 556              	.LBE7:
 145:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 557              		.loc 1 145 0
 558 0056 0225     		movs	r5, #2
 559 0058 1495     		str	r5, [sp, #80]
 146:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 560              		.loc 1 146 0
 561 005a 0126     		movs	r6, #1
 562 005c 1796     		str	r6, [sp, #92]
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 563              		.loc 1 147 0
 564 005e 1023     		movs	r3, #16
 565 0060 1893     		str	r3, [sp, #96]
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 566              		.loc 1 148 0
 567 0062 1A95     		str	r5, [sp, #104]
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 568              		.loc 1 149 0
 569 0064 1B94     		str	r4, [sp, #108]
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 125;
 570              		.loc 1 150 0
 571 0066 0823     		movs	r3, #8
 572 0068 1C93     		str	r3, [sp, #112]
 151:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 573              		.loc 1 151 0
 574 006a 7D23     		movs	r3, #125
 575 006c 1D93     		str	r3, [sp, #116]
 152:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 576              		.loc 1 152 0
ARM GAS  /tmp/ccQy69MG.s 			page 20


 577 006e 1E95     		str	r5, [sp, #120]
 153:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 578              		.loc 1 153 0
 579 0070 0427     		movs	r7, #4
 580 0072 1F97     		str	r7, [sp, #124]
 154:Src/main.c    ****   {
 581              		.loc 1 154 0
 582 0074 14A8     		add	r0, sp, #80
 583 0076 FFF7FEFF 		bl	HAL_RCC_OscConfig
 584              	.LVL15:
 160:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 585              		.loc 1 160 0
 586 007a 0F23     		movs	r3, #15
 587 007c 0F93     		str	r3, [sp, #60]
 162:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 588              		.loc 1 162 0
 589 007e 1095     		str	r5, [sp, #64]
 163:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 590              		.loc 1 163 0
 591 0080 1194     		str	r4, [sp, #68]
 164:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 592              		.loc 1 164 0
 593 0082 4FF4A053 		mov	r3, #5120
 594 0086 1293     		str	r3, [sp, #72]
 165:Src/main.c    **** 
 595              		.loc 1 165 0
 596 0088 4FF48053 		mov	r3, #4096
 597 008c 1393     		str	r3, [sp, #76]
 167:Src/main.c    ****   {
 598              		.loc 1 167 0
 599 008e 3946     		mov	r1, r7
 600 0090 0FA8     		add	r0, sp, #60
 601 0092 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 602              	.LVL16:
 171:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SN = 50;
 603              		.loc 1 171 0
 604 0096 0396     		str	r6, [sp, #12]
 172:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 605              		.loc 1 172 0
 606 0098 3223     		movs	r3, #50
 607 009a 0493     		str	r3, [sp, #16]
 173:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 608              		.loc 1 173 0
 609 009c 0595     		str	r5, [sp, #20]
 174:Src/main.c    ****   {
 610              		.loc 1 174 0
 611 009e 03A8     		add	r0, sp, #12
 612 00a0 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 613              	.LVL17:
 178:Src/main.c    **** 
 614              		.loc 1 178 0
 615 00a4 21B0     		add	sp, sp, #132
 616              	.LCFI15:
 617              		.cfi_def_cfa_offset 20
 618              		@ sp needed
 619 00a6 F0BD     		pop	{r4, r5, r6, r7, pc}
 620              	.L32:
ARM GAS  /tmp/ccQy69MG.s 			page 21


 621              		.align	2
 622              	.L31:
 623 00a8 00380240 		.word	1073887232
 624 00ac 00700040 		.word	1073770496
 625              		.cfi_endproc
 626              	.LFE131:
 628              		.section	.text.main,"ax",%progbits
 629              		.align	1
 630              		.global	main
 631              		.syntax unified
 632              		.thumb
 633              		.thumb_func
 634              		.fpu fpv4-sp-d16
 636              	main:
 637              	.LFB130:
  84:Src/main.c    ****   /* USER CODE BEGIN 1 */
 638              		.loc 1 84 0
 639              		.cfi_startproc
 640              		@ Volatile: function does not return.
 641              		@ args = 0, pretend = 0, frame = 0
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643 0000 08B5     		push	{r3, lr}
 644              	.LCFI16:
 645              		.cfi_def_cfa_offset 8
 646              		.cfi_offset 3, -8
 647              		.cfi_offset 14, -4
  93:Src/main.c    **** 
 648              		.loc 1 93 0
 649 0002 FFF7FEFF 		bl	HAL_Init
 650              	.LVL18:
 100:Src/main.c    **** 
 651              		.loc 1 100 0
 652 0006 FFF7FEFF 		bl	SystemClock_Config
 653              	.LVL19:
 107:Src/main.c    ****   MX_DAC_Init();
 654              		.loc 1 107 0
 655 000a FFF7FEFF 		bl	MX_GPIO_Init
 656              	.LVL20:
 108:Src/main.c    ****   MX_I2C1_Init();
 657              		.loc 1 108 0
 658 000e FFF7FEFF 		bl	MX_DAC_Init
 659              	.LVL21:
 109:Src/main.c    ****   MX_I2S2_Init();
 660              		.loc 1 109 0
 661 0012 FFF7FEFF 		bl	MX_I2C1_Init
 662              	.LVL22:
 110:Src/main.c    ****   MX_SPI1_Init();
 663              		.loc 1 110 0
 664 0016 FFF7FEFF 		bl	MX_I2S2_Init
 665              	.LVL23:
 111:Src/main.c    ****   MX_TIM6_Init();
 666              		.loc 1 111 0
 667 001a FFF7FEFF 		bl	MX_SPI1_Init
 668              	.LVL24:
 112:Src/main.c    ****   MX_UART4_Init();
 669              		.loc 1 112 0
 670 001e FFF7FEFF 		bl	MX_TIM6_Init
ARM GAS  /tmp/ccQy69MG.s 			page 22


 671              	.LVL25:
 113:Src/main.c    ****   /* USER CODE BEGIN 2 */
 672              		.loc 1 113 0
 673 0022 FFF7FEFF 		bl	MX_UART4_Init
 674              	.LVL26:
 675              	.L34:
 676 0026 FEE7     		b	.L34
 677              		.cfi_endproc
 678              	.LFE130:
 680              		.section	.text.Error_Handler,"ax",%progbits
 681              		.align	1
 682              		.global	Error_Handler
 683              		.syntax unified
 684              		.thumb
 685              		.thumb_func
 686              		.fpu fpv4-sp-d16
 688              	Error_Handler:
 689              	.LFB139:
 441:Src/main.c    **** 
 442:Src/main.c    **** /* USER CODE BEGIN 4 */
 443:Src/main.c    **** 
 444:Src/main.c    **** /* USER CODE END 4 */
 445:Src/main.c    **** 
 446:Src/main.c    **** /**
 447:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 448:Src/main.c    ****   * @retval None
 449:Src/main.c    ****   */
 450:Src/main.c    **** void Error_Handler(void)
 451:Src/main.c    **** {
 690              		.loc 1 451 0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 0
 693              		@ frame_needed = 0, uses_anonymous_args = 0
 694              		@ link register save eliminated.
 695 0000 7047     		bx	lr
 696              		.cfi_endproc
 697              	.LFE139:
 699              		.comm	huart4,64,4
 700              		.comm	htim6,64,4
 701              		.comm	hspi1,88,4
 702              		.comm	hi2s2,72,4
 703              		.comm	hi2c1,84,4
 704              		.comm	hdac,20,4
 705              		.text
 706              	.Letext0:
 707              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 708              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 709              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 710              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 711              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 712              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 713              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 714              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 715              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 716              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 717              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dac.h"
 718              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
ARM GAS  /tmp/ccQy69MG.s 			page 23


 719              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2s.h"
 720              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 721              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 722              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 723              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 724              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c_ex.h"
 725              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccQy69MG.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccQy69MG.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccQy69MG.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccQy69MG.s:123    .text.MX_GPIO_Init:000000000000008c $d
     /tmp/ccQy69MG.s:129    .text.MX_DAC_Init:0000000000000000 $t
     /tmp/ccQy69MG.s:135    .text.MX_DAC_Init:0000000000000000 MX_DAC_Init
     /tmp/ccQy69MG.s:187    .text.MX_DAC_Init:0000000000000034 $d
                            *COM*:0000000000000014 hdac
     /tmp/ccQy69MG.s:193    .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccQy69MG.s:199    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccQy69MG.s:253    .text.MX_I2C1_Init:0000000000000038 $d
                            *COM*:0000000000000054 hi2c1
     /tmp/ccQy69MG.s:260    .text.MX_I2S2_Init:0000000000000000 $t
     /tmp/ccQy69MG.s:266    .text.MX_I2S2_Init:0000000000000000 MX_I2S2_Init
     /tmp/ccQy69MG.s:309    .text.MX_I2S2_Init:000000000000002c $d
                            *COM*:0000000000000048 hi2s2
     /tmp/ccQy69MG.s:315    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccQy69MG.s:321    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccQy69MG.s:365    .text.MX_SPI1_Init:0000000000000028 $d
                            *COM*:0000000000000058 hspi1
     /tmp/ccQy69MG.s:371    .text.MX_TIM6_Init:0000000000000000 $t
     /tmp/ccQy69MG.s:377    .text.MX_TIM6_Init:0000000000000000 MX_TIM6_Init
     /tmp/ccQy69MG.s:431    .text.MX_TIM6_Init:0000000000000034 $d
                            *COM*:0000000000000040 htim6
     /tmp/ccQy69MG.s:437    .text.MX_UART4_Init:0000000000000000 $t
     /tmp/ccQy69MG.s:443    .text.MX_UART4_Init:0000000000000000 MX_UART4_Init
     /tmp/ccQy69MG.s:482    .text.MX_UART4_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart4
     /tmp/ccQy69MG.s:488    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccQy69MG.s:495    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccQy69MG.s:623    .text.SystemClock_Config:00000000000000a8 $d
     /tmp/ccQy69MG.s:629    .text.main:0000000000000000 $t
     /tmp/ccQy69MG.s:636    .text.main:0000000000000000 main
     /tmp/ccQy69MG.s:681    .text.Error_Handler:0000000000000000 $t
     /tmp/ccQy69MG.s:688    .text.Error_Handler:0000000000000000 Error_Handler
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_DAC_Init
HAL_DAC_ConfigChannel
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_I2S_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
