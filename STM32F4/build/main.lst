ARM GAS  /tmp/ccleW29Z.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB137:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include "midi.h"
  27:Src/main.c    **** #include "waves.h"
  28:Src/main.c    **** #include <math.h>
  29:Src/main.c    **** /* USER CODE END Includes */
  30:Src/main.c    **** 
  31:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  32:Src/main.c    **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/ccleW29Z.s 			page 2


  33:Src/main.c    **** 
  34:Src/main.c    **** /* USER CODE END PTD */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  37:Src/main.c    **** /* USER CODE BEGIN PD */
  38:Src/main.c    **** #define DDS_SCALE_FACTOR 89.4745833
  39:Src/main.c    **** #define VOICES 16
  40:Src/main.c    **** #define NOT_TRIGGERED 0
  41:Src/main.c    **** #define ATTACK_MODE 1
  42:Src/main.c    **** #define DECAY_MODE 2
  43:Src/main.c    **** #define SUSTAIN_MODE 3
  44:Src/main.c    **** #define RELEASE_MODE 4
  45:Src/main.c    **** /* USER CODE END PD */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  48:Src/main.c    **** /* USER CODE BEGIN PM */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END PM */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** DAC_HandleTypeDef hdac;
  54:Src/main.c    **** 
  55:Src/main.c    **** SPI_HandleTypeDef hspi5;
  56:Src/main.c    **** 
  57:Src/main.c    **** TIM_HandleTypeDef htim6;
  58:Src/main.c    **** TIM_HandleTypeDef htim7;
  59:Src/main.c    **** 
  60:Src/main.c    **** UART_HandleTypeDef huart1;
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN PV */
  63:Src/main.c    **** uint8_t spi_tx_buffer[3];
  64:Src/main.c    **** uint8_t spi_rx_buffer[3];
  65:Src/main.c    **** const float inv_voices = 1.0/VOICES;
  66:Src/main.c    **** // probably need to refactor these SPI flags
  67:Src/main.c    **** volatile uint8_t note_on_flag = 0;
  68:Src/main.c    **** volatile uint8_t note_off_flag = 0;
  69:Src/main.c    **** volatile uint8_t attack_cc_flag = 0;
  70:Src/main.c    **** volatile uint8_t decay_cc_flag = 0;
  71:Src/main.c    **** volatile uint8_t sustain_cc_flag = 0;
  72:Src/main.c    **** volatile uint8_t release_cc_flag = 0;
  73:Src/main.c    **** 
  74:Src/main.c    **** volatile struct midi_msg current_midi_note_msg = {0,0,0,0};
  75:Src/main.c    **** volatile uint32_t phase_accumulator[VOICES] = {0};
  76:Src/main.c    **** volatile uint8_t output_val = 0;
  77:Src/main.c    **** volatile uint32_t envelope_index[VOICES] = {0};
  78:Src/main.c    **** volatile float envelope[VOICES] = {0};
  79:Src/main.c    **** volatile uint8_t env_state[VOICES];
  80:Src/main.c    **** volatile uint8_t note_on[88] = {0};
  81:Src/main.c    **** volatile uint8_t note_freq[VOICES] = {0};
  82:Src/main.c    **** 
  83:Src/main.c    **** volatile uint32_t lfo_phase_accumulator[VOICES] = {0};
  84:Src/main.c    **** volatile uint16_t lfo_freq[VOICES] = {0};
  85:Src/main.c    **** volatile uint8_t lfo[VOICES] = {0};
  86:Src/main.c    **** 
  87:Src/main.c    **** volatile uint8_t update_value_flag = 0;
  88:Src/main.c    **** volatile uint8_t MIDI_flag = 0;
  89:Src/main.c    **** 
ARM GAS  /tmp/ccleW29Z.s 			page 3


  90:Src/main.c    **** #define MAX_QUEUE_SIZE 255
  91:Src/main.c    **** struct msg_queue {
  92:Src/main.c    ****   uint8_t head;
  93:Src/main.c    ****   uint8_t tail;
  94:Src/main.c    ****   struct midi_msg queue[MAX_QUEUE_SIZE];
  95:Src/main.c    **** } midi_msg_queue;
  96:Src/main.c    **** void enqueue(struct midi_msg midi_msg);
  97:Src/main.c    **** struct midi_msg dequeue(void);
  98:Src/main.c    **** 
  99:Src/main.c    **** uint8_t attack = 255;
 100:Src/main.c    **** uint8_t decay = 255;
 101:Src/main.c    **** uint8_t sustain = 200;
 102:Src/main.c    **** uint8_t release = 255;
 103:Src/main.c    **** /* USER CODE END PV */
 104:Src/main.c    **** 
 105:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 106:Src/main.c    **** void SystemClock_Config(void);
 107:Src/main.c    **** static void MX_GPIO_Init(void);
 108:Src/main.c    **** static void MX_SPI5_Init(void);
 109:Src/main.c    **** static void MX_USART1_UART_Init(void);
 110:Src/main.c    **** static void MX_DAC_Init(void);
 111:Src/main.c    **** static void MX_TIM6_Init(void);
 112:Src/main.c    **** static void MX_TIM7_Init(void);
 113:Src/main.c    **** /* USER CODE BEGIN PFP */
 114:Src/main.c    **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin);
 115:Src/main.c    **** void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi);
 116:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim);
 117:Src/main.c    **** void UpdateOutputValue(void);
 118:Src/main.c    **** void UpdateLFOs(void);
 119:Src/main.c    **** void UpdateEnvelope(void);
 120:Src/main.c    **** void Update_R2R_DAC(void);
 121:Src/main.c    **** /* USER CODE END PFP */
 122:Src/main.c    **** 
 123:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 124:Src/main.c    **** /* USER CODE BEGIN 0 */
 125:Src/main.c    **** 
 126:Src/main.c    **** /* USER CODE END 0 */
 127:Src/main.c    **** 
 128:Src/main.c    **** /**
 129:Src/main.c    ****   * @brief  The application entry point.
 130:Src/main.c    ****   * @retval int
 131:Src/main.c    ****   */
 132:Src/main.c    **** int main(void)
 133:Src/main.c    **** {
 134:Src/main.c    ****   /* USER CODE BEGIN 1 */
 135:Src/main.c    **** 
 136:Src/main.c    ****   /* USER CODE END 1 */
 137:Src/main.c    **** 
 138:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 139:Src/main.c    **** 
 140:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 141:Src/main.c    ****   HAL_Init();
 142:Src/main.c    **** 
 143:Src/main.c    ****   /* USER CODE BEGIN Init */
 144:Src/main.c    **** 
 145:Src/main.c    ****   /* USER CODE END Init */
 146:Src/main.c    **** 
ARM GAS  /tmp/ccleW29Z.s 			page 4


 147:Src/main.c    ****   /* Configure the system clock */
 148:Src/main.c    ****   SystemClock_Config();
 149:Src/main.c    **** 
 150:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 151:Src/main.c    **** 
 152:Src/main.c    ****   /* USER CODE END SysInit */
 153:Src/main.c    **** 
 154:Src/main.c    ****   /* Initialize all configured peripherals */
 155:Src/main.c    ****   MX_GPIO_Init();
 156:Src/main.c    ****   MX_SPI5_Init();
 157:Src/main.c    ****   MX_USART1_UART_Init();
 158:Src/main.c    ****   MX_DAC_Init();
 159:Src/main.c    ****   MX_TIM6_Init();
 160:Src/main.c    ****   MX_TIM7_Init();
 161:Src/main.c    ****   /* USER CODE BEGIN 2 */
 162:Src/main.c    ****   init_wavetable();
 163:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim6);
 164:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim7);
 165:Src/main.c    ****   HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 166:Src/main.c    **** 
 167:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 168:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 169:Src/main.c    ****     note_on[i] = MIDI_NOTE_OFF;
 170:Src/main.c    ****     note_freq[i] = 0;
 171:Src/main.c    ****     lfo_freq[i] = 20;
 172:Src/main.c    ****   }
 173:Src/main.c    **** 
 174:Src/main.c    ****   /*
 175:Src/main.c    ****   note_on[0] = MIDI_NOTE_ON;
 176:Src/main.c    ****   note_freq[0] = 50;
 177:Src/main.c    ****   env_state[0] = ATTACK_MODE;
 178:Src/main.c    **** 
 179:Src/main.c    ****   note_on[1] = MIDI_NOTE_ON;
 180:Src/main.c    ****   note_freq[1] = 54;
 181:Src/main.c    ****   env_state[1] = ATTACK_MODE;
 182:Src/main.c    **** 
 183:Src/main.c    ****   note_on[2] = MIDI_NOTE_ON;
 184:Src/main.c    ****   note_freq[2] = 57;
 185:Src/main.c    ****   env_state[2] = ATTACK_MODE;
 186:Src/main.c    **** 
 187:Src/main.c    ****   note_on[3] = MIDI_NOTE_ON;
 188:Src/main.c    ****   note_freq[3] = 62;
 189:Src/main.c    ****   env_state[3] = ATTACK_MODE;
 190:Src/main.c    ****   */
 191:Src/main.c    **** 
 192:Src/main.c    **** 
 193:Src/main.c    ****   uint8_t init_msg[20] = {"\nSTM32F429!\n"};
 194:Src/main.c    ****   HAL_UART_Transmit(&huart1, init_msg, 20, 50);
 195:Src/main.c    **** 
 196:Src/main.c    ****   /* USER CODE END 2 */
 197:Src/main.c    **** 
 198:Src/main.c    ****   /* Infinite loop */
 199:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 200:Src/main.c    ****   while (1)
 201:Src/main.c    ****   {
 202:Src/main.c    ****     Receive_MIDI(&hspi5, spi_rx_buffer);
 203:Src/main.c    **** 
ARM GAS  /tmp/ccleW29Z.s 			page 5


 204:Src/main.c    ****     if(midi_msg_queue.head != midi_msg_queue.tail) {
 205:Src/main.c    ****       current_midi_note_msg = dequeue();
 206:Src/main.c    ****     }
 207:Src/main.c    **** 
 208:Src/main.c    ****     if(MIDI_flag) {
 209:Src/main.c    ****       MIDI_flag = 0;
 210:Src/main.c    **** 
 211:Src/main.c    ****       switch(spi_rx_buffer[0]) {
 212:Src/main.c    ****       case MIDI_NOTE_ON:
 213:Src/main.c    ****         note_on_flag = 1;
 214:Src/main.c    ****         break;
 215:Src/main.c    ****       case MIDI_NOTE_OFF:
 216:Src/main.c    ****         note_off_flag = 1;
 217:Src/main.c    ****         break;
 218:Src/main.c    ****       case ATTACK_CC:
 219:Src/main.c    ****         attack_cc_flag = 1;
 220:Src/main.c    ****         break;
 221:Src/main.c    ****       case DECAY_CC:
 222:Src/main.c    ****         decay_cc_flag = 1;
 223:Src/main.c    ****         break;
 224:Src/main.c    ****       case SUSTAIN_CC:
 225:Src/main.c    ****         sustain_cc_flag = 1;
 226:Src/main.c    ****         break;
 227:Src/main.c    ****       case RELEASE_CC:
 228:Src/main.c    ****         release_cc_flag = 1;
 229:Src/main.c    ****         break;
 230:Src/main.c    ****       default:
 231:Src/main.c    ****         break;
 232:Src/main.c    ****       }
 233:Src/main.c    **** 
 234:Src/main.c    ****       switch(current_midi_note_msg.byte0) {
 235:Src/main.c    ****       case MIDI_NOTE_ON:
 236:Src/main.c    ****         for (int i = 0; i < VOICES; i++) {
 237:Src/main.c    ****           if(note_on[i] == MIDI_NOTE_OFF){
 238:Src/main.c    ****             note_on[i] = MIDI_NOTE_ON;
 239:Src/main.c    ****             note_freq[i] = current_midi_note_msg.byte1;
 240:Src/main.c    ****             env_state[i] = ATTACK_MODE;
 241:Src/main.c    ****             break;
 242:Src/main.c    ****           }
 243:Src/main.c    ****         }
 244:Src/main.c    ****         break;
 245:Src/main.c    ****       case MIDI_NOTE_OFF:
 246:Src/main.c    ****         for (int i = 0; i < VOICES; i++) {
 247:Src/main.c    ****           if (note_on[i] == MIDI_NOTE_ON && note_freq[i] == current_midi_note_msg.byte1){
 248:Src/main.c    ****             //note_on[i] = MIDI_NOTE_OFF;
 249:Src/main.c    ****             env_state[i] = RELEASE_MODE;
 250:Src/main.c    ****           }
 251:Src/main.c    ****         }
 252:Src/main.c    ****         break;
 253:Src/main.c    ****       }
 254:Src/main.c    ****     }
 255:Src/main.c    **** 
 256:Src/main.c    **** 
 257:Src/main.c    **** 
 258:Src/main.c    **** 
 259:Src/main.c    ****     if(update_value_flag) {
 260:Src/main.c    ****       //      __disable_irq();
ARM GAS  /tmp/ccleW29Z.s 			page 6


 261:Src/main.c    ****       UpdateEnvelope();
 262:Src/main.c    ****       UpdateLFOs();
 263:Src/main.c    ****       UpdateOutputValue();
 264:Src/main.c    ****       HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_8B_R, output_val);
 265:Src/main.c    ****       update_value_flag = 0;
 266:Src/main.c    ****       //      __enable_irq();
 267:Src/main.c    ****     }
 268:Src/main.c    **** 
 269:Src/main.c    ****     //Update_R2R_DAC();
 270:Src/main.c    **** 
 271:Src/main.c    ****     /* USER CODE END WHILE */
 272:Src/main.c    **** 
 273:Src/main.c    ****     /* USER CODE BEGIN 3 */
 274:Src/main.c    ****   }
 275:Src/main.c    ****   /* USER CODE END 3 */
 276:Src/main.c    **** }
 277:Src/main.c    **** 
 278:Src/main.c    **** /**
 279:Src/main.c    ****   * @brief System Clock Configuration
 280:Src/main.c    ****   * @retval None
 281:Src/main.c    ****   */
 282:Src/main.c    **** void SystemClock_Config(void)
 283:Src/main.c    **** {
 284:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 285:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 286:Src/main.c    **** 
 287:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 288:Src/main.c    ****   */
 289:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 290:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 291:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 292:Src/main.c    ****   */
 293:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 294:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 295:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 296:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 297:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 298:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 299:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 100;
 300:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 301:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 302:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 303:Src/main.c    ****   {
 304:Src/main.c    ****     Error_Handler();
 305:Src/main.c    ****   }
 306:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 307:Src/main.c    ****   */
 308:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 309:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 310:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 311:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 312:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 313:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 314:Src/main.c    **** 
 315:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 316:Src/main.c    ****   {
 317:Src/main.c    ****     Error_Handler();
ARM GAS  /tmp/ccleW29Z.s 			page 7


 318:Src/main.c    ****   }
 319:Src/main.c    **** }
 320:Src/main.c    **** 
 321:Src/main.c    **** /**
 322:Src/main.c    ****   * @brief DAC Initialization Function
 323:Src/main.c    ****   * @param None
 324:Src/main.c    ****   * @retval None
 325:Src/main.c    ****   */
 326:Src/main.c    **** static void MX_DAC_Init(void)
 327:Src/main.c    **** {
 328:Src/main.c    **** 
 329:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 0 */
 330:Src/main.c    **** 
 331:Src/main.c    ****   /* USER CODE END DAC_Init 0 */
 332:Src/main.c    **** 
 333:Src/main.c    ****   DAC_ChannelConfTypeDef sConfig = {0};
 334:Src/main.c    **** 
 335:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 1 */
 336:Src/main.c    **** 
 337:Src/main.c    ****   /* USER CODE END DAC_Init 1 */
 338:Src/main.c    ****   /** DAC Initialization 
 339:Src/main.c    ****   */
 340:Src/main.c    ****   hdac.Instance = DAC;
 341:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 342:Src/main.c    ****   {
 343:Src/main.c    ****     Error_Handler();
 344:Src/main.c    ****   }
 345:Src/main.c    ****   /** DAC channel OUT2 config 
 346:Src/main.c    ****   */
 347:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 348:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 349:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 350:Src/main.c    ****   {
 351:Src/main.c    ****     Error_Handler();
 352:Src/main.c    ****   }
 353:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 2 */
 354:Src/main.c    **** 
 355:Src/main.c    ****   /* USER CODE END DAC_Init 2 */
 356:Src/main.c    **** 
 357:Src/main.c    **** }
 358:Src/main.c    **** 
 359:Src/main.c    **** /**
 360:Src/main.c    ****   * @brief SPI5 Initialization Function
 361:Src/main.c    ****   * @param None
 362:Src/main.c    ****   * @retval None
 363:Src/main.c    ****   */
 364:Src/main.c    **** static void MX_SPI5_Init(void)
 365:Src/main.c    **** {
 366:Src/main.c    **** 
 367:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 0 */
 368:Src/main.c    **** 
 369:Src/main.c    ****   /* USER CODE END SPI5_Init 0 */
 370:Src/main.c    **** 
 371:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 1 */
 372:Src/main.c    **** 
 373:Src/main.c    ****   /* USER CODE END SPI5_Init 1 */
 374:Src/main.c    ****   /* SPI5 parameter configuration*/
ARM GAS  /tmp/ccleW29Z.s 			page 8


 375:Src/main.c    ****   hspi5.Instance = SPI5;
 376:Src/main.c    ****   hspi5.Init.Mode = SPI_MODE_SLAVE;
 377:Src/main.c    ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 378:Src/main.c    ****   hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 379:Src/main.c    ****   hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 380:Src/main.c    ****   hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 381:Src/main.c    ****   hspi5.Init.NSS = SPI_NSS_HARD_INPUT;
 382:Src/main.c    ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 383:Src/main.c    ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 384:Src/main.c    ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 385:Src/main.c    ****   hspi5.Init.CRCPolynomial = 10;
 386:Src/main.c    ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 387:Src/main.c    ****   {
 388:Src/main.c    ****     Error_Handler();
 389:Src/main.c    ****   }
 390:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 2 */
 391:Src/main.c    **** 
 392:Src/main.c    ****   /* USER CODE END SPI5_Init 2 */
 393:Src/main.c    **** 
 394:Src/main.c    **** }
 395:Src/main.c    **** 
 396:Src/main.c    **** /**
 397:Src/main.c    ****   * @brief TIM6 Initialization Function
 398:Src/main.c    ****   * @param None
 399:Src/main.c    ****   * @retval None
 400:Src/main.c    ****   */
 401:Src/main.c    **** static void MX_TIM6_Init(void)
 402:Src/main.c    **** {
 403:Src/main.c    **** 
 404:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 0 */
 405:Src/main.c    **** 
 406:Src/main.c    ****   /* USER CODE END TIM6_Init 0 */
 407:Src/main.c    **** 
 408:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 409:Src/main.c    **** 
 410:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 1 */
 411:Src/main.c    **** 
 412:Src/main.c    ****   /* USER CODE END TIM6_Init 1 */
 413:Src/main.c    ****   htim6.Instance = TIM6;
 414:Src/main.c    ****   htim6.Init.Prescaler = 0;
 415:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 416:Src/main.c    ****   htim6.Init.Period = 1290;
 417:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 418:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 419:Src/main.c    ****   {
 420:Src/main.c    ****     Error_Handler();
 421:Src/main.c    ****   }
 422:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 423:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 424:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 425:Src/main.c    ****   {
 426:Src/main.c    ****     Error_Handler();
 427:Src/main.c    ****   }
 428:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 2 */
 429:Src/main.c    **** 
 430:Src/main.c    ****   /* USER CODE END TIM6_Init 2 */
 431:Src/main.c    **** 
ARM GAS  /tmp/ccleW29Z.s 			page 9


 432:Src/main.c    **** }
 433:Src/main.c    **** 
 434:Src/main.c    **** /**
 435:Src/main.c    ****   * @brief TIM7 Initialization Function
 436:Src/main.c    ****   * @param None
 437:Src/main.c    ****   * @retval None
 438:Src/main.c    ****   */
 439:Src/main.c    **** static void MX_TIM7_Init(void)
 440:Src/main.c    **** {
 441:Src/main.c    **** 
 442:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 0 */
 443:Src/main.c    **** 
 444:Src/main.c    ****   /* USER CODE END TIM7_Init 0 */
 445:Src/main.c    **** 
 446:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 447:Src/main.c    **** 
 448:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 1 */
 449:Src/main.c    **** 
 450:Src/main.c    ****   /* USER CODE END TIM7_Init 1 */
 451:Src/main.c    ****   htim7.Instance = TIM7;
 452:Src/main.c    ****   htim7.Init.Prescaler = 0;
 453:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 454:Src/main.c    ****   htim7.Init.Period = 10000;
 455:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 456:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 457:Src/main.c    ****   {
 458:Src/main.c    ****     Error_Handler();
 459:Src/main.c    ****   }
 460:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 461:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 462:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 463:Src/main.c    ****   {
 464:Src/main.c    ****     Error_Handler();
 465:Src/main.c    ****   }
 466:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 2 */
 467:Src/main.c    **** 
 468:Src/main.c    ****   /* USER CODE END TIM7_Init 2 */
 469:Src/main.c    **** 
 470:Src/main.c    **** }
 471:Src/main.c    **** 
 472:Src/main.c    **** /**
 473:Src/main.c    ****   * @brief USART1 Initialization Function
 474:Src/main.c    ****   * @param None
 475:Src/main.c    ****   * @retval None
 476:Src/main.c    ****   */
 477:Src/main.c    **** static void MX_USART1_UART_Init(void)
 478:Src/main.c    **** {
 479:Src/main.c    **** 
 480:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 481:Src/main.c    **** 
 482:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 483:Src/main.c    **** 
 484:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 485:Src/main.c    **** 
 486:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 487:Src/main.c    ****   huart1.Instance = USART1;
 488:Src/main.c    ****   huart1.Init.BaudRate = 115200;
ARM GAS  /tmp/ccleW29Z.s 			page 10


 489:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 490:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 491:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 492:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 493:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 494:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 495:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 496:Src/main.c    ****   {
 497:Src/main.c    ****     Error_Handler();
 498:Src/main.c    ****   }
 499:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 500:Src/main.c    **** 
 501:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 502:Src/main.c    **** 
 503:Src/main.c    **** }
 504:Src/main.c    **** 
 505:Src/main.c    **** /**
 506:Src/main.c    ****   * @brief GPIO Initialization Function
 507:Src/main.c    ****   * @param None
 508:Src/main.c    ****   * @retval None
 509:Src/main.c    ****   */
 510:Src/main.c    **** static void MX_GPIO_Init(void)
 511:Src/main.c    **** {
  27              		.loc 1 511 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 56
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
  43 0004 8FB0     		sub	sp, sp, #60
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 96
 512:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  46              		.loc 1 512 0
  47 0006 0024     		movs	r4, #0
  48 0008 0994     		str	r4, [sp, #36]
  49 000a 0A94     		str	r4, [sp, #40]
  50 000c 0B94     		str	r4, [sp, #44]
  51 000e 0C94     		str	r4, [sp, #48]
  52 0010 0D94     		str	r4, [sp, #52]
  53              	.LBB2:
 513:Src/main.c    **** 
 514:Src/main.c    ****   /* GPIO Ports Clock Enable */
 515:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  54              		.loc 1 515 0
  55 0012 0194     		str	r4, [sp, #4]
  56 0014 AA4B     		ldr	r3, .L3
ARM GAS  /tmp/ccleW29Z.s 			page 11


  57 0016 1A6B     		ldr	r2, [r3, #48]
  58 0018 42F00402 		orr	r2, r2, #4
  59 001c 1A63     		str	r2, [r3, #48]
  60 001e 1A6B     		ldr	r2, [r3, #48]
  61 0020 02F00402 		and	r2, r2, #4
  62 0024 0192     		str	r2, [sp, #4]
  63 0026 019A     		ldr	r2, [sp, #4]
  64              	.LBE2:
  65              	.LBB3:
 516:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  66              		.loc 1 516 0
  67 0028 0294     		str	r4, [sp, #8]
  68 002a 1A6B     		ldr	r2, [r3, #48]
  69 002c 42F02002 		orr	r2, r2, #32
  70 0030 1A63     		str	r2, [r3, #48]
  71 0032 1A6B     		ldr	r2, [r3, #48]
  72 0034 02F02002 		and	r2, r2, #32
  73 0038 0292     		str	r2, [sp, #8]
  74 003a 029A     		ldr	r2, [sp, #8]
  75              	.LBE3:
  76              	.LBB4:
 517:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  77              		.loc 1 517 0
  78 003c 0394     		str	r4, [sp, #12]
  79 003e 1A6B     		ldr	r2, [r3, #48]
  80 0040 42F08002 		orr	r2, r2, #128
  81 0044 1A63     		str	r2, [r3, #48]
  82 0046 1A6B     		ldr	r2, [r3, #48]
  83 0048 02F08002 		and	r2, r2, #128
  84 004c 0392     		str	r2, [sp, #12]
  85 004e 039A     		ldr	r2, [sp, #12]
  86              	.LBE4:
  87              	.LBB5:
 518:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  88              		.loc 1 518 0
  89 0050 0494     		str	r4, [sp, #16]
  90 0052 1A6B     		ldr	r2, [r3, #48]
  91 0054 42F00102 		orr	r2, r2, #1
  92 0058 1A63     		str	r2, [r3, #48]
  93 005a 1A6B     		ldr	r2, [r3, #48]
  94 005c 02F00102 		and	r2, r2, #1
  95 0060 0492     		str	r2, [sp, #16]
  96 0062 049A     		ldr	r2, [sp, #16]
  97              	.LBE5:
  98              	.LBB6:
 519:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  99              		.loc 1 519 0
 100 0064 0594     		str	r4, [sp, #20]
 101 0066 1A6B     		ldr	r2, [r3, #48]
 102 0068 42F00202 		orr	r2, r2, #2
 103 006c 1A63     		str	r2, [r3, #48]
 104 006e 1A6B     		ldr	r2, [r3, #48]
 105 0070 02F00202 		and	r2, r2, #2
 106 0074 0592     		str	r2, [sp, #20]
 107 0076 059A     		ldr	r2, [sp, #20]
 108              	.LBE6:
 109              	.LBB7:
ARM GAS  /tmp/ccleW29Z.s 			page 12


 520:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 110              		.loc 1 520 0
 111 0078 0694     		str	r4, [sp, #24]
 112 007a 1A6B     		ldr	r2, [r3, #48]
 113 007c 42F04002 		orr	r2, r2, #64
 114 0080 1A63     		str	r2, [r3, #48]
 115 0082 1A6B     		ldr	r2, [r3, #48]
 116 0084 02F04002 		and	r2, r2, #64
 117 0088 0692     		str	r2, [sp, #24]
 118 008a 069A     		ldr	r2, [sp, #24]
 119              	.LBE7:
 120              	.LBB8:
 521:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 121              		.loc 1 521 0
 122 008c 0794     		str	r4, [sp, #28]
 123 008e 1A6B     		ldr	r2, [r3, #48]
 124 0090 42F01002 		orr	r2, r2, #16
 125 0094 1A63     		str	r2, [r3, #48]
 126 0096 1A6B     		ldr	r2, [r3, #48]
 127 0098 02F01002 		and	r2, r2, #16
 128 009c 0792     		str	r2, [sp, #28]
 129 009e 079A     		ldr	r2, [sp, #28]
 130              	.LBE8:
 131              	.LBB9:
 522:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 132              		.loc 1 522 0
 133 00a0 0894     		str	r4, [sp, #32]
 134 00a2 1A6B     		ldr	r2, [r3, #48]
 135 00a4 42F00802 		orr	r2, r2, #8
 136 00a8 1A63     		str	r2, [r3, #48]
 137 00aa 1B6B     		ldr	r3, [r3, #48]
 138 00ac 03F00803 		and	r3, r3, #8
 139 00b0 0893     		str	r3, [sp, #32]
 140 00b2 089B     		ldr	r3, [sp, #32]
 141              	.LBE9:
 523:Src/main.c    **** 
 524:Src/main.c    ****   /*Configure GPIO pin Output Level */
 525:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin, GPIO_PIN_RESET);
 142              		.loc 1 525 0
 143 00b4 2246     		mov	r2, r4
 144 00b6 1621     		movs	r1, #22
 145 00b8 8248     		ldr	r0, .L3+4
 146 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 147              	.LVL0:
 526:Src/main.c    **** 
 527:Src/main.c    ****   /*Configure GPIO pin Output Level */
 528:Src/main.c    ****   HAL_GPIO_WritePin(ACP_RST_GPIO_Port, ACP_RST_Pin, GPIO_PIN_RESET);
 148              		.loc 1 528 0
 149 00be 2246     		mov	r2, r4
 150 00c0 8021     		movs	r1, #128
 151 00c2 8148     		ldr	r0, .L3+8
 152 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 153              	.LVL1:
 529:Src/main.c    **** 
 530:Src/main.c    ****   /*Configure GPIO pin Output Level */
 531:Src/main.c    ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15, GPIO_PIN_RESET);
 154              		.loc 1 531 0
ARM GAS  /tmp/ccleW29Z.s 			page 13


 155 00c8 DFF810A2 		ldr	r10, .L3+28
 156 00cc 2246     		mov	r2, r4
 157 00ce 4FF46041 		mov	r1, #57344
 158 00d2 5046     		mov	r0, r10
 159 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 160              	.LVL2:
 532:Src/main.c    **** 
 533:Src/main.c    ****   /*Configure GPIO pin Output Level */
 534:Src/main.c    ****   HAL_GPIO_WritePin(GPIOG, GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD4_Pin, GPIO_PIN_RESET);
 161              		.loc 1 534 0
 162 00d8 2246     		mov	r2, r4
 163 00da 46F20301 		movw	r1, #24579
 164 00de 7B48     		ldr	r0, .L3+12
 165 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 166              	.LVL3:
 535:Src/main.c    **** 
 536:Src/main.c    ****   /*Configure GPIO pin Output Level */
 537:Src/main.c    ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 167              		.loc 1 537 0
 168 00e4 2246     		mov	r2, r4
 169 00e6 4FF68071 		movw	r1, #65408
 170 00ea 7948     		ldr	r0, .L3+16
 171 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 172              	.LVL4:
 538:Src/main.c    ****                           |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
 539:Src/main.c    ****                           |GPIO_PIN_15, GPIO_PIN_RESET);
 540:Src/main.c    **** 
 541:Src/main.c    ****   /*Configure GPIO pin Output Level */
 542:Src/main.c    ****   HAL_GPIO_WritePin(GPIOD, RDX_Pin|WRX_DCX_Pin, GPIO_PIN_RESET);
 173              		.loc 1 542 0
 174 00f0 2246     		mov	r2, r4
 175 00f2 4FF44051 		mov	r1, #12288
 176 00f6 7748     		ldr	r0, .L3+20
 177 00f8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 178              	.LVL5:
 543:Src/main.c    **** 
 544:Src/main.c    ****   /*Configure GPIO pins : A0_Pin A1_Pin A2_Pin A3_Pin 
 545:Src/main.c    ****                            A4_Pin A5_Pin SDNRAS_Pin A6_Pin */
 546:Src/main.c    ****   GPIO_InitStruct.Pin = A0_Pin|A1_Pin|A2_Pin|A3_Pin 
 179              		.loc 1 546 0
 180 00fc 41F63F03 		movw	r3, #6207
 181 0100 0993     		str	r3, [sp, #36]
 547:Src/main.c    ****                           |A4_Pin|A5_Pin|SDNRAS_Pin|A6_Pin;
 548:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 182              		.loc 1 548 0
 183 0102 0225     		movs	r5, #2
 184 0104 0A95     		str	r5, [sp, #40]
 549:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 185              		.loc 1 549 0
 186 0106 0B94     		str	r4, [sp, #44]
 550:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 187              		.loc 1 550 0
 188 0108 0327     		movs	r7, #3
 189 010a 0C97     		str	r7, [sp, #48]
 551:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 190              		.loc 1 551 0
 191 010c 4FF00C08 		mov	r8, #12
ARM GAS  /tmp/ccleW29Z.s 			page 14


 192 0110 CDF83480 		str	r8, [sp, #52]
 552:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 193              		.loc 1 552 0
 194 0114 09A9     		add	r1, sp, #36
 195 0116 5046     		mov	r0, r10
 196 0118 FFF7FEFF 		bl	HAL_GPIO_Init
 197              	.LVL6:
 553:Src/main.c    **** 
 554:Src/main.c    ****   /*Configure GPIO pin : ENABLE_Pin */
 555:Src/main.c    ****   GPIO_InitStruct.Pin = ENABLE_Pin;
 198              		.loc 1 555 0
 199 011c 4FF48063 		mov	r3, #1024
 200 0120 0993     		str	r3, [sp, #36]
 556:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 201              		.loc 1 556 0
 202 0122 0A95     		str	r5, [sp, #40]
 557:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 203              		.loc 1 557 0
 204 0124 0B94     		str	r4, [sp, #44]
 558:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 205              		.loc 1 558 0
 206 0126 0C94     		str	r4, [sp, #48]
 559:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 207              		.loc 1 559 0
 208 0128 4FF00E09 		mov	r9, #14
 209 012c CDF83490 		str	r9, [sp, #52]
 560:Src/main.c    ****   HAL_GPIO_Init(ENABLE_GPIO_Port, &GPIO_InitStruct);
 210              		.loc 1 560 0
 211 0130 09A9     		add	r1, sp, #36
 212 0132 5046     		mov	r0, r10
 213 0134 FFF7FEFF 		bl	HAL_GPIO_Init
 214              	.LVL7:
 561:Src/main.c    **** 
 562:Src/main.c    ****   /*Configure GPIO pin : SDNWE_Pin */
 563:Src/main.c    ****   GPIO_InitStruct.Pin = SDNWE_Pin;
 215              		.loc 1 563 0
 216 0138 0126     		movs	r6, #1
 217 013a 0996     		str	r6, [sp, #36]
 564:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 218              		.loc 1 564 0
 219 013c 0A95     		str	r5, [sp, #40]
 565:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 220              		.loc 1 565 0
 221 013e 0B94     		str	r4, [sp, #44]
 566:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 222              		.loc 1 566 0
 223 0140 0C97     		str	r7, [sp, #48]
 567:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 224              		.loc 1 567 0
 225 0142 CDF83480 		str	r8, [sp, #52]
 568:Src/main.c    ****   HAL_GPIO_Init(SDNWE_GPIO_Port, &GPIO_InitStruct);
 226              		.loc 1 568 0
 227 0146 09A9     		add	r1, sp, #36
 228 0148 5E48     		ldr	r0, .L3+4
 229 014a FFF7FEFF 		bl	HAL_GPIO_Init
 230              	.LVL8:
 569:Src/main.c    **** 
ARM GAS  /tmp/ccleW29Z.s 			page 15


 570:Src/main.c    ****   /*Configure GPIO pins : NCS_MEMS_SPI_Pin CSX_Pin OTG_FS_PSO_Pin */
 571:Src/main.c    ****   GPIO_InitStruct.Pin = NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin;
 231              		.loc 1 571 0
 232 014e 1623     		movs	r3, #22
 233 0150 0993     		str	r3, [sp, #36]
 572:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 234              		.loc 1 572 0
 235 0152 0A96     		str	r6, [sp, #40]
 573:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 236              		.loc 1 573 0
 237 0154 0B94     		str	r4, [sp, #44]
 574:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 238              		.loc 1 574 0
 239 0156 0C94     		str	r4, [sp, #48]
 575:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 240              		.loc 1 575 0
 241 0158 09A9     		add	r1, sp, #36
 242 015a 5A48     		ldr	r0, .L3+4
 243 015c FFF7FEFF 		bl	HAL_GPIO_Init
 244              	.LVL9:
 576:Src/main.c    **** 
 577:Src/main.c    ****   /*Configure GPIO pins : B1_Pin MEMS_INT1_Pin MEMS_INT2_Pin TP_INT1_Pin */
 578:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin|MEMS_INT1_Pin|MEMS_INT2_Pin|TP_INT1_Pin;
 245              		.loc 1 578 0
 246 0160 48F20703 		movw	r3, #32775
 247 0164 0993     		str	r3, [sp, #36]
 579:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 248              		.loc 1 579 0
 249 0166 DFF878B1 		ldr	fp, .L3+32
 250 016a CDF828B0 		str	fp, [sp, #40]
 580:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 251              		.loc 1 580 0
 252 016e 0B94     		str	r4, [sp, #44]
 581:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 253              		.loc 1 581 0
 254 0170 09A9     		add	r1, sp, #36
 255 0172 5548     		ldr	r0, .L3+8
 256 0174 FFF7FEFF 		bl	HAL_GPIO_Init
 257              	.LVL10:
 582:Src/main.c    **** 
 583:Src/main.c    ****   /*Configure GPIO pins : B5_Pin VSYNC_Pin G2_Pin R4_Pin 
 584:Src/main.c    ****                            R5_Pin */
 585:Src/main.c    ****   GPIO_InitStruct.Pin = B5_Pin|VSYNC_Pin|G2_Pin|R4_Pin 
 258              		.loc 1 585 0
 259 0178 41F65803 		movw	r3, #6232
 260 017c 0993     		str	r3, [sp, #36]
 586:Src/main.c    ****                           |R5_Pin;
 587:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 261              		.loc 1 587 0
 262 017e 0A95     		str	r5, [sp, #40]
 588:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 263              		.loc 1 588 0
 264 0180 0B94     		str	r4, [sp, #44]
 589:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 265              		.loc 1 589 0
 266 0182 0C94     		str	r4, [sp, #48]
 590:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
ARM GAS  /tmp/ccleW29Z.s 			page 16


 267              		.loc 1 590 0
 268 0184 CDF83490 		str	r9, [sp, #52]
 591:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 269              		.loc 1 591 0
 270 0188 09A9     		add	r1, sp, #36
 271 018a 4F48     		ldr	r0, .L3+8
 272 018c FFF7FEFF 		bl	HAL_GPIO_Init
 273              	.LVL11:
 592:Src/main.c    **** 
 593:Src/main.c    ****   /*Configure GPIO pin : ACP_RST_Pin */
 594:Src/main.c    ****   GPIO_InitStruct.Pin = ACP_RST_Pin;
 274              		.loc 1 594 0
 275 0190 8023     		movs	r3, #128
 276 0192 0993     		str	r3, [sp, #36]
 595:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 277              		.loc 1 595 0
 278 0194 0A96     		str	r6, [sp, #40]
 596:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 279              		.loc 1 596 0
 280 0196 0B94     		str	r4, [sp, #44]
 597:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 281              		.loc 1 597 0
 282 0198 0C94     		str	r4, [sp, #48]
 598:Src/main.c    ****   HAL_GPIO_Init(ACP_RST_GPIO_Port, &GPIO_InitStruct);
 283              		.loc 1 598 0
 284 019a 09A9     		add	r1, sp, #36
 285 019c 4A48     		ldr	r0, .L3+8
 286 019e FFF7FEFF 		bl	HAL_GPIO_Init
 287              	.LVL12:
 599:Src/main.c    **** 
 600:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_OC_Pin */
 601:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_OC_Pin;
 288              		.loc 1 601 0
 289 01a2 2023     		movs	r3, #32
 290 01a4 0993     		str	r3, [sp, #36]
 602:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 291              		.loc 1 602 0
 292 01a6 CDF828B0 		str	fp, [sp, #40]
 603:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 293              		.loc 1 603 0
 294 01aa 0B94     		str	r4, [sp, #44]
 604:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_OC_GPIO_Port, &GPIO_InitStruct);
 295              		.loc 1 604 0
 296 01ac 09A9     		add	r1, sp, #36
 297 01ae 4548     		ldr	r0, .L3+4
 298 01b0 FFF7FEFF 		bl	HAL_GPIO_Init
 299              	.LVL13:
 605:Src/main.c    **** 
 606:Src/main.c    ****   /*Configure GPIO pins : R3_Pin R6_Pin */
 607:Src/main.c    ****   GPIO_InitStruct.Pin = R3_Pin|R6_Pin;
 300              		.loc 1 607 0
 301 01b4 0997     		str	r7, [sp, #36]
 608:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 302              		.loc 1 608 0
 303 01b6 0A95     		str	r5, [sp, #40]
 609:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 304              		.loc 1 609 0
ARM GAS  /tmp/ccleW29Z.s 			page 17


 305 01b8 0B94     		str	r4, [sp, #44]
 610:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 306              		.loc 1 610 0
 307 01ba 0C94     		str	r4, [sp, #48]
 611:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 308              		.loc 1 611 0
 309 01bc 0923     		movs	r3, #9
 310 01be 0D93     		str	r3, [sp, #52]
 612:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 311              		.loc 1 612 0
 312 01c0 09A9     		add	r1, sp, #36
 313 01c2 4548     		ldr	r0, .L3+24
 314 01c4 FFF7FEFF 		bl	HAL_GPIO_Init
 315              	.LVL14:
 613:Src/main.c    **** 
 614:Src/main.c    ****   /*Configure GPIO pin : BOOT1_Pin */
 615:Src/main.c    ****   GPIO_InitStruct.Pin = BOOT1_Pin;
 316              		.loc 1 615 0
 317 01c8 4FF0040B 		mov	fp, #4
 318 01cc CDF824B0 		str	fp, [sp, #36]
 616:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 319              		.loc 1 616 0
 320 01d0 0A94     		str	r4, [sp, #40]
 617:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 321              		.loc 1 617 0
 322 01d2 0B94     		str	r4, [sp, #44]
 618:Src/main.c    ****   HAL_GPIO_Init(BOOT1_GPIO_Port, &GPIO_InitStruct);
 323              		.loc 1 618 0
 324 01d4 09A9     		add	r1, sp, #36
 325 01d6 4048     		ldr	r0, .L3+24
 326 01d8 FFF7FEFF 		bl	HAL_GPIO_Init
 327              	.LVL15:
 619:Src/main.c    **** 
 620:Src/main.c    ****   /*Configure GPIO pins : PF13 PF14 PF15 */
 621:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 328              		.loc 1 621 0
 329 01dc 4FF46043 		mov	r3, #57344
 330 01e0 0993     		str	r3, [sp, #36]
 622:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 331              		.loc 1 622 0
 332 01e2 0A96     		str	r6, [sp, #40]
 623:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 333              		.loc 1 623 0
 334 01e4 0B94     		str	r4, [sp, #44]
 624:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 335              		.loc 1 624 0
 336 01e6 0C94     		str	r4, [sp, #48]
 625:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 337              		.loc 1 625 0
 338 01e8 09A9     		add	r1, sp, #36
 339 01ea 5046     		mov	r0, r10
 340 01ec FFF7FEFF 		bl	HAL_GPIO_Init
 341              	.LVL16:
 626:Src/main.c    **** 
 627:Src/main.c    ****   /*Configure GPIO pins : PG0 PG1 LD3_Pin LD4_Pin */
 628:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD4_Pin;
 342              		.loc 1 628 0
ARM GAS  /tmp/ccleW29Z.s 			page 18


 343 01f0 46F20303 		movw	r3, #24579
 344 01f4 0993     		str	r3, [sp, #36]
 629:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 345              		.loc 1 629 0
 346 01f6 0A96     		str	r6, [sp, #40]
 630:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 347              		.loc 1 630 0
 348 01f8 0B94     		str	r4, [sp, #44]
 631:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 349              		.loc 1 631 0
 350 01fa 0C94     		str	r4, [sp, #48]
 632:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 351              		.loc 1 632 0
 352 01fc 09A9     		add	r1, sp, #36
 353 01fe 3348     		ldr	r0, .L3+12
 354 0200 FFF7FEFF 		bl	HAL_GPIO_Init
 355              	.LVL17:
 633:Src/main.c    **** 
 634:Src/main.c    ****   /*Configure GPIO pins : PE7 PE8 PE9 PE10 
 635:Src/main.c    ****                            PE11 PE12 PE13 PE14 
 636:Src/main.c    ****                            PE15 */
 637:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 356              		.loc 1 637 0
 357 0204 4FF68073 		movw	r3, #65408
 358 0208 0993     		str	r3, [sp, #36]
 638:Src/main.c    ****                           |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
 639:Src/main.c    ****                           |GPIO_PIN_15;
 640:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 359              		.loc 1 640 0
 360 020a 0A96     		str	r6, [sp, #40]
 641:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 361              		.loc 1 641 0
 362 020c 0B94     		str	r4, [sp, #44]
 642:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 363              		.loc 1 642 0
 364 020e 0C94     		str	r4, [sp, #48]
 643:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 365              		.loc 1 643 0
 366 0210 09A9     		add	r1, sp, #36
 367 0212 2F48     		ldr	r0, .L3+16
 368 0214 FFF7FEFF 		bl	HAL_GPIO_Init
 369              	.LVL18:
 644:Src/main.c    **** 
 645:Src/main.c    ****   /*Configure GPIO pins : G4_Pin G5_Pin B6_Pin B7_Pin */
 646:Src/main.c    ****   GPIO_InitStruct.Pin = G4_Pin|G5_Pin|B6_Pin|B7_Pin;
 370              		.loc 1 646 0
 371 0218 4FF47063 		mov	r3, #3840
 372 021c 0993     		str	r3, [sp, #36]
 647:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 373              		.loc 1 647 0
 374 021e 0A95     		str	r5, [sp, #40]
 648:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 375              		.loc 1 648 0
 376 0220 0B94     		str	r4, [sp, #44]
 649:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 377              		.loc 1 649 0
 378 0222 0C94     		str	r4, [sp, #48]
ARM GAS  /tmp/ccleW29Z.s 			page 19


 650:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 379              		.loc 1 650 0
 380 0224 CDF83490 		str	r9, [sp, #52]
 651:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 381              		.loc 1 651 0
 382 0228 09A9     		add	r1, sp, #36
 383 022a 2B48     		ldr	r0, .L3+24
 384 022c FFF7FEFF 		bl	HAL_GPIO_Init
 385              	.LVL19:
 652:Src/main.c    **** 
 653:Src/main.c    ****   /*Configure GPIO pins : OTG_HS_ID_Pin OTG_HS_DM_Pin OTG_HS_DP_Pin */
 654:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_HS_ID_Pin|OTG_HS_DM_Pin|OTG_HS_DP_Pin;
 386              		.loc 1 654 0
 387 0230 4FF45043 		mov	r3, #53248
 388 0234 0993     		str	r3, [sp, #36]
 655:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 389              		.loc 1 655 0
 390 0236 0A95     		str	r5, [sp, #40]
 656:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 391              		.loc 1 656 0
 392 0238 0B94     		str	r4, [sp, #44]
 657:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 393              		.loc 1 657 0
 394 023a 0C94     		str	r4, [sp, #48]
 658:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;
 395              		.loc 1 658 0
 396 023c CDF83480 		str	r8, [sp, #52]
 659:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 397              		.loc 1 659 0
 398 0240 09A9     		add	r1, sp, #36
 399 0242 2548     		ldr	r0, .L3+24
 400 0244 FFF7FEFF 		bl	HAL_GPIO_Init
 401              	.LVL20:
 660:Src/main.c    **** 
 661:Src/main.c    ****   /*Configure GPIO pin : VBUS_HS_Pin */
 662:Src/main.c    ****   GPIO_InitStruct.Pin = VBUS_HS_Pin;
 402              		.loc 1 662 0
 403 0248 4FF40053 		mov	r3, #8192
 404 024c 0993     		str	r3, [sp, #36]
 663:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 405              		.loc 1 663 0
 406 024e 0A94     		str	r4, [sp, #40]
 664:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 407              		.loc 1 664 0
 408 0250 0B94     		str	r4, [sp, #44]
 665:Src/main.c    ****   HAL_GPIO_Init(VBUS_HS_GPIO_Port, &GPIO_InitStruct);
 409              		.loc 1 665 0
 410 0252 09A9     		add	r1, sp, #36
 411 0254 2048     		ldr	r0, .L3+24
 412 0256 FFF7FEFF 		bl	HAL_GPIO_Init
 413              	.LVL21:
 666:Src/main.c    **** 
 667:Src/main.c    ****   /*Configure GPIO pins : D13_Pin D14_Pin D15_Pin D0_Pin 
 668:Src/main.c    ****                            D1_Pin D2_Pin D3_Pin */
 669:Src/main.c    ****   GPIO_InitStruct.Pin = D13_Pin|D14_Pin|D15_Pin|D0_Pin 
 414              		.loc 1 669 0
 415 025a 4CF20373 		movw	r3, #50947
ARM GAS  /tmp/ccleW29Z.s 			page 20


 416 025e 0993     		str	r3, [sp, #36]
 670:Src/main.c    ****                           |D1_Pin|D2_Pin|D3_Pin;
 671:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 417              		.loc 1 671 0
 418 0260 0A95     		str	r5, [sp, #40]
 672:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 419              		.loc 1 672 0
 420 0262 0B94     		str	r4, [sp, #44]
 673:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 421              		.loc 1 673 0
 422 0264 0C97     		str	r7, [sp, #48]
 674:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 423              		.loc 1 674 0
 424 0266 CDF83480 		str	r8, [sp, #52]
 675:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 425              		.loc 1 675 0
 426 026a 09A9     		add	r1, sp, #36
 427 026c 1948     		ldr	r0, .L3+20
 428 026e FFF7FEFF 		bl	HAL_GPIO_Init
 429              	.LVL22:
 676:Src/main.c    **** 
 677:Src/main.c    ****   /*Configure GPIO pin : TE_Pin */
 678:Src/main.c    ****   GPIO_InitStruct.Pin = TE_Pin;
 430              		.loc 1 678 0
 431 0272 4FF40063 		mov	r3, #2048
 432 0276 0993     		str	r3, [sp, #36]
 679:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 433              		.loc 1 679 0
 434 0278 0A94     		str	r4, [sp, #40]
 680:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 435              		.loc 1 680 0
 436 027a 0B94     		str	r4, [sp, #44]
 681:Src/main.c    ****   HAL_GPIO_Init(TE_GPIO_Port, &GPIO_InitStruct);
 437              		.loc 1 681 0
 438 027c 09A9     		add	r1, sp, #36
 439 027e 1548     		ldr	r0, .L3+20
 440 0280 FFF7FEFF 		bl	HAL_GPIO_Init
 441              	.LVL23:
 682:Src/main.c    **** 
 683:Src/main.c    ****   /*Configure GPIO pins : RDX_Pin WRX_DCX_Pin */
 684:Src/main.c    ****   GPIO_InitStruct.Pin = RDX_Pin|WRX_DCX_Pin;
 442              		.loc 1 684 0
 443 0284 4FF44053 		mov	r3, #12288
 444 0288 0993     		str	r3, [sp, #36]
 685:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 445              		.loc 1 685 0
 446 028a 0A96     		str	r6, [sp, #40]
 686:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 447              		.loc 1 686 0
 448 028c 0B94     		str	r4, [sp, #44]
 687:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 449              		.loc 1 687 0
 450 028e 0C94     		str	r4, [sp, #48]
 688:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 451              		.loc 1 688 0
 452 0290 09A9     		add	r1, sp, #36
 453 0292 1048     		ldr	r0, .L3+20
ARM GAS  /tmp/ccleW29Z.s 			page 21


 454 0294 FFF7FEFF 		bl	HAL_GPIO_Init
 455              	.LVL24:
 689:Src/main.c    **** 
 690:Src/main.c    ****   /*Configure GPIO pins : BA0_Pin BA1_Pin SDCLK_Pin SDNCAS_Pin */
 691:Src/main.c    ****   GPIO_InitStruct.Pin = BA0_Pin|BA1_Pin|SDCLK_Pin|SDNCAS_Pin;
 456              		.loc 1 691 0
 457 0298 48F23013 		movw	r3, #33072
 458 029c 0993     		str	r3, [sp, #36]
 692:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 459              		.loc 1 692 0
 460 029e 0A95     		str	r5, [sp, #40]
 693:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 461              		.loc 1 693 0
 462 02a0 0B94     		str	r4, [sp, #44]
 694:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 463              		.loc 1 694 0
 464 02a2 0C97     		str	r7, [sp, #48]
 695:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 465              		.loc 1 695 0
 466 02a4 CDF83480 		str	r8, [sp, #52]
 696:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 467              		.loc 1 696 0
 468 02a8 09A9     		add	r1, sp, #36
 469 02aa 0848     		ldr	r0, .L3+12
 470 02ac FFF7FEFF 		bl	HAL_GPIO_Init
 471              	.LVL25:
 697:Src/main.c    **** 
 698:Src/main.c    ****   /*Configure GPIO pins : R7_Pin DOTCLK_Pin B3_Pin */
 699:Src/main.c    ****   GPIO_InitStruct.Pin = R7_Pin|DOTCLK_Pin|B3_Pin;
 472              		.loc 1 699 0
 473 02b0 4FF40C63 		mov	r3, #2240
 474 02b4 0993     		str	r3, [sp, #36]
 700:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 475              		.loc 1 700 0
 476 02b6 0A95     		str	r5, [sp, #40]
 701:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 477              		.loc 1 701 0
 478 02b8 0B94     		str	r4, [sp, #44]
 702:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 479              		.loc 1 702 0
 480 02ba 0C94     		str	r4, [sp, #48]
 481 02bc 12E0     		b	.L4
 482              	.L5:
 483 02be 00BF     		.align	2
 484              	.L3:
 485 02c0 00380240 		.word	1073887232
 486 02c4 00080240 		.word	1073874944
 487 02c8 00000240 		.word	1073872896
 488 02cc 00180240 		.word	1073879040
 489 02d0 00100240 		.word	1073876992
 490 02d4 000C0240 		.word	1073875968
 491 02d8 00040240 		.word	1073873920
 492 02dc 00140240 		.word	1073878016
 493 02e0 00001210 		.word	269615104
 494              	.L4:
 703:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 495              		.loc 1 703 0
ARM GAS  /tmp/ccleW29Z.s 			page 22


 496 02e4 CDF83490 		str	r9, [sp, #52]
 704:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 497              		.loc 1 704 0
 498 02e8 09A9     		add	r1, sp, #36
 499 02ea 2D48     		ldr	r0, .L6
 500 02ec FFF7FEFF 		bl	HAL_GPIO_Init
 501              	.LVL26:
 705:Src/main.c    **** 
 706:Src/main.c    ****   /*Configure GPIO pins : HSYNC_Pin G6_Pin R2_Pin */
 707:Src/main.c    ****   GPIO_InitStruct.Pin = HSYNC_Pin|G6_Pin|R2_Pin;
 502              		.loc 1 707 0
 503 02f0 4FF49863 		mov	r3, #1216
 504 02f4 0993     		str	r3, [sp, #36]
 708:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 505              		.loc 1 708 0
 506 02f6 0A95     		str	r5, [sp, #40]
 709:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 507              		.loc 1 709 0
 508 02f8 0B94     		str	r4, [sp, #44]
 710:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 509              		.loc 1 710 0
 510 02fa 0C94     		str	r4, [sp, #48]
 711:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 511              		.loc 1 711 0
 512 02fc CDF83490 		str	r9, [sp, #52]
 712:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 513              		.loc 1 712 0
 514 0300 09A9     		add	r1, sp, #36
 515 0302 2848     		ldr	r0, .L6+4
 516 0304 FFF7FEFF 		bl	HAL_GPIO_Init
 517              	.LVL27:
 713:Src/main.c    **** 
 714:Src/main.c    ****   /*Configure GPIO pin : I2C3_SDA_Pin */
 715:Src/main.c    ****   GPIO_InitStruct.Pin = I2C3_SDA_Pin;
 518              		.loc 1 715 0
 519 0308 4FF40073 		mov	r3, #512
 520 030c 0993     		str	r3, [sp, #36]
 716:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 521              		.loc 1 716 0
 522 030e 4FF0120A 		mov	r10, #18
 523 0312 CDF828A0 		str	r10, [sp, #40]
 717:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 524              		.loc 1 717 0
 525 0316 0B96     		str	r6, [sp, #44]
 718:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 526              		.loc 1 718 0
 527 0318 0C94     		str	r4, [sp, #48]
 719:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 528              		.loc 1 719 0
 529 031a CDF834B0 		str	fp, [sp, #52]
 720:Src/main.c    ****   HAL_GPIO_Init(I2C3_SDA_GPIO_Port, &GPIO_InitStruct);
 530              		.loc 1 720 0
 531 031e 09A9     		add	r1, sp, #36
 532 0320 2048     		ldr	r0, .L6+4
 533 0322 FFF7FEFF 		bl	HAL_GPIO_Init
 534              	.LVL28:
 721:Src/main.c    **** 
ARM GAS  /tmp/ccleW29Z.s 			page 23


 722:Src/main.c    ****   /*Configure GPIO pin : I2C3_SCL_Pin */
 723:Src/main.c    ****   GPIO_InitStruct.Pin = I2C3_SCL_Pin;
 535              		.loc 1 723 0
 536 0326 4FF48073 		mov	r3, #256
 537 032a 0993     		str	r3, [sp, #36]
 724:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 538              		.loc 1 724 0
 539 032c CDF828A0 		str	r10, [sp, #40]
 725:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 540              		.loc 1 725 0
 541 0330 0B96     		str	r6, [sp, #44]
 726:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 542              		.loc 1 726 0
 543 0332 0C94     		str	r4, [sp, #48]
 727:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 544              		.loc 1 727 0
 545 0334 CDF834B0 		str	fp, [sp, #52]
 728:Src/main.c    ****   HAL_GPIO_Init(I2C3_SCL_GPIO_Port, &GPIO_InitStruct);
 546              		.loc 1 728 0
 547 0338 09A9     		add	r1, sp, #36
 548 033a 1B48     		ldr	r0, .L6+8
 549 033c FFF7FEFF 		bl	HAL_GPIO_Init
 550              	.LVL29:
 729:Src/main.c    **** 
 730:Src/main.c    ****   /*Configure GPIO pins : G7_Pin B2_Pin */
 731:Src/main.c    ****   GPIO_InitStruct.Pin = G7_Pin|B2_Pin;
 551              		.loc 1 731 0
 552 0340 4823     		movs	r3, #72
 553 0342 0993     		str	r3, [sp, #36]
 732:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 554              		.loc 1 732 0
 555 0344 0A95     		str	r5, [sp, #40]
 733:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 556              		.loc 1 733 0
 557 0346 0B94     		str	r4, [sp, #44]
 734:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 558              		.loc 1 734 0
 559 0348 0C94     		str	r4, [sp, #48]
 735:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 560              		.loc 1 735 0
 561 034a CDF83490 		str	r9, [sp, #52]
 736:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 562              		.loc 1 736 0
 563 034e 09A9     		add	r1, sp, #36
 564 0350 1648     		ldr	r0, .L6+12
 565 0352 FFF7FEFF 		bl	HAL_GPIO_Init
 566              	.LVL30:
 737:Src/main.c    **** 
 738:Src/main.c    ****   /*Configure GPIO pins : G3_Pin B4_Pin */
 739:Src/main.c    ****   GPIO_InitStruct.Pin = G3_Pin|B4_Pin;
 567              		.loc 1 739 0
 568 0356 4FF4A053 		mov	r3, #5120
 569 035a 0993     		str	r3, [sp, #36]
 740:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 570              		.loc 1 740 0
 571 035c 0A95     		str	r5, [sp, #40]
 741:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccleW29Z.s 			page 24


 572              		.loc 1 741 0
 573 035e 0B94     		str	r4, [sp, #44]
 742:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 574              		.loc 1 742 0
 575 0360 0C94     		str	r4, [sp, #48]
 743:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 576              		.loc 1 743 0
 577 0362 0923     		movs	r3, #9
 578 0364 0D93     		str	r3, [sp, #52]
 744:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 579              		.loc 1 744 0
 580 0366 09A9     		add	r1, sp, #36
 581 0368 0D48     		ldr	r0, .L6
 582 036a FFF7FEFF 		bl	HAL_GPIO_Init
 583              	.LVL31:
 745:Src/main.c    **** 
 746:Src/main.c    ****   /*Configure GPIO pins : SDCKE1_Pin SDNE1_Pin */
 747:Src/main.c    ****   GPIO_InitStruct.Pin = SDCKE1_Pin|SDNE1_Pin;
 584              		.loc 1 747 0
 585 036e 6023     		movs	r3, #96
 586 0370 0993     		str	r3, [sp, #36]
 748:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 587              		.loc 1 748 0
 588 0372 0A95     		str	r5, [sp, #40]
 749:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 589              		.loc 1 749 0
 590 0374 0B94     		str	r4, [sp, #44]
 750:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 591              		.loc 1 750 0
 592 0376 0C97     		str	r7, [sp, #48]
 751:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 593              		.loc 1 751 0
 594 0378 CDF83480 		str	r8, [sp, #52]
 752:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 595              		.loc 1 752 0
 596 037c 09A9     		add	r1, sp, #36
 597 037e 0C48     		ldr	r0, .L6+16
 598 0380 FFF7FEFF 		bl	HAL_GPIO_Init
 599              	.LVL32:
 753:Src/main.c    **** 
 754:Src/main.c    ****   /*Configure GPIO pins : NBL0_Pin NBL1_Pin */
 755:Src/main.c    ****   GPIO_InitStruct.Pin = NBL0_Pin|NBL1_Pin;
 600              		.loc 1 755 0
 601 0384 0997     		str	r7, [sp, #36]
 756:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 602              		.loc 1 756 0
 603 0386 0A95     		str	r5, [sp, #40]
 757:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 604              		.loc 1 757 0
 605 0388 0B94     		str	r4, [sp, #44]
 758:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 606              		.loc 1 758 0
 607 038a 0C97     		str	r7, [sp, #48]
 759:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 608              		.loc 1 759 0
 609 038c CDF83480 		str	r8, [sp, #52]
 760:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
ARM GAS  /tmp/ccleW29Z.s 			page 25


 610              		.loc 1 760 0
 611 0390 09A9     		add	r1, sp, #36
 612 0392 0848     		ldr	r0, .L6+20
 613 0394 FFF7FEFF 		bl	HAL_GPIO_Init
 614              	.LVL33:
 761:Src/main.c    **** 
 762:Src/main.c    **** }
 615              		.loc 1 762 0
 616 0398 0FB0     		add	sp, sp, #60
 617              	.LCFI2:
 618              		.cfi_def_cfa_offset 36
 619              		@ sp needed
 620 039a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 621              	.L7:
 622 039e 00BF     		.align	2
 623              	.L6:
 624 03a0 00180240 		.word	1073879040
 625 03a4 00080240 		.word	1073874944
 626 03a8 00000240 		.word	1073872896
 627 03ac 000C0240 		.word	1073875968
 628 03b0 00040240 		.word	1073873920
 629 03b4 00100240 		.word	1073876992
 630              		.cfi_endproc
 631              	.LFE137:
 633              		.section	.text.MX_SPI5_Init,"ax",%progbits
 634              		.align	1
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 638              		.fpu fpv4-sp-d16
 640              	MX_SPI5_Init:
 641              	.LFB133:
 365:Src/main.c    **** 
 642              		.loc 1 365 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646 0000 08B5     		push	{r3, lr}
 647              	.LCFI3:
 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 3, -8
 650              		.cfi_offset 14, -4
 375:Src/main.c    ****   hspi5.Init.Mode = SPI_MODE_SLAVE;
 651              		.loc 1 375 0
 652 0002 0948     		ldr	r0, .L10
 653 0004 094B     		ldr	r3, .L10+4
 654 0006 0360     		str	r3, [r0]
 376:Src/main.c    ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 655              		.loc 1 376 0
 656 0008 0023     		movs	r3, #0
 657 000a 4360     		str	r3, [r0, #4]
 377:Src/main.c    ****   hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 658              		.loc 1 377 0
 659 000c 8360     		str	r3, [r0, #8]
 378:Src/main.c    ****   hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 660              		.loc 1 378 0
 661 000e C360     		str	r3, [r0, #12]
ARM GAS  /tmp/ccleW29Z.s 			page 26


 379:Src/main.c    ****   hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 662              		.loc 1 379 0
 663 0010 0361     		str	r3, [r0, #16]
 380:Src/main.c    ****   hspi5.Init.NSS = SPI_NSS_HARD_INPUT;
 664              		.loc 1 380 0
 665 0012 4361     		str	r3, [r0, #20]
 381:Src/main.c    ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 666              		.loc 1 381 0
 667 0014 8361     		str	r3, [r0, #24]
 382:Src/main.c    ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 668              		.loc 1 382 0
 669 0016 0362     		str	r3, [r0, #32]
 383:Src/main.c    ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 670              		.loc 1 383 0
 671 0018 4362     		str	r3, [r0, #36]
 384:Src/main.c    ****   hspi5.Init.CRCPolynomial = 10;
 672              		.loc 1 384 0
 673 001a 8362     		str	r3, [r0, #40]
 385:Src/main.c    ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 674              		.loc 1 385 0
 675 001c 0A23     		movs	r3, #10
 676 001e C362     		str	r3, [r0, #44]
 386:Src/main.c    ****   {
 677              		.loc 1 386 0
 678 0020 FFF7FEFF 		bl	HAL_SPI_Init
 679              	.LVL34:
 680 0024 08BD     		pop	{r3, pc}
 681              	.L11:
 682 0026 00BF     		.align	2
 683              	.L10:
 684 0028 00000000 		.word	hspi5
 685 002c 00500140 		.word	1073827840
 686              		.cfi_endproc
 687              	.LFE133:
 689              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 690              		.align	1
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 694              		.fpu fpv4-sp-d16
 696              	MX_USART1_UART_Init:
 697              	.LFB136:
 478:Src/main.c    **** 
 698              		.loc 1 478 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 0
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702 0000 08B5     		push	{r3, lr}
 703              	.LCFI4:
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 3, -8
 706              		.cfi_offset 14, -4
 487:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 707              		.loc 1 487 0
 708 0002 0848     		ldr	r0, .L14
 709 0004 084B     		ldr	r3, .L14+4
 710 0006 0360     		str	r3, [r0]
ARM GAS  /tmp/ccleW29Z.s 			page 27


 488:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 711              		.loc 1 488 0
 712 0008 4FF4E133 		mov	r3, #115200
 713 000c 4360     		str	r3, [r0, #4]
 489:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 714              		.loc 1 489 0
 715 000e 0023     		movs	r3, #0
 716 0010 8360     		str	r3, [r0, #8]
 490:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 717              		.loc 1 490 0
 718 0012 C360     		str	r3, [r0, #12]
 491:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 719              		.loc 1 491 0
 720 0014 0361     		str	r3, [r0, #16]
 492:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 721              		.loc 1 492 0
 722 0016 0C22     		movs	r2, #12
 723 0018 4261     		str	r2, [r0, #20]
 493:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 724              		.loc 1 493 0
 725 001a 8361     		str	r3, [r0, #24]
 494:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 726              		.loc 1 494 0
 727 001c C361     		str	r3, [r0, #28]
 495:Src/main.c    ****   {
 728              		.loc 1 495 0
 729 001e FFF7FEFF 		bl	HAL_UART_Init
 730              	.LVL35:
 731 0022 08BD     		pop	{r3, pc}
 732              	.L15:
 733              		.align	2
 734              	.L14:
 735 0024 00000000 		.word	huart1
 736 0028 00100140 		.word	1073811456
 737              		.cfi_endproc
 738              	.LFE136:
 740              		.section	.text.MX_DAC_Init,"ax",%progbits
 741              		.align	1
 742              		.syntax unified
 743              		.thumb
 744              		.thumb_func
 745              		.fpu fpv4-sp-d16
 747              	MX_DAC_Init:
 748              	.LFB132:
 327:Src/main.c    **** 
 749              		.loc 1 327 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 8
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 753 0000 30B5     		push	{r4, r5, lr}
 754              	.LCFI5:
 755              		.cfi_def_cfa_offset 12
 756              		.cfi_offset 4, -12
 757              		.cfi_offset 5, -8
 758              		.cfi_offset 14, -4
 759 0002 83B0     		sub	sp, sp, #12
 760              	.LCFI6:
ARM GAS  /tmp/ccleW29Z.s 			page 28


 761              		.cfi_def_cfa_offset 24
 333:Src/main.c    **** 
 762              		.loc 1 333 0
 763 0004 0024     		movs	r4, #0
 764 0006 0094     		str	r4, [sp]
 765 0008 0194     		str	r4, [sp, #4]
 340:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 766              		.loc 1 340 0
 767 000a 074D     		ldr	r5, .L18
 768 000c 074B     		ldr	r3, .L18+4
 769 000e 2B60     		str	r3, [r5]
 341:Src/main.c    ****   {
 770              		.loc 1 341 0
 771 0010 2846     		mov	r0, r5
 772 0012 FFF7FEFF 		bl	HAL_DAC_Init
 773              	.LVL36:
 347:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 774              		.loc 1 347 0
 775 0016 0094     		str	r4, [sp]
 348:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 776              		.loc 1 348 0
 777 0018 0194     		str	r4, [sp, #4]
 349:Src/main.c    ****   {
 778              		.loc 1 349 0
 779 001a 1022     		movs	r2, #16
 780 001c 6946     		mov	r1, sp
 781 001e 2846     		mov	r0, r5
 782 0020 FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 783              	.LVL37:
 357:Src/main.c    **** 
 784              		.loc 1 357 0
 785 0024 03B0     		add	sp, sp, #12
 786              	.LCFI7:
 787              		.cfi_def_cfa_offset 12
 788              		@ sp needed
 789 0026 30BD     		pop	{r4, r5, pc}
 790              	.L19:
 791              		.align	2
 792              	.L18:
 793 0028 00000000 		.word	hdac
 794 002c 00740040 		.word	1073771520
 795              		.cfi_endproc
 796              	.LFE132:
 798              		.section	.text.MX_TIM6_Init,"ax",%progbits
 799              		.align	1
 800              		.syntax unified
 801              		.thumb
 802              		.thumb_func
 803              		.fpu fpv4-sp-d16
 805              	MX_TIM6_Init:
 806              	.LFB134:
 402:Src/main.c    **** 
 807              		.loc 1 402 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 8
 810              		@ frame_needed = 0, uses_anonymous_args = 0
 811 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccleW29Z.s 			page 29


 812              	.LCFI8:
 813              		.cfi_def_cfa_offset 12
 814              		.cfi_offset 4, -12
 815              		.cfi_offset 5, -8
 816              		.cfi_offset 14, -4
 817 0002 83B0     		sub	sp, sp, #12
 818              	.LCFI9:
 819              		.cfi_def_cfa_offset 24
 408:Src/main.c    **** 
 820              		.loc 1 408 0
 821 0004 0025     		movs	r5, #0
 822 0006 0095     		str	r5, [sp]
 823 0008 0195     		str	r5, [sp, #4]
 413:Src/main.c    ****   htim6.Init.Prescaler = 0;
 824              		.loc 1 413 0
 825 000a 0A4C     		ldr	r4, .L22
 826 000c 0A4B     		ldr	r3, .L22+4
 827 000e 2360     		str	r3, [r4]
 414:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 828              		.loc 1 414 0
 829 0010 6560     		str	r5, [r4, #4]
 415:Src/main.c    ****   htim6.Init.Period = 1290;
 830              		.loc 1 415 0
 831 0012 A560     		str	r5, [r4, #8]
 416:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 832              		.loc 1 416 0
 833 0014 40F20A53 		movw	r3, #1290
 834 0018 E360     		str	r3, [r4, #12]
 417:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 835              		.loc 1 417 0
 836 001a A561     		str	r5, [r4, #24]
 418:Src/main.c    ****   {
 837              		.loc 1 418 0
 838 001c 2046     		mov	r0, r4
 839 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 840              	.LVL38:
 422:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 841              		.loc 1 422 0
 842 0022 0095     		str	r5, [sp]
 423:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 843              		.loc 1 423 0
 844 0024 0195     		str	r5, [sp, #4]
 424:Src/main.c    ****   {
 845              		.loc 1 424 0
 846 0026 6946     		mov	r1, sp
 847 0028 2046     		mov	r0, r4
 848 002a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 849              	.LVL39:
 432:Src/main.c    **** 
 850              		.loc 1 432 0
 851 002e 03B0     		add	sp, sp, #12
 852              	.LCFI10:
 853              		.cfi_def_cfa_offset 12
 854              		@ sp needed
 855 0030 30BD     		pop	{r4, r5, pc}
 856              	.L23:
 857 0032 00BF     		.align	2
ARM GAS  /tmp/ccleW29Z.s 			page 30


 858              	.L22:
 859 0034 00000000 		.word	htim6
 860 0038 00100040 		.word	1073745920
 861              		.cfi_endproc
 862              	.LFE134:
 864              		.section	.text.MX_TIM7_Init,"ax",%progbits
 865              		.align	1
 866              		.syntax unified
 867              		.thumb
 868              		.thumb_func
 869              		.fpu fpv4-sp-d16
 871              	MX_TIM7_Init:
 872              	.LFB135:
 440:Src/main.c    **** 
 873              		.loc 1 440 0
 874              		.cfi_startproc
 875              		@ args = 0, pretend = 0, frame = 8
 876              		@ frame_needed = 0, uses_anonymous_args = 0
 877 0000 30B5     		push	{r4, r5, lr}
 878              	.LCFI11:
 879              		.cfi_def_cfa_offset 12
 880              		.cfi_offset 4, -12
 881              		.cfi_offset 5, -8
 882              		.cfi_offset 14, -4
 883 0002 83B0     		sub	sp, sp, #12
 884              	.LCFI12:
 885              		.cfi_def_cfa_offset 24
 446:Src/main.c    **** 
 886              		.loc 1 446 0
 887 0004 0025     		movs	r5, #0
 888 0006 0095     		str	r5, [sp]
 889 0008 0195     		str	r5, [sp, #4]
 451:Src/main.c    ****   htim7.Init.Prescaler = 0;
 890              		.loc 1 451 0
 891 000a 0A4C     		ldr	r4, .L26
 892 000c 0A4B     		ldr	r3, .L26+4
 893 000e 2360     		str	r3, [r4]
 452:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 894              		.loc 1 452 0
 895 0010 6560     		str	r5, [r4, #4]
 453:Src/main.c    ****   htim7.Init.Period = 10000;
 896              		.loc 1 453 0
 897 0012 A560     		str	r5, [r4, #8]
 454:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 898              		.loc 1 454 0
 899 0014 42F21073 		movw	r3, #10000
 900 0018 E360     		str	r3, [r4, #12]
 455:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 901              		.loc 1 455 0
 902 001a A561     		str	r5, [r4, #24]
 456:Src/main.c    ****   {
 903              		.loc 1 456 0
 904 001c 2046     		mov	r0, r4
 905 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 906              	.LVL40:
 460:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 907              		.loc 1 460 0
ARM GAS  /tmp/ccleW29Z.s 			page 31


 908 0022 0095     		str	r5, [sp]
 461:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 909              		.loc 1 461 0
 910 0024 0195     		str	r5, [sp, #4]
 462:Src/main.c    ****   {
 911              		.loc 1 462 0
 912 0026 6946     		mov	r1, sp
 913 0028 2046     		mov	r0, r4
 914 002a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 915              	.LVL41:
 470:Src/main.c    **** 
 916              		.loc 1 470 0
 917 002e 03B0     		add	sp, sp, #12
 918              	.LCFI13:
 919              		.cfi_def_cfa_offset 12
 920              		@ sp needed
 921 0030 30BD     		pop	{r4, r5, pc}
 922              	.L27:
 923 0032 00BF     		.align	2
 924              	.L26:
 925 0034 00000000 		.word	htim7
 926 0038 00140040 		.word	1073746944
 927              		.cfi_endproc
 928              	.LFE135:
 930              		.section	.text.SystemClock_Config,"ax",%progbits
 931              		.align	1
 932              		.global	SystemClock_Config
 933              		.syntax unified
 934              		.thumb
 935              		.thumb_func
 936              		.fpu fpv4-sp-d16
 938              	SystemClock_Config:
 939              	.LFB131:
 283:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 940              		.loc 1 283 0
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 80
 943              		@ frame_needed = 0, uses_anonymous_args = 0
 944 0000 30B5     		push	{r4, r5, lr}
 945              	.LCFI14:
 946              		.cfi_def_cfa_offset 12
 947              		.cfi_offset 4, -12
 948              		.cfi_offset 5, -8
 949              		.cfi_offset 14, -4
 950 0002 95B0     		sub	sp, sp, #84
 951              	.LCFI15:
 952              		.cfi_def_cfa_offset 96
 284:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 953              		.loc 1 284 0
 954 0004 3022     		movs	r2, #48
 955 0006 0021     		movs	r1, #0
 956 0008 08A8     		add	r0, sp, #32
 957 000a FFF7FEFF 		bl	memset
 958              	.LVL42:
 285:Src/main.c    **** 
 959              		.loc 1 285 0
 960 000e 0024     		movs	r4, #0
ARM GAS  /tmp/ccleW29Z.s 			page 32


 961 0010 0394     		str	r4, [sp, #12]
 962 0012 0494     		str	r4, [sp, #16]
 963 0014 0594     		str	r4, [sp, #20]
 964 0016 0694     		str	r4, [sp, #24]
 965 0018 0794     		str	r4, [sp, #28]
 966              	.LBB10:
 289:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 967              		.loc 1 289 0
 968 001a 0194     		str	r4, [sp, #4]
 969 001c 1C4B     		ldr	r3, .L30
 970 001e 1A6C     		ldr	r2, [r3, #64]
 971 0020 42F08052 		orr	r2, r2, #268435456
 972 0024 1A64     		str	r2, [r3, #64]
 973 0026 1B6C     		ldr	r3, [r3, #64]
 974 0028 03F08053 		and	r3, r3, #268435456
 975 002c 0193     		str	r3, [sp, #4]
 976 002e 019B     		ldr	r3, [sp, #4]
 977              	.LBE10:
 978              	.LBB11:
 290:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 979              		.loc 1 290 0
 980 0030 0294     		str	r4, [sp, #8]
 981 0032 184A     		ldr	r2, .L30+4
 982 0034 1368     		ldr	r3, [r2]
 983 0036 23F44043 		bic	r3, r3, #49152
 984 003a 43F48043 		orr	r3, r3, #16384
 985 003e 1360     		str	r3, [r2]
 986 0040 1368     		ldr	r3, [r2]
 987 0042 03F44043 		and	r3, r3, #49152
 988 0046 0293     		str	r3, [sp, #8]
 989 0048 029B     		ldr	r3, [sp, #8]
 990              	.LBE11:
 293:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 991              		.loc 1 293 0
 992 004a 0225     		movs	r5, #2
 993 004c 0895     		str	r5, [sp, #32]
 294:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 994              		.loc 1 294 0
 995 004e 0123     		movs	r3, #1
 996 0050 0B93     		str	r3, [sp, #44]
 295:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 997              		.loc 1 295 0
 998 0052 1023     		movs	r3, #16
 999 0054 0C93     		str	r3, [sp, #48]
 296:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1000              		.loc 1 296 0
 1001 0056 0E95     		str	r5, [sp, #56]
 297:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1002              		.loc 1 297 0
 1003 0058 0F94     		str	r4, [sp, #60]
 298:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 100;
 1004              		.loc 1 298 0
 1005 005a 0823     		movs	r3, #8
 1006 005c 1093     		str	r3, [sp, #64]
 299:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1007              		.loc 1 299 0
 1008 005e 6423     		movs	r3, #100
ARM GAS  /tmp/ccleW29Z.s 			page 33


 1009 0060 1193     		str	r3, [sp, #68]
 300:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 1010              		.loc 1 300 0
 1011 0062 1295     		str	r5, [sp, #72]
 301:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1012              		.loc 1 301 0
 1013 0064 0723     		movs	r3, #7
 1014 0066 1393     		str	r3, [sp, #76]
 302:Src/main.c    ****   {
 1015              		.loc 1 302 0
 1016 0068 08A8     		add	r0, sp, #32
 1017 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 1018              	.LVL43:
 308:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1019              		.loc 1 308 0
 1020 006e 0F23     		movs	r3, #15
 1021 0070 0393     		str	r3, [sp, #12]
 310:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1022              		.loc 1 310 0
 1023 0072 0495     		str	r5, [sp, #16]
 311:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1024              		.loc 1 311 0
 1025 0074 0594     		str	r4, [sp, #20]
 312:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1026              		.loc 1 312 0
 1027 0076 4FF4A053 		mov	r3, #5120
 1028 007a 0693     		str	r3, [sp, #24]
 313:Src/main.c    **** 
 1029              		.loc 1 313 0
 1030 007c 4FF48053 		mov	r3, #4096
 1031 0080 0793     		str	r3, [sp, #28]
 315:Src/main.c    ****   {
 1032              		.loc 1 315 0
 1033 0082 0321     		movs	r1, #3
 1034 0084 03A8     		add	r0, sp, #12
 1035 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1036              	.LVL44:
 319:Src/main.c    **** 
 1037              		.loc 1 319 0
 1038 008a 15B0     		add	sp, sp, #84
 1039              	.LCFI16:
 1040              		.cfi_def_cfa_offset 12
 1041              		@ sp needed
 1042 008c 30BD     		pop	{r4, r5, pc}
 1043              	.L31:
 1044 008e 00BF     		.align	2
 1045              	.L30:
 1046 0090 00380240 		.word	1073887232
 1047 0094 00700040 		.word	1073770496
 1048              		.cfi_endproc
 1049              	.LFE131:
 1051              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 1052              		.align	1
 1053              		.global	HAL_GPIO_EXTI_Callback
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
ARM GAS  /tmp/ccleW29Z.s 			page 34


 1057              		.fpu fpv4-sp-d16
 1059              	HAL_GPIO_EXTI_Callback:
 1060              	.LFB138:
 763:Src/main.c    **** 
 764:Src/main.c    **** /* USER CODE BEGIN 4 */
 765:Src/main.c    **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 1061              		.loc 1 765 0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 1065              		@ link register save eliminated.
 1066              	.LVL45:
 1067 0000 7047     		bx	lr
 1068              		.cfi_endproc
 1069              	.LFE138:
 1071              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1072              		.align	1
 1073              		.global	HAL_TIM_PeriodElapsedCallback
 1074              		.syntax unified
 1075              		.thumb
 1076              		.thumb_func
 1077              		.fpu fpv4-sp-d16
 1079              	HAL_TIM_PeriodElapsedCallback:
 1080              	.LFB140:
 766:Src/main.c    ****   //Receive_MIDI(&hspi5, spi_rx_buffer);
 767:Src/main.c    **** }
 768:Src/main.c    **** 
 769:Src/main.c    **** void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi) {
 770:Src/main.c    ****   //  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, GPIO_PIN_SET);
 771:Src/main.c    ****   uint8_t uart_tx_buffer;
 772:Src/main.c    ****   /*
 773:Src/main.c    ****   struct midi_note_msg new_midi_note_msg = {
 774:Src/main.c    ****     spi_rx_buffer[0],
 775:Src/main.c    ****     spi_rx_buffer[1],
 776:Src/main.c    ****     spi_rx_buffer[2]
 777:Src/main.c    ****   };
 778:Src/main.c    **** 
 779:Src/main.c    ****   enqueue(new_midi_note_msg);
 780:Src/main.c    ****   */
 781:Src/main.c    **** 
 782:Src/main.c    ****   /*
 783:Src/main.c    ****   uart_tx_buffer = current_midi_note_msg.byte0;
 784:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 785:Src/main.c    ****   uart_tx_buffer = current_midi_note_msg.byte1;
 786:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 787:Src/main.c    ****   uart_tx_buffer = current_midi_note_msg.byte2;
 788:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 789:Src/main.c    ****   uart_tx_buffer = '\n';
 790:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 791:Src/main.c    **** 
 792:Src/main.c    ****   if(current_midi_note_msg.byte0 == MIDI_NOTE_ON){
 793:Src/main.c    ****     uart_tx_buffer = 'n';
 794:Src/main.c    ****     HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 795:Src/main.c    ****   }
 796:Src/main.c    ****   else if (current_midi_note_msg.byte0 == MIDI_NOTE_OFF){
 797:Src/main.c    ****     uart_tx_buffer = 'f';
 798:Src/main.c    ****     HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
ARM GAS  /tmp/ccleW29Z.s 			page 35


 799:Src/main.c    ****   }
 800:Src/main.c    ****   else if (current_midi_note_msg.byte0 == ATTACK_CC){
 801:Src/main.c    ****     uart_tx_buffer = 'a';
 802:Src/main.c    ****     HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 803:Src/main.c    ****   }
 804:Src/main.c    ****   else if (current_midi_note_msg.byte0 == DECAY_CC){
 805:Src/main.c    ****     uart_tx_buffer = 'd';
 806:Src/main.c    ****     HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 807:Src/main.c    ****   }
 808:Src/main.c    ****   else if (current_midi_note_msg.byte0 == SUSTAIN_CC){
 809:Src/main.c    ****     uart_tx_buffer = 's';
 810:Src/main.c    ****     HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 811:Src/main.c    ****   }
 812:Src/main.c    ****   else if (current_midi_note_msg.byte0 == RELEASE_CC){
 813:Src/main.c    ****     uart_tx_buffer = 'r';
 814:Src/main.c    ****     HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 815:Src/main.c    ****   }
 816:Src/main.c    ****   else {
 817:Src/main.c    ****     uart_tx_buffer = 'z';
 818:Src/main.c    ****     HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 819:Src/main.c    ****   }
 820:Src/main.c    **** 
 821:Src/main.c    ****   uart_tx_buffer = '\n';
 822:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 823:Src/main.c    ****   */
 824:Src/main.c    **** 
 825:Src/main.c    ****   MIDI_flag = 1;
 826:Src/main.c    **** 
 827:Src/main.c    ****   if(note_on_flag){
 828:Src/main.c    ****     struct midi_msg new_midi_note_msg = {
 829:Src/main.c    ****       MIDI_NOTE_ON,
 830:Src/main.c    ****       spi_rx_buffer[0],
 831:Src/main.c    ****       127,
 832:Src/main.c    ****       0
 833:Src/main.c    ****     };
 834:Src/main.c    ****     enqueue(new_midi_note_msg);
 835:Src/main.c    ****     note_on_flag = 0;
 836:Src/main.c    ****   }
 837:Src/main.c    ****   else if(note_off_flag){
 838:Src/main.c    ****     struct midi_msg new_midi_note_msg = {
 839:Src/main.c    ****       MIDI_NOTE_OFF,
 840:Src/main.c    ****       spi_rx_buffer[0],
 841:Src/main.c    ****       0,
 842:Src/main.c    ****       0
 843:Src/main.c    ****     };
 844:Src/main.c    ****     enqueue(new_midi_note_msg);
 845:Src/main.c    ****     note_off_flag = 0;
 846:Src/main.c    ****   }
 847:Src/main.c    ****   else if(attack_cc_flag){
 848:Src/main.c    ****     struct midi_msg new_cc = {
 849:Src/main.c    ****       ATTACK_CC,
 850:Src/main.c    ****       spi_rx_buffer[0],
 851:Src/main.c    ****       0,
 852:Src/main.c    ****       0
 853:Src/main.c    ****     };
 854:Src/main.c    ****     enqueue(new_cc);
 855:Src/main.c    ****     attack_cc_flag = 0;
ARM GAS  /tmp/ccleW29Z.s 			page 36


 856:Src/main.c    ****   }
 857:Src/main.c    ****   else if(decay_cc_flag){
 858:Src/main.c    ****     struct midi_msg new_cc = {
 859:Src/main.c    ****       DECAY_CC,
 860:Src/main.c    ****       spi_rx_buffer[0],
 861:Src/main.c    ****       0,
 862:Src/main.c    ****       0
 863:Src/main.c    ****     };
 864:Src/main.c    ****     enqueue(new_cc);
 865:Src/main.c    ****     decay_cc_flag = 0;
 866:Src/main.c    ****   }
 867:Src/main.c    ****   else if(sustain_cc_flag){
 868:Src/main.c    ****     struct midi_msg new_cc = {
 869:Src/main.c    ****       SUSTAIN_CC,
 870:Src/main.c    ****       spi_rx_buffer[0],
 871:Src/main.c    ****       0,
 872:Src/main.c    ****       0
 873:Src/main.c    ****     };
 874:Src/main.c    ****     enqueue(new_cc);
 875:Src/main.c    ****     sustain_cc_flag = 0;
 876:Src/main.c    ****   }
 877:Src/main.c    ****   else if(release_cc_flag){
 878:Src/main.c    ****     struct midi_msg new_cc = {
 879:Src/main.c    ****       RELEASE_CC,
 880:Src/main.c    ****       spi_rx_buffer[0],
 881:Src/main.c    ****       0,
 882:Src/main.c    ****       0
 883:Src/main.c    ****     };
 884:Src/main.c    ****     enqueue(new_cc);
 885:Src/main.c    ****     release_cc_flag = 0;
 886:Src/main.c    ****   }
 887:Src/main.c    **** }
 888:Src/main.c    **** 
 889:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 1081              		.loc 1 889 0
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 0
 1084              		@ frame_needed = 0, uses_anonymous_args = 0
 1085              		@ link register save eliminated.
 1086              	.LVL46:
 890:Src/main.c    ****   if(htim->Instance == TIM6){
 1087              		.loc 1 890 0
 1088 0000 0268     		ldr	r2, [r0]
 1089 0002 044B     		ldr	r3, .L36
 1090 0004 9A42     		cmp	r2, r3
 1091 0006 00D0     		beq	.L35
 1092              	.L33:
 1093 0008 7047     		bx	lr
 1094              	.L35:
 891:Src/main.c    ****     //  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_1);
 892:Src/main.c    ****     update_value_flag = 1;
 1095              		.loc 1 892 0
 1096 000a 0122     		movs	r2, #1
 1097 000c 024B     		ldr	r3, .L36+4
 1098 000e 1A70     		strb	r2, [r3]
 893:Src/main.c    ****   }
 894:Src/main.c    ****   /*
ARM GAS  /tmp/ccleW29Z.s 			page 37


 895:Src/main.c    ****   else if(htim->Instance == TIM7){
 896:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_8);
 897:Src/main.c    ****     for(int i = 0; i < VOICES; i++){
 898:Src/main.c    ****       if(note_on[i] == MIDI_NOTE_ON){
 899:Src/main.c    ****         if(env_state[i] == NOT_TRIGGERED){
 900:Src/main.c    ****           env_state[i] = ATTACK_MODE;
 901:Src/main.c    ****         }
 902:Src/main.c    ****         else{
 903:Src/main.c    ****           env_state[i] = RELEASE_MODE;
 904:Src/main.c    ****         }
 905:Src/main.c    ****       }
 906:Src/main.c    ****     }
 907:Src/main.c    ****   }
 908:Src/main.c    ****   */
 909:Src/main.c    **** }
 1099              		.loc 1 909 0
 1100 0010 FAE7     		b	.L33
 1101              	.L37:
 1102 0012 00BF     		.align	2
 1103              	.L36:
 1104 0014 00100040 		.word	1073745920
 1105 0018 00000000 		.word	.LANCHOR0
 1106              		.cfi_endproc
 1107              	.LFE140:
 1109              		.global	__aeabi_f2d
 1110              		.global	__aeabi_dmul
 1111              		.global	__aeabi_d2uiz
 1112              		.section	.text.UpdateOutputValue,"ax",%progbits
 1113              		.align	1
 1114              		.global	UpdateOutputValue
 1115              		.syntax unified
 1116              		.thumb
 1117              		.thumb_func
 1118              		.fpu fpv4-sp-d16
 1120              	UpdateOutputValue:
 1121              	.LFB141:
 910:Src/main.c    **** 
 911:Src/main.c    **** void UpdateOutputValue() {
 1122              		.loc 1 911 0
 1123              		.cfi_startproc
 1124              		@ args = 0, pretend = 0, frame = 8
 1125              		@ frame_needed = 0, uses_anonymous_args = 0
 1126 0000 10B5     		push	{r4, lr}
 1127              	.LCFI17:
 1128              		.cfi_def_cfa_offset 8
 1129              		.cfi_offset 4, -8
 1130              		.cfi_offset 14, -4
 1131 0002 2DED028B 		vpush.64	{d8}
 1132              	.LCFI18:
 1133              		.cfi_def_cfa_offset 16
 1134              		.cfi_offset 80, -16
 1135              		.cfi_offset 81, -12
 1136 0006 82B0     		sub	sp, sp, #8
 1137              	.LCFI19:
 1138              		.cfi_def_cfa_offset 24
 1139              	.LVL47:
 912:Src/main.c    ****   //  HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_7);
ARM GAS  /tmp/ccleW29Z.s 			page 38


 913:Src/main.c    ****   float val = 0;
 914:Src/main.c    ****   output_val = 0;
 1140              		.loc 1 914 0
 1141 0008 0024     		movs	r4, #0
 1142 000a 294B     		ldr	r3, .L42+8
 1143 000c 1C70     		strb	r4, [r3]
 1144              	.LVL48:
 913:Src/main.c    ****   output_val = 0;
 1145              		.loc 1 913 0
 1146 000e 9FED298A 		vldr.32	s16, .L42+12
 1147              	.LBB12:
 915:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1148              		.loc 1 915 0
 1149 0012 37E0     		b	.L39
 1150              	.LVL49:
 1151              	.L40:
 916:Src/main.c    ****     phase_accumulator[i] += (uint32_t)(midi_notes[note_freq[i]]*DDS_SCALE_FACTOR);
 1152              		.loc 1 916 0 discriminator 3
 1153 0014 284B     		ldr	r3, .L42+16
 1154 0016 1A5D     		ldrb	r2, [r3, r4]	@ zero_extendqisi2
 1155 0018 284B     		ldr	r3, .L42+20
 1156 001a 03EB8203 		add	r3, r3, r2, lsl #2
 1157 001e 1868     		ldr	r0, [r3]	@ float
 1158 0020 FFF7FEFF 		bl	__aeabi_f2d
 1159              	.LVL50:
 1160 0024 20A3     		adr	r3, .L42
 1161 0026 D3E90023 		ldrd	r2, [r3]
 1162 002a FFF7FEFF 		bl	__aeabi_dmul
 1163              	.LVL51:
 1164 002e FFF7FEFF 		bl	__aeabi_d2uiz
 1165              	.LVL52:
 1166 0032 234B     		ldr	r3, .L42+24
 1167 0034 53F82420 		ldr	r2, [r3, r4, lsl #2]
 1168 0038 1044     		add	r0, r0, r2
 1169 003a 43F82400 		str	r0, [r3, r4, lsl #2]
 917:Src/main.c    ****     val += ((base_sine[(phase_accumulator[i]>>10)%4096] + 0*base_pos_saw[(phase_accumulator[i]>>10)
 1170              		.loc 1 917 0 discriminator 3
 1171 003e 53F82420 		ldr	r2, [r3, r4, lsl #2]
 1172 0042 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1173 0046 C3F38B23 		ubfx	r3, r3, #10, #12
 1174 004a 1E4A     		ldr	r2, .L42+28
 1175 004c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1176 004e 07EE903A 		vmov	s15, r3	@ int
 1177 0052 1D4B     		ldr	r3, .L42+32
 1178 0054 03EB8403 		add	r3, r3, r4, lsl #2
 1179 0058 93ED007A 		vldr.32	s14, [r3]
 1180 005c F8EEE77A 		vcvt.f32.s32	s15, s15
 1181 0060 27EE877A 		vmul.f32	s14, s15, s14
 1182 0064 194B     		ldr	r3, .L42+36
 1183 0066 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1184 0068 DBB2     		uxtb	r3, r3
 1185 006a 07EE903A 		vmov	s15, r3	@ int
 1186 006e F8EEE77A 		vcvt.f32.s32	s15, s15
 1187 0072 67EE877A 		vmul.f32	s15, s15, s14
 1188 0076 DFED166A 		vldr.32	s13, .L42+40
 1189 007a 87EEA67A 		vdiv.f32	s14, s15, s13
 1190 007e 38EE078A 		vadd.f32	s16, s16, s14
ARM GAS  /tmp/ccleW29Z.s 			page 39


 1191              	.LVL53:
 915:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1192              		.loc 1 915 0 discriminator 3
 1193 0082 0134     		adds	r4, r4, #1
 1194              	.LVL54:
 1195              	.L39:
 915:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1196              		.loc 1 915 0 is_stmt 0 discriminator 1
 1197 0084 0F2C     		cmp	r4, #15
 1198 0086 C5DD     		ble	.L40
 1199              	.LBE12:
 918:Src/main.c    ****   }
 919:Src/main.c    **** 
 920:Src/main.c    ****   output_val = (uint8_t) (val / VOICES);
 1200              		.loc 1 920 0 is_stmt 1
 1201 0088 DFED127A 		vldr.32	s15, .L42+44
 1202 008c 28EE278A 		vmul.f32	s16, s16, s15
 1203              	.LVL55:
 1204 0090 FCEEC87A 		vcvt.u32.f32	s15, s16
 1205 0094 CDED017A 		vstr.32	s15, [sp, #4]	@ int
 1206 0098 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 1207 009c 044A     		ldr	r2, .L42+8
 1208 009e 1370     		strb	r3, [r2]
 921:Src/main.c    **** }
 1209              		.loc 1 921 0
 1210 00a0 02B0     		add	sp, sp, #8
 1211              	.LCFI20:
 1212              		.cfi_def_cfa_offset 16
 1213              		@ sp needed
 1214 00a2 BDEC028B 		vldm	sp!, {d8}
 1215              	.LCFI21:
 1216              		.cfi_restore 80
 1217              		.cfi_restore 81
 1218              		.cfi_def_cfa_offset 8
 1219 00a6 10BD     		pop	{r4, pc}
 1220              	.LVL56:
 1221              	.L43:
 1222              		.align	3
 1223              	.L42:
 1224 00a8 942EA292 		.word	2460102292
 1225 00ac 5F5E5640 		.word	1079402079
 1226 00b0 00000000 		.word	.LANCHOR1
 1227 00b4 00000000 		.word	0
 1228 00b8 00000000 		.word	.LANCHOR2
 1229 00bc 00000000 		.word	midi_notes
 1230 00c0 00000000 		.word	.LANCHOR3
 1231 00c4 00000000 		.word	base_sine
 1232 00c8 00000000 		.word	.LANCHOR4
 1233 00cc 00000000 		.word	.LANCHOR5
 1234 00d0 0001FE47 		.word	1207828736
 1235 00d4 0000803D 		.word	1031798784
 1236              		.cfi_endproc
 1237              	.LFE141:
 1239              		.global	__aeabi_i2d
 1240              		.section	.text.UpdateLFOs,"ax",%progbits
 1241              		.align	1
 1242              		.global	UpdateLFOs
ARM GAS  /tmp/ccleW29Z.s 			page 40


 1243              		.syntax unified
 1244              		.thumb
 1245              		.thumb_func
 1246              		.fpu fpv4-sp-d16
 1248              	UpdateLFOs:
 1249              	.LFB142:
 922:Src/main.c    **** 
 923:Src/main.c    **** void UpdateLFOs() {
 1250              		.loc 1 923 0
 1251              		.cfi_startproc
 1252              		@ args = 0, pretend = 0, frame = 0
 1253              		@ frame_needed = 0, uses_anonymous_args = 0
 1254 0000 10B5     		push	{r4, lr}
 1255              	.LCFI22:
 1256              		.cfi_def_cfa_offset 8
 1257              		.cfi_offset 4, -8
 1258              		.cfi_offset 14, -4
 1259              	.LVL57:
 1260              	.LBB13:
 924:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1261              		.loc 1 924 0
 1262 0002 0024     		movs	r4, #0
 1263 0004 16E0     		b	.L45
 1264              	.LVL58:
 1265              	.L46:
 925:Src/main.c    ****     lfo_phase_accumulator[i] += (uint32_t)(lfo_freq[i] * (DDS_SCALE_FACTOR/10));
 1266              		.loc 1 925 0 discriminator 3
 1267 0006 104B     		ldr	r3, .L48+8
 1268 0008 33F81400 		ldrh	r0, [r3, r4, lsl #1]
 1269 000c 80B2     		uxth	r0, r0
 1270 000e FFF7FEFF 		bl	__aeabi_i2d
 1271              	.LVL59:
 1272 0012 0BA3     		adr	r3, .L48
 1273 0014 D3E90023 		ldrd	r2, [r3]
 1274 0018 FFF7FEFF 		bl	__aeabi_dmul
 1275              	.LVL60:
 1276 001c FFF7FEFF 		bl	__aeabi_d2uiz
 1277              	.LVL61:
 1278 0020 0A4A     		ldr	r2, .L48+12
 1279 0022 52F82430 		ldr	r3, [r2, r4, lsl #2]
 1280 0026 1844     		add	r0, r0, r3
 1281 0028 42F82400 		str	r0, [r2, r4, lsl #2]
 926:Src/main.c    ****     //lfo[i] = base_tri[(lfo_phase_accumulator[i]>>10)%4096];
 927:Src/main.c    ****     lfo[i] = 255;
 1282              		.loc 1 927 0 discriminator 3
 1283 002c FF22     		movs	r2, #255
 1284 002e 084B     		ldr	r3, .L48+16
 1285 0030 1A55     		strb	r2, [r3, r4]
 924:Src/main.c    ****     lfo_phase_accumulator[i] += (uint32_t)(lfo_freq[i] * (DDS_SCALE_FACTOR/10));
 1286              		.loc 1 924 0 discriminator 3
 1287 0032 0134     		adds	r4, r4, #1
 1288              	.LVL62:
 1289              	.L45:
 924:Src/main.c    ****     lfo_phase_accumulator[i] += (uint32_t)(lfo_freq[i] * (DDS_SCALE_FACTOR/10));
 1290              		.loc 1 924 0 is_stmt 0 discriminator 1
 1291 0034 0F2C     		cmp	r4, #15
 1292 0036 E6DD     		ble	.L46
ARM GAS  /tmp/ccleW29Z.s 			page 41


 1293              	.LBE13:
 928:Src/main.c    ****   }
 929:Src/main.c    **** }
 1294              		.loc 1 929 0 is_stmt 1
 1295 0038 10BD     		pop	{r4, pc}
 1296              	.LVL63:
 1297              	.L49:
 1298 003a 00BFAFF3 		.align	3
 1298      0080
 1299              	.L48:
 1300 0040 76581B42 		.word	1109088374
 1301 0044 19E52140 		.word	1075963161
 1302 0048 00000000 		.word	.LANCHOR6
 1303 004c 00000000 		.word	.LANCHOR7
 1304 0050 00000000 		.word	.LANCHOR5
 1305              		.cfi_endproc
 1306              	.LFE142:
 1308              		.section	.text.UpdateEnvelope,"ax",%progbits
 1309              		.align	1
 1310              		.global	UpdateEnvelope
 1311              		.syntax unified
 1312              		.thumb
 1313              		.thumb_func
 1314              		.fpu fpv4-sp-d16
 1316              	UpdateEnvelope:
 1317              	.LFB143:
 930:Src/main.c    **** 
 931:Src/main.c    **** void UpdateEnvelope() {
 1318              		.loc 1 931 0
 1319              		.cfi_startproc
 1320              		@ args = 0, pretend = 0, frame = 0
 1321              		@ frame_needed = 0, uses_anonymous_args = 0
 1322 0000 70B5     		push	{r4, r5, r6, lr}
 1323              	.LCFI23:
 1324              		.cfi_def_cfa_offset 16
 1325              		.cfi_offset 4, -16
 1326              		.cfi_offset 5, -12
 1327              		.cfi_offset 6, -8
 1328              		.cfi_offset 14, -4
 1329              	.LVL64:
 1330              	.LBB14:
 932:Src/main.c    ****   for(int i = 0; i < VOICES; i++){
 1331              		.loc 1 932 0
 1332 0002 0024     		movs	r4, #0
 1333 0004 09E0     		b	.L51
 1334              	.LVL65:
 1335              	.L53:
 933:Src/main.c    ****     //if(note_on[i] == MIDI_NOTE_OFF){
 934:Src/main.c    ****     //  env_state[i] = RELEASE_MODE;
 935:Src/main.c    ****     //}
 936:Src/main.c    **** 
 937:Src/main.c    ****     switch(env_state[i]){
 938:Src/main.c    ****     case NOT_TRIGGERED:
 939:Src/main.c    ****       envelope_index[i] = 0;
 1336              		.loc 1 939 0
 1337 0006 0022     		movs	r2, #0
 1338 0008 5F4B     		ldr	r3, .L64+8
ARM GAS  /tmp/ccleW29Z.s 			page 42


 1339 000a 43F82420 		str	r2, [r3, r4, lsl #2]
 940:Src/main.c    ****       envelope[i] = 0;
 1340              		.loc 1 940 0
 1341 000e 5F4B     		ldr	r3, .L64+12
 1342 0010 03EB8403 		add	r3, r3, r4, lsl #2
 1343 0014 0022     		movs	r2, #0
 1344 0016 1A60     		str	r2, [r3]	@ float
 1345              	.L52:
 932:Src/main.c    ****   for(int i = 0; i < VOICES; i++){
 1346              		.loc 1 932 0 discriminator 2
 1347 0018 0134     		adds	r4, r4, #1
 1348              	.LVL66:
 1349              	.L51:
 932:Src/main.c    ****   for(int i = 0; i < VOICES; i++){
 1350              		.loc 1 932 0 is_stmt 0 discriminator 1
 1351 001a 0F2C     		cmp	r4, #15
 1352 001c 00F3AE80 		bgt	.L63
 937:Src/main.c    ****     case NOT_TRIGGERED:
 1353              		.loc 1 937 0 is_stmt 1
 1354 0020 5B4B     		ldr	r3, .L64+16
 1355 0022 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1356 0024 DBB2     		uxtb	r3, r3
 1357 0026 042B     		cmp	r3, #4
 1358 0028 F6D8     		bhi	.L52
 1359 002a 01A2     		adr	r2, .L54
 1360 002c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1361              		.p2align 2
 1362              	.L54:
 1363 0030 07000000 		.word	.L53+1
 1364 0034 45000000 		.word	.L55+1
 1365 0038 A3000000 		.word	.L56+1
 1366 003c 19000000 		.word	.L52+1
 1367 0040 07010000 		.word	.L57+1
 1368              		.p2align 1
 1369              	.L55:
 941:Src/main.c    ****       break;
 942:Src/main.c    ****     case ATTACK_MODE:
 943:Src/main.c    ****       //    if((UINT32_MAX - envelope_index) < DDS_SCALE_FACTOR){
 944:Src/main.c    ****       if(envelope_index[i] <= 4200000) {
 1370              		.loc 1 944 0
 1371 0044 504B     		ldr	r3, .L64+8
 1372 0046 53F82420 		ldr	r2, [r3, r4, lsl #2]
 1373 004a 524B     		ldr	r3, .L64+20
 1374 004c 9A42     		cmp	r2, r3
 1375 004e 20D8     		bhi	.L58
 945:Src/main.c    ****         envelope_index[i] += (uint32_t)(attack * DDS_SCALE_FACTOR);
 1376              		.loc 1 945 0
 1377 0050 4D4D     		ldr	r5, .L64+8
 1378 0052 55F82460 		ldr	r6, [r5, r4, lsl #2]
 1379 0056 504B     		ldr	r3, .L64+24
 1380 0058 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1381 005a FFF7FEFF 		bl	__aeabi_i2d
 1382              	.LVL67:
 1383 005e 48A3     		adr	r3, .L64
 1384 0060 D3E90023 		ldrd	r2, [r3]
 1385 0064 FFF7FEFF 		bl	__aeabi_dmul
 1386              	.LVL68:
ARM GAS  /tmp/ccleW29Z.s 			page 43


 1387 0068 FFF7FEFF 		bl	__aeabi_d2uiz
 1388              	.LVL69:
 1389 006c 3044     		add	r0, r0, r6
 1390 006e 45F82400 		str	r0, [r5, r4, lsl #2]
 946:Src/main.c    ****         envelope[i] = base_pos_saw[(envelope_index[i]>>10)%4096];
 1391              		.loc 1 946 0
 1392 0072 55F82430 		ldr	r3, [r5, r4, lsl #2]
 1393 0076 C3F38B23 		ubfx	r3, r3, #10, #12
 1394 007a 484A     		ldr	r2, .L64+28
 1395 007c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1396 007e 07EE903A 		vmov	s15, r3	@ int
 1397 0082 F8EE677A 		vcvt.f32.u32	s15, s15
 1398 0086 414B     		ldr	r3, .L64+12
 1399 0088 03EB8403 		add	r3, r3, r4, lsl #2
 1400 008c C3ED007A 		vstr.32	s15, [r3]
 1401 0090 C2E7     		b	.L52
 1402              	.L58:
 947:Src/main.c    ****       }
 948:Src/main.c    ****       else {
 949:Src/main.c    ****         // env_state++;
 950:Src/main.c    ****         envelope_index[i] = 0;
 1403              		.loc 1 950 0
 1404 0092 0022     		movs	r2, #0
 1405 0094 3C4B     		ldr	r3, .L64+8
 1406 0096 43F82420 		str	r2, [r3, r4, lsl #2]
 951:Src/main.c    ****         env_state[i] = DECAY_MODE;
 1407              		.loc 1 951 0
 1408 009a 0222     		movs	r2, #2
 1409 009c 3C4B     		ldr	r3, .L64+16
 1410 009e 1A55     		strb	r2, [r3, r4]
 1411 00a0 BAE7     		b	.L52
 1412              	.L56:
 952:Src/main.c    ****       }
 953:Src/main.c    ****       break;
 954:Src/main.c    ****     case DECAY_MODE:
 955:Src/main.c    ****       if(base_neg_saw[(envelope_index[i]>>10)%4096] >= sustain){
 1413              		.loc 1 955 0
 1414 00a2 394B     		ldr	r3, .L64+8
 1415 00a4 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1416 00a8 C3F38B23 		ubfx	r3, r3, #10, #12
 1417 00ac 3C4A     		ldr	r2, .L64+32
 1418 00ae D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1419 00b0 3C4B     		ldr	r3, .L64+36
 1420 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1421 00b4 9A42     		cmp	r2, r3
 1422 00b6 20D3     		bcc	.L59
 956:Src/main.c    ****         envelope_index[i] += (uint32_t)(decay * DDS_SCALE_FACTOR);
 1423              		.loc 1 956 0
 1424 00b8 334D     		ldr	r5, .L64+8
 1425 00ba 55F82460 		ldr	r6, [r5, r4, lsl #2]
 1426 00be 3A4B     		ldr	r3, .L64+40
 1427 00c0 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1428 00c2 FFF7FEFF 		bl	__aeabi_i2d
 1429              	.LVL70:
 1430 00c6 2EA3     		adr	r3, .L64
 1431 00c8 D3E90023 		ldrd	r2, [r3]
 1432 00cc FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/ccleW29Z.s 			page 44


 1433              	.LVL71:
 1434 00d0 FFF7FEFF 		bl	__aeabi_d2uiz
 1435              	.LVL72:
 1436 00d4 3044     		add	r0, r0, r6
 1437 00d6 45F82400 		str	r0, [r5, r4, lsl #2]
 957:Src/main.c    ****         envelope[i] = base_neg_saw[(envelope_index[i]>>10)%4096];
 1438              		.loc 1 957 0
 1439 00da 55F82430 		ldr	r3, [r5, r4, lsl #2]
 1440 00de C3F38B23 		ubfx	r3, r3, #10, #12
 1441 00e2 2F4A     		ldr	r2, .L64+32
 1442 00e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1443 00e6 07EE903A 		vmov	s15, r3	@ int
 1444 00ea F8EE677A 		vcvt.f32.u32	s15, s15
 1445 00ee 274B     		ldr	r3, .L64+12
 1446 00f0 03EB8403 		add	r3, r3, r4, lsl #2
 1447 00f4 C3ED007A 		vstr.32	s15, [r3]
 1448 00f8 8EE7     		b	.L52
 1449              	.L59:
 958:Src/main.c    ****       }
 959:Src/main.c    ****       else {
 960:Src/main.c    ****         //envelope_index[i] = 0;
 961:Src/main.c    ****         env_state[i]++;
 1450              		.loc 1 961 0
 1451 00fa 254A     		ldr	r2, .L64+16
 1452 00fc 135D     		ldrb	r3, [r2, r4]	@ zero_extendqisi2
 1453 00fe 0133     		adds	r3, r3, #1
 1454 0100 DBB2     		uxtb	r3, r3
 1455 0102 1355     		strb	r3, [r2, r4]
 1456 0104 88E7     		b	.L52
 1457              	.L57:
 962:Src/main.c    ****         //env_state[i] = RELEASE_MODE;
 963:Src/main.c    ****       }
 964:Src/main.c    ****       break;
 965:Src/main.c    ****     case SUSTAIN_MODE:
 966:Src/main.c    ****       //env_state[i]++;
 967:Src/main.c    ****       break;
 968:Src/main.c    ****     case RELEASE_MODE:
 969:Src/main.c    ****       //      if((UINT32_MAX - envelope_index) < DDS_SCALE_FACTOR){
 970:Src/main.c    ****       if(envelope_index[i] <= 4200000){
 1458              		.loc 1 970 0
 1459 0106 204B     		ldr	r3, .L64+8
 1460 0108 53F82420 		ldr	r2, [r3, r4, lsl #2]
 1461 010c 214B     		ldr	r3, .L64+20
 1462 010e 9A42     		cmp	r2, r3
 1463 0110 20D8     		bhi	.L60
 971:Src/main.c    ****         envelope_index[i] += (uint32_t)(release * DDS_SCALE_FACTOR);
 1464              		.loc 1 971 0
 1465 0112 1D4D     		ldr	r5, .L64+8
 1466 0114 55F82460 		ldr	r6, [r5, r4, lsl #2]
 1467 0118 244B     		ldr	r3, .L64+44
 1468 011a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1469 011c FFF7FEFF 		bl	__aeabi_i2d
 1470              	.LVL73:
 1471 0120 17A3     		adr	r3, .L64
 1472 0122 D3E90023 		ldrd	r2, [r3]
 1473 0126 FFF7FEFF 		bl	__aeabi_dmul
 1474              	.LVL74:
ARM GAS  /tmp/ccleW29Z.s 			page 45


 1475 012a FFF7FEFF 		bl	__aeabi_d2uiz
 1476              	.LVL75:
 1477 012e 3044     		add	r0, r0, r6
 1478 0130 45F82400 		str	r0, [r5, r4, lsl #2]
 972:Src/main.c    ****         envelope[i] = base_neg_saw[(envelope_index[i]>>10)%4096];
 1479              		.loc 1 972 0
 1480 0134 55F82430 		ldr	r3, [r5, r4, lsl #2]
 1481 0138 C3F38B23 		ubfx	r3, r3, #10, #12
 1482 013c 184A     		ldr	r2, .L64+32
 1483 013e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1484 0140 07EE903A 		vmov	s15, r3	@ int
 1485 0144 F8EE677A 		vcvt.f32.u32	s15, s15
 1486 0148 104B     		ldr	r3, .L64+12
 1487 014a 03EB8403 		add	r3, r3, r4, lsl #2
 1488 014e C3ED007A 		vstr.32	s15, [r3]
 1489 0152 61E7     		b	.L52
 1490              	.L60:
 973:Src/main.c    ****       }
 974:Src/main.c    ****       else {
 975:Src/main.c    ****         env_state[i] = NOT_TRIGGERED;
 1491              		.loc 1 975 0
 1492 0154 0023     		movs	r3, #0
 1493 0156 0E4A     		ldr	r2, .L64+16
 1494 0158 1355     		strb	r3, [r2, r4]
 976:Src/main.c    ****         note_on[i] = MIDI_NOTE_OFF;
 1495              		.loc 1 976 0
 1496 015a 8021     		movs	r1, #128
 1497 015c 144A     		ldr	r2, .L64+48
 1498 015e 1155     		strb	r1, [r2, r4]
 977:Src/main.c    ****         envelope_index[i] = 0;
 1499              		.loc 1 977 0
 1500 0160 094A     		ldr	r2, .L64+8
 1501 0162 42F82430 		str	r3, [r2, r4, lsl #2]
 978:Src/main.c    ****         envelope[i] = 0;
 1502              		.loc 1 978 0
 1503 0166 094A     		ldr	r2, .L64+12
 1504 0168 02EB8402 		add	r2, r2, r4, lsl #2
 1505 016c 0021     		movs	r1, #0
 1506 016e 1160     		str	r1, [r2]	@ float
 979:Src/main.c    ****         lfo_phase_accumulator[i] = 0;
 1507              		.loc 1 979 0
 1508 0170 104A     		ldr	r2, .L64+52
 1509 0172 42F82430 		str	r3, [r2, r4, lsl #2]
 980:Src/main.c    ****         lfo[i] = 0;
 1510              		.loc 1 980 0
 1511 0176 104A     		ldr	r2, .L64+56
 1512 0178 1355     		strb	r3, [r2, r4]
 1513 017a 4DE7     		b	.L52
 1514              	.L63:
 1515              	.LBE14:
 981:Src/main.c    ****       }
 982:Src/main.c    ****       break;
 983:Src/main.c    ****     }
 984:Src/main.c    ****   }
 985:Src/main.c    **** }
 1516              		.loc 1 985 0
 1517 017c 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccleW29Z.s 			page 46


 1518              	.LVL76:
 1519              	.L65:
 1520 017e 00BF     		.align	3
 1521              	.L64:
 1522 0180 942EA292 		.word	2460102292
 1523 0184 5F5E5640 		.word	1079402079
 1524 0188 00000000 		.word	.LANCHOR8
 1525 018c 00000000 		.word	.LANCHOR4
 1526 0190 00000000 		.word	env_state
 1527 0194 40164000 		.word	4200000
 1528 0198 00000000 		.word	.LANCHOR9
 1529 019c 00000000 		.word	base_pos_saw
 1530 01a0 00000000 		.word	base_neg_saw
 1531 01a4 00000000 		.word	.LANCHOR10
 1532 01a8 00000000 		.word	.LANCHOR11
 1533 01ac 00000000 		.word	.LANCHOR12
 1534 01b0 00000000 		.word	.LANCHOR13
 1535 01b4 00000000 		.word	.LANCHOR7
 1536 01b8 00000000 		.word	.LANCHOR5
 1537              		.cfi_endproc
 1538              	.LFE143:
 1540              		.section	.text.Update_R2R_DAC,"ax",%progbits
 1541              		.align	1
 1542              		.global	Update_R2R_DAC
 1543              		.syntax unified
 1544              		.thumb
 1545              		.thumb_func
 1546              		.fpu fpv4-sp-d16
 1548              	Update_R2R_DAC:
 1549              	.LFB144:
 986:Src/main.c    **** 
 987:Src/main.c    **** void Update_R2R_DAC() {
 1550              		.loc 1 987 0
 1551              		.cfi_startproc
 1552              		@ args = 0, pretend = 0, frame = 0
 1553              		@ frame_needed = 0, uses_anonymous_args = 0
 1554 0000 08B5     		push	{r3, lr}
 1555              	.LCFI24:
 1556              		.cfi_def_cfa_offset 8
 1557              		.cfi_offset 3, -8
 1558              		.cfi_offset 14, -4
 988:Src/main.c    ****   ((output_val>>0)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_7, GPIO_PIN_SET) : HAL_GPIO_Write
 1559              		.loc 1 988 0
 1560 0002 474B     		ldr	r3, .L85
 1561 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1562 0006 13F0010F 		tst	r3, #1
 1563 000a 51D0     		beq	.L67
 1564              		.loc 1 988 0 is_stmt 0 discriminator 1
 1565 000c 0122     		movs	r2, #1
 1566 000e 8021     		movs	r1, #128
 1567 0010 4448     		ldr	r0, .L85+4
 1568 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1569              	.LVL77:
 1570              	.L68:
 989:Src/main.c    ****   ((output_val>>1)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_8, GPIO_PIN_SET) : HAL_GPIO_Write
 1571              		.loc 1 989 0 is_stmt 1
 1572 0016 424B     		ldr	r3, .L85
ARM GAS  /tmp/ccleW29Z.s 			page 47


 1573 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1574 001a 13F0020F 		tst	r3, #2
 1575 001e 4DD0     		beq	.L69
 1576              		.loc 1 989 0 is_stmt 0 discriminator 1
 1577 0020 0122     		movs	r2, #1
 1578 0022 4FF48071 		mov	r1, #256
 1579 0026 3F48     		ldr	r0, .L85+4
 1580 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1581              	.LVL78:
 1582              	.L70:
 990:Src/main.c    ****   ((output_val>>2)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_9, GPIO_PIN_SET) : HAL_GPIO_Write
 1583              		.loc 1 990 0 is_stmt 1
 1584 002c 3C4B     		ldr	r3, .L85
 1585 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1586 0030 13F0040F 		tst	r3, #4
 1587 0034 49D0     		beq	.L71
 1588              		.loc 1 990 0 is_stmt 0 discriminator 1
 1589 0036 0122     		movs	r2, #1
 1590 0038 4FF40071 		mov	r1, #512
 1591 003c 3948     		ldr	r0, .L85+4
 1592 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1593              	.LVL79:
 1594              	.L72:
 991:Src/main.c    ****   ((output_val>>3)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_10, GPIO_PIN_SET) : HAL_GPIO_Writ
 1595              		.loc 1 991 0 is_stmt 1
 1596 0042 374B     		ldr	r3, .L85
 1597 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1598 0046 13F0080F 		tst	r3, #8
 1599 004a 45D0     		beq	.L73
 1600              		.loc 1 991 0 is_stmt 0 discriminator 1
 1601 004c 0122     		movs	r2, #1
 1602 004e 4FF48061 		mov	r1, #1024
 1603 0052 3448     		ldr	r0, .L85+4
 1604 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1605              	.LVL80:
 1606              	.L74:
 992:Src/main.c    ****   ((output_val>>4)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET) : HAL_GPIO_Writ
 1607              		.loc 1 992 0 is_stmt 1
 1608 0058 314B     		ldr	r3, .L85
 1609 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1610 005c 13F0100F 		tst	r3, #16
 1611 0060 41D0     		beq	.L75
 1612              		.loc 1 992 0 is_stmt 0 discriminator 1
 1613 0062 0122     		movs	r2, #1
 1614 0064 4FF40061 		mov	r1, #2048
 1615 0068 2E48     		ldr	r0, .L85+4
 1616 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1617              	.LVL81:
 1618              	.L76:
 993:Src/main.c    ****   ((output_val>>5)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET) : HAL_GPIO_Writ
 1619              		.loc 1 993 0 is_stmt 1
 1620 006e 2C4B     		ldr	r3, .L85
 1621 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1622 0072 13F0200F 		tst	r3, #32
 1623 0076 3DD0     		beq	.L77
 1624              		.loc 1 993 0 is_stmt 0 discriminator 1
 1625 0078 0122     		movs	r2, #1
ARM GAS  /tmp/ccleW29Z.s 			page 48


 1626 007a 4FF48051 		mov	r1, #4096
 1627 007e 2948     		ldr	r0, .L85+4
 1628 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1629              	.LVL82:
 1630              	.L78:
 994:Src/main.c    ****   ((output_val>>6)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_13, GPIO_PIN_SET) : HAL_GPIO_Writ
 1631              		.loc 1 994 0 is_stmt 1
 1632 0084 264B     		ldr	r3, .L85
 1633 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1634 0088 13F0400F 		tst	r3, #64
 1635 008c 39D0     		beq	.L79
 1636              		.loc 1 994 0 is_stmt 0 discriminator 1
 1637 008e 0122     		movs	r2, #1
 1638 0090 4FF40051 		mov	r1, #8192
 1639 0094 2348     		ldr	r0, .L85+4
 1640 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1641              	.LVL83:
 1642              	.L80:
 995:Src/main.c    ****   ((output_val>>7)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_14, GPIO_PIN_SET) : HAL_GPIO_Writ
 1643              		.loc 1 995 0 is_stmt 1
 1644 009a 214B     		ldr	r3, .L85
 1645 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1646 009e DB09     		lsrs	r3, r3, #7
 1647 00a0 36D1     		bne	.L84
 1648              		.loc 1 995 0 is_stmt 0 discriminator 2
 1649 00a2 0022     		movs	r2, #0
 1650 00a4 4FF48041 		mov	r1, #16384
 1651 00a8 1E48     		ldr	r0, .L85+4
 1652 00aa FFF7FEFF 		bl	HAL_GPIO_WritePin
 1653              	.LVL84:
 1654 00ae 08BD     		pop	{r3, pc}
 1655              	.L67:
 988:Src/main.c    ****   ((output_val>>1)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_8, GPIO_PIN_SET) : HAL_GPIO_Write
 1656              		.loc 1 988 0 is_stmt 1 discriminator 2
 1657 00b0 0022     		movs	r2, #0
 1658 00b2 8021     		movs	r1, #128
 1659 00b4 1B48     		ldr	r0, .L85+4
 1660 00b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1661              	.LVL85:
 1662 00ba ACE7     		b	.L68
 1663              	.L69:
 989:Src/main.c    ****   ((output_val>>2)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_9, GPIO_PIN_SET) : HAL_GPIO_Write
 1664              		.loc 1 989 0 discriminator 2
 1665 00bc 0022     		movs	r2, #0
 1666 00be 4FF48071 		mov	r1, #256
 1667 00c2 1848     		ldr	r0, .L85+4
 1668 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1669              	.LVL86:
 1670 00c8 B0E7     		b	.L70
 1671              	.L71:
 990:Src/main.c    ****   ((output_val>>3)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_10, GPIO_PIN_SET) : HAL_GPIO_Writ
 1672              		.loc 1 990 0 discriminator 2
 1673 00ca 0022     		movs	r2, #0
 1674 00cc 4FF40071 		mov	r1, #512
 1675 00d0 1448     		ldr	r0, .L85+4
 1676 00d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1677              	.LVL87:
ARM GAS  /tmp/ccleW29Z.s 			page 49


 1678 00d6 B4E7     		b	.L72
 1679              	.L73:
 991:Src/main.c    ****   ((output_val>>4)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET) : HAL_GPIO_Writ
 1680              		.loc 1 991 0 discriminator 2
 1681 00d8 0022     		movs	r2, #0
 1682 00da 4FF48061 		mov	r1, #1024
 1683 00de 1148     		ldr	r0, .L85+4
 1684 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1685              	.LVL88:
 1686 00e4 B8E7     		b	.L74
 1687              	.L75:
 992:Src/main.c    ****   ((output_val>>5)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET) : HAL_GPIO_Writ
 1688              		.loc 1 992 0 discriminator 2
 1689 00e6 0022     		movs	r2, #0
 1690 00e8 4FF40061 		mov	r1, #2048
 1691 00ec 0D48     		ldr	r0, .L85+4
 1692 00ee FFF7FEFF 		bl	HAL_GPIO_WritePin
 1693              	.LVL89:
 1694 00f2 BCE7     		b	.L76
 1695              	.L77:
 993:Src/main.c    ****   ((output_val>>6)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_13, GPIO_PIN_SET) : HAL_GPIO_Writ
 1696              		.loc 1 993 0 discriminator 2
 1697 00f4 0022     		movs	r2, #0
 1698 00f6 4FF48051 		mov	r1, #4096
 1699 00fa 0A48     		ldr	r0, .L85+4
 1700 00fc FFF7FEFF 		bl	HAL_GPIO_WritePin
 1701              	.LVL90:
 1702 0100 C0E7     		b	.L78
 1703              	.L79:
 994:Src/main.c    ****   ((output_val>>7)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_14, GPIO_PIN_SET) : HAL_GPIO_Writ
 1704              		.loc 1 994 0 discriminator 2
 1705 0102 0022     		movs	r2, #0
 1706 0104 4FF40051 		mov	r1, #8192
 1707 0108 0648     		ldr	r0, .L85+4
 1708 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1709              	.LVL91:
 1710 010e C4E7     		b	.L80
 1711              	.L84:
 1712              		.loc 1 995 0 discriminator 1
 1713 0110 0122     		movs	r2, #1
 1714 0112 4FF48041 		mov	r1, #16384
 1715 0116 0348     		ldr	r0, .L85+4
 1716 0118 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1717              	.LVL92:
 1718 011c 08BD     		pop	{r3, pc}
 1719              	.L86:
 1720 011e 00BF     		.align	2
 1721              	.L85:
 1722 0120 00000000 		.word	.LANCHOR1
 1723 0124 00100240 		.word	1073876992
 1724              		.cfi_endproc
 1725              	.LFE144:
 1727              		.section	.text.enqueue,"ax",%progbits
 1728              		.align	1
 1729              		.global	enqueue
 1730              		.syntax unified
 1731              		.thumb
ARM GAS  /tmp/ccleW29Z.s 			page 50


 1732              		.thumb_func
 1733              		.fpu fpv4-sp-d16
 1735              	enqueue:
 1736              	.LFB145:
 996:Src/main.c    **** }
 997:Src/main.c    **** 
 998:Src/main.c    **** void enqueue (struct midi_msg midi_msg) {
 1737              		.loc 1 998 0
 1738              		.cfi_startproc
 1739              		@ args = 0, pretend = 0, frame = 8
 1740              		@ frame_needed = 0, uses_anonymous_args = 0
 1741              		@ link register save eliminated.
 1742 0000 82B0     		sub	sp, sp, #8
 1743              	.LCFI25:
 1744              		.cfi_def_cfa_offset 8
 999:Src/main.c    ****   midi_msg_queue.queue[midi_msg_queue.head++] = midi_msg;
 1745              		.loc 1 999 0
 1746 0002 054B     		ldr	r3, .L89
 1747 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1748 0006 511C     		adds	r1, r2, #1
 1749 0008 1970     		strb	r1, [r3]
 1750 000a 03EB8203 		add	r3, r3, r2, lsl #2
 1751 000e C3F80200 		str	r0, [r3, #2]	@ unaligned
1000:Src/main.c    **** }
 1752              		.loc 1 1000 0
 1753 0012 02B0     		add	sp, sp, #8
 1754              	.LCFI26:
 1755              		.cfi_def_cfa_offset 0
 1756              		@ sp needed
 1757 0014 7047     		bx	lr
 1758              	.L90:
 1759 0016 00BF     		.align	2
 1760              	.L89:
 1761 0018 00000000 		.word	midi_msg_queue
 1762              		.cfi_endproc
 1763              	.LFE145:
 1765              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 1766              		.align	1
 1767              		.global	HAL_SPI_TxRxCpltCallback
 1768              		.syntax unified
 1769              		.thumb
 1770              		.thumb_func
 1771              		.fpu fpv4-sp-d16
 1773              	HAL_SPI_TxRxCpltCallback:
 1774              	.LFB139:
 769:Src/main.c    ****   //  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, GPIO_PIN_SET);
 1775              		.loc 1 769 0
 1776              		.cfi_startproc
 1777              		@ args = 0, pretend = 0, frame = 8
 1778              		@ frame_needed = 0, uses_anonymous_args = 0
 1779              	.LVL93:
 1780 0000 10B5     		push	{r4, lr}
 1781              	.LCFI27:
 1782              		.cfi_def_cfa_offset 8
 1783              		.cfi_offset 4, -8
 1784              		.cfi_offset 14, -4
 1785 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccleW29Z.s 			page 51


 1786              	.LCFI28:
 1787              		.cfi_def_cfa_offset 16
 825:Src/main.c    **** 
 1788              		.loc 1 825 0
 1789 0004 0122     		movs	r2, #1
 1790 0006 434B     		ldr	r3, .L104
 1791 0008 1A70     		strb	r2, [r3]
 827:Src/main.c    ****     struct midi_msg new_midi_note_msg = {
 1792              		.loc 1 827 0
 1793 000a 434B     		ldr	r3, .L104+4
 1794 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1795 000e 23BB     		cbnz	r3, .L99
 837:Src/main.c    ****     struct midi_msg new_midi_note_msg = {
 1796              		.loc 1 837 0
 1797 0010 424B     		ldr	r3, .L104+8
 1798 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1799 0014 002B     		cmp	r3, #0
 1800 0016 34D1     		bne	.L100
 847:Src/main.c    ****     struct midi_msg new_cc = {
 1801              		.loc 1 847 0
 1802 0018 414B     		ldr	r3, .L104+12
 1803 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1804 001c 002B     		cmp	r3, #0
 1805 001e 42D1     		bne	.L101
 857:Src/main.c    ****     struct midi_msg new_cc = {
 1806              		.loc 1 857 0
 1807 0020 404B     		ldr	r3, .L104+16
 1808 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1809 0024 002B     		cmp	r3, #0
 1810 0026 50D1     		bne	.L102
 867:Src/main.c    ****     struct midi_msg new_cc = {
 1811              		.loc 1 867 0
 1812 0028 3F4B     		ldr	r3, .L104+20
 1813 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1814 002c 002B     		cmp	r3, #0
 1815 002e 5ED1     		bne	.L103
 877:Src/main.c    ****     struct midi_msg new_cc = {
 1816              		.loc 1 877 0
 1817 0030 3E4B     		ldr	r3, .L104+24
 1818 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1819 0034 1BB3     		cbz	r3, .L91
 1820              	.LBB15:
 878:Src/main.c    ****       RELEASE_CC,
 1821              		.loc 1 878 0
 1822 0036 1723     		movs	r3, #23
 1823 0038 8DF80430 		strb	r3, [sp, #4]
 880:Src/main.c    ****       0,
 1824              		.loc 1 880 0
 1825 003c 3C4B     		ldr	r3, .L104+28
 1826 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 878:Src/main.c    ****       RELEASE_CC,
 1827              		.loc 1 878 0
 1828 0040 8DF80530 		strb	r3, [sp, #5]
 1829 0044 0024     		movs	r4, #0
 1830 0046 8DF80640 		strb	r4, [sp, #6]
 1831 004a 8DF80740 		strb	r4, [sp, #7]
 884:Src/main.c    ****     release_cc_flag = 0;
ARM GAS  /tmp/ccleW29Z.s 			page 52


 1832              		.loc 1 884 0
 1833 004e 0198     		ldr	r0, [sp, #4]
 1834              	.LVL94:
 1835 0050 FFF7FEFF 		bl	enqueue
 1836              	.LVL95:
 885:Src/main.c    ****   }
 1837              		.loc 1 885 0
 1838 0054 354B     		ldr	r3, .L104+24
 1839 0056 1C70     		strb	r4, [r3]
 1840              	.LBE15:
 887:Src/main.c    **** 
 1841              		.loc 1 887 0
 1842 0058 11E0     		b	.L91
 1843              	.LVL96:
 1844              	.L99:
 1845              	.LBB16:
 828:Src/main.c    ****       MIDI_NOTE_ON,
 1846              		.loc 1 828 0
 1847 005a 9023     		movs	r3, #144
 1848 005c 8DF80430 		strb	r3, [sp, #4]
 830:Src/main.c    ****       127,
 1849              		.loc 1 830 0
 1850 0060 334B     		ldr	r3, .L104+28
 1851 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 828:Src/main.c    ****       MIDI_NOTE_ON,
 1852              		.loc 1 828 0
 1853 0064 8DF80530 		strb	r3, [sp, #5]
 1854 0068 7F23     		movs	r3, #127
 1855 006a 8DF80630 		strb	r3, [sp, #6]
 1856 006e 0024     		movs	r4, #0
 1857 0070 8DF80740 		strb	r4, [sp, #7]
 834:Src/main.c    ****     note_on_flag = 0;
 1858              		.loc 1 834 0
 1859 0074 0198     		ldr	r0, [sp, #4]
 1860              	.LVL97:
 1861 0076 FFF7FEFF 		bl	enqueue
 1862              	.LVL98:
 835:Src/main.c    ****   }
 1863              		.loc 1 835 0
 1864 007a 274B     		ldr	r3, .L104+4
 1865 007c 1C70     		strb	r4, [r3]
 1866              	.L91:
 1867              	.LBE16:
 887:Src/main.c    **** 
 1868              		.loc 1 887 0
 1869 007e 02B0     		add	sp, sp, #8
 1870              	.LCFI29:
 1871              		.cfi_remember_state
 1872              		.cfi_def_cfa_offset 8
 1873              		@ sp needed
 1874 0080 10BD     		pop	{r4, pc}
 1875              	.LVL99:
 1876              	.L100:
 1877              	.LCFI30:
 1878              		.cfi_restore_state
 1879              	.LBB17:
 838:Src/main.c    ****       MIDI_NOTE_OFF,
ARM GAS  /tmp/ccleW29Z.s 			page 53


 1880              		.loc 1 838 0
 1881 0082 8023     		movs	r3, #128
 1882 0084 8DF80430 		strb	r3, [sp, #4]
 840:Src/main.c    ****       0,
 1883              		.loc 1 840 0
 1884 0088 294B     		ldr	r3, .L104+28
 1885 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 838:Src/main.c    ****       MIDI_NOTE_OFF,
 1886              		.loc 1 838 0
 1887 008c 8DF80530 		strb	r3, [sp, #5]
 1888 0090 0024     		movs	r4, #0
 1889 0092 8DF80640 		strb	r4, [sp, #6]
 1890 0096 8DF80740 		strb	r4, [sp, #7]
 844:Src/main.c    ****     note_off_flag = 0;
 1891              		.loc 1 844 0
 1892 009a 0198     		ldr	r0, [sp, #4]
 1893              	.LVL100:
 1894 009c FFF7FEFF 		bl	enqueue
 1895              	.LVL101:
 845:Src/main.c    ****   }
 1896              		.loc 1 845 0
 1897 00a0 1E4B     		ldr	r3, .L104+8
 1898 00a2 1C70     		strb	r4, [r3]
 1899              	.LBE17:
 1900 00a4 EBE7     		b	.L91
 1901              	.LVL102:
 1902              	.L101:
 1903              	.LBB18:
 848:Src/main.c    ****       ATTACK_CC,
 1904              		.loc 1 848 0
 1905 00a6 1423     		movs	r3, #20
 1906 00a8 8DF80430 		strb	r3, [sp, #4]
 850:Src/main.c    ****       0,
 1907              		.loc 1 850 0
 1908 00ac 204B     		ldr	r3, .L104+28
 1909 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 848:Src/main.c    ****       ATTACK_CC,
 1910              		.loc 1 848 0
 1911 00b0 8DF80530 		strb	r3, [sp, #5]
 1912 00b4 0024     		movs	r4, #0
 1913 00b6 8DF80640 		strb	r4, [sp, #6]
 1914 00ba 8DF80740 		strb	r4, [sp, #7]
 854:Src/main.c    ****     attack_cc_flag = 0;
 1915              		.loc 1 854 0
 1916 00be 0198     		ldr	r0, [sp, #4]
 1917              	.LVL103:
 1918 00c0 FFF7FEFF 		bl	enqueue
 1919              	.LVL104:
 855:Src/main.c    ****   }
 1920              		.loc 1 855 0
 1921 00c4 164B     		ldr	r3, .L104+12
 1922 00c6 1C70     		strb	r4, [r3]
 1923              	.LBE18:
 1924 00c8 D9E7     		b	.L91
 1925              	.LVL105:
 1926              	.L102:
 1927              	.LBB19:
ARM GAS  /tmp/ccleW29Z.s 			page 54


 858:Src/main.c    ****       DECAY_CC,
 1928              		.loc 1 858 0
 1929 00ca 1523     		movs	r3, #21
 1930 00cc 8DF80430 		strb	r3, [sp, #4]
 860:Src/main.c    ****       0,
 1931              		.loc 1 860 0
 1932 00d0 174B     		ldr	r3, .L104+28
 1933 00d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 858:Src/main.c    ****       DECAY_CC,
 1934              		.loc 1 858 0
 1935 00d4 8DF80530 		strb	r3, [sp, #5]
 1936 00d8 0024     		movs	r4, #0
 1937 00da 8DF80640 		strb	r4, [sp, #6]
 1938 00de 8DF80740 		strb	r4, [sp, #7]
 864:Src/main.c    ****     decay_cc_flag = 0;
 1939              		.loc 1 864 0
 1940 00e2 0198     		ldr	r0, [sp, #4]
 1941              	.LVL106:
 1942 00e4 FFF7FEFF 		bl	enqueue
 1943              	.LVL107:
 865:Src/main.c    ****   }
 1944              		.loc 1 865 0
 1945 00e8 0E4B     		ldr	r3, .L104+16
 1946 00ea 1C70     		strb	r4, [r3]
 1947              	.LBE19:
 1948 00ec C7E7     		b	.L91
 1949              	.LVL108:
 1950              	.L103:
 1951              	.LBB20:
 868:Src/main.c    ****       SUSTAIN_CC,
 1952              		.loc 1 868 0
 1953 00ee 1623     		movs	r3, #22
 1954 00f0 8DF80430 		strb	r3, [sp, #4]
 870:Src/main.c    ****       0,
 1955              		.loc 1 870 0
 1956 00f4 0E4B     		ldr	r3, .L104+28
 1957 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 868:Src/main.c    ****       SUSTAIN_CC,
 1958              		.loc 1 868 0
 1959 00f8 8DF80530 		strb	r3, [sp, #5]
 1960 00fc 0024     		movs	r4, #0
 1961 00fe 8DF80640 		strb	r4, [sp, #6]
 1962 0102 8DF80740 		strb	r4, [sp, #7]
 874:Src/main.c    ****     sustain_cc_flag = 0;
 1963              		.loc 1 874 0
 1964 0106 0198     		ldr	r0, [sp, #4]
 1965              	.LVL109:
 1966 0108 FFF7FEFF 		bl	enqueue
 1967              	.LVL110:
 875:Src/main.c    ****   }
 1968              		.loc 1 875 0
 1969 010c 064B     		ldr	r3, .L104+20
 1970 010e 1C70     		strb	r4, [r3]
 1971              	.LBE20:
 1972 0110 B5E7     		b	.L91
 1973              	.L105:
 1974 0112 00BF     		.align	2
ARM GAS  /tmp/ccleW29Z.s 			page 55


 1975              	.L104:
 1976 0114 00000000 		.word	.LANCHOR14
 1977 0118 00000000 		.word	.LANCHOR15
 1978 011c 00000000 		.word	.LANCHOR16
 1979 0120 00000000 		.word	.LANCHOR17
 1980 0124 00000000 		.word	.LANCHOR18
 1981 0128 00000000 		.word	.LANCHOR19
 1982 012c 00000000 		.word	.LANCHOR20
 1983 0130 00000000 		.word	spi_rx_buffer
 1984              		.cfi_endproc
 1985              	.LFE139:
 1987              		.section	.text.dequeue,"ax",%progbits
 1988              		.align	1
 1989              		.global	dequeue
 1990              		.syntax unified
 1991              		.thumb
 1992              		.thumb_func
 1993              		.fpu fpv4-sp-d16
 1995              	dequeue:
 1996              	.LFB146:
1001:Src/main.c    **** 
1002:Src/main.c    **** struct midi_msg dequeue(void) {
 1997              		.loc 1 1002 0
 1998              		.cfi_startproc
 1999              		@ args = 0, pretend = 0, frame = 8
 2000              		@ frame_needed = 0, uses_anonymous_args = 0
 2001              		@ link register save eliminated.
 2002 0000 82B0     		sub	sp, sp, #8
 2003              	.LCFI31:
 2004              		.cfi_def_cfa_offset 8
1003:Src/main.c    ****   return midi_msg_queue.queue[midi_msg_queue.tail++];
 2005              		.loc 1 1003 0
 2006 0002 0D4B     		ldr	r3, .L108
 2007 0004 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2008 0006 511C     		adds	r1, r2, #1
 2009 0008 5970     		strb	r1, [r3, #1]
 2010 000a 03EB8203 		add	r3, r3, r2, lsl #2
 2011 000e D3F80200 		ldr	r0, [r3, #2]	@ unaligned
 2012 0012 0023     		movs	r3, #0
 2013 0014 C2B2     		uxtb	r2, r0
 2014 0016 62F30703 		bfi	r3, r2, #0, #8
 2015 001a C0F30722 		ubfx	r2, r0, #8, #8
 2016 001e 62F30F23 		bfi	r3, r2, #8, #8
 2017 0022 C0F30742 		ubfx	r2, r0, #16, #8
 2018 0026 62F31743 		bfi	r3, r2, #16, #8
 2019 002a 000E     		lsrs	r0, r0, #24
 2020 002c 60F31F63 		bfi	r3, r0, #24, #8
1004:Src/main.c    **** }
 2021              		.loc 1 1004 0
 2022 0030 1846     		mov	r0, r3
 2023 0032 02B0     		add	sp, sp, #8
 2024              	.LCFI32:
 2025              		.cfi_def_cfa_offset 0
 2026              		@ sp needed
 2027 0034 7047     		bx	lr
 2028              	.L109:
 2029 0036 00BF     		.align	2
ARM GAS  /tmp/ccleW29Z.s 			page 56


 2030              	.L108:
 2031 0038 00000000 		.word	midi_msg_queue
 2032              		.cfi_endproc
 2033              	.LFE146:
 2035              		.section	.text.main,"ax",%progbits
 2036              		.align	1
 2037              		.global	main
 2038              		.syntax unified
 2039              		.thumb
 2040              		.thumb_func
 2041              		.fpu fpv4-sp-d16
 2043              	main:
 2044              	.LFB130:
 133:Src/main.c    ****   /* USER CODE BEGIN 1 */
 2045              		.loc 1 133 0
 2046              		.cfi_startproc
 2047              		@ args = 0, pretend = 0, frame = 24
 2048              		@ frame_needed = 0, uses_anonymous_args = 0
 2049 0000 10B5     		push	{r4, lr}
 2050              	.LCFI33:
 2051              		.cfi_def_cfa_offset 8
 2052              		.cfi_offset 4, -8
 2053              		.cfi_offset 14, -4
 2054 0002 86B0     		sub	sp, sp, #24
 2055              	.LCFI34:
 2056              		.cfi_def_cfa_offset 32
 141:Src/main.c    **** 
 2057              		.loc 1 141 0
 2058 0004 FFF7FEFF 		bl	HAL_Init
 2059              	.LVL111:
 148:Src/main.c    **** 
 2060              		.loc 1 148 0
 2061 0008 FFF7FEFF 		bl	SystemClock_Config
 2062              	.LVL112:
 155:Src/main.c    ****   MX_SPI5_Init();
 2063              		.loc 1 155 0
 2064 000c FFF7FEFF 		bl	MX_GPIO_Init
 2065              	.LVL113:
 156:Src/main.c    ****   MX_USART1_UART_Init();
 2066              		.loc 1 156 0
 2067 0010 FFF7FEFF 		bl	MX_SPI5_Init
 2068              	.LVL114:
 157:Src/main.c    ****   MX_DAC_Init();
 2069              		.loc 1 157 0
 2070 0014 FFF7FEFF 		bl	MX_USART1_UART_Init
 2071              	.LVL115:
 158:Src/main.c    ****   MX_TIM6_Init();
 2072              		.loc 1 158 0
 2073 0018 FFF7FEFF 		bl	MX_DAC_Init
 2074              	.LVL116:
 159:Src/main.c    ****   MX_TIM7_Init();
 2075              		.loc 1 159 0
 2076 001c FFF7FEFF 		bl	MX_TIM6_Init
 2077              	.LVL117:
 160:Src/main.c    ****   /* USER CODE BEGIN 2 */
 2078              		.loc 1 160 0
 2079 0020 FFF7FEFF 		bl	MX_TIM7_Init
ARM GAS  /tmp/ccleW29Z.s 			page 57


 2080              	.LVL118:
 162:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim6);
 2081              		.loc 1 162 0
 2082 0024 FFF7FEFF 		bl	init_wavetable
 2083              	.LVL119:
 163:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim7);
 2084              		.loc 1 163 0
 2085 0028 5648     		ldr	r0, .L137
 2086 002a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 2087              	.LVL120:
 164:Src/main.c    ****   HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 2088              		.loc 1 164 0
 2089 002e 5648     		ldr	r0, .L137+4
 2090 0030 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 2091              	.LVL121:
 165:Src/main.c    **** 
 2092              		.loc 1 165 0
 2093 0034 1021     		movs	r1, #16
 2094 0036 5548     		ldr	r0, .L137+8
 2095 0038 FFF7FEFF 		bl	HAL_DAC_Start
 2096              	.LVL122:
 2097              	.LBB21:
 167:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 2098              		.loc 1 167 0
 2099 003c 0023     		movs	r3, #0
 2100 003e 0CE0     		b	.L111
 2101              	.LVL123:
 2102              	.L112:
 168:Src/main.c    ****     note_on[i] = MIDI_NOTE_OFF;
 2103              		.loc 1 168 0 discriminator 3
 2104 0040 0022     		movs	r2, #0
 2105 0042 5349     		ldr	r1, .L137+12
 2106 0044 CA54     		strb	r2, [r1, r3]
 169:Src/main.c    ****     note_freq[i] = 0;
 2107              		.loc 1 169 0 discriminator 3
 2108 0046 8020     		movs	r0, #128
 2109 0048 5249     		ldr	r1, .L137+16
 2110 004a C854     		strb	r0, [r1, r3]
 170:Src/main.c    ****     lfo_freq[i] = 20;
 2111              		.loc 1 170 0 discriminator 3
 2112 004c 5249     		ldr	r1, .L137+20
 2113 004e CA54     		strb	r2, [r1, r3]
 171:Src/main.c    ****   }
 2114              		.loc 1 171 0 discriminator 3
 2115 0050 1421     		movs	r1, #20
 2116 0052 524A     		ldr	r2, .L137+24
 2117 0054 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 167:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 2118              		.loc 1 167 0 discriminator 3
 2119 0058 0133     		adds	r3, r3, #1
 2120              	.LVL124:
 2121              	.L111:
 167:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 2122              		.loc 1 167 0 is_stmt 0 discriminator 1
 2123 005a 0F2B     		cmp	r3, #15
 2124 005c F0DD     		ble	.L112
 2125              	.LBE21:
ARM GAS  /tmp/ccleW29Z.s 			page 58


 193:Src/main.c    ****   HAL_UART_Transmit(&huart1, init_msg, 20, 50);
 2126              		.loc 1 193 0 is_stmt 1
 2127 005e 504B     		ldr	r3, .L137+28
 2128              	.LVL125:
 2129 0060 01AC     		add	r4, sp, #4
 2130 0062 0FCB     		ldm	r3, {r0, r1, r2, r3}
 2131 0064 07C4     		stmia	r4!, {r0, r1, r2}
 2132 0066 2370     		strb	r3, [r4]
 2133 0068 0023     		movs	r3, #0
 2134 006a CDF81130 		str	r3, [sp, #17]	@ unaligned
 2135 006e 0593     		str	r3, [sp, #20]	@ unaligned
 194:Src/main.c    **** 
 2136              		.loc 1 194 0
 2137 0070 3223     		movs	r3, #50
 2138 0072 1422     		movs	r2, #20
 2139 0074 01A9     		add	r1, sp, #4
 2140 0076 4B48     		ldr	r0, .L137+32
 2141 0078 FFF7FEFF 		bl	HAL_UART_Transmit
 2142              	.LVL126:
 2143 007c 15E0     		b	.L129
 2144              	.L135:
 211:Src/main.c    ****       case MIDI_NOTE_ON:
 2145              		.loc 1 211 0
 2146 007e 142B     		cmp	r3, #20
 2147 0080 3AD0     		beq	.L118
 2148 0082 152B     		cmp	r3, #21
 2149 0084 06D1     		bne	.L115
 222:Src/main.c    ****         break;
 2150              		.loc 1 222 0
 2151 0086 0122     		movs	r2, #1
 2152 0088 474B     		ldr	r3, .L137+36
 2153 008a 1A70     		strb	r2, [r3]
 223:Src/main.c    ****       case SUSTAIN_CC:
 2154              		.loc 1 223 0
 2155 008c 02E0     		b	.L115
 2156              	.L121:
 213:Src/main.c    ****         break;
 2157              		.loc 1 213 0
 2158 008e 0122     		movs	r2, #1
 2159 0090 464B     		ldr	r3, .L137+40
 2160 0092 1A70     		strb	r2, [r3]
 2161              	.L115:
 234:Src/main.c    ****       case MIDI_NOTE_ON:
 2162              		.loc 1 234 0
 2163 0094 464B     		ldr	r3, .L137+44
 2164 0096 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2165 0098 DBB2     		uxtb	r3, r3
 2166 009a 802B     		cmp	r3, #128
 2167 009c 5ED0     		beq	.L131
 2168 009e 902B     		cmp	r3, #144
 2169 00a0 3ED0     		beq	.L132
 2170              	.L114:
 259:Src/main.c    ****       //      __disable_irq();
 2171              		.loc 1 259 0
 2172 00a2 444B     		ldr	r3, .L137+48
 2173 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2174 00a6 002B     		cmp	r3, #0
ARM GAS  /tmp/ccleW29Z.s 			page 59


 2175 00a8 5AD1     		bne	.L134
 2176              	.L129:
 202:Src/main.c    **** 
 2177              		.loc 1 202 0
 2178 00aa 4349     		ldr	r1, .L137+52
 2179 00ac 4348     		ldr	r0, .L137+56
 2180 00ae FFF7FEFF 		bl	Receive_MIDI
 2181              	.LVL127:
 204:Src/main.c    ****       current_midi_note_msg = dequeue();
 2182              		.loc 1 204 0
 2183 00b2 434B     		ldr	r3, .L137+60
 2184 00b4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2185 00b6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2186 00b8 9A42     		cmp	r2, r3
 2187 00ba 03D0     		beq	.L113
 205:Src/main.c    ****     }
 2188              		.loc 1 205 0
 2189 00bc FFF7FEFF 		bl	dequeue
 2190              	.LVL128:
 2191 00c0 3B4B     		ldr	r3, .L137+44
 2192 00c2 1860     		str	r0, [r3]
 2193              	.L113:
 208:Src/main.c    ****       MIDI_flag = 0;
 2194              		.loc 1 208 0
 2195 00c4 3F4B     		ldr	r3, .L137+64
 2196 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2197 00c8 002B     		cmp	r3, #0
 2198 00ca EAD0     		beq	.L114
 209:Src/main.c    **** 
 2199              		.loc 1 209 0
 2200 00cc 0022     		movs	r2, #0
 2201 00ce 3D4B     		ldr	r3, .L137+64
 2202 00d0 1A70     		strb	r2, [r3]
 211:Src/main.c    ****       case MIDI_NOTE_ON:
 2203              		.loc 1 211 0
 2204 00d2 394B     		ldr	r3, .L137+52
 2205 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2206 00d6 162B     		cmp	r3, #22
 2207 00d8 12D0     		beq	.L116
 2208 00da D0D9     		bls	.L135
 2209 00dc 802B     		cmp	r3, #128
 2210 00de 07D0     		beq	.L120
 2211 00e0 902B     		cmp	r3, #144
 2212 00e2 D4D0     		beq	.L121
 2213 00e4 172B     		cmp	r3, #23
 2214 00e6 D5D1     		bne	.L115
 228:Src/main.c    ****         break;
 2215              		.loc 1 228 0
 2216 00e8 0122     		movs	r2, #1
 2217 00ea 374B     		ldr	r3, .L137+68
 2218 00ec 1A70     		strb	r2, [r3]
 229:Src/main.c    ****       default:
 2219              		.loc 1 229 0
 2220 00ee D1E7     		b	.L115
 2221              	.L120:
 216:Src/main.c    ****         break;
 2222              		.loc 1 216 0
ARM GAS  /tmp/ccleW29Z.s 			page 60


 2223 00f0 0122     		movs	r2, #1
 2224 00f2 364B     		ldr	r3, .L137+72
 2225 00f4 1A70     		strb	r2, [r3]
 217:Src/main.c    ****       case ATTACK_CC:
 2226              		.loc 1 217 0
 2227 00f6 CDE7     		b	.L115
 2228              	.L118:
 219:Src/main.c    ****         break;
 2229              		.loc 1 219 0
 2230 00f8 0122     		movs	r2, #1
 2231 00fa 354B     		ldr	r3, .L137+76
 2232 00fc 1A70     		strb	r2, [r3]
 220:Src/main.c    ****       case DECAY_CC:
 2233              		.loc 1 220 0
 2234 00fe C9E7     		b	.L115
 2235              	.L116:
 225:Src/main.c    ****         break;
 2236              		.loc 1 225 0
 2237 0100 0122     		movs	r2, #1
 2238 0102 344B     		ldr	r3, .L137+80
 2239 0104 1A70     		strb	r2, [r3]
 226:Src/main.c    ****       case RELEASE_CC:
 2240              		.loc 1 226 0
 2241 0106 C5E7     		b	.L115
 2242              	.LVL129:
 2243              	.L136:
 2244              	.LBB22:
 238:Src/main.c    ****             note_freq[i] = current_midi_note_msg.byte1;
 2245              		.loc 1 238 0
 2246 0108 9021     		movs	r1, #144
 2247 010a 224A     		ldr	r2, .L137+16
 2248 010c D154     		strb	r1, [r2, r3]
 239:Src/main.c    ****             env_state[i] = ATTACK_MODE;
 2249              		.loc 1 239 0
 2250 010e 284A     		ldr	r2, .L137+44
 2251 0110 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 2252 0112 D2B2     		uxtb	r2, r2
 2253 0114 2049     		ldr	r1, .L137+20
 2254 0116 CA54     		strb	r2, [r1, r3]
 240:Src/main.c    ****             break;
 2255              		.loc 1 240 0
 2256 0118 0121     		movs	r1, #1
 2257 011a 1D4A     		ldr	r2, .L137+12
 2258 011c D154     		strb	r1, [r2, r3]
 241:Src/main.c    ****           }
 2259              		.loc 1 241 0
 2260 011e C0E7     		b	.L114
 2261              	.LVL130:
 2262              	.L132:
 2263              	.LBE22:
 234:Src/main.c    ****       case MIDI_NOTE_ON:
 2264              		.loc 1 234 0
 2265 0120 0023     		movs	r3, #0
 2266              	.L124:
 2267              	.LVL131:
 2268              	.LBB23:
 236:Src/main.c    ****           if(note_on[i] == MIDI_NOTE_OFF){
ARM GAS  /tmp/ccleW29Z.s 			page 61


 2269              		.loc 1 236 0 discriminator 1
 2270 0122 0F2B     		cmp	r3, #15
 2271 0124 BDDC     		bgt	.L114
 237:Src/main.c    ****             note_on[i] = MIDI_NOTE_ON;
 2272              		.loc 1 237 0
 2273 0126 1B4A     		ldr	r2, .L137+16
 2274 0128 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2275 012a D2B2     		uxtb	r2, r2
 2276 012c 802A     		cmp	r2, #128
 2277 012e EBD0     		beq	.L136
 236:Src/main.c    ****           if(note_on[i] == MIDI_NOTE_OFF){
 2278              		.loc 1 236 0 discriminator 2
 2279 0130 0133     		adds	r3, r3, #1
 2280              	.LVL132:
 2281 0132 F6E7     		b	.L124
 2282              	.LVL133:
 2283              	.L127:
 2284              	.LBE23:
 2285              	.LBB24:
 246:Src/main.c    ****           if (note_on[i] == MIDI_NOTE_ON && note_freq[i] == current_midi_note_msg.byte1){
 2286              		.loc 1 246 0 discriminator 2
 2287 0134 0133     		adds	r3, r3, #1
 2288              	.LVL134:
 2289              	.L123:
 246:Src/main.c    ****           if (note_on[i] == MIDI_NOTE_ON && note_freq[i] == current_midi_note_msg.byte1){
 2290              		.loc 1 246 0 is_stmt 0 discriminator 1
 2291 0136 0F2B     		cmp	r3, #15
 2292 0138 B3DC     		bgt	.L114
 247:Src/main.c    ****             //note_on[i] = MIDI_NOTE_OFF;
 2293              		.loc 1 247 0 is_stmt 1
 2294 013a 164A     		ldr	r2, .L137+16
 2295 013c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2296 013e D2B2     		uxtb	r2, r2
 2297 0140 902A     		cmp	r2, #144
 2298 0142 F7D1     		bne	.L127
 247:Src/main.c    ****             //note_on[i] = MIDI_NOTE_OFF;
 2299              		.loc 1 247 0 is_stmt 0 discriminator 1
 2300 0144 144A     		ldr	r2, .L137+20
 2301 0146 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 2302 0148 C9B2     		uxtb	r1, r1
 2303 014a 194A     		ldr	r2, .L137+44
 2304 014c 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 2305 014e D2B2     		uxtb	r2, r2
 2306 0150 9142     		cmp	r1, r2
 2307 0152 EFD1     		bne	.L127
 249:Src/main.c    ****           }
 2308              		.loc 1 249 0 is_stmt 1
 2309 0154 0421     		movs	r1, #4
 2310 0156 0E4A     		ldr	r2, .L137+12
 2311 0158 D154     		strb	r1, [r2, r3]
 2312 015a EBE7     		b	.L127
 2313              	.LVL135:
 2314              	.L131:
 2315              	.LBE24:
 234:Src/main.c    ****       case MIDI_NOTE_ON:
 2316              		.loc 1 234 0
 2317 015c 0023     		movs	r3, #0
ARM GAS  /tmp/ccleW29Z.s 			page 62


 2318 015e EAE7     		b	.L123
 2319              	.L134:
 261:Src/main.c    ****       UpdateLFOs();
 2320              		.loc 1 261 0
 2321 0160 FFF7FEFF 		bl	UpdateEnvelope
 2322              	.LVL136:
 262:Src/main.c    ****       UpdateOutputValue();
 2323              		.loc 1 262 0
 2324 0164 FFF7FEFF 		bl	UpdateLFOs
 2325              	.LVL137:
 263:Src/main.c    ****       HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_8B_R, output_val);
 2326              		.loc 1 263 0
 2327 0168 FFF7FEFF 		bl	UpdateOutputValue
 2328              	.LVL138:
 264:Src/main.c    ****       update_value_flag = 0;
 2329              		.loc 1 264 0
 2330 016c 1A4B     		ldr	r3, .L137+84
 2331 016e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2332 0170 0822     		movs	r2, #8
 2333 0172 1021     		movs	r1, #16
 2334 0174 0548     		ldr	r0, .L137+8
 2335 0176 FFF7FEFF 		bl	HAL_DAC_SetValue
 2336              	.LVL139:
 265:Src/main.c    ****       //      __enable_irq();
 2337              		.loc 1 265 0
 2338 017a 0022     		movs	r2, #0
 2339 017c 0D4B     		ldr	r3, .L137+48
 2340 017e 1A70     		strb	r2, [r3]
 2341 0180 93E7     		b	.L129
 2342              	.L138:
 2343 0182 00BF     		.align	2
 2344              	.L137:
 2345 0184 00000000 		.word	htim6
 2346 0188 00000000 		.word	htim7
 2347 018c 00000000 		.word	hdac
 2348 0190 00000000 		.word	env_state
 2349 0194 00000000 		.word	.LANCHOR13
 2350 0198 00000000 		.word	.LANCHOR2
 2351 019c 00000000 		.word	.LANCHOR6
 2352 01a0 00000000 		.word	.LANCHOR21
 2353 01a4 00000000 		.word	huart1
 2354 01a8 00000000 		.word	.LANCHOR18
 2355 01ac 00000000 		.word	.LANCHOR15
 2356 01b0 00000000 		.word	.LANCHOR22
 2357 01b4 00000000 		.word	.LANCHOR0
 2358 01b8 00000000 		.word	spi_rx_buffer
 2359 01bc 00000000 		.word	hspi5
 2360 01c0 00000000 		.word	midi_msg_queue
 2361 01c4 00000000 		.word	.LANCHOR14
 2362 01c8 00000000 		.word	.LANCHOR20
 2363 01cc 00000000 		.word	.LANCHOR16
 2364 01d0 00000000 		.word	.LANCHOR17
 2365 01d4 00000000 		.word	.LANCHOR19
 2366 01d8 00000000 		.word	.LANCHOR1
 2367              		.cfi_endproc
 2368              	.LFE130:
 2370              		.section	.text.Error_Handler,"ax",%progbits
ARM GAS  /tmp/ccleW29Z.s 			page 63


 2371              		.align	1
 2372              		.global	Error_Handler
 2373              		.syntax unified
 2374              		.thumb
 2375              		.thumb_func
 2376              		.fpu fpv4-sp-d16
 2378              	Error_Handler:
 2379              	.LFB147:
1005:Src/main.c    **** 
1006:Src/main.c    **** /* USER CODE END 4 */
1007:Src/main.c    **** 
1008:Src/main.c    **** /**
1009:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
1010:Src/main.c    ****   * @retval None
1011:Src/main.c    ****   */
1012:Src/main.c    **** void Error_Handler(void)
1013:Src/main.c    **** {
 2380              		.loc 1 1013 0
 2381              		.cfi_startproc
 2382              		@ args = 0, pretend = 0, frame = 0
 2383              		@ frame_needed = 0, uses_anonymous_args = 0
 2384              		@ link register save eliminated.
 2385 0000 7047     		bx	lr
 2386              		.cfi_endproc
 2387              	.LFE147:
 2389              		.global	release
 2390              		.global	sustain
 2391              		.global	decay
 2392              		.global	attack
 2393              		.comm	midi_msg_queue,1022,4
 2394              		.global	MIDI_flag
 2395              		.global	update_value_flag
 2396              		.global	lfo
 2397              		.global	lfo_freq
 2398              		.global	lfo_phase_accumulator
 2399              		.global	note_freq
 2400              		.global	note_on
 2401              		.comm	env_state,16,4
 2402              		.global	envelope
 2403              		.global	envelope_index
 2404              		.global	output_val
 2405              		.global	phase_accumulator
 2406              		.global	current_midi_note_msg
 2407              		.global	release_cc_flag
 2408              		.global	sustain_cc_flag
 2409              		.global	decay_cc_flag
 2410              		.global	attack_cc_flag
 2411              		.global	note_off_flag
 2412              		.global	note_on_flag
 2413              		.global	inv_voices
 2414              		.comm	spi_rx_buffer,3,4
 2415              		.comm	spi_tx_buffer,3,4
 2416              		.comm	huart1,64,4
 2417              		.comm	htim7,64,4
 2418              		.comm	htim6,64,4
 2419              		.comm	hspi5,88,4
 2420              		.comm	hdac,20,4
ARM GAS  /tmp/ccleW29Z.s 			page 64


 2421              		.comm	lfo_sine,256,4
 2422              		.comm	base_sq,4096,4
 2423              		.comm	base_tri,4096,4
 2424              		.comm	base_neg_saw,4096,4
 2425              		.comm	base_pos_saw,4096,4
 2426              		.comm	base_sine,4096,4
 2427              		.section	.rodata
 2428              		.align	2
 2429              		.set	.LANCHOR21,. + 0
 2430              	.LC0:
 2431 0000 0A53544D 		.ascii	"\012STM32F429!\012\000"
 2431      33324634 
 2431      3239210A 
 2431      00
 2432 000d 00000000 		.space	7
 2432      000000
 2433              		.section	.bss.MIDI_flag,"aw",%nobits
 2434              		.set	.LANCHOR14,. + 0
 2437              	MIDI_flag:
 2438 0000 00       		.space	1
 2439              		.section	.bss.attack_cc_flag,"aw",%nobits
 2440              		.set	.LANCHOR17,. + 0
 2443              	attack_cc_flag:
 2444 0000 00       		.space	1
 2445              		.section	.bss.current_midi_note_msg,"aw",%nobits
 2446              		.align	2
 2447              		.set	.LANCHOR22,. + 0
 2450              	current_midi_note_msg:
 2451 0000 00000000 		.space	4
 2452              		.section	.bss.decay_cc_flag,"aw",%nobits
 2453              		.set	.LANCHOR18,. + 0
 2456              	decay_cc_flag:
 2457 0000 00       		.space	1
 2458              		.section	.bss.envelope,"aw",%nobits
 2459              		.align	2
 2460              		.set	.LANCHOR4,. + 0
 2463              	envelope:
 2464 0000 00000000 		.space	64
 2464      00000000 
 2464      00000000 
 2464      00000000 
 2464      00000000 
 2465              		.section	.bss.envelope_index,"aw",%nobits
 2466              		.align	2
 2467              		.set	.LANCHOR8,. + 0
 2470              	envelope_index:
 2471 0000 00000000 		.space	64
 2471      00000000 
 2471      00000000 
 2471      00000000 
 2471      00000000 
 2472              		.section	.bss.lfo,"aw",%nobits
 2473              		.align	2
 2474              		.set	.LANCHOR5,. + 0
 2477              	lfo:
 2478 0000 00000000 		.space	16
 2478      00000000 
ARM GAS  /tmp/ccleW29Z.s 			page 65


 2478      00000000 
 2478      00000000 
 2479              		.section	.bss.lfo_freq,"aw",%nobits
 2480              		.align	2
 2481              		.set	.LANCHOR6,. + 0
 2484              	lfo_freq:
 2485 0000 00000000 		.space	32
 2485      00000000 
 2485      00000000 
 2485      00000000 
 2485      00000000 
 2486              		.section	.bss.lfo_phase_accumulator,"aw",%nobits
 2487              		.align	2
 2488              		.set	.LANCHOR7,. + 0
 2491              	lfo_phase_accumulator:
 2492 0000 00000000 		.space	64
 2492      00000000 
 2492      00000000 
 2492      00000000 
 2492      00000000 
 2493              		.section	.bss.note_freq,"aw",%nobits
 2494              		.align	2
 2495              		.set	.LANCHOR2,. + 0
 2498              	note_freq:
 2499 0000 00000000 		.space	16
 2499      00000000 
 2499      00000000 
 2499      00000000 
 2500              		.section	.bss.note_off_flag,"aw",%nobits
 2501              		.set	.LANCHOR16,. + 0
 2504              	note_off_flag:
 2505 0000 00       		.space	1
 2506              		.section	.bss.note_on,"aw",%nobits
 2507              		.align	2
 2508              		.set	.LANCHOR13,. + 0
 2511              	note_on:
 2512 0000 00000000 		.space	88
 2512      00000000 
 2512      00000000 
 2512      00000000 
 2512      00000000 
 2513              		.section	.bss.note_on_flag,"aw",%nobits
 2514              		.set	.LANCHOR15,. + 0
 2517              	note_on_flag:
 2518 0000 00       		.space	1
 2519              		.section	.bss.output_val,"aw",%nobits
 2520              		.set	.LANCHOR1,. + 0
 2523              	output_val:
 2524 0000 00       		.space	1
 2525              		.section	.bss.phase_accumulator,"aw",%nobits
 2526              		.align	2
 2527              		.set	.LANCHOR3,. + 0
 2530              	phase_accumulator:
 2531 0000 00000000 		.space	64
 2531      00000000 
 2531      00000000 
 2531      00000000 
ARM GAS  /tmp/ccleW29Z.s 			page 66


 2531      00000000 
 2532              		.section	.bss.release_cc_flag,"aw",%nobits
 2533              		.set	.LANCHOR20,. + 0
 2536              	release_cc_flag:
 2537 0000 00       		.space	1
 2538              		.section	.bss.sustain_cc_flag,"aw",%nobits
 2539              		.set	.LANCHOR19,. + 0
 2542              	sustain_cc_flag:
 2543 0000 00       		.space	1
 2544              		.section	.bss.update_value_flag,"aw",%nobits
 2545              		.set	.LANCHOR0,. + 0
 2548              	update_value_flag:
 2549 0000 00       		.space	1
 2550              		.section	.data.attack,"aw",%progbits
 2551              		.set	.LANCHOR9,. + 0
 2554              	attack:
 2555 0000 FF       		.byte	-1
 2556              		.section	.data.decay,"aw",%progbits
 2557              		.set	.LANCHOR11,. + 0
 2560              	decay:
 2561 0000 FF       		.byte	-1
 2562              		.section	.data.release,"aw",%progbits
 2563              		.set	.LANCHOR12,. + 0
 2566              	release:
 2567 0000 FF       		.byte	-1
 2568              		.section	.data.sustain,"aw",%progbits
 2569              		.set	.LANCHOR10,. + 0
 2572              	sustain:
 2573 0000 C8       		.byte	-56
 2574              		.section	.rodata.inv_voices,"a",%progbits
 2575              		.align	2
 2578              	inv_voices:
 2579 0000 0000803D 		.word	1031798784
 2580              		.text
 2581              	.Letext0:
 2582              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2583              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2584              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2585              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2586              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 2587              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2588              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2589              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2590              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2591              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2592              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dac.h"
 2593              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 2594              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2595              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2596              		.file 16 "Inc/midi.h"
 2597              		.file 17 "/usr/include/newlib/sys/lock.h"
 2598              		.file 18 "/usr/include/newlib/sys/_types.h"
 2599              		.file 19 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 2600              		.file 20 "/usr/include/newlib/sys/reent.h"
 2601              		.file 21 "/usr/include/newlib/stdlib.h"
 2602              		.file 22 "Inc/waves.h"
 2603              		.file 23 "/usr/include/newlib/math.h"
ARM GAS  /tmp/ccleW29Z.s 			page 67


 2604              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 2605              		.file 25 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccleW29Z.s 			page 68


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccleW29Z.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccleW29Z.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccleW29Z.s:485    .text.MX_GPIO_Init:00000000000002c0 $d
     /tmp/ccleW29Z.s:496    .text.MX_GPIO_Init:00000000000002e4 $t
     /tmp/ccleW29Z.s:624    .text.MX_GPIO_Init:00000000000003a0 $d
     /tmp/ccleW29Z.s:634    .text.MX_SPI5_Init:0000000000000000 $t
     /tmp/ccleW29Z.s:640    .text.MX_SPI5_Init:0000000000000000 MX_SPI5_Init
     /tmp/ccleW29Z.s:684    .text.MX_SPI5_Init:0000000000000028 $d
                            *COM*:0000000000000058 hspi5
     /tmp/ccleW29Z.s:690    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccleW29Z.s:696    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccleW29Z.s:735    .text.MX_USART1_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart1
     /tmp/ccleW29Z.s:741    .text.MX_DAC_Init:0000000000000000 $t
     /tmp/ccleW29Z.s:747    .text.MX_DAC_Init:0000000000000000 MX_DAC_Init
     /tmp/ccleW29Z.s:793    .text.MX_DAC_Init:0000000000000028 $d
                            *COM*:0000000000000014 hdac
     /tmp/ccleW29Z.s:799    .text.MX_TIM6_Init:0000000000000000 $t
     /tmp/ccleW29Z.s:805    .text.MX_TIM6_Init:0000000000000000 MX_TIM6_Init
     /tmp/ccleW29Z.s:859    .text.MX_TIM6_Init:0000000000000034 $d
                            *COM*:0000000000000040 htim6
     /tmp/ccleW29Z.s:865    .text.MX_TIM7_Init:0000000000000000 $t
     /tmp/ccleW29Z.s:871    .text.MX_TIM7_Init:0000000000000000 MX_TIM7_Init
     /tmp/ccleW29Z.s:925    .text.MX_TIM7_Init:0000000000000034 $d
                            *COM*:0000000000000040 htim7
     /tmp/ccleW29Z.s:931    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccleW29Z.s:938    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccleW29Z.s:1046   .text.SystemClock_Config:0000000000000090 $d
     /tmp/ccleW29Z.s:1052   .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/ccleW29Z.s:1059   .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/ccleW29Z.s:1072   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccleW29Z.s:1079   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccleW29Z.s:1104   .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccleW29Z.s:1113   .text.UpdateOutputValue:0000000000000000 $t
     /tmp/ccleW29Z.s:1120   .text.UpdateOutputValue:0000000000000000 UpdateOutputValue
     /tmp/ccleW29Z.s:1224   .text.UpdateOutputValue:00000000000000a8 $d
                            *COM*:0000000000001000 base_sine
     /tmp/ccleW29Z.s:1241   .text.UpdateLFOs:0000000000000000 $t
     /tmp/ccleW29Z.s:1248   .text.UpdateLFOs:0000000000000000 UpdateLFOs
     /tmp/ccleW29Z.s:1300   .text.UpdateLFOs:0000000000000040 $d
     /tmp/ccleW29Z.s:1309   .text.UpdateEnvelope:0000000000000000 $t
     /tmp/ccleW29Z.s:1316   .text.UpdateEnvelope:0000000000000000 UpdateEnvelope
     /tmp/ccleW29Z.s:1363   .text.UpdateEnvelope:0000000000000030 $d
     /tmp/ccleW29Z.s:1368   .text.UpdateEnvelope:0000000000000044 $t
     /tmp/ccleW29Z.s:1522   .text.UpdateEnvelope:0000000000000180 $d
                            *COM*:0000000000000010 env_state
                            *COM*:0000000000001000 base_pos_saw
                            *COM*:0000000000001000 base_neg_saw
     /tmp/ccleW29Z.s:1541   .text.Update_R2R_DAC:0000000000000000 $t
     /tmp/ccleW29Z.s:1548   .text.Update_R2R_DAC:0000000000000000 Update_R2R_DAC
     /tmp/ccleW29Z.s:1722   .text.Update_R2R_DAC:0000000000000120 $d
     /tmp/ccleW29Z.s:1728   .text.enqueue:0000000000000000 $t
     /tmp/ccleW29Z.s:1735   .text.enqueue:0000000000000000 enqueue
     /tmp/ccleW29Z.s:1761   .text.enqueue:0000000000000018 $d
                            *COM*:00000000000003fe midi_msg_queue
ARM GAS  /tmp/ccleW29Z.s 			page 69


     /tmp/ccleW29Z.s:1766   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/ccleW29Z.s:1773   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/ccleW29Z.s:1976   .text.HAL_SPI_TxRxCpltCallback:0000000000000114 $d
                            *COM*:0000000000000003 spi_rx_buffer
     /tmp/ccleW29Z.s:1988   .text.dequeue:0000000000000000 $t
     /tmp/ccleW29Z.s:1995   .text.dequeue:0000000000000000 dequeue
     /tmp/ccleW29Z.s:2031   .text.dequeue:0000000000000038 $d
     /tmp/ccleW29Z.s:2036   .text.main:0000000000000000 $t
     /tmp/ccleW29Z.s:2043   .text.main:0000000000000000 main
     /tmp/ccleW29Z.s:2345   .text.main:0000000000000184 $d
     /tmp/ccleW29Z.s:2371   .text.Error_Handler:0000000000000000 $t
     /tmp/ccleW29Z.s:2378   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccleW29Z.s:2566   .data.release:0000000000000000 release
     /tmp/ccleW29Z.s:2572   .data.sustain:0000000000000000 sustain
     /tmp/ccleW29Z.s:2560   .data.decay:0000000000000000 decay
     /tmp/ccleW29Z.s:2554   .data.attack:0000000000000000 attack
     /tmp/ccleW29Z.s:2437   .bss.MIDI_flag:0000000000000000 MIDI_flag
     /tmp/ccleW29Z.s:2548   .bss.update_value_flag:0000000000000000 update_value_flag
     /tmp/ccleW29Z.s:2477   .bss.lfo:0000000000000000 lfo
     /tmp/ccleW29Z.s:2484   .bss.lfo_freq:0000000000000000 lfo_freq
     /tmp/ccleW29Z.s:2491   .bss.lfo_phase_accumulator:0000000000000000 lfo_phase_accumulator
     /tmp/ccleW29Z.s:2498   .bss.note_freq:0000000000000000 note_freq
     /tmp/ccleW29Z.s:2511   .bss.note_on:0000000000000000 note_on
     /tmp/ccleW29Z.s:2463   .bss.envelope:0000000000000000 envelope
     /tmp/ccleW29Z.s:2470   .bss.envelope_index:0000000000000000 envelope_index
     /tmp/ccleW29Z.s:2523   .bss.output_val:0000000000000000 output_val
     /tmp/ccleW29Z.s:2530   .bss.phase_accumulator:0000000000000000 phase_accumulator
     /tmp/ccleW29Z.s:2450   .bss.current_midi_note_msg:0000000000000000 current_midi_note_msg
     /tmp/ccleW29Z.s:2536   .bss.release_cc_flag:0000000000000000 release_cc_flag
     /tmp/ccleW29Z.s:2542   .bss.sustain_cc_flag:0000000000000000 sustain_cc_flag
     /tmp/ccleW29Z.s:2456   .bss.decay_cc_flag:0000000000000000 decay_cc_flag
     /tmp/ccleW29Z.s:2443   .bss.attack_cc_flag:0000000000000000 attack_cc_flag
     /tmp/ccleW29Z.s:2504   .bss.note_off_flag:0000000000000000 note_off_flag
     /tmp/ccleW29Z.s:2517   .bss.note_on_flag:0000000000000000 note_on_flag
     /tmp/ccleW29Z.s:2578   .rodata.inv_voices:0000000000000000 inv_voices
                            *COM*:0000000000000003 spi_tx_buffer
                            *COM*:0000000000000100 lfo_sine
                            *COM*:0000000000001000 base_sq
                            *COM*:0000000000001000 base_tri
     /tmp/ccleW29Z.s:2428   .rodata:0000000000000000 $d
     /tmp/ccleW29Z.s:2438   .bss.MIDI_flag:0000000000000000 $d
     /tmp/ccleW29Z.s:2444   .bss.attack_cc_flag:0000000000000000 $d
     /tmp/ccleW29Z.s:2446   .bss.current_midi_note_msg:0000000000000000 $d
     /tmp/ccleW29Z.s:2457   .bss.decay_cc_flag:0000000000000000 $d
     /tmp/ccleW29Z.s:2459   .bss.envelope:0000000000000000 $d
     /tmp/ccleW29Z.s:2466   .bss.envelope_index:0000000000000000 $d
     /tmp/ccleW29Z.s:2473   .bss.lfo:0000000000000000 $d
     /tmp/ccleW29Z.s:2480   .bss.lfo_freq:0000000000000000 $d
     /tmp/ccleW29Z.s:2487   .bss.lfo_phase_accumulator:0000000000000000 $d
     /tmp/ccleW29Z.s:2494   .bss.note_freq:0000000000000000 $d
     /tmp/ccleW29Z.s:2505   .bss.note_off_flag:0000000000000000 $d
     /tmp/ccleW29Z.s:2507   .bss.note_on:0000000000000000 $d
     /tmp/ccleW29Z.s:2518   .bss.note_on_flag:0000000000000000 $d
     /tmp/ccleW29Z.s:2524   .bss.output_val:0000000000000000 $d
     /tmp/ccleW29Z.s:2526   .bss.phase_accumulator:0000000000000000 $d
     /tmp/ccleW29Z.s:2537   .bss.release_cc_flag:0000000000000000 $d
     /tmp/ccleW29Z.s:2543   .bss.sustain_cc_flag:0000000000000000 $d
ARM GAS  /tmp/ccleW29Z.s 			page 70


     /tmp/ccleW29Z.s:2549   .bss.update_value_flag:0000000000000000 $d
     /tmp/ccleW29Z.s:2575   .rodata.inv_voices:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Init
HAL_UART_Init
HAL_DAC_Init
HAL_DAC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_f2d
__aeabi_dmul
__aeabi_d2uiz
midi_notes
__aeabi_i2d
HAL_Init
init_wavetable
HAL_TIM_Base_Start_IT
HAL_DAC_Start
HAL_UART_Transmit
Receive_MIDI
HAL_DAC_SetValue
