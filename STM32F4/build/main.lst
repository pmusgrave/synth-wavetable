ARM GAS  /tmp/ccR9AC2d.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB137:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include <math.h>
  27:Src/main.c    **** #include "globals.h"
  28:Src/main.c    **** #include "spi_handler.h"
  29:Src/main.c    **** #include "envelopes.h"
  30:Src/main.c    **** #include "midi.h"
  31:Src/main.c    **** #include "waves.h"
  32:Src/main.c    **** /* USER CODE END Includes */
ARM GAS  /tmp/ccR9AC2d.s 			page 2


  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PTD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* USER CODE END PTD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PD */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PD */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END PM */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** DAC_HandleTypeDef hdac;
  51:Src/main.c    **** 
  52:Src/main.c    **** SPI_HandleTypeDef hspi5;
  53:Src/main.c    **** 
  54:Src/main.c    **** TIM_HandleTypeDef htim6;
  55:Src/main.c    **** TIM_HandleTypeDef htim7;
  56:Src/main.c    **** 
  57:Src/main.c    **** UART_HandleTypeDef huart1;
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE BEGIN PV */
  60:Src/main.c    **** const float inv_voices = 1.0/VOICES;
  61:Src/main.c    **** // probably need to refactor these SPI flags
  62:Src/main.c    **** volatile uint8_t note_on_flag = 0;
  63:Src/main.c    **** volatile uint8_t note_off_flag = 0;
  64:Src/main.c    **** volatile uint8_t attack_cc_flag = 0;
  65:Src/main.c    **** volatile uint8_t decay_cc_flag = 0;
  66:Src/main.c    **** volatile uint8_t sustain_cc_flag = 0;
  67:Src/main.c    **** volatile uint8_t release_cc_flag = 0;
  68:Src/main.c    **** 
  69:Src/main.c    **** volatile struct midi_msg current_midi_msg = {0,0,0,0};
  70:Src/main.c    **** volatile uint32_t phase_accumulator[VOICES] = {0};
  71:Src/main.c    **** volatile uint8_t output_val = 0;
  72:Src/main.c    **** 
  73:Src/main.c    **** volatile uint32_t lfo_phase_accumulator[VOICES] = {0};
  74:Src/main.c    **** volatile uint16_t lfo_freq[VOICES] = {0};
  75:Src/main.c    **** volatile uint8_t lfo[VOICES] = {0};
  76:Src/main.c    **** 
  77:Src/main.c    **** volatile uint8_t update_value_flag = 0;
  78:Src/main.c    **** volatile uint8_t MIDI_flag = 0;
  79:Src/main.c    **** 
  80:Src/main.c    **** struct msg_queue {
  81:Src/main.c    ****   uint8_t head;
  82:Src/main.c    ****   uint8_t tail;
  83:Src/main.c    ****   struct midi_msg queue[MAX_QUEUE_SIZE];
  84:Src/main.c    **** } midi_msg_queue;
  85:Src/main.c    **** void enqueue(struct midi_msg midi_msg);
  86:Src/main.c    **** struct midi_msg dequeue(void);
  87:Src/main.c    **** 
  88:Src/main.c    **** uint8_t attack = 255;
  89:Src/main.c    **** uint8_t decay = 255;
ARM GAS  /tmp/ccR9AC2d.s 			page 3


  90:Src/main.c    **** uint8_t sustain = 200;
  91:Src/main.c    **** uint8_t release = 255;
  92:Src/main.c    **** /* USER CODE END PV */
  93:Src/main.c    **** 
  94:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  95:Src/main.c    **** void SystemClock_Config(void);
  96:Src/main.c    **** static void MX_GPIO_Init(void);
  97:Src/main.c    **** static void MX_SPI5_Init(void);
  98:Src/main.c    **** static void MX_USART1_UART_Init(void);
  99:Src/main.c    **** static void MX_DAC_Init(void);
 100:Src/main.c    **** static void MX_TIM6_Init(void);
 101:Src/main.c    **** static void MX_TIM7_Init(void);
 102:Src/main.c    **** /* USER CODE BEGIN PFP */
 103:Src/main.c    **** //void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi);
 104:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim);
 105:Src/main.c    **** void UpdateOutputValue(void);
 106:Src/main.c    **** void UpdateLFOs(void);
 107:Src/main.c    **** void UpdateEnvelope(void);
 108:Src/main.c    **** void Update_R2R_DAC(void);
 109:Src/main.c    **** void UART_PrintADSR(void);
 110:Src/main.c    **** /* USER CODE END PFP */
 111:Src/main.c    **** 
 112:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 113:Src/main.c    **** /* USER CODE BEGIN 0 */
 114:Src/main.c    **** 
 115:Src/main.c    **** /* USER CODE END 0 */
 116:Src/main.c    **** 
 117:Src/main.c    **** /**
 118:Src/main.c    ****   * @brief  The application entry point.
 119:Src/main.c    ****   * @retval int
 120:Src/main.c    ****   */
 121:Src/main.c    **** int main(void)
 122:Src/main.c    **** {
 123:Src/main.c    ****   /* USER CODE BEGIN 1 */
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* USER CODE END 1 */
 126:Src/main.c    ****   
 127:Src/main.c    **** 
 128:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 129:Src/main.c    **** 
 130:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 131:Src/main.c    ****   HAL_Init();
 132:Src/main.c    **** 
 133:Src/main.c    ****   /* USER CODE BEGIN Init */
 134:Src/main.c    **** 
 135:Src/main.c    ****   /* USER CODE END Init */
 136:Src/main.c    **** 
 137:Src/main.c    ****   /* Configure the system clock */
 138:Src/main.c    ****   SystemClock_Config();
 139:Src/main.c    **** 
 140:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 141:Src/main.c    **** 
 142:Src/main.c    ****   /* USER CODE END SysInit */
 143:Src/main.c    **** 
 144:Src/main.c    ****   /* Initialize all configured peripherals */
 145:Src/main.c    ****   MX_GPIO_Init();
 146:Src/main.c    ****   MX_SPI5_Init();
ARM GAS  /tmp/ccR9AC2d.s 			page 4


 147:Src/main.c    ****   MX_USART1_UART_Init();
 148:Src/main.c    ****   MX_DAC_Init();
 149:Src/main.c    ****   MX_TIM6_Init();
 150:Src/main.c    ****   MX_TIM7_Init();
 151:Src/main.c    ****   /* USER CODE BEGIN 2 */
 152:Src/main.c    ****   init_wavetable();
 153:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim6);
 154:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim7);
 155:Src/main.c    ****   HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 156:Src/main.c    **** 
 157:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 158:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 159:Src/main.c    ****     note_on[i] = MIDI_NOTE_OFF;
 160:Src/main.c    ****     note_freq[i] = 0;
 161:Src/main.c    ****     lfo_freq[i] = 20;
 162:Src/main.c    ****   }
 163:Src/main.c    **** 
 164:Src/main.c    ****   uint8_t init_msg[20] = {"\nSTM32F429!\n"};
 165:Src/main.c    ****   HAL_UART_Transmit(&huart1, init_msg, 20, 50);
 166:Src/main.c    ****   /* USER CODE END 2 */
 167:Src/main.c    **** 
 168:Src/main.c    ****   /* Infinite loop */
 169:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 170:Src/main.c    ****   uint8_t process_msg_flag  = 0;
 171:Src/main.c    ****   while (1)
 172:Src/main.c    ****   {
 173:Src/main.c    ****     // Receive_MIDI(&hspi5, spi_rx_buffer);
 174:Src/main.c    **** 
 175:Src/main.c    ****     if(midi_msg_queue.head != midi_msg_queue.tail) {
 176:Src/main.c    ****       current_midi_msg = dequeue();
 177:Src/main.c    ****       process_msg_flag = 1;
 178:Src/main.c    ****     }
 179:Src/main.c    **** 
 180:Src/main.c    ****     if(MIDI_flag) {
 181:Src/main.c    ****       MIDI_flag = 0;
 182:Src/main.c    **** 
 183:Src/main.c    ****       if(spi_byte_queue.head != spi_byte_queue.tail) {
 184:Src/main.c    ****         uint8_t value = dequeue_byte();
 185:Src/main.c    **** 
 186:Src/main.c    ****         switch(value) {
 187:Src/main.c    ****         case MIDI_NOTE_ON:
 188:Src/main.c    ****           note_on_flag = 1;
 189:Src/main.c    ****           break;
 190:Src/main.c    ****         case MIDI_NOTE_OFF:
 191:Src/main.c    ****           note_off_flag = 1;
 192:Src/main.c    ****           break;
 193:Src/main.c    ****         case ATTACK_CC:
 194:Src/main.c    ****           attack_cc_flag = 1;
 195:Src/main.c    ****           break;
 196:Src/main.c    ****         case DECAY_CC:
 197:Src/main.c    ****           decay_cc_flag = 1;
 198:Src/main.c    ****           break;
 199:Src/main.c    ****         case SUSTAIN_CC:
 200:Src/main.c    ****           sustain_cc_flag = 1;
 201:Src/main.c    ****           break;
 202:Src/main.c    ****         case RELEASE_CC:
 203:Src/main.c    ****           release_cc_flag = 1;
ARM GAS  /tmp/ccR9AC2d.s 			page 5


 204:Src/main.c    ****           break;
 205:Src/main.c    ****         default:
 206:Src/main.c    ****           if(note_on_flag){
 207:Src/main.c    ****         struct midi_msg new_midi_note_msg = {
 208:Src/main.c    ****           MIDI_NOTE_ON,
 209:Src/main.c    ****           value,
 210:Src/main.c    ****           127,
 211:Src/main.c    ****           0
 212:Src/main.c    ****         };
 213:Src/main.c    ****         enqueue(new_midi_note_msg);
 214:Src/main.c    ****         note_on_flag = 0;
 215:Src/main.c    ****       }
 216:Src/main.c    ****       else if(note_off_flag){
 217:Src/main.c    ****         struct midi_msg new_midi_note_msg = {
 218:Src/main.c    ****           MIDI_NOTE_OFF,
 219:Src/main.c    ****           value,
 220:Src/main.c    ****           0,
 221:Src/main.c    ****           0
 222:Src/main.c    ****         };
 223:Src/main.c    ****         enqueue(new_midi_note_msg);
 224:Src/main.c    ****         note_off_flag = 0;
 225:Src/main.c    ****       }
 226:Src/main.c    ****       else if(attack_cc_flag){
 227:Src/main.c    ****         struct midi_msg new_cc = {
 228:Src/main.c    ****           ATTACK_CC,
 229:Src/main.c    ****           value,
 230:Src/main.c    ****           0,
 231:Src/main.c    ****           0
 232:Src/main.c    ****         };
 233:Src/main.c    ****         enqueue(new_cc);
 234:Src/main.c    ****         attack_cc_flag = 0;
 235:Src/main.c    ****         UART_PrintADSR();
 236:Src/main.c    ****       }
 237:Src/main.c    ****       else if(decay_cc_flag){
 238:Src/main.c    ****         struct midi_msg new_cc = {
 239:Src/main.c    ****           DECAY_CC,
 240:Src/main.c    ****           value,
 241:Src/main.c    ****           0,
 242:Src/main.c    ****           0
 243:Src/main.c    ****         };
 244:Src/main.c    ****         enqueue(new_cc);
 245:Src/main.c    ****         decay_cc_flag = 0;
 246:Src/main.c    ****         UART_PrintADSR();
 247:Src/main.c    ****       }
 248:Src/main.c    ****       else if(sustain_cc_flag){
 249:Src/main.c    ****         struct midi_msg new_cc = {
 250:Src/main.c    ****           SUSTAIN_CC,
 251:Src/main.c    ****           value,
 252:Src/main.c    ****           0,
 253:Src/main.c    ****           0
 254:Src/main.c    ****         };
 255:Src/main.c    ****         enqueue(new_cc);
 256:Src/main.c    ****         sustain_cc_flag = 0;
 257:Src/main.c    ****         UART_PrintADSR();
 258:Src/main.c    ****       }
 259:Src/main.c    ****       else if(release_cc_flag){
 260:Src/main.c    ****         struct midi_msg new_cc = {
ARM GAS  /tmp/ccR9AC2d.s 			page 6


 261:Src/main.c    ****           RELEASE_CC,
 262:Src/main.c    ****           value,
 263:Src/main.c    ****           0,
 264:Src/main.c    ****           0
 265:Src/main.c    ****         };
 266:Src/main.c    ****         enqueue(new_cc);
 267:Src/main.c    ****         release_cc_flag = 0;
 268:Src/main.c    ****         UART_PrintADSR();
 269:Src/main.c    ****       }
 270:Src/main.c    ****       else {
 271:Src/main.c    **** 
 272:Src/main.c    ****       }
 273:Src/main.c    ****           break;
 274:Src/main.c    ****         }
 275:Src/main.c    ****       }
 276:Src/main.c    **** 
 277:Src/main.c    **** 
 278:Src/main.c    **** 
 279:Src/main.c    ****     }
 280:Src/main.c    **** 
 281:Src/main.c    ****     if(process_msg_flag) {
 282:Src/main.c    ****       process_msg_flag = 0;
 283:Src/main.c    ****       switch(current_midi_msg.byte0) {
 284:Src/main.c    ****       case MIDI_NOTE_ON:
 285:Src/main.c    ****         for (int i = 0; i < VOICES; i++) {
 286:Src/main.c    ****           if(note_on[i] == MIDI_NOTE_OFF){
 287:Src/main.c    ****             note_on[i] = MIDI_NOTE_ON;
 288:Src/main.c    ****             note_freq[i] = current_midi_msg.byte1;
 289:Src/main.c    ****             env_state[i] = ATTACK_MODE;
 290:Src/main.c    ****             break;
 291:Src/main.c    ****           }
 292:Src/main.c    ****         }
 293:Src/main.c    ****         break;
 294:Src/main.c    ****       case MIDI_NOTE_OFF:
 295:Src/main.c    ****         for (int i = 0; i < VOICES; i++) {
 296:Src/main.c    ****           if (note_on[i] == MIDI_NOTE_ON && note_freq[i] == current_midi_msg.byte1){
 297:Src/main.c    ****             //note_on[i] = MIDI_NOTE_OFF;
 298:Src/main.c    ****             env_state[i] = RELEASE_MODE;
 299:Src/main.c    ****           }
 300:Src/main.c    ****         }
 301:Src/main.c    ****         break;
 302:Src/main.c    ****       case ATTACK_CC:
 303:Src/main.c    ****         attack = current_midi_msg.byte1;
 304:Src/main.c    ****         break;
 305:Src/main.c    ****       case DECAY_CC:
 306:Src/main.c    ****         decay = current_midi_msg.byte1;
 307:Src/main.c    ****         break;
 308:Src/main.c    ****       case SUSTAIN_CC:
 309:Src/main.c    ****         sustain = current_midi_msg.byte1;
 310:Src/main.c    ****         break;
 311:Src/main.c    ****       case RELEASE_CC:
 312:Src/main.c    ****         release = current_midi_msg.byte1;
 313:Src/main.c    ****         break;
 314:Src/main.c    **** 
 315:Src/main.c    ****       }
 316:Src/main.c    ****     }
 317:Src/main.c    **** 
ARM GAS  /tmp/ccR9AC2d.s 			page 7


 318:Src/main.c    ****     if(update_value_flag) {
 319:Src/main.c    ****       //      __disable_irq();
 320:Src/main.c    ****       UpdateEnvelope();
 321:Src/main.c    ****       UpdateLFOs();
 322:Src/main.c    ****       UpdateOutputValue();
 323:Src/main.c    ****       HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_8B_R, output_val);
 324:Src/main.c    ****       update_value_flag = 0;
 325:Src/main.c    ****       //      __enable_irq();
 326:Src/main.c    ****     }
 327:Src/main.c    **** 
 328:Src/main.c    ****     //Update_R2R_DAC();
 329:Src/main.c    **** 
 330:Src/main.c    ****     /* USER CODE END WHILE */
 331:Src/main.c    **** 
 332:Src/main.c    ****     /* USER CODE BEGIN 3 */
 333:Src/main.c    ****   }
 334:Src/main.c    ****   /* USER CODE END 3 */
 335:Src/main.c    **** }
 336:Src/main.c    **** 
 337:Src/main.c    **** /**
 338:Src/main.c    ****   * @brief System Clock Configuration
 339:Src/main.c    ****   * @retval None
 340:Src/main.c    ****   */
 341:Src/main.c    **** void SystemClock_Config(void)
 342:Src/main.c    **** {
 343:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 344:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 345:Src/main.c    **** 
 346:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 347:Src/main.c    ****   */
 348:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 349:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 350:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 351:Src/main.c    ****   */
 352:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 353:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 354:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 355:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 356:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 357:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 358:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 100;
 359:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 360:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 361:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 362:Src/main.c    ****   {
 363:Src/main.c    ****     Error_Handler();
 364:Src/main.c    ****   }
 365:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 366:Src/main.c    ****   */
 367:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 368:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 369:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 370:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 371:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 372:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 373:Src/main.c    **** 
 374:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
ARM GAS  /tmp/ccR9AC2d.s 			page 8


 375:Src/main.c    ****   {
 376:Src/main.c    ****     Error_Handler();
 377:Src/main.c    ****   }
 378:Src/main.c    **** }
 379:Src/main.c    **** 
 380:Src/main.c    **** /**
 381:Src/main.c    ****   * @brief DAC Initialization Function
 382:Src/main.c    ****   * @param None
 383:Src/main.c    ****   * @retval None
 384:Src/main.c    ****   */
 385:Src/main.c    **** static void MX_DAC_Init(void)
 386:Src/main.c    **** {
 387:Src/main.c    **** 
 388:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 0 */
 389:Src/main.c    **** 
 390:Src/main.c    ****   /* USER CODE END DAC_Init 0 */
 391:Src/main.c    **** 
 392:Src/main.c    ****   DAC_ChannelConfTypeDef sConfig = {0};
 393:Src/main.c    **** 
 394:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 1 */
 395:Src/main.c    **** 
 396:Src/main.c    ****   /* USER CODE END DAC_Init 1 */
 397:Src/main.c    ****   /** DAC Initialization 
 398:Src/main.c    ****   */
 399:Src/main.c    ****   hdac.Instance = DAC;
 400:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 401:Src/main.c    ****   {
 402:Src/main.c    ****     Error_Handler();
 403:Src/main.c    ****   }
 404:Src/main.c    ****   /** DAC channel OUT2 config 
 405:Src/main.c    ****   */
 406:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 407:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 408:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 409:Src/main.c    ****   {
 410:Src/main.c    ****     Error_Handler();
 411:Src/main.c    ****   }
 412:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 2 */
 413:Src/main.c    **** 
 414:Src/main.c    ****   /* USER CODE END DAC_Init 2 */
 415:Src/main.c    **** 
 416:Src/main.c    **** }
 417:Src/main.c    **** 
 418:Src/main.c    **** /**
 419:Src/main.c    ****   * @brief SPI5 Initialization Function
 420:Src/main.c    ****   * @param None
 421:Src/main.c    ****   * @retval None
 422:Src/main.c    ****   */
 423:Src/main.c    **** static void MX_SPI5_Init(void)
 424:Src/main.c    **** {
 425:Src/main.c    **** 
 426:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 0 */
 427:Src/main.c    **** 
 428:Src/main.c    ****   /* USER CODE END SPI5_Init 0 */
 429:Src/main.c    **** 
 430:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 1 */
 431:Src/main.c    **** 
ARM GAS  /tmp/ccR9AC2d.s 			page 9


 432:Src/main.c    ****   /* USER CODE END SPI5_Init 1 */
 433:Src/main.c    ****   /* SPI5 parameter configuration*/
 434:Src/main.c    ****   hspi5.Instance = SPI5;
 435:Src/main.c    ****   hspi5.Init.Mode = SPI_MODE_SLAVE;
 436:Src/main.c    ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 437:Src/main.c    ****   hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 438:Src/main.c    ****   hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 439:Src/main.c    ****   hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 440:Src/main.c    ****   hspi5.Init.NSS = SPI_NSS_HARD_INPUT;
 441:Src/main.c    ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 442:Src/main.c    ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 443:Src/main.c    ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 444:Src/main.c    ****   hspi5.Init.CRCPolynomial = 10;
 445:Src/main.c    ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 446:Src/main.c    ****   {
 447:Src/main.c    ****     Error_Handler();
 448:Src/main.c    ****   }
 449:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 2 */
 450:Src/main.c    **** 
 451:Src/main.c    ****   /* USER CODE END SPI5_Init 2 */
 452:Src/main.c    **** 
 453:Src/main.c    **** }
 454:Src/main.c    **** 
 455:Src/main.c    **** /**
 456:Src/main.c    ****   * @brief TIM6 Initialization Function
 457:Src/main.c    ****   * @param None
 458:Src/main.c    ****   * @retval None
 459:Src/main.c    ****   */
 460:Src/main.c    **** static void MX_TIM6_Init(void)
 461:Src/main.c    **** {
 462:Src/main.c    **** 
 463:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 0 */
 464:Src/main.c    **** 
 465:Src/main.c    ****   /* USER CODE END TIM6_Init 0 */
 466:Src/main.c    **** 
 467:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 468:Src/main.c    **** 
 469:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 1 */
 470:Src/main.c    **** 
 471:Src/main.c    ****   /* USER CODE END TIM6_Init 1 */
 472:Src/main.c    ****   htim6.Instance = TIM6;
 473:Src/main.c    ****   htim6.Init.Prescaler = 0;
 474:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 475:Src/main.c    ****   htim6.Init.Period = 1290;
 476:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 477:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 478:Src/main.c    ****   {
 479:Src/main.c    ****     Error_Handler();
 480:Src/main.c    ****   }
 481:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 482:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 483:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 484:Src/main.c    ****   {
 485:Src/main.c    ****     Error_Handler();
 486:Src/main.c    ****   }
 487:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 2 */
 488:Src/main.c    **** 
ARM GAS  /tmp/ccR9AC2d.s 			page 10


 489:Src/main.c    ****   /* USER CODE END TIM6_Init 2 */
 490:Src/main.c    **** 
 491:Src/main.c    **** }
 492:Src/main.c    **** 
 493:Src/main.c    **** /**
 494:Src/main.c    ****   * @brief TIM7 Initialization Function
 495:Src/main.c    ****   * @param None
 496:Src/main.c    ****   * @retval None
 497:Src/main.c    ****   */
 498:Src/main.c    **** static void MX_TIM7_Init(void)
 499:Src/main.c    **** {
 500:Src/main.c    **** 
 501:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 0 */
 502:Src/main.c    **** 
 503:Src/main.c    ****   /* USER CODE END TIM7_Init 0 */
 504:Src/main.c    **** 
 505:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 506:Src/main.c    **** 
 507:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 1 */
 508:Src/main.c    **** 
 509:Src/main.c    ****   /* USER CODE END TIM7_Init 1 */
 510:Src/main.c    ****   htim7.Instance = TIM7;
 511:Src/main.c    ****   htim7.Init.Prescaler = 0;
 512:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 513:Src/main.c    ****   htim7.Init.Period = 10000;
 514:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 515:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 516:Src/main.c    ****   {
 517:Src/main.c    ****     Error_Handler();
 518:Src/main.c    ****   }
 519:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 520:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 521:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 522:Src/main.c    ****   {
 523:Src/main.c    ****     Error_Handler();
 524:Src/main.c    ****   }
 525:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 2 */
 526:Src/main.c    **** 
 527:Src/main.c    ****   /* USER CODE END TIM7_Init 2 */
 528:Src/main.c    **** 
 529:Src/main.c    **** }
 530:Src/main.c    **** 
 531:Src/main.c    **** /**
 532:Src/main.c    ****   * @brief USART1 Initialization Function
 533:Src/main.c    ****   * @param None
 534:Src/main.c    ****   * @retval None
 535:Src/main.c    ****   */
 536:Src/main.c    **** static void MX_USART1_UART_Init(void)
 537:Src/main.c    **** {
 538:Src/main.c    **** 
 539:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 540:Src/main.c    **** 
 541:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 542:Src/main.c    **** 
 543:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 544:Src/main.c    **** 
 545:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
ARM GAS  /tmp/ccR9AC2d.s 			page 11


 546:Src/main.c    ****   huart1.Instance = USART1;
 547:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 548:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 549:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 550:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 551:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 552:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 553:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 554:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 555:Src/main.c    ****   {
 556:Src/main.c    ****     Error_Handler();
 557:Src/main.c    ****   }
 558:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 559:Src/main.c    **** 
 560:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 561:Src/main.c    **** 
 562:Src/main.c    **** }
 563:Src/main.c    **** 
 564:Src/main.c    **** /**
 565:Src/main.c    ****   * @brief GPIO Initialization Function
 566:Src/main.c    ****   * @param None
 567:Src/main.c    ****   * @retval None
 568:Src/main.c    ****   */
 569:Src/main.c    **** static void MX_GPIO_Init(void)
 570:Src/main.c    **** {
  27              		.loc 1 570 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 56
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
  43 0004 8FB0     		sub	sp, sp, #60
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 96
 571:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  46              		.loc 1 571 0
  47 0006 0024     		movs	r4, #0
  48 0008 0994     		str	r4, [sp, #36]
  49 000a 0A94     		str	r4, [sp, #40]
  50 000c 0B94     		str	r4, [sp, #44]
  51 000e 0C94     		str	r4, [sp, #48]
  52 0010 0D94     		str	r4, [sp, #52]
  53              	.LBB2:
 572:Src/main.c    **** 
 573:Src/main.c    ****   /* GPIO Ports Clock Enable */
 574:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  54              		.loc 1 574 0
ARM GAS  /tmp/ccR9AC2d.s 			page 12


  55 0012 0194     		str	r4, [sp, #4]
  56 0014 AA4B     		ldr	r3, .L3
  57 0016 1A6B     		ldr	r2, [r3, #48]
  58 0018 42F00402 		orr	r2, r2, #4
  59 001c 1A63     		str	r2, [r3, #48]
  60 001e 1A6B     		ldr	r2, [r3, #48]
  61 0020 02F00402 		and	r2, r2, #4
  62 0024 0192     		str	r2, [sp, #4]
  63 0026 019A     		ldr	r2, [sp, #4]
  64              	.LBE2:
  65              	.LBB3:
 575:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  66              		.loc 1 575 0
  67 0028 0294     		str	r4, [sp, #8]
  68 002a 1A6B     		ldr	r2, [r3, #48]
  69 002c 42F02002 		orr	r2, r2, #32
  70 0030 1A63     		str	r2, [r3, #48]
  71 0032 1A6B     		ldr	r2, [r3, #48]
  72 0034 02F02002 		and	r2, r2, #32
  73 0038 0292     		str	r2, [sp, #8]
  74 003a 029A     		ldr	r2, [sp, #8]
  75              	.LBE3:
  76              	.LBB4:
 576:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  77              		.loc 1 576 0
  78 003c 0394     		str	r4, [sp, #12]
  79 003e 1A6B     		ldr	r2, [r3, #48]
  80 0040 42F08002 		orr	r2, r2, #128
  81 0044 1A63     		str	r2, [r3, #48]
  82 0046 1A6B     		ldr	r2, [r3, #48]
  83 0048 02F08002 		and	r2, r2, #128
  84 004c 0392     		str	r2, [sp, #12]
  85 004e 039A     		ldr	r2, [sp, #12]
  86              	.LBE4:
  87              	.LBB5:
 577:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  88              		.loc 1 577 0
  89 0050 0494     		str	r4, [sp, #16]
  90 0052 1A6B     		ldr	r2, [r3, #48]
  91 0054 42F00102 		orr	r2, r2, #1
  92 0058 1A63     		str	r2, [r3, #48]
  93 005a 1A6B     		ldr	r2, [r3, #48]
  94 005c 02F00102 		and	r2, r2, #1
  95 0060 0492     		str	r2, [sp, #16]
  96 0062 049A     		ldr	r2, [sp, #16]
  97              	.LBE5:
  98              	.LBB6:
 578:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  99              		.loc 1 578 0
 100 0064 0594     		str	r4, [sp, #20]
 101 0066 1A6B     		ldr	r2, [r3, #48]
 102 0068 42F00202 		orr	r2, r2, #2
 103 006c 1A63     		str	r2, [r3, #48]
 104 006e 1A6B     		ldr	r2, [r3, #48]
 105 0070 02F00202 		and	r2, r2, #2
 106 0074 0592     		str	r2, [sp, #20]
 107 0076 059A     		ldr	r2, [sp, #20]
ARM GAS  /tmp/ccR9AC2d.s 			page 13


 108              	.LBE6:
 109              	.LBB7:
 579:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 110              		.loc 1 579 0
 111 0078 0694     		str	r4, [sp, #24]
 112 007a 1A6B     		ldr	r2, [r3, #48]
 113 007c 42F04002 		orr	r2, r2, #64
 114 0080 1A63     		str	r2, [r3, #48]
 115 0082 1A6B     		ldr	r2, [r3, #48]
 116 0084 02F04002 		and	r2, r2, #64
 117 0088 0692     		str	r2, [sp, #24]
 118 008a 069A     		ldr	r2, [sp, #24]
 119              	.LBE7:
 120              	.LBB8:
 580:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 121              		.loc 1 580 0
 122 008c 0794     		str	r4, [sp, #28]
 123 008e 1A6B     		ldr	r2, [r3, #48]
 124 0090 42F01002 		orr	r2, r2, #16
 125 0094 1A63     		str	r2, [r3, #48]
 126 0096 1A6B     		ldr	r2, [r3, #48]
 127 0098 02F01002 		and	r2, r2, #16
 128 009c 0792     		str	r2, [sp, #28]
 129 009e 079A     		ldr	r2, [sp, #28]
 130              	.LBE8:
 131              	.LBB9:
 581:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 132              		.loc 1 581 0
 133 00a0 0894     		str	r4, [sp, #32]
 134 00a2 1A6B     		ldr	r2, [r3, #48]
 135 00a4 42F00802 		orr	r2, r2, #8
 136 00a8 1A63     		str	r2, [r3, #48]
 137 00aa 1B6B     		ldr	r3, [r3, #48]
 138 00ac 03F00803 		and	r3, r3, #8
 139 00b0 0893     		str	r3, [sp, #32]
 140 00b2 089B     		ldr	r3, [sp, #32]
 141              	.LBE9:
 582:Src/main.c    **** 
 583:Src/main.c    ****   /*Configure GPIO pin Output Level */
 584:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin, GPIO_PIN_RESET);
 142              		.loc 1 584 0
 143 00b4 2246     		mov	r2, r4
 144 00b6 1621     		movs	r1, #22
 145 00b8 8248     		ldr	r0, .L3+4
 146 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 147              	.LVL0:
 585:Src/main.c    **** 
 586:Src/main.c    ****   /*Configure GPIO pin Output Level */
 587:Src/main.c    ****   HAL_GPIO_WritePin(ACP_RST_GPIO_Port, ACP_RST_Pin, GPIO_PIN_RESET);
 148              		.loc 1 587 0
 149 00be 2246     		mov	r2, r4
 150 00c0 8021     		movs	r1, #128
 151 00c2 8148     		ldr	r0, .L3+8
 152 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 153              	.LVL1:
 588:Src/main.c    **** 
 589:Src/main.c    ****   /*Configure GPIO pin Output Level */
ARM GAS  /tmp/ccR9AC2d.s 			page 14


 590:Src/main.c    ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15, GPIO_PIN_RESET);
 154              		.loc 1 590 0
 155 00c8 DFF814A2 		ldr	r10, .L3+32
 156 00cc 2246     		mov	r2, r4
 157 00ce 4FF46041 		mov	r1, #57344
 158 00d2 5046     		mov	r0, r10
 159 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 160              	.LVL2:
 591:Src/main.c    **** 
 592:Src/main.c    ****   /*Configure GPIO pin Output Level */
 593:Src/main.c    ****   HAL_GPIO_WritePin(GPIOG, GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD4_Pin, GPIO_PIN_RESET);
 161              		.loc 1 593 0
 162 00d8 2246     		mov	r2, r4
 163 00da 46F20301 		movw	r1, #24579
 164 00de 7B48     		ldr	r0, .L3+12
 165 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 166              	.LVL3:
 594:Src/main.c    **** 
 595:Src/main.c    ****   /*Configure GPIO pin Output Level */
 596:Src/main.c    ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 167              		.loc 1 596 0
 168 00e4 2246     		mov	r2, r4
 169 00e6 4FF68071 		movw	r1, #65408
 170 00ea 7948     		ldr	r0, .L3+16
 171 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 172              	.LVL4:
 597:Src/main.c    ****                           |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
 598:Src/main.c    ****                           |GPIO_PIN_15, GPIO_PIN_RESET);
 599:Src/main.c    **** 
 600:Src/main.c    ****   /*Configure GPIO pin Output Level */
 601:Src/main.c    ****   HAL_GPIO_WritePin(GPIOD, RDX_Pin|WRX_DCX_Pin, GPIO_PIN_RESET);
 173              		.loc 1 601 0
 174 00f0 2246     		mov	r2, r4
 175 00f2 4FF44051 		mov	r1, #12288
 176 00f6 7748     		ldr	r0, .L3+20
 177 00f8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 178              	.LVL5:
 602:Src/main.c    **** 
 603:Src/main.c    ****   /*Configure GPIO pins : A0_Pin A1_Pin A2_Pin A3_Pin 
 604:Src/main.c    ****                            A4_Pin A5_Pin SDNRAS_Pin A6_Pin */
 605:Src/main.c    ****   GPIO_InitStruct.Pin = A0_Pin|A1_Pin|A2_Pin|A3_Pin 
 179              		.loc 1 605 0
 180 00fc 41F63F03 		movw	r3, #6207
 181 0100 0993     		str	r3, [sp, #36]
 606:Src/main.c    ****                           |A4_Pin|A5_Pin|SDNRAS_Pin|A6_Pin;
 607:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 182              		.loc 1 607 0
 183 0102 0225     		movs	r5, #2
 184 0104 0A95     		str	r5, [sp, #40]
 608:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 185              		.loc 1 608 0
 186 0106 0B94     		str	r4, [sp, #44]
 609:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 187              		.loc 1 609 0
 188 0108 0327     		movs	r7, #3
 189 010a 0C97     		str	r7, [sp, #48]
 610:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
ARM GAS  /tmp/ccR9AC2d.s 			page 15


 190              		.loc 1 610 0
 191 010c 4FF00C08 		mov	r8, #12
 192 0110 CDF83480 		str	r8, [sp, #52]
 611:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 193              		.loc 1 611 0
 194 0114 09A9     		add	r1, sp, #36
 195 0116 5046     		mov	r0, r10
 196 0118 FFF7FEFF 		bl	HAL_GPIO_Init
 197              	.LVL6:
 612:Src/main.c    **** 
 613:Src/main.c    ****   /*Configure GPIO pin : PF10 */
 614:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_10;
 198              		.loc 1 614 0
 199 011c 4FF48063 		mov	r3, #1024
 200 0120 0993     		str	r3, [sp, #36]
 615:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 201              		.loc 1 615 0
 202 0122 6D4B     		ldr	r3, .L3+24
 203 0124 0A93     		str	r3, [sp, #40]
 616:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 204              		.loc 1 616 0
 205 0126 0B94     		str	r4, [sp, #44]
 617:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 206              		.loc 1 617 0
 207 0128 09A9     		add	r1, sp, #36
 208 012a 5046     		mov	r0, r10
 209 012c FFF7FEFF 		bl	HAL_GPIO_Init
 210              	.LVL7:
 618:Src/main.c    **** 
 619:Src/main.c    ****   /*Configure GPIO pin : SDNWE_Pin */
 620:Src/main.c    ****   GPIO_InitStruct.Pin = SDNWE_Pin;
 211              		.loc 1 620 0
 212 0130 0126     		movs	r6, #1
 213 0132 0996     		str	r6, [sp, #36]
 621:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 214              		.loc 1 621 0
 215 0134 0A95     		str	r5, [sp, #40]
 622:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 216              		.loc 1 622 0
 217 0136 0B94     		str	r4, [sp, #44]
 623:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 218              		.loc 1 623 0
 219 0138 0C97     		str	r7, [sp, #48]
 624:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 220              		.loc 1 624 0
 221 013a CDF83480 		str	r8, [sp, #52]
 625:Src/main.c    ****   HAL_GPIO_Init(SDNWE_GPIO_Port, &GPIO_InitStruct);
 222              		.loc 1 625 0
 223 013e 09A9     		add	r1, sp, #36
 224 0140 6048     		ldr	r0, .L3+4
 225 0142 FFF7FEFF 		bl	HAL_GPIO_Init
 226              	.LVL8:
 626:Src/main.c    **** 
 627:Src/main.c    ****   /*Configure GPIO pins : NCS_MEMS_SPI_Pin CSX_Pin OTG_FS_PSO_Pin */
 628:Src/main.c    ****   GPIO_InitStruct.Pin = NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin;
 227              		.loc 1 628 0
 228 0146 1623     		movs	r3, #22
ARM GAS  /tmp/ccR9AC2d.s 			page 16


 229 0148 0993     		str	r3, [sp, #36]
 629:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 230              		.loc 1 629 0
 231 014a 0A96     		str	r6, [sp, #40]
 630:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 232              		.loc 1 630 0
 233 014c 0B94     		str	r4, [sp, #44]
 631:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 234              		.loc 1 631 0
 235 014e 0C94     		str	r4, [sp, #48]
 632:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 236              		.loc 1 632 0
 237 0150 09A9     		add	r1, sp, #36
 238 0152 5C48     		ldr	r0, .L3+4
 239 0154 FFF7FEFF 		bl	HAL_GPIO_Init
 240              	.LVL9:
 633:Src/main.c    **** 
 634:Src/main.c    ****   /*Configure GPIO pins : B1_Pin MEMS_INT1_Pin MEMS_INT2_Pin TP_INT1_Pin */
 635:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin|MEMS_INT1_Pin|MEMS_INT2_Pin|TP_INT1_Pin;
 241              		.loc 1 635 0
 242 0158 48F20703 		movw	r3, #32775
 243 015c 0993     		str	r3, [sp, #36]
 636:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 244              		.loc 1 636 0
 245 015e DFF884B1 		ldr	fp, .L3+36
 246 0162 CDF828B0 		str	fp, [sp, #40]
 637:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 247              		.loc 1 637 0
 248 0166 0B94     		str	r4, [sp, #44]
 638:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 249              		.loc 1 638 0
 250 0168 09A9     		add	r1, sp, #36
 251 016a 5748     		ldr	r0, .L3+8
 252 016c FFF7FEFF 		bl	HAL_GPIO_Init
 253              	.LVL10:
 639:Src/main.c    **** 
 640:Src/main.c    ****   /*Configure GPIO pins : B5_Pin VSYNC_Pin G2_Pin R4_Pin 
 641:Src/main.c    ****                            R5_Pin */
 642:Src/main.c    ****   GPIO_InitStruct.Pin = B5_Pin|VSYNC_Pin|G2_Pin|R4_Pin 
 254              		.loc 1 642 0
 255 0170 41F65803 		movw	r3, #6232
 256 0174 0993     		str	r3, [sp, #36]
 643:Src/main.c    ****                           |R5_Pin;
 644:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 257              		.loc 1 644 0
 258 0176 0A95     		str	r5, [sp, #40]
 645:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 259              		.loc 1 645 0
 260 0178 0B94     		str	r4, [sp, #44]
 646:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 261              		.loc 1 646 0
 262 017a 0C94     		str	r4, [sp, #48]
 647:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 263              		.loc 1 647 0
 264 017c 4FF00E09 		mov	r9, #14
 265 0180 CDF83490 		str	r9, [sp, #52]
 648:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
ARM GAS  /tmp/ccR9AC2d.s 			page 17


 266              		.loc 1 648 0
 267 0184 09A9     		add	r1, sp, #36
 268 0186 5048     		ldr	r0, .L3+8
 269 0188 FFF7FEFF 		bl	HAL_GPIO_Init
 270              	.LVL11:
 649:Src/main.c    **** 
 650:Src/main.c    ****   /*Configure GPIO pin : ACP_RST_Pin */
 651:Src/main.c    ****   GPIO_InitStruct.Pin = ACP_RST_Pin;
 271              		.loc 1 651 0
 272 018c 8023     		movs	r3, #128
 273 018e 0993     		str	r3, [sp, #36]
 652:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 274              		.loc 1 652 0
 275 0190 0A96     		str	r6, [sp, #40]
 653:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 276              		.loc 1 653 0
 277 0192 0B94     		str	r4, [sp, #44]
 654:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 278              		.loc 1 654 0
 279 0194 0C94     		str	r4, [sp, #48]
 655:Src/main.c    ****   HAL_GPIO_Init(ACP_RST_GPIO_Port, &GPIO_InitStruct);
 280              		.loc 1 655 0
 281 0196 09A9     		add	r1, sp, #36
 282 0198 4B48     		ldr	r0, .L3+8
 283 019a FFF7FEFF 		bl	HAL_GPIO_Init
 284              	.LVL12:
 656:Src/main.c    **** 
 657:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_OC_Pin */
 658:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_OC_Pin;
 285              		.loc 1 658 0
 286 019e 2023     		movs	r3, #32
 287 01a0 0993     		str	r3, [sp, #36]
 659:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 288              		.loc 1 659 0
 289 01a2 CDF828B0 		str	fp, [sp, #40]
 660:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 290              		.loc 1 660 0
 291 01a6 0B94     		str	r4, [sp, #44]
 661:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_OC_GPIO_Port, &GPIO_InitStruct);
 292              		.loc 1 661 0
 293 01a8 09A9     		add	r1, sp, #36
 294 01aa 4648     		ldr	r0, .L3+4
 295 01ac FFF7FEFF 		bl	HAL_GPIO_Init
 296              	.LVL13:
 662:Src/main.c    **** 
 663:Src/main.c    ****   /*Configure GPIO pins : R3_Pin R6_Pin */
 664:Src/main.c    ****   GPIO_InitStruct.Pin = R3_Pin|R6_Pin;
 297              		.loc 1 664 0
 298 01b0 0997     		str	r7, [sp, #36]
 665:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 299              		.loc 1 665 0
 300 01b2 0A95     		str	r5, [sp, #40]
 666:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 301              		.loc 1 666 0
 302 01b4 0B94     		str	r4, [sp, #44]
 667:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 303              		.loc 1 667 0
ARM GAS  /tmp/ccR9AC2d.s 			page 18


 304 01b6 0C94     		str	r4, [sp, #48]
 668:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 305              		.loc 1 668 0
 306 01b8 0923     		movs	r3, #9
 307 01ba 0D93     		str	r3, [sp, #52]
 669:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 308              		.loc 1 669 0
 309 01bc 09A9     		add	r1, sp, #36
 310 01be 4748     		ldr	r0, .L3+28
 311 01c0 FFF7FEFF 		bl	HAL_GPIO_Init
 312              	.LVL14:
 670:Src/main.c    **** 
 671:Src/main.c    ****   /*Configure GPIO pin : BOOT1_Pin */
 672:Src/main.c    ****   GPIO_InitStruct.Pin = BOOT1_Pin;
 313              		.loc 1 672 0
 314 01c4 4FF0040B 		mov	fp, #4
 315 01c8 CDF824B0 		str	fp, [sp, #36]
 673:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 316              		.loc 1 673 0
 317 01cc 0A94     		str	r4, [sp, #40]
 674:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 318              		.loc 1 674 0
 319 01ce 0B94     		str	r4, [sp, #44]
 675:Src/main.c    ****   HAL_GPIO_Init(BOOT1_GPIO_Port, &GPIO_InitStruct);
 320              		.loc 1 675 0
 321 01d0 09A9     		add	r1, sp, #36
 322 01d2 4248     		ldr	r0, .L3+28
 323 01d4 FFF7FEFF 		bl	HAL_GPIO_Init
 324              	.LVL15:
 676:Src/main.c    **** 
 677:Src/main.c    ****   /*Configure GPIO pins : PF13 PF14 PF15 */
 678:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 325              		.loc 1 678 0
 326 01d8 4FF46043 		mov	r3, #57344
 327 01dc 0993     		str	r3, [sp, #36]
 679:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 328              		.loc 1 679 0
 329 01de 0A96     		str	r6, [sp, #40]
 680:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 330              		.loc 1 680 0
 331 01e0 0B94     		str	r4, [sp, #44]
 681:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 332              		.loc 1 681 0
 333 01e2 0C94     		str	r4, [sp, #48]
 682:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 334              		.loc 1 682 0
 335 01e4 09A9     		add	r1, sp, #36
 336 01e6 5046     		mov	r0, r10
 337 01e8 FFF7FEFF 		bl	HAL_GPIO_Init
 338              	.LVL16:
 683:Src/main.c    **** 
 684:Src/main.c    ****   /*Configure GPIO pins : PG0 PG1 LD3_Pin LD4_Pin */
 685:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD4_Pin;
 339              		.loc 1 685 0
 340 01ec 46F20303 		movw	r3, #24579
 341 01f0 0993     		str	r3, [sp, #36]
 686:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  /tmp/ccR9AC2d.s 			page 19


 342              		.loc 1 686 0
 343 01f2 0A96     		str	r6, [sp, #40]
 687:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 344              		.loc 1 687 0
 345 01f4 0B94     		str	r4, [sp, #44]
 688:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 346              		.loc 1 688 0
 347 01f6 0C94     		str	r4, [sp, #48]
 689:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 348              		.loc 1 689 0
 349 01f8 09A9     		add	r1, sp, #36
 350 01fa 3448     		ldr	r0, .L3+12
 351 01fc FFF7FEFF 		bl	HAL_GPIO_Init
 352              	.LVL17:
 690:Src/main.c    **** 
 691:Src/main.c    ****   /*Configure GPIO pins : PE7 PE8 PE9 PE10 
 692:Src/main.c    ****                            PE11 PE12 PE13 PE14 
 693:Src/main.c    ****                            PE15 */
 694:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 353              		.loc 1 694 0
 354 0200 4FF68073 		movw	r3, #65408
 355 0204 0993     		str	r3, [sp, #36]
 695:Src/main.c    ****                           |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
 696:Src/main.c    ****                           |GPIO_PIN_15;
 697:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 356              		.loc 1 697 0
 357 0206 0A96     		str	r6, [sp, #40]
 698:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 358              		.loc 1 698 0
 359 0208 0B94     		str	r4, [sp, #44]
 699:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 360              		.loc 1 699 0
 361 020a 0C94     		str	r4, [sp, #48]
 700:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 362              		.loc 1 700 0
 363 020c 09A9     		add	r1, sp, #36
 364 020e 3048     		ldr	r0, .L3+16
 365 0210 FFF7FEFF 		bl	HAL_GPIO_Init
 366              	.LVL18:
 701:Src/main.c    **** 
 702:Src/main.c    ****   /*Configure GPIO pins : G4_Pin G5_Pin B6_Pin B7_Pin */
 703:Src/main.c    ****   GPIO_InitStruct.Pin = G4_Pin|G5_Pin|B6_Pin|B7_Pin;
 367              		.loc 1 703 0
 368 0214 4FF47063 		mov	r3, #3840
 369 0218 0993     		str	r3, [sp, #36]
 704:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 370              		.loc 1 704 0
 371 021a 0A95     		str	r5, [sp, #40]
 705:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 372              		.loc 1 705 0
 373 021c 0B94     		str	r4, [sp, #44]
 706:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 374              		.loc 1 706 0
 375 021e 0C94     		str	r4, [sp, #48]
 707:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 376              		.loc 1 707 0
 377 0220 CDF83490 		str	r9, [sp, #52]
ARM GAS  /tmp/ccR9AC2d.s 			page 20


 708:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 378              		.loc 1 708 0
 379 0224 09A9     		add	r1, sp, #36
 380 0226 2D48     		ldr	r0, .L3+28
 381 0228 FFF7FEFF 		bl	HAL_GPIO_Init
 382              	.LVL19:
 709:Src/main.c    **** 
 710:Src/main.c    ****   /*Configure GPIO pins : OTG_HS_ID_Pin OTG_HS_DM_Pin OTG_HS_DP_Pin */
 711:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_HS_ID_Pin|OTG_HS_DM_Pin|OTG_HS_DP_Pin;
 383              		.loc 1 711 0
 384 022c 4FF45043 		mov	r3, #53248
 385 0230 0993     		str	r3, [sp, #36]
 712:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 386              		.loc 1 712 0
 387 0232 0A95     		str	r5, [sp, #40]
 713:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 388              		.loc 1 713 0
 389 0234 0B94     		str	r4, [sp, #44]
 714:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 390              		.loc 1 714 0
 391 0236 0C94     		str	r4, [sp, #48]
 715:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;
 392              		.loc 1 715 0
 393 0238 CDF83480 		str	r8, [sp, #52]
 716:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 394              		.loc 1 716 0
 395 023c 09A9     		add	r1, sp, #36
 396 023e 2748     		ldr	r0, .L3+28
 397 0240 FFF7FEFF 		bl	HAL_GPIO_Init
 398              	.LVL20:
 717:Src/main.c    **** 
 718:Src/main.c    ****   /*Configure GPIO pin : VBUS_HS_Pin */
 719:Src/main.c    ****   GPIO_InitStruct.Pin = VBUS_HS_Pin;
 399              		.loc 1 719 0
 400 0244 4FF40053 		mov	r3, #8192
 401 0248 0993     		str	r3, [sp, #36]
 720:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 402              		.loc 1 720 0
 403 024a 0A94     		str	r4, [sp, #40]
 721:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 404              		.loc 1 721 0
 405 024c 0B94     		str	r4, [sp, #44]
 722:Src/main.c    ****   HAL_GPIO_Init(VBUS_HS_GPIO_Port, &GPIO_InitStruct);
 406              		.loc 1 722 0
 407 024e 09A9     		add	r1, sp, #36
 408 0250 2248     		ldr	r0, .L3+28
 409 0252 FFF7FEFF 		bl	HAL_GPIO_Init
 410              	.LVL21:
 723:Src/main.c    **** 
 724:Src/main.c    ****   /*Configure GPIO pins : D13_Pin D14_Pin D15_Pin D0_Pin 
 725:Src/main.c    ****                            D1_Pin D2_Pin D3_Pin */
 726:Src/main.c    ****   GPIO_InitStruct.Pin = D13_Pin|D14_Pin|D15_Pin|D0_Pin 
 411              		.loc 1 726 0
 412 0256 4CF20373 		movw	r3, #50947
 413 025a 0993     		str	r3, [sp, #36]
 727:Src/main.c    ****                           |D1_Pin|D2_Pin|D3_Pin;
 728:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  /tmp/ccR9AC2d.s 			page 21


 414              		.loc 1 728 0
 415 025c 0A95     		str	r5, [sp, #40]
 729:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 416              		.loc 1 729 0
 417 025e 0B94     		str	r4, [sp, #44]
 730:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 418              		.loc 1 730 0
 419 0260 0C97     		str	r7, [sp, #48]
 731:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 420              		.loc 1 731 0
 421 0262 CDF83480 		str	r8, [sp, #52]
 732:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 422              		.loc 1 732 0
 423 0266 09A9     		add	r1, sp, #36
 424 0268 1A48     		ldr	r0, .L3+20
 425 026a FFF7FEFF 		bl	HAL_GPIO_Init
 426              	.LVL22:
 733:Src/main.c    **** 
 734:Src/main.c    ****   /*Configure GPIO pin : TE_Pin */
 735:Src/main.c    ****   GPIO_InitStruct.Pin = TE_Pin;
 427              		.loc 1 735 0
 428 026e 4FF40063 		mov	r3, #2048
 429 0272 0993     		str	r3, [sp, #36]
 736:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 430              		.loc 1 736 0
 431 0274 0A94     		str	r4, [sp, #40]
 737:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 432              		.loc 1 737 0
 433 0276 0B94     		str	r4, [sp, #44]
 738:Src/main.c    ****   HAL_GPIO_Init(TE_GPIO_Port, &GPIO_InitStruct);
 434              		.loc 1 738 0
 435 0278 09A9     		add	r1, sp, #36
 436 027a 1648     		ldr	r0, .L3+20
 437 027c FFF7FEFF 		bl	HAL_GPIO_Init
 438              	.LVL23:
 739:Src/main.c    **** 
 740:Src/main.c    ****   /*Configure GPIO pins : RDX_Pin WRX_DCX_Pin */
 741:Src/main.c    ****   GPIO_InitStruct.Pin = RDX_Pin|WRX_DCX_Pin;
 439              		.loc 1 741 0
 440 0280 4FF44053 		mov	r3, #12288
 441 0284 0993     		str	r3, [sp, #36]
 742:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 442              		.loc 1 742 0
 443 0286 0A96     		str	r6, [sp, #40]
 743:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 444              		.loc 1 743 0
 445 0288 0B94     		str	r4, [sp, #44]
 744:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 446              		.loc 1 744 0
 447 028a 0C94     		str	r4, [sp, #48]
 745:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 448              		.loc 1 745 0
 449 028c 09A9     		add	r1, sp, #36
 450 028e 1148     		ldr	r0, .L3+20
 451 0290 FFF7FEFF 		bl	HAL_GPIO_Init
 452              	.LVL24:
 746:Src/main.c    **** 
ARM GAS  /tmp/ccR9AC2d.s 			page 22


 747:Src/main.c    ****   /*Configure GPIO pins : BA0_Pin BA1_Pin SDCLK_Pin SDNCAS_Pin */
 748:Src/main.c    ****   GPIO_InitStruct.Pin = BA0_Pin|BA1_Pin|SDCLK_Pin|SDNCAS_Pin;
 453              		.loc 1 748 0
 454 0294 48F23013 		movw	r3, #33072
 455 0298 0993     		str	r3, [sp, #36]
 749:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 456              		.loc 1 749 0
 457 029a 0A95     		str	r5, [sp, #40]
 750:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 458              		.loc 1 750 0
 459 029c 0B94     		str	r4, [sp, #44]
 751:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 460              		.loc 1 751 0
 461 029e 0C97     		str	r7, [sp, #48]
 752:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 462              		.loc 1 752 0
 463 02a0 CDF83480 		str	r8, [sp, #52]
 753:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 464              		.loc 1 753 0
 465 02a4 09A9     		add	r1, sp, #36
 466 02a6 0948     		ldr	r0, .L3+12
 467 02a8 FFF7FEFF 		bl	HAL_GPIO_Init
 468              	.LVL25:
 754:Src/main.c    **** 
 755:Src/main.c    ****   /*Configure GPIO pins : R7_Pin DOTCLK_Pin B3_Pin */
 756:Src/main.c    ****   GPIO_InitStruct.Pin = R7_Pin|DOTCLK_Pin|B3_Pin;
 469              		.loc 1 756 0
 470 02ac 4FF40C63 		mov	r3, #2240
 471 02b0 0993     		str	r3, [sp, #36]
 757:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 472              		.loc 1 757 0
 473 02b2 0A95     		str	r5, [sp, #40]
 758:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 474              		.loc 1 758 0
 475 02b4 0B94     		str	r4, [sp, #44]
 759:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 476              		.loc 1 759 0
 477 02b6 0C94     		str	r4, [sp, #48]
 760:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 478              		.loc 1 760 0
 479 02b8 CDF83490 		str	r9, [sp, #52]
 480 02bc 14E0     		b	.L4
 481              	.L5:
 482 02be 00BF     		.align	2
 483              	.L3:
 484 02c0 00380240 		.word	1073887232
 485 02c4 00080240 		.word	1073874944
 486 02c8 00000240 		.word	1073872896
 487 02cc 00180240 		.word	1073879040
 488 02d0 00100240 		.word	1073876992
 489 02d4 000C0240 		.word	1073875968
 490 02d8 00001110 		.word	269549568
 491 02dc 00040240 		.word	1073873920
 492 02e0 00140240 		.word	1073878016
 493 02e4 00001210 		.word	269615104
 494              	.L4:
 761:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
ARM GAS  /tmp/ccR9AC2d.s 			page 23


 495              		.loc 1 761 0
 496 02e8 09A9     		add	r1, sp, #36
 497 02ea 3148     		ldr	r0, .L6
 498 02ec FFF7FEFF 		bl	HAL_GPIO_Init
 499              	.LVL26:
 762:Src/main.c    **** 
 763:Src/main.c    ****   /*Configure GPIO pins : HSYNC_Pin G6_Pin R2_Pin */
 764:Src/main.c    ****   GPIO_InitStruct.Pin = HSYNC_Pin|G6_Pin|R2_Pin;
 500              		.loc 1 764 0
 501 02f0 4FF49863 		mov	r3, #1216
 502 02f4 0993     		str	r3, [sp, #36]
 765:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 503              		.loc 1 765 0
 504 02f6 0A95     		str	r5, [sp, #40]
 766:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 505              		.loc 1 766 0
 506 02f8 0B94     		str	r4, [sp, #44]
 767:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 507              		.loc 1 767 0
 508 02fa 0C94     		str	r4, [sp, #48]
 768:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 509              		.loc 1 768 0
 510 02fc CDF83490 		str	r9, [sp, #52]
 769:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 511              		.loc 1 769 0
 512 0300 09A9     		add	r1, sp, #36
 513 0302 2C48     		ldr	r0, .L6+4
 514 0304 FFF7FEFF 		bl	HAL_GPIO_Init
 515              	.LVL27:
 770:Src/main.c    **** 
 771:Src/main.c    ****   /*Configure GPIO pin : I2C3_SDA_Pin */
 772:Src/main.c    ****   GPIO_InitStruct.Pin = I2C3_SDA_Pin;
 516              		.loc 1 772 0
 517 0308 4FF40073 		mov	r3, #512
 518 030c 0993     		str	r3, [sp, #36]
 773:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 519              		.loc 1 773 0
 520 030e 4FF0120A 		mov	r10, #18
 521 0312 CDF828A0 		str	r10, [sp, #40]
 774:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 522              		.loc 1 774 0
 523 0316 0B96     		str	r6, [sp, #44]
 775:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 524              		.loc 1 775 0
 525 0318 0C94     		str	r4, [sp, #48]
 776:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 526              		.loc 1 776 0
 527 031a CDF834B0 		str	fp, [sp, #52]
 777:Src/main.c    ****   HAL_GPIO_Init(I2C3_SDA_GPIO_Port, &GPIO_InitStruct);
 528              		.loc 1 777 0
 529 031e 09A9     		add	r1, sp, #36
 530 0320 2448     		ldr	r0, .L6+4
 531 0322 FFF7FEFF 		bl	HAL_GPIO_Init
 532              	.LVL28:
 778:Src/main.c    **** 
 779:Src/main.c    ****   /*Configure GPIO pin : I2C3_SCL_Pin */
 780:Src/main.c    ****   GPIO_InitStruct.Pin = I2C3_SCL_Pin;
ARM GAS  /tmp/ccR9AC2d.s 			page 24


 533              		.loc 1 780 0
 534 0326 4FF48073 		mov	r3, #256
 535 032a 0993     		str	r3, [sp, #36]
 781:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 536              		.loc 1 781 0
 537 032c CDF828A0 		str	r10, [sp, #40]
 782:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 538              		.loc 1 782 0
 539 0330 0B96     		str	r6, [sp, #44]
 783:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 540              		.loc 1 783 0
 541 0332 0C94     		str	r4, [sp, #48]
 784:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 542              		.loc 1 784 0
 543 0334 CDF834B0 		str	fp, [sp, #52]
 785:Src/main.c    ****   HAL_GPIO_Init(I2C3_SCL_GPIO_Port, &GPIO_InitStruct);
 544              		.loc 1 785 0
 545 0338 09A9     		add	r1, sp, #36
 546 033a 1F48     		ldr	r0, .L6+8
 547 033c FFF7FEFF 		bl	HAL_GPIO_Init
 548              	.LVL29:
 786:Src/main.c    **** 
 787:Src/main.c    ****   /*Configure GPIO pins : G7_Pin B2_Pin */
 788:Src/main.c    ****   GPIO_InitStruct.Pin = G7_Pin|B2_Pin;
 549              		.loc 1 788 0
 550 0340 4823     		movs	r3, #72
 551 0342 0993     		str	r3, [sp, #36]
 789:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 552              		.loc 1 789 0
 553 0344 0A95     		str	r5, [sp, #40]
 790:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 554              		.loc 1 790 0
 555 0346 0B94     		str	r4, [sp, #44]
 791:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 556              		.loc 1 791 0
 557 0348 0C94     		str	r4, [sp, #48]
 792:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 558              		.loc 1 792 0
 559 034a CDF83490 		str	r9, [sp, #52]
 793:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 560              		.loc 1 793 0
 561 034e 09A9     		add	r1, sp, #36
 562 0350 1A48     		ldr	r0, .L6+12
 563 0352 FFF7FEFF 		bl	HAL_GPIO_Init
 564              	.LVL30:
 794:Src/main.c    **** 
 795:Src/main.c    ****   /*Configure GPIO pins : G3_Pin B4_Pin */
 796:Src/main.c    ****   GPIO_InitStruct.Pin = G3_Pin|B4_Pin;
 565              		.loc 1 796 0
 566 0356 4FF4A053 		mov	r3, #5120
 567 035a 0993     		str	r3, [sp, #36]
 797:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 568              		.loc 1 797 0
 569 035c 0A95     		str	r5, [sp, #40]
 798:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 570              		.loc 1 798 0
 571 035e 0B94     		str	r4, [sp, #44]
ARM GAS  /tmp/ccR9AC2d.s 			page 25


 799:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 572              		.loc 1 799 0
 573 0360 0C94     		str	r4, [sp, #48]
 800:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 574              		.loc 1 800 0
 575 0362 0923     		movs	r3, #9
 576 0364 0D93     		str	r3, [sp, #52]
 801:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 577              		.loc 1 801 0
 578 0366 09A9     		add	r1, sp, #36
 579 0368 1148     		ldr	r0, .L6
 580 036a FFF7FEFF 		bl	HAL_GPIO_Init
 581              	.LVL31:
 802:Src/main.c    **** 
 803:Src/main.c    ****   /*Configure GPIO pins : SDCKE1_Pin SDNE1_Pin */
 804:Src/main.c    ****   GPIO_InitStruct.Pin = SDCKE1_Pin|SDNE1_Pin;
 582              		.loc 1 804 0
 583 036e 6023     		movs	r3, #96
 584 0370 0993     		str	r3, [sp, #36]
 805:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 585              		.loc 1 805 0
 586 0372 0A95     		str	r5, [sp, #40]
 806:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 587              		.loc 1 806 0
 588 0374 0B94     		str	r4, [sp, #44]
 807:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 589              		.loc 1 807 0
 590 0376 0C97     		str	r7, [sp, #48]
 808:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 591              		.loc 1 808 0
 592 0378 CDF83480 		str	r8, [sp, #52]
 809:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 593              		.loc 1 809 0
 594 037c 09A9     		add	r1, sp, #36
 595 037e 1048     		ldr	r0, .L6+16
 596 0380 FFF7FEFF 		bl	HAL_GPIO_Init
 597              	.LVL32:
 810:Src/main.c    **** 
 811:Src/main.c    ****   /*Configure GPIO pins : NBL0_Pin NBL1_Pin */
 812:Src/main.c    ****   GPIO_InitStruct.Pin = NBL0_Pin|NBL1_Pin;
 598              		.loc 1 812 0
 599 0384 0997     		str	r7, [sp, #36]
 813:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 600              		.loc 1 813 0
 601 0386 0A95     		str	r5, [sp, #40]
 814:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 602              		.loc 1 814 0
 603 0388 0B94     		str	r4, [sp, #44]
 815:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 604              		.loc 1 815 0
 605 038a 0C97     		str	r7, [sp, #48]
 816:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 606              		.loc 1 816 0
 607 038c CDF83480 		str	r8, [sp, #52]
 817:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 608              		.loc 1 817 0
 609 0390 09A9     		add	r1, sp, #36
ARM GAS  /tmp/ccR9AC2d.s 			page 26


 610 0392 0C48     		ldr	r0, .L6+20
 611 0394 FFF7FEFF 		bl	HAL_GPIO_Init
 612              	.LVL33:
 818:Src/main.c    **** 
 819:Src/main.c    ****   /* EXTI interrupt init*/
 820:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 613              		.loc 1 820 0
 614 0398 2246     		mov	r2, r4
 615 039a 2146     		mov	r1, r4
 616 039c 2820     		movs	r0, #40
 617 039e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 618              	.LVL34:
 821:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 619              		.loc 1 821 0
 620 03a2 2820     		movs	r0, #40
 621 03a4 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 622              	.LVL35:
 822:Src/main.c    **** 
 823:Src/main.c    **** }
 623              		.loc 1 823 0
 624 03a8 0FB0     		add	sp, sp, #60
 625              	.LCFI2:
 626              		.cfi_def_cfa_offset 36
 627              		@ sp needed
 628 03aa BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 629              	.L7:
 630 03ae 00BF     		.align	2
 631              	.L6:
 632 03b0 00180240 		.word	1073879040
 633 03b4 00080240 		.word	1073874944
 634 03b8 00000240 		.word	1073872896
 635 03bc 000C0240 		.word	1073875968
 636 03c0 00040240 		.word	1073873920
 637 03c4 00100240 		.word	1073876992
 638              		.cfi_endproc
 639              	.LFE137:
 641              		.section	.text.MX_SPI5_Init,"ax",%progbits
 642              		.align	1
 643              		.syntax unified
 644              		.thumb
 645              		.thumb_func
 646              		.fpu fpv4-sp-d16
 648              	MX_SPI5_Init:
 649              	.LFB133:
 424:Src/main.c    **** 
 650              		.loc 1 424 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654 0000 08B5     		push	{r3, lr}
 655              	.LCFI3:
 656              		.cfi_def_cfa_offset 8
 657              		.cfi_offset 3, -8
 658              		.cfi_offset 14, -4
 434:Src/main.c    ****   hspi5.Init.Mode = SPI_MODE_SLAVE;
 659              		.loc 1 434 0
 660 0002 0948     		ldr	r0, .L10
ARM GAS  /tmp/ccR9AC2d.s 			page 27


 661 0004 094B     		ldr	r3, .L10+4
 662 0006 0360     		str	r3, [r0]
 435:Src/main.c    ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 663              		.loc 1 435 0
 664 0008 0023     		movs	r3, #0
 665 000a 4360     		str	r3, [r0, #4]
 436:Src/main.c    ****   hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 666              		.loc 1 436 0
 667 000c 8360     		str	r3, [r0, #8]
 437:Src/main.c    ****   hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 668              		.loc 1 437 0
 669 000e C360     		str	r3, [r0, #12]
 438:Src/main.c    ****   hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 670              		.loc 1 438 0
 671 0010 0361     		str	r3, [r0, #16]
 439:Src/main.c    ****   hspi5.Init.NSS = SPI_NSS_HARD_INPUT;
 672              		.loc 1 439 0
 673 0012 4361     		str	r3, [r0, #20]
 440:Src/main.c    ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 674              		.loc 1 440 0
 675 0014 8361     		str	r3, [r0, #24]
 441:Src/main.c    ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 676              		.loc 1 441 0
 677 0016 0362     		str	r3, [r0, #32]
 442:Src/main.c    ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 678              		.loc 1 442 0
 679 0018 4362     		str	r3, [r0, #36]
 443:Src/main.c    ****   hspi5.Init.CRCPolynomial = 10;
 680              		.loc 1 443 0
 681 001a 8362     		str	r3, [r0, #40]
 444:Src/main.c    ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 682              		.loc 1 444 0
 683 001c 0A23     		movs	r3, #10
 684 001e C362     		str	r3, [r0, #44]
 445:Src/main.c    ****   {
 685              		.loc 1 445 0
 686 0020 FFF7FEFF 		bl	HAL_SPI_Init
 687              	.LVL36:
 688 0024 08BD     		pop	{r3, pc}
 689              	.L11:
 690 0026 00BF     		.align	2
 691              	.L10:
 692 0028 00000000 		.word	hspi5
 693 002c 00500140 		.word	1073827840
 694              		.cfi_endproc
 695              	.LFE133:
 697              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 698              		.align	1
 699              		.syntax unified
 700              		.thumb
 701              		.thumb_func
 702              		.fpu fpv4-sp-d16
 704              	MX_USART1_UART_Init:
 705              	.LFB136:
 537:Src/main.c    **** 
 706              		.loc 1 537 0
 707              		.cfi_startproc
ARM GAS  /tmp/ccR9AC2d.s 			page 28


 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 0, uses_anonymous_args = 0
 710 0000 08B5     		push	{r3, lr}
 711              	.LCFI4:
 712              		.cfi_def_cfa_offset 8
 713              		.cfi_offset 3, -8
 714              		.cfi_offset 14, -4
 546:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 715              		.loc 1 546 0
 716 0002 0848     		ldr	r0, .L14
 717 0004 084B     		ldr	r3, .L14+4
 718 0006 0360     		str	r3, [r0]
 547:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 719              		.loc 1 547 0
 720 0008 4FF4E133 		mov	r3, #115200
 721 000c 4360     		str	r3, [r0, #4]
 548:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 722              		.loc 1 548 0
 723 000e 0023     		movs	r3, #0
 724 0010 8360     		str	r3, [r0, #8]
 549:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 725              		.loc 1 549 0
 726 0012 C360     		str	r3, [r0, #12]
 550:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 727              		.loc 1 550 0
 728 0014 0361     		str	r3, [r0, #16]
 551:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 729              		.loc 1 551 0
 730 0016 0C22     		movs	r2, #12
 731 0018 4261     		str	r2, [r0, #20]
 552:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 732              		.loc 1 552 0
 733 001a 8361     		str	r3, [r0, #24]
 553:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 734              		.loc 1 553 0
 735 001c C361     		str	r3, [r0, #28]
 554:Src/main.c    ****   {
 736              		.loc 1 554 0
 737 001e FFF7FEFF 		bl	HAL_UART_Init
 738              	.LVL37:
 739 0022 08BD     		pop	{r3, pc}
 740              	.L15:
 741              		.align	2
 742              	.L14:
 743 0024 00000000 		.word	huart1
 744 0028 00100140 		.word	1073811456
 745              		.cfi_endproc
 746              	.LFE136:
 748              		.section	.text.MX_DAC_Init,"ax",%progbits
 749              		.align	1
 750              		.syntax unified
 751              		.thumb
 752              		.thumb_func
 753              		.fpu fpv4-sp-d16
 755              	MX_DAC_Init:
 756              	.LFB132:
 386:Src/main.c    **** 
ARM GAS  /tmp/ccR9AC2d.s 			page 29


 757              		.loc 1 386 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 8
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761 0000 30B5     		push	{r4, r5, lr}
 762              	.LCFI5:
 763              		.cfi_def_cfa_offset 12
 764              		.cfi_offset 4, -12
 765              		.cfi_offset 5, -8
 766              		.cfi_offset 14, -4
 767 0002 83B0     		sub	sp, sp, #12
 768              	.LCFI6:
 769              		.cfi_def_cfa_offset 24
 392:Src/main.c    **** 
 770              		.loc 1 392 0
 771 0004 0024     		movs	r4, #0
 772 0006 0094     		str	r4, [sp]
 773 0008 0194     		str	r4, [sp, #4]
 399:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 774              		.loc 1 399 0
 775 000a 074D     		ldr	r5, .L18
 776 000c 074B     		ldr	r3, .L18+4
 777 000e 2B60     		str	r3, [r5]
 400:Src/main.c    ****   {
 778              		.loc 1 400 0
 779 0010 2846     		mov	r0, r5
 780 0012 FFF7FEFF 		bl	HAL_DAC_Init
 781              	.LVL38:
 406:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 782              		.loc 1 406 0
 783 0016 0094     		str	r4, [sp]
 407:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 784              		.loc 1 407 0
 785 0018 0194     		str	r4, [sp, #4]
 408:Src/main.c    ****   {
 786              		.loc 1 408 0
 787 001a 1022     		movs	r2, #16
 788 001c 6946     		mov	r1, sp
 789 001e 2846     		mov	r0, r5
 790 0020 FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 791              	.LVL39:
 416:Src/main.c    **** 
 792              		.loc 1 416 0
 793 0024 03B0     		add	sp, sp, #12
 794              	.LCFI7:
 795              		.cfi_def_cfa_offset 12
 796              		@ sp needed
 797 0026 30BD     		pop	{r4, r5, pc}
 798              	.L19:
 799              		.align	2
 800              	.L18:
 801 0028 00000000 		.word	hdac
 802 002c 00740040 		.word	1073771520
 803              		.cfi_endproc
 804              	.LFE132:
 806              		.section	.text.MX_TIM6_Init,"ax",%progbits
 807              		.align	1
ARM GAS  /tmp/ccR9AC2d.s 			page 30


 808              		.syntax unified
 809              		.thumb
 810              		.thumb_func
 811              		.fpu fpv4-sp-d16
 813              	MX_TIM6_Init:
 814              	.LFB134:
 461:Src/main.c    **** 
 815              		.loc 1 461 0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 8
 818              		@ frame_needed = 0, uses_anonymous_args = 0
 819 0000 30B5     		push	{r4, r5, lr}
 820              	.LCFI8:
 821              		.cfi_def_cfa_offset 12
 822              		.cfi_offset 4, -12
 823              		.cfi_offset 5, -8
 824              		.cfi_offset 14, -4
 825 0002 83B0     		sub	sp, sp, #12
 826              	.LCFI9:
 827              		.cfi_def_cfa_offset 24
 467:Src/main.c    **** 
 828              		.loc 1 467 0
 829 0004 0025     		movs	r5, #0
 830 0006 0095     		str	r5, [sp]
 831 0008 0195     		str	r5, [sp, #4]
 472:Src/main.c    ****   htim6.Init.Prescaler = 0;
 832              		.loc 1 472 0
 833 000a 0A4C     		ldr	r4, .L22
 834 000c 0A4B     		ldr	r3, .L22+4
 835 000e 2360     		str	r3, [r4]
 473:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 836              		.loc 1 473 0
 837 0010 6560     		str	r5, [r4, #4]
 474:Src/main.c    ****   htim6.Init.Period = 1290;
 838              		.loc 1 474 0
 839 0012 A560     		str	r5, [r4, #8]
 475:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 840              		.loc 1 475 0
 841 0014 40F20A53 		movw	r3, #1290
 842 0018 E360     		str	r3, [r4, #12]
 476:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 843              		.loc 1 476 0
 844 001a A561     		str	r5, [r4, #24]
 477:Src/main.c    ****   {
 845              		.loc 1 477 0
 846 001c 2046     		mov	r0, r4
 847 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 848              	.LVL40:
 481:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 849              		.loc 1 481 0
 850 0022 0095     		str	r5, [sp]
 482:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 851              		.loc 1 482 0
 852 0024 0195     		str	r5, [sp, #4]
 483:Src/main.c    ****   {
 853              		.loc 1 483 0
 854 0026 6946     		mov	r1, sp
ARM GAS  /tmp/ccR9AC2d.s 			page 31


 855 0028 2046     		mov	r0, r4
 856 002a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 857              	.LVL41:
 491:Src/main.c    **** 
 858              		.loc 1 491 0
 859 002e 03B0     		add	sp, sp, #12
 860              	.LCFI10:
 861              		.cfi_def_cfa_offset 12
 862              		@ sp needed
 863 0030 30BD     		pop	{r4, r5, pc}
 864              	.L23:
 865 0032 00BF     		.align	2
 866              	.L22:
 867 0034 00000000 		.word	htim6
 868 0038 00100040 		.word	1073745920
 869              		.cfi_endproc
 870              	.LFE134:
 872              		.section	.text.MX_TIM7_Init,"ax",%progbits
 873              		.align	1
 874              		.syntax unified
 875              		.thumb
 876              		.thumb_func
 877              		.fpu fpv4-sp-d16
 879              	MX_TIM7_Init:
 880              	.LFB135:
 499:Src/main.c    **** 
 881              		.loc 1 499 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 8
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885 0000 30B5     		push	{r4, r5, lr}
 886              	.LCFI11:
 887              		.cfi_def_cfa_offset 12
 888              		.cfi_offset 4, -12
 889              		.cfi_offset 5, -8
 890              		.cfi_offset 14, -4
 891 0002 83B0     		sub	sp, sp, #12
 892              	.LCFI12:
 893              		.cfi_def_cfa_offset 24
 505:Src/main.c    **** 
 894              		.loc 1 505 0
 895 0004 0025     		movs	r5, #0
 896 0006 0095     		str	r5, [sp]
 897 0008 0195     		str	r5, [sp, #4]
 510:Src/main.c    ****   htim7.Init.Prescaler = 0;
 898              		.loc 1 510 0
 899 000a 0A4C     		ldr	r4, .L26
 900 000c 0A4B     		ldr	r3, .L26+4
 901 000e 2360     		str	r3, [r4]
 511:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 902              		.loc 1 511 0
 903 0010 6560     		str	r5, [r4, #4]
 512:Src/main.c    ****   htim7.Init.Period = 10000;
 904              		.loc 1 512 0
 905 0012 A560     		str	r5, [r4, #8]
 513:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 906              		.loc 1 513 0
ARM GAS  /tmp/ccR9AC2d.s 			page 32


 907 0014 42F21073 		movw	r3, #10000
 908 0018 E360     		str	r3, [r4, #12]
 514:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 909              		.loc 1 514 0
 910 001a A561     		str	r5, [r4, #24]
 515:Src/main.c    ****   {
 911              		.loc 1 515 0
 912 001c 2046     		mov	r0, r4
 913 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 914              	.LVL42:
 519:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 915              		.loc 1 519 0
 916 0022 0095     		str	r5, [sp]
 520:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 917              		.loc 1 520 0
 918 0024 0195     		str	r5, [sp, #4]
 521:Src/main.c    ****   {
 919              		.loc 1 521 0
 920 0026 6946     		mov	r1, sp
 921 0028 2046     		mov	r0, r4
 922 002a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 923              	.LVL43:
 529:Src/main.c    **** 
 924              		.loc 1 529 0
 925 002e 03B0     		add	sp, sp, #12
 926              	.LCFI13:
 927              		.cfi_def_cfa_offset 12
 928              		@ sp needed
 929 0030 30BD     		pop	{r4, r5, pc}
 930              	.L27:
 931 0032 00BF     		.align	2
 932              	.L26:
 933 0034 00000000 		.word	htim7
 934 0038 00140040 		.word	1073746944
 935              		.cfi_endproc
 936              	.LFE135:
 938              		.section	.text.SystemClock_Config,"ax",%progbits
 939              		.align	1
 940              		.global	SystemClock_Config
 941              		.syntax unified
 942              		.thumb
 943              		.thumb_func
 944              		.fpu fpv4-sp-d16
 946              	SystemClock_Config:
 947              	.LFB131:
 342:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 948              		.loc 1 342 0
 949              		.cfi_startproc
 950              		@ args = 0, pretend = 0, frame = 80
 951              		@ frame_needed = 0, uses_anonymous_args = 0
 952 0000 30B5     		push	{r4, r5, lr}
 953              	.LCFI14:
 954              		.cfi_def_cfa_offset 12
 955              		.cfi_offset 4, -12
 956              		.cfi_offset 5, -8
 957              		.cfi_offset 14, -4
 958 0002 95B0     		sub	sp, sp, #84
ARM GAS  /tmp/ccR9AC2d.s 			page 33


 959              	.LCFI15:
 960              		.cfi_def_cfa_offset 96
 343:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 961              		.loc 1 343 0
 962 0004 3022     		movs	r2, #48
 963 0006 0021     		movs	r1, #0
 964 0008 08A8     		add	r0, sp, #32
 965 000a FFF7FEFF 		bl	memset
 966              	.LVL44:
 344:Src/main.c    **** 
 967              		.loc 1 344 0
 968 000e 0024     		movs	r4, #0
 969 0010 0394     		str	r4, [sp, #12]
 970 0012 0494     		str	r4, [sp, #16]
 971 0014 0594     		str	r4, [sp, #20]
 972 0016 0694     		str	r4, [sp, #24]
 973 0018 0794     		str	r4, [sp, #28]
 974              	.LBB10:
 348:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 975              		.loc 1 348 0
 976 001a 0194     		str	r4, [sp, #4]
 977 001c 1C4B     		ldr	r3, .L30
 978 001e 1A6C     		ldr	r2, [r3, #64]
 979 0020 42F08052 		orr	r2, r2, #268435456
 980 0024 1A64     		str	r2, [r3, #64]
 981 0026 1B6C     		ldr	r3, [r3, #64]
 982 0028 03F08053 		and	r3, r3, #268435456
 983 002c 0193     		str	r3, [sp, #4]
 984 002e 019B     		ldr	r3, [sp, #4]
 985              	.LBE10:
 986              	.LBB11:
 349:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 987              		.loc 1 349 0
 988 0030 0294     		str	r4, [sp, #8]
 989 0032 184A     		ldr	r2, .L30+4
 990 0034 1368     		ldr	r3, [r2]
 991 0036 23F44043 		bic	r3, r3, #49152
 992 003a 43F48043 		orr	r3, r3, #16384
 993 003e 1360     		str	r3, [r2]
 994 0040 1368     		ldr	r3, [r2]
 995 0042 03F44043 		and	r3, r3, #49152
 996 0046 0293     		str	r3, [sp, #8]
 997 0048 029B     		ldr	r3, [sp, #8]
 998              	.LBE11:
 352:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 999              		.loc 1 352 0
 1000 004a 0225     		movs	r5, #2
 1001 004c 0895     		str	r5, [sp, #32]
 353:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1002              		.loc 1 353 0
 1003 004e 0123     		movs	r3, #1
 1004 0050 0B93     		str	r3, [sp, #44]
 354:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1005              		.loc 1 354 0
 1006 0052 1023     		movs	r3, #16
 1007 0054 0C93     		str	r3, [sp, #48]
 355:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
ARM GAS  /tmp/ccR9AC2d.s 			page 34


 1008              		.loc 1 355 0
 1009 0056 0E95     		str	r5, [sp, #56]
 356:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1010              		.loc 1 356 0
 1011 0058 0F94     		str	r4, [sp, #60]
 357:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 100;
 1012              		.loc 1 357 0
 1013 005a 0823     		movs	r3, #8
 1014 005c 1093     		str	r3, [sp, #64]
 358:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1015              		.loc 1 358 0
 1016 005e 6423     		movs	r3, #100
 1017 0060 1193     		str	r3, [sp, #68]
 359:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 1018              		.loc 1 359 0
 1019 0062 1295     		str	r5, [sp, #72]
 360:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1020              		.loc 1 360 0
 1021 0064 0723     		movs	r3, #7
 1022 0066 1393     		str	r3, [sp, #76]
 361:Src/main.c    ****   {
 1023              		.loc 1 361 0
 1024 0068 08A8     		add	r0, sp, #32
 1025 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 1026              	.LVL45:
 367:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1027              		.loc 1 367 0
 1028 006e 0F23     		movs	r3, #15
 1029 0070 0393     		str	r3, [sp, #12]
 369:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1030              		.loc 1 369 0
 1031 0072 0495     		str	r5, [sp, #16]
 370:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1032              		.loc 1 370 0
 1033 0074 0594     		str	r4, [sp, #20]
 371:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1034              		.loc 1 371 0
 1035 0076 4FF4A053 		mov	r3, #5120
 1036 007a 0693     		str	r3, [sp, #24]
 372:Src/main.c    **** 
 1037              		.loc 1 372 0
 1038 007c 4FF48053 		mov	r3, #4096
 1039 0080 0793     		str	r3, [sp, #28]
 374:Src/main.c    ****   {
 1040              		.loc 1 374 0
 1041 0082 0321     		movs	r1, #3
 1042 0084 03A8     		add	r0, sp, #12
 1043 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1044              	.LVL46:
 378:Src/main.c    **** 
 1045              		.loc 1 378 0
 1046 008a 15B0     		add	sp, sp, #84
 1047              	.LCFI16:
 1048              		.cfi_def_cfa_offset 12
 1049              		@ sp needed
 1050 008c 30BD     		pop	{r4, r5, pc}
 1051              	.L31:
ARM GAS  /tmp/ccR9AC2d.s 			page 35


 1052 008e 00BF     		.align	2
 1053              	.L30:
 1054 0090 00380240 		.word	1073887232
 1055 0094 00700040 		.word	1073770496
 1056              		.cfi_endproc
 1057              	.LFE131:
 1059              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1060              		.align	1
 1061              		.global	HAL_TIM_PeriodElapsedCallback
 1062              		.syntax unified
 1063              		.thumb
 1064              		.thumb_func
 1065              		.fpu fpv4-sp-d16
 1067              	HAL_TIM_PeriodElapsedCallback:
 1068              	.LFB138:
 824:Src/main.c    **** 
 825:Src/main.c    **** /* USER CODE BEGIN 4 */
 826:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 1069              		.loc 1 826 0
 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 0
 1072              		@ frame_needed = 0, uses_anonymous_args = 0
 1073              		@ link register save eliminated.
 1074              	.LVL47:
 827:Src/main.c    ****   if(htim->Instance == TIM6){
 1075              		.loc 1 827 0
 1076 0000 0268     		ldr	r2, [r0]
 1077 0002 044B     		ldr	r3, .L35
 1078 0004 9A42     		cmp	r2, r3
 1079 0006 00D0     		beq	.L34
 1080              	.L32:
 1081 0008 7047     		bx	lr
 1082              	.L34:
 828:Src/main.c    ****     //  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_1);
 829:Src/main.c    ****     update_value_flag = 1;
 1083              		.loc 1 829 0
 1084 000a 0122     		movs	r2, #1
 1085 000c 024B     		ldr	r3, .L35+4
 1086 000e 1A70     		strb	r2, [r3]
 830:Src/main.c    ****   }
 831:Src/main.c    ****   /*
 832:Src/main.c    ****   else if(htim->Instance == TIM7){
 833:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_8);
 834:Src/main.c    ****     for(int i = 0; i < VOICES; i++){
 835:Src/main.c    ****       if(note_on[i] == MIDI_NOTE_ON){
 836:Src/main.c    ****         if(env_state[i] == NOT_TRIGGERED){
 837:Src/main.c    ****           env_state[i] = ATTACK_MODE;
 838:Src/main.c    ****         }
 839:Src/main.c    ****         else{
 840:Src/main.c    ****           env_state[i] = RELEASE_MODE;
 841:Src/main.c    ****         }
 842:Src/main.c    ****       }
 843:Src/main.c    ****     }
 844:Src/main.c    ****   }
 845:Src/main.c    ****   */
 846:Src/main.c    **** }
 1087              		.loc 1 846 0
ARM GAS  /tmp/ccR9AC2d.s 			page 36


 1088 0010 FAE7     		b	.L32
 1089              	.L36:
 1090 0012 00BF     		.align	2
 1091              	.L35:
 1092 0014 00100040 		.word	1073745920
 1093 0018 00000000 		.word	.LANCHOR0
 1094              		.cfi_endproc
 1095              	.LFE138:
 1097              		.global	__aeabi_f2d
 1098              		.global	__aeabi_dmul
 1099              		.global	__aeabi_d2uiz
 1100              		.section	.text.UpdateOutputValue,"ax",%progbits
 1101              		.align	1
 1102              		.global	UpdateOutputValue
 1103              		.syntax unified
 1104              		.thumb
 1105              		.thumb_func
 1106              		.fpu fpv4-sp-d16
 1108              	UpdateOutputValue:
 1109              	.LFB139:
 847:Src/main.c    **** 
 848:Src/main.c    **** void UpdateOutputValue() {
 1110              		.loc 1 848 0
 1111              		.cfi_startproc
 1112              		@ args = 0, pretend = 0, frame = 8
 1113              		@ frame_needed = 0, uses_anonymous_args = 0
 1114 0000 10B5     		push	{r4, lr}
 1115              	.LCFI17:
 1116              		.cfi_def_cfa_offset 8
 1117              		.cfi_offset 4, -8
 1118              		.cfi_offset 14, -4
 1119 0002 2DED028B 		vpush.64	{d8}
 1120              	.LCFI18:
 1121              		.cfi_def_cfa_offset 16
 1122              		.cfi_offset 80, -16
 1123              		.cfi_offset 81, -12
 1124 0006 82B0     		sub	sp, sp, #8
 1125              	.LCFI19:
 1126              		.cfi_def_cfa_offset 24
 1127              	.LVL48:
 849:Src/main.c    ****   float val = 0;
 850:Src/main.c    ****   output_val = 0;
 1128              		.loc 1 850 0
 1129 0008 0024     		movs	r4, #0
 1130 000a 294B     		ldr	r3, .L41+8
 1131 000c 1C70     		strb	r4, [r3]
 1132              	.LVL49:
 849:Src/main.c    ****   float val = 0;
 1133              		.loc 1 849 0
 1134 000e 9FED298A 		vldr.32	s16, .L41+12
 1135              	.LBB12:
 851:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1136              		.loc 1 851 0
 1137 0012 37E0     		b	.L38
 1138              	.LVL50:
 1139              	.L39:
 852:Src/main.c    ****     phase_accumulator[i] += (uint32_t)(midi_notes[note_freq[i]]*DDS_SCALE_FACTOR);
ARM GAS  /tmp/ccR9AC2d.s 			page 37


 1140              		.loc 1 852 0 discriminator 3
 1141 0014 284B     		ldr	r3, .L41+16
 1142 0016 1A5D     		ldrb	r2, [r3, r4]	@ zero_extendqisi2
 1143 0018 284B     		ldr	r3, .L41+20
 1144 001a 03EB8203 		add	r3, r3, r2, lsl #2
 1145 001e 1868     		ldr	r0, [r3]	@ float
 1146 0020 FFF7FEFF 		bl	__aeabi_f2d
 1147              	.LVL51:
 1148 0024 20A3     		adr	r3, .L41
 1149 0026 D3E90023 		ldrd	r2, [r3]
 1150 002a FFF7FEFF 		bl	__aeabi_dmul
 1151              	.LVL52:
 1152 002e FFF7FEFF 		bl	__aeabi_d2uiz
 1153              	.LVL53:
 1154 0032 234B     		ldr	r3, .L41+24
 1155 0034 53F82420 		ldr	r2, [r3, r4, lsl #2]
 1156 0038 1044     		add	r0, r0, r2
 1157 003a 43F82400 		str	r0, [r3, r4, lsl #2]
 853:Src/main.c    ****     val += ((base_sine[(phase_accumulator[i]>>10)%4096] + 0*base_pos_saw[(phase_accumulator[i]>>10)
 1158              		.loc 1 853 0 discriminator 3
 1159 003e 53F82420 		ldr	r2, [r3, r4, lsl #2]
 1160 0042 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1161 0046 C3F38B23 		ubfx	r3, r3, #10, #12
 1162 004a 1E4A     		ldr	r2, .L41+28
 1163 004c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1164 004e 07EE903A 		vmov	s15, r3	@ int
 1165 0052 1D4B     		ldr	r3, .L41+32
 1166 0054 03EB8403 		add	r3, r3, r4, lsl #2
 1167 0058 93ED007A 		vldr.32	s14, [r3]
 1168 005c F8EEE77A 		vcvt.f32.s32	s15, s15
 1169 0060 27EE877A 		vmul.f32	s14, s15, s14
 1170 0064 194B     		ldr	r3, .L41+36
 1171 0066 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1172 0068 DBB2     		uxtb	r3, r3
 1173 006a 07EE903A 		vmov	s15, r3	@ int
 1174 006e F8EEE77A 		vcvt.f32.s32	s15, s15
 1175 0072 67EE877A 		vmul.f32	s15, s15, s14
 1176 0076 DFED166A 		vldr.32	s13, .L41+40
 1177 007a 87EEA67A 		vdiv.f32	s14, s15, s13
 1178 007e 38EE078A 		vadd.f32	s16, s16, s14
 1179              	.LVL54:
 851:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1180              		.loc 1 851 0 discriminator 3
 1181 0082 0134     		adds	r4, r4, #1
 1182              	.LVL55:
 1183              	.L38:
 851:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1184              		.loc 1 851 0 is_stmt 0 discriminator 1
 1185 0084 0F2C     		cmp	r4, #15
 1186 0086 C5DD     		ble	.L39
 1187              	.LBE12:
 854:Src/main.c    ****   }
 855:Src/main.c    **** 
 856:Src/main.c    ****   output_val = (uint8_t) (val / VOICES);
 1188              		.loc 1 856 0 is_stmt 1
 1189 0088 DFED127A 		vldr.32	s15, .L41+44
 1190 008c 28EE278A 		vmul.f32	s16, s16, s15
ARM GAS  /tmp/ccR9AC2d.s 			page 38


 1191              	.LVL56:
 1192 0090 FCEEC87A 		vcvt.u32.f32	s15, s16
 1193 0094 CDED017A 		vstr.32	s15, [sp, #4]	@ int
 1194 0098 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 1195 009c 044A     		ldr	r2, .L41+8
 1196 009e 1370     		strb	r3, [r2]
 857:Src/main.c    **** }
 1197              		.loc 1 857 0
 1198 00a0 02B0     		add	sp, sp, #8
 1199              	.LCFI20:
 1200              		.cfi_def_cfa_offset 16
 1201              		@ sp needed
 1202 00a2 BDEC028B 		vldm	sp!, {d8}
 1203              	.LCFI21:
 1204              		.cfi_restore 80
 1205              		.cfi_restore 81
 1206              		.cfi_def_cfa_offset 8
 1207 00a6 10BD     		pop	{r4, pc}
 1208              	.LVL57:
 1209              	.L42:
 1210              		.align	3
 1211              	.L41:
 1212 00a8 942EA292 		.word	2460102292
 1213 00ac 5F5E5640 		.word	1079402079
 1214 00b0 00000000 		.word	.LANCHOR1
 1215 00b4 00000000 		.word	0
 1216 00b8 00000000 		.word	note_freq
 1217 00bc 00000000 		.word	midi_notes
 1218 00c0 00000000 		.word	.LANCHOR2
 1219 00c4 00000000 		.word	base_sine
 1220 00c8 00000000 		.word	envelope
 1221 00cc 00000000 		.word	.LANCHOR3
 1222 00d0 0001FE47 		.word	1207828736
 1223 00d4 0000803D 		.word	1031798784
 1224              		.cfi_endproc
 1225              	.LFE139:
 1227              		.global	__aeabi_i2d
 1228              		.section	.text.UpdateLFOs,"ax",%progbits
 1229              		.align	1
 1230              		.global	UpdateLFOs
 1231              		.syntax unified
 1232              		.thumb
 1233              		.thumb_func
 1234              		.fpu fpv4-sp-d16
 1236              	UpdateLFOs:
 1237              	.LFB140:
 858:Src/main.c    **** 
 859:Src/main.c    **** void UpdateLFOs() {
 1238              		.loc 1 859 0
 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 0
 1241              		@ frame_needed = 0, uses_anonymous_args = 0
 1242 0000 10B5     		push	{r4, lr}
 1243              	.LCFI22:
 1244              		.cfi_def_cfa_offset 8
 1245              		.cfi_offset 4, -8
 1246              		.cfi_offset 14, -4
ARM GAS  /tmp/ccR9AC2d.s 			page 39


 1247              	.LVL58:
 1248              	.LBB13:
 860:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1249              		.loc 1 860 0
 1250 0002 0024     		movs	r4, #0
 1251 0004 16E0     		b	.L44
 1252              	.LVL59:
 1253              	.L45:
 861:Src/main.c    ****     lfo_phase_accumulator[i] += (uint32_t)(lfo_freq[i] * (DDS_SCALE_FACTOR/10));
 1254              		.loc 1 861 0 discriminator 3
 1255 0006 104B     		ldr	r3, .L47+8
 1256 0008 33F81400 		ldrh	r0, [r3, r4, lsl #1]
 1257 000c 80B2     		uxth	r0, r0
 1258 000e FFF7FEFF 		bl	__aeabi_i2d
 1259              	.LVL60:
 1260 0012 0BA3     		adr	r3, .L47
 1261 0014 D3E90023 		ldrd	r2, [r3]
 1262 0018 FFF7FEFF 		bl	__aeabi_dmul
 1263              	.LVL61:
 1264 001c FFF7FEFF 		bl	__aeabi_d2uiz
 1265              	.LVL62:
 1266 0020 0A4A     		ldr	r2, .L47+12
 1267 0022 52F82430 		ldr	r3, [r2, r4, lsl #2]
 1268 0026 1844     		add	r0, r0, r3
 1269 0028 42F82400 		str	r0, [r2, r4, lsl #2]
 862:Src/main.c    ****     //lfo[i] = base_tri[(lfo_phase_accumulator[i]>>10)%4096];
 863:Src/main.c    ****     lfo[i] = 255;
 1270              		.loc 1 863 0 discriminator 3
 1271 002c FF22     		movs	r2, #255
 1272 002e 084B     		ldr	r3, .L47+16
 1273 0030 1A55     		strb	r2, [r3, r4]
 860:Src/main.c    ****     lfo_phase_accumulator[i] += (uint32_t)(lfo_freq[i] * (DDS_SCALE_FACTOR/10));
 1274              		.loc 1 860 0 discriminator 3
 1275 0032 0134     		adds	r4, r4, #1
 1276              	.LVL63:
 1277              	.L44:
 860:Src/main.c    ****     lfo_phase_accumulator[i] += (uint32_t)(lfo_freq[i] * (DDS_SCALE_FACTOR/10));
 1278              		.loc 1 860 0 is_stmt 0 discriminator 1
 1279 0034 0F2C     		cmp	r4, #15
 1280 0036 E6DD     		ble	.L45
 1281              	.LBE13:
 864:Src/main.c    ****   }
 865:Src/main.c    **** }
 1282              		.loc 1 865 0 is_stmt 1
 1283 0038 10BD     		pop	{r4, pc}
 1284              	.LVL64:
 1285              	.L48:
 1286 003a 00BFAFF3 		.align	3
 1286      0080
 1287              	.L47:
 1288 0040 76581B42 		.word	1109088374
 1289 0044 19E52140 		.word	1075963161
 1290 0048 00000000 		.word	.LANCHOR4
 1291 004c 00000000 		.word	.LANCHOR5
 1292 0050 00000000 		.word	.LANCHOR3
 1293              		.cfi_endproc
 1294              	.LFE140:
ARM GAS  /tmp/ccR9AC2d.s 			page 40


 1296              		.section	.text.Update_R2R_DAC,"ax",%progbits
 1297              		.align	1
 1298              		.global	Update_R2R_DAC
 1299              		.syntax unified
 1300              		.thumb
 1301              		.thumb_func
 1302              		.fpu fpv4-sp-d16
 1304              	Update_R2R_DAC:
 1305              	.LFB141:
 866:Src/main.c    **** 
 867:Src/main.c    **** 
 868:Src/main.c    **** void Update_R2R_DAC() {
 1306              		.loc 1 868 0
 1307              		.cfi_startproc
 1308              		@ args = 0, pretend = 0, frame = 0
 1309              		@ frame_needed = 0, uses_anonymous_args = 0
 1310 0000 08B5     		push	{r3, lr}
 1311              	.LCFI23:
 1312              		.cfi_def_cfa_offset 8
 1313              		.cfi_offset 3, -8
 1314              		.cfi_offset 14, -4
 869:Src/main.c    ****   ((output_val>>0)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_7, GPIO_PIN_SET) : HAL_GPIO_Write
 1315              		.loc 1 869 0
 1316 0002 474B     		ldr	r3, .L68
 1317 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1318 0006 13F0010F 		tst	r3, #1
 1319 000a 51D0     		beq	.L50
 1320              		.loc 1 869 0 is_stmt 0 discriminator 1
 1321 000c 0122     		movs	r2, #1
 1322 000e 8021     		movs	r1, #128
 1323 0010 4448     		ldr	r0, .L68+4
 1324 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1325              	.LVL65:
 1326              	.L51:
 870:Src/main.c    ****   ((output_val>>1)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_8, GPIO_PIN_SET) : HAL_GPIO_Write
 1327              		.loc 1 870 0 is_stmt 1
 1328 0016 424B     		ldr	r3, .L68
 1329 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1330 001a 13F0020F 		tst	r3, #2
 1331 001e 4DD0     		beq	.L52
 1332              		.loc 1 870 0 is_stmt 0 discriminator 1
 1333 0020 0122     		movs	r2, #1
 1334 0022 4FF48071 		mov	r1, #256
 1335 0026 3F48     		ldr	r0, .L68+4
 1336 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1337              	.LVL66:
 1338              	.L53:
 871:Src/main.c    ****   ((output_val>>2)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_9, GPIO_PIN_SET) : HAL_GPIO_Write
 1339              		.loc 1 871 0 is_stmt 1
 1340 002c 3C4B     		ldr	r3, .L68
 1341 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1342 0030 13F0040F 		tst	r3, #4
 1343 0034 49D0     		beq	.L54
 1344              		.loc 1 871 0 is_stmt 0 discriminator 1
 1345 0036 0122     		movs	r2, #1
 1346 0038 4FF40071 		mov	r1, #512
 1347 003c 3948     		ldr	r0, .L68+4
ARM GAS  /tmp/ccR9AC2d.s 			page 41


 1348 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1349              	.LVL67:
 1350              	.L55:
 872:Src/main.c    ****   ((output_val>>3)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_10, GPIO_PIN_SET) : HAL_GPIO_Writ
 1351              		.loc 1 872 0 is_stmt 1
 1352 0042 374B     		ldr	r3, .L68
 1353 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1354 0046 13F0080F 		tst	r3, #8
 1355 004a 45D0     		beq	.L56
 1356              		.loc 1 872 0 is_stmt 0 discriminator 1
 1357 004c 0122     		movs	r2, #1
 1358 004e 4FF48061 		mov	r1, #1024
 1359 0052 3448     		ldr	r0, .L68+4
 1360 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1361              	.LVL68:
 1362              	.L57:
 873:Src/main.c    ****   ((output_val>>4)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET) : HAL_GPIO_Writ
 1363              		.loc 1 873 0 is_stmt 1
 1364 0058 314B     		ldr	r3, .L68
 1365 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1366 005c 13F0100F 		tst	r3, #16
 1367 0060 41D0     		beq	.L58
 1368              		.loc 1 873 0 is_stmt 0 discriminator 1
 1369 0062 0122     		movs	r2, #1
 1370 0064 4FF40061 		mov	r1, #2048
 1371 0068 2E48     		ldr	r0, .L68+4
 1372 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1373              	.LVL69:
 1374              	.L59:
 874:Src/main.c    ****   ((output_val>>5)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET) : HAL_GPIO_Writ
 1375              		.loc 1 874 0 is_stmt 1
 1376 006e 2C4B     		ldr	r3, .L68
 1377 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1378 0072 13F0200F 		tst	r3, #32
 1379 0076 3DD0     		beq	.L60
 1380              		.loc 1 874 0 is_stmt 0 discriminator 1
 1381 0078 0122     		movs	r2, #1
 1382 007a 4FF48051 		mov	r1, #4096
 1383 007e 2948     		ldr	r0, .L68+4
 1384 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1385              	.LVL70:
 1386              	.L61:
 875:Src/main.c    ****   ((output_val>>6)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_13, GPIO_PIN_SET) : HAL_GPIO_Writ
 1387              		.loc 1 875 0 is_stmt 1
 1388 0084 264B     		ldr	r3, .L68
 1389 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1390 0088 13F0400F 		tst	r3, #64
 1391 008c 39D0     		beq	.L62
 1392              		.loc 1 875 0 is_stmt 0 discriminator 1
 1393 008e 0122     		movs	r2, #1
 1394 0090 4FF40051 		mov	r1, #8192
 1395 0094 2348     		ldr	r0, .L68+4
 1396 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1397              	.LVL71:
 1398              	.L63:
 876:Src/main.c    ****   ((output_val>>7)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_14, GPIO_PIN_SET) : HAL_GPIO_Writ
 1399              		.loc 1 876 0 is_stmt 1
ARM GAS  /tmp/ccR9AC2d.s 			page 42


 1400 009a 214B     		ldr	r3, .L68
 1401 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1402 009e DB09     		lsrs	r3, r3, #7
 1403 00a0 36D1     		bne	.L67
 1404              		.loc 1 876 0 is_stmt 0 discriminator 2
 1405 00a2 0022     		movs	r2, #0
 1406 00a4 4FF48041 		mov	r1, #16384
 1407 00a8 1E48     		ldr	r0, .L68+4
 1408 00aa FFF7FEFF 		bl	HAL_GPIO_WritePin
 1409              	.LVL72:
 1410 00ae 08BD     		pop	{r3, pc}
 1411              	.L50:
 869:Src/main.c    ****   ((output_val>>1)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_8, GPIO_PIN_SET) : HAL_GPIO_Write
 1412              		.loc 1 869 0 is_stmt 1 discriminator 2
 1413 00b0 0022     		movs	r2, #0
 1414 00b2 8021     		movs	r1, #128
 1415 00b4 1B48     		ldr	r0, .L68+4
 1416 00b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1417              	.LVL73:
 1418 00ba ACE7     		b	.L51
 1419              	.L52:
 870:Src/main.c    ****   ((output_val>>2)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_9, GPIO_PIN_SET) : HAL_GPIO_Write
 1420              		.loc 1 870 0 discriminator 2
 1421 00bc 0022     		movs	r2, #0
 1422 00be 4FF48071 		mov	r1, #256
 1423 00c2 1848     		ldr	r0, .L68+4
 1424 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1425              	.LVL74:
 1426 00c8 B0E7     		b	.L53
 1427              	.L54:
 871:Src/main.c    ****   ((output_val>>3)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_10, GPIO_PIN_SET) : HAL_GPIO_Writ
 1428              		.loc 1 871 0 discriminator 2
 1429 00ca 0022     		movs	r2, #0
 1430 00cc 4FF40071 		mov	r1, #512
 1431 00d0 1448     		ldr	r0, .L68+4
 1432 00d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1433              	.LVL75:
 1434 00d6 B4E7     		b	.L55
 1435              	.L56:
 872:Src/main.c    ****   ((output_val>>4)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET) : HAL_GPIO_Writ
 1436              		.loc 1 872 0 discriminator 2
 1437 00d8 0022     		movs	r2, #0
 1438 00da 4FF48061 		mov	r1, #1024
 1439 00de 1148     		ldr	r0, .L68+4
 1440 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1441              	.LVL76:
 1442 00e4 B8E7     		b	.L57
 1443              	.L58:
 873:Src/main.c    ****   ((output_val>>5)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET) : HAL_GPIO_Writ
 1444              		.loc 1 873 0 discriminator 2
 1445 00e6 0022     		movs	r2, #0
 1446 00e8 4FF40061 		mov	r1, #2048
 1447 00ec 0D48     		ldr	r0, .L68+4
 1448 00ee FFF7FEFF 		bl	HAL_GPIO_WritePin
 1449              	.LVL77:
 1450 00f2 BCE7     		b	.L59
 1451              	.L60:
ARM GAS  /tmp/ccR9AC2d.s 			page 43


 874:Src/main.c    ****   ((output_val>>6)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_13, GPIO_PIN_SET) : HAL_GPIO_Writ
 1452              		.loc 1 874 0 discriminator 2
 1453 00f4 0022     		movs	r2, #0
 1454 00f6 4FF48051 		mov	r1, #4096
 1455 00fa 0A48     		ldr	r0, .L68+4
 1456 00fc FFF7FEFF 		bl	HAL_GPIO_WritePin
 1457              	.LVL78:
 1458 0100 C0E7     		b	.L61
 1459              	.L62:
 875:Src/main.c    ****   ((output_val>>7)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_14, GPIO_PIN_SET) : HAL_GPIO_Writ
 1460              		.loc 1 875 0 discriminator 2
 1461 0102 0022     		movs	r2, #0
 1462 0104 4FF40051 		mov	r1, #8192
 1463 0108 0648     		ldr	r0, .L68+4
 1464 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1465              	.LVL79:
 1466 010e C4E7     		b	.L63
 1467              	.L67:
 1468              		.loc 1 876 0 discriminator 1
 1469 0110 0122     		movs	r2, #1
 1470 0112 4FF48041 		mov	r1, #16384
 1471 0116 0348     		ldr	r0, .L68+4
 1472 0118 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1473              	.LVL80:
 1474 011c 08BD     		pop	{r3, pc}
 1475              	.L69:
 1476 011e 00BF     		.align	2
 1477              	.L68:
 1478 0120 00000000 		.word	.LANCHOR1
 1479 0124 00100240 		.word	1073876992
 1480              		.cfi_endproc
 1481              	.LFE141:
 1483              		.section	.text.enqueue,"ax",%progbits
 1484              		.align	1
 1485              		.global	enqueue
 1486              		.syntax unified
 1487              		.thumb
 1488              		.thumb_func
 1489              		.fpu fpv4-sp-d16
 1491              	enqueue:
 1492              	.LFB142:
 877:Src/main.c    **** }
 878:Src/main.c    **** 
 879:Src/main.c    **** void enqueue (struct midi_msg midi_msg) {
 1493              		.loc 1 879 0
 1494              		.cfi_startproc
 1495              		@ args = 0, pretend = 0, frame = 8
 1496              		@ frame_needed = 0, uses_anonymous_args = 0
 1497              		@ link register save eliminated.
 1498 0000 82B0     		sub	sp, sp, #8
 1499              	.LCFI24:
 1500              		.cfi_def_cfa_offset 8
 880:Src/main.c    ****   midi_msg_queue.queue[midi_msg_queue.head++] = midi_msg;
 1501              		.loc 1 880 0
 1502 0002 054B     		ldr	r3, .L72
 1503 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1504 0006 511C     		adds	r1, r2, #1
ARM GAS  /tmp/ccR9AC2d.s 			page 44


 1505 0008 1970     		strb	r1, [r3]
 1506 000a 03EB8203 		add	r3, r3, r2, lsl #2
 1507 000e C3F80200 		str	r0, [r3, #2]	@ unaligned
 881:Src/main.c    **** }
 1508              		.loc 1 881 0
 1509 0012 02B0     		add	sp, sp, #8
 1510              	.LCFI25:
 1511              		.cfi_def_cfa_offset 0
 1512              		@ sp needed
 1513 0014 7047     		bx	lr
 1514              	.L73:
 1515 0016 00BF     		.align	2
 1516              	.L72:
 1517 0018 00000000 		.word	midi_msg_queue
 1518              		.cfi_endproc
 1519              	.LFE142:
 1521              		.section	.text.dequeue,"ax",%progbits
 1522              		.align	1
 1523              		.global	dequeue
 1524              		.syntax unified
 1525              		.thumb
 1526              		.thumb_func
 1527              		.fpu fpv4-sp-d16
 1529              	dequeue:
 1530              	.LFB143:
 882:Src/main.c    **** 
 883:Src/main.c    **** struct midi_msg dequeue(void) {
 1531              		.loc 1 883 0
 1532              		.cfi_startproc
 1533              		@ args = 0, pretend = 0, frame = 8
 1534              		@ frame_needed = 0, uses_anonymous_args = 0
 1535              		@ link register save eliminated.
 1536 0000 82B0     		sub	sp, sp, #8
 1537              	.LCFI26:
 1538              		.cfi_def_cfa_offset 8
 884:Src/main.c    ****   return midi_msg_queue.queue[midi_msg_queue.tail++];
 1539              		.loc 1 884 0
 1540 0002 0D4B     		ldr	r3, .L76
 1541 0004 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1542 0006 511C     		adds	r1, r2, #1
 1543 0008 5970     		strb	r1, [r3, #1]
 1544 000a 03EB8203 		add	r3, r3, r2, lsl #2
 1545 000e D3F80200 		ldr	r0, [r3, #2]	@ unaligned
 1546 0012 0023     		movs	r3, #0
 1547 0014 C2B2     		uxtb	r2, r0
 1548 0016 62F30703 		bfi	r3, r2, #0, #8
 1549 001a C0F30722 		ubfx	r2, r0, #8, #8
 1550 001e 62F30F23 		bfi	r3, r2, #8, #8
 1551 0022 C0F30742 		ubfx	r2, r0, #16, #8
 1552 0026 62F31743 		bfi	r3, r2, #16, #8
 1553 002a 000E     		lsrs	r0, r0, #24
 1554 002c 60F31F63 		bfi	r3, r0, #24, #8
 885:Src/main.c    **** }
 1555              		.loc 1 885 0
 1556 0030 1846     		mov	r0, r3
 1557 0032 02B0     		add	sp, sp, #8
 1558              	.LCFI27:
ARM GAS  /tmp/ccR9AC2d.s 			page 45


 1559              		.cfi_def_cfa_offset 0
 1560              		@ sp needed
 1561 0034 7047     		bx	lr
 1562              	.L77:
 1563 0036 00BF     		.align	2
 1564              	.L76:
 1565 0038 00000000 		.word	midi_msg_queue
 1566              		.cfi_endproc
 1567              	.LFE143:
 1569              		.section	.text.main,"ax",%progbits
 1570              		.align	1
 1571              		.global	main
 1572              		.syntax unified
 1573              		.thumb
 1574              		.thumb_func
 1575              		.fpu fpv4-sp-d16
 1577              	main:
 1578              	.LFB130:
 122:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1579              		.loc 1 122 0
 1580              		.cfi_startproc
 1581              		@ args = 0, pretend = 0, frame = 24
 1582              		@ frame_needed = 0, uses_anonymous_args = 0
 1583 0000 30B5     		push	{r4, r5, lr}
 1584              	.LCFI28:
 1585              		.cfi_def_cfa_offset 12
 1586              		.cfi_offset 4, -12
 1587              		.cfi_offset 5, -8
 1588              		.cfi_offset 14, -4
 1589 0002 87B0     		sub	sp, sp, #28
 1590              	.LCFI29:
 1591              		.cfi_def_cfa_offset 40
 131:Src/main.c    **** 
 1592              		.loc 1 131 0
 1593 0004 FFF7FEFF 		bl	HAL_Init
 1594              	.LVL81:
 138:Src/main.c    **** 
 1595              		.loc 1 138 0
 1596 0008 FFF7FEFF 		bl	SystemClock_Config
 1597              	.LVL82:
 145:Src/main.c    ****   MX_SPI5_Init();
 1598              		.loc 1 145 0
 1599 000c FFF7FEFF 		bl	MX_GPIO_Init
 1600              	.LVL83:
 146:Src/main.c    ****   MX_USART1_UART_Init();
 1601              		.loc 1 146 0
 1602 0010 FFF7FEFF 		bl	MX_SPI5_Init
 1603              	.LVL84:
 147:Src/main.c    ****   MX_DAC_Init();
 1604              		.loc 1 147 0
 1605 0014 FFF7FEFF 		bl	MX_USART1_UART_Init
 1606              	.LVL85:
 148:Src/main.c    ****   MX_TIM6_Init();
 1607              		.loc 1 148 0
 1608 0018 FFF7FEFF 		bl	MX_DAC_Init
 1609              	.LVL86:
 149:Src/main.c    ****   MX_TIM7_Init();
ARM GAS  /tmp/ccR9AC2d.s 			page 46


 1610              		.loc 1 149 0
 1611 001c FFF7FEFF 		bl	MX_TIM6_Init
 1612              	.LVL87:
 150:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1613              		.loc 1 150 0
 1614 0020 FFF7FEFF 		bl	MX_TIM7_Init
 1615              	.LVL88:
 152:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim6);
 1616              		.loc 1 152 0
 1617 0024 FFF7FEFF 		bl	init_wavetable
 1618              	.LVL89:
 153:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim7);
 1619              		.loc 1 153 0
 1620 0028 B548     		ldr	r0, .L126
 1621 002a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1622              	.LVL90:
 154:Src/main.c    ****   HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 1623              		.loc 1 154 0
 1624 002e B548     		ldr	r0, .L126+4
 1625 0030 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1626              	.LVL91:
 155:Src/main.c    **** 
 1627              		.loc 1 155 0
 1628 0034 1021     		movs	r1, #16
 1629 0036 B448     		ldr	r0, .L126+8
 1630 0038 FFF7FEFF 		bl	HAL_DAC_Start
 1631              	.LVL92:
 1632              	.LBB14:
 157:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 1633              		.loc 1 157 0
 1634 003c 0023     		movs	r3, #0
 1635 003e 0CE0     		b	.L79
 1636              	.LVL93:
 1637              	.L80:
 158:Src/main.c    ****     note_on[i] = MIDI_NOTE_OFF;
 1638              		.loc 1 158 0 discriminator 3
 1639 0040 0022     		movs	r2, #0
 1640 0042 B249     		ldr	r1, .L126+12
 1641 0044 CA54     		strb	r2, [r1, r3]
 159:Src/main.c    ****     note_freq[i] = 0;
 1642              		.loc 1 159 0 discriminator 3
 1643 0046 8020     		movs	r0, #128
 1644 0048 B149     		ldr	r1, .L126+16
 1645 004a C854     		strb	r0, [r1, r3]
 160:Src/main.c    ****     lfo_freq[i] = 20;
 1646              		.loc 1 160 0 discriminator 3
 1647 004c B149     		ldr	r1, .L126+20
 1648 004e CA54     		strb	r2, [r1, r3]
 161:Src/main.c    ****   }
 1649              		.loc 1 161 0 discriminator 3
 1650 0050 1421     		movs	r1, #20
 1651 0052 B14A     		ldr	r2, .L126+24
 1652 0054 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 157:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 1653              		.loc 1 157 0 discriminator 3
 1654 0058 0133     		adds	r3, r3, #1
 1655              	.LVL94:
ARM GAS  /tmp/ccR9AC2d.s 			page 47


 1656              	.L79:
 157:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 1657              		.loc 1 157 0 is_stmt 0 discriminator 1
 1658 005a 0F2B     		cmp	r3, #15
 1659 005c F0DD     		ble	.L80
 1660              	.LBE14:
 164:Src/main.c    ****   HAL_UART_Transmit(&huart1, init_msg, 20, 50);
 1661              		.loc 1 164 0 is_stmt 1
 1662 005e AF4B     		ldr	r3, .L126+28
 1663              	.LVL95:
 1664 0060 01AC     		add	r4, sp, #4
 1665 0062 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1666 0064 07C4     		stmia	r4!, {r0, r1, r2}
 1667 0066 2370     		strb	r3, [r4]
 1668 0068 0024     		movs	r4, #0
 1669 006a CDF81140 		str	r4, [sp, #17]	@ unaligned
 1670 006e 0594     		str	r4, [sp, #20]	@ unaligned
 165:Src/main.c    ****   /* USER CODE END 2 */
 1671              		.loc 1 165 0
 1672 0070 3223     		movs	r3, #50
 1673 0072 1422     		movs	r2, #20
 1674 0074 01A9     		add	r1, sp, #4
 1675 0076 AA48     		ldr	r0, .L126+32
 1676 0078 FFF7FEFF 		bl	HAL_UART_Transmit
 1677              	.LVL96:
 1678 007c D5E0     		b	.L81
 1679              	.LVL97:
 1680              	.L119:
 1681              	.LBB15:
 186:Src/main.c    ****         case MIDI_NOTE_ON:
 1682              		.loc 1 186 0
 1683 007e 1428     		cmp	r0, #20
 1684 0080 22D0     		beq	.L87
 1685 0082 1528     		cmp	r0, #21
 1686 0084 40F0F980 		bne	.L84
 197:Src/main.c    ****           break;
 1687              		.loc 1 197 0
 1688 0088 0122     		movs	r2, #1
 1689 008a A64B     		ldr	r3, .L126+36
 1690 008c 1A70     		strb	r2, [r3]
 198:Src/main.c    ****         case SUSTAIN_CC:
 1691              		.loc 1 198 0
 1692 008e 02E0     		b	.L83
 1693              	.L90:
 188:Src/main.c    ****           break;
 1694              		.loc 1 188 0
 1695 0090 0122     		movs	r2, #1
 1696 0092 A54B     		ldr	r3, .L126+40
 1697 0094 1A70     		strb	r2, [r3]
 1698              	.LVL98:
 1699              	.L83:
 1700              	.LBE15:
 281:Src/main.c    ****       process_msg_flag = 0;
 1701              		.loc 1 281 0
 1702 0096 002C     		cmp	r4, #0
 1703 0098 00F0B480 		beq	.L97
 1704              	.LVL99:
ARM GAS  /tmp/ccR9AC2d.s 			page 48


 283:Src/main.c    ****       case MIDI_NOTE_ON:
 1705              		.loc 1 283 0
 1706 009c A34B     		ldr	r3, .L126+44
 1707 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1708 00a0 DBB2     		uxtb	r3, r3
 1709 00a2 162B     		cmp	r3, #22
 1710 00a4 00F01F81 		beq	.L98
 1711 00a8 71D9     		bls	.L114
 1712 00aa 802B     		cmp	r3, #128
 1713 00ac 00F0A780 		beq	.L111
 1714 00b0 902B     		cmp	r3, #144
 1715 00b2 00F08480 		beq	.L112
 1716 00b6 172B     		cmp	r3, #23
 1717 00b8 00F01B81 		beq	.L115
 1718              	.L110:
 282:Src/main.c    ****       switch(current_midi_msg.byte0) {
 1719              		.loc 1 282 0
 1720 00bc 0024     		movs	r4, #0
 1721 00be A1E0     		b	.L97
 1722              	.LVL100:
 1723              	.L89:
 1724              	.LBB22:
 191:Src/main.c    ****           break;
 1725              		.loc 1 191 0
 1726 00c0 0122     		movs	r2, #1
 1727 00c2 9B4B     		ldr	r3, .L126+48
 1728 00c4 1A70     		strb	r2, [r3]
 192:Src/main.c    ****         case ATTACK_CC:
 1729              		.loc 1 192 0
 1730 00c6 E6E7     		b	.L83
 1731              	.L87:
 194:Src/main.c    ****           break;
 1732              		.loc 1 194 0
 1733 00c8 0122     		movs	r2, #1
 1734 00ca 9A4B     		ldr	r3, .L126+52
 1735 00cc 1A70     		strb	r2, [r3]
 195:Src/main.c    ****         case DECAY_CC:
 1736              		.loc 1 195 0
 1737 00ce E2E7     		b	.L83
 1738              	.L85:
 200:Src/main.c    ****           break;
 1739              		.loc 1 200 0
 1740 00d0 0122     		movs	r2, #1
 1741 00d2 994B     		ldr	r3, .L126+56
 1742 00d4 1A70     		strb	r2, [r3]
 201:Src/main.c    ****         case RELEASE_CC:
 1743              		.loc 1 201 0
 1744 00d6 DEE7     		b	.L83
 1745              	.L120:
 203:Src/main.c    ****           break;
 1746              		.loc 1 203 0
 1747 00d8 0122     		movs	r2, #1
 1748 00da 984B     		ldr	r3, .L126+60
 1749 00dc 1A70     		strb	r2, [r3]
 204:Src/main.c    ****         default:
 1750              		.loc 1 204 0
 1751 00de DAE7     		b	.L83
ARM GAS  /tmp/ccR9AC2d.s 			page 49


 1752              	.L121:
 1753              	.LBB16:
 207:Src/main.c    ****           MIDI_NOTE_ON,
 1754              		.loc 1 207 0
 1755 00e0 9023     		movs	r3, #144
 1756 00e2 8DF80030 		strb	r3, [sp]
 1757 00e6 8DF80100 		strb	r0, [sp, #1]
 1758 00ea 7F23     		movs	r3, #127
 1759 00ec 8DF80230 		strb	r3, [sp, #2]
 1760 00f0 0025     		movs	r5, #0
 1761 00f2 8DF80350 		strb	r5, [sp, #3]
 213:Src/main.c    ****         note_on_flag = 0;
 1762              		.loc 1 213 0
 1763 00f6 0098     		ldr	r0, [sp]
 1764              	.LVL101:
 1765 00f8 FFF7FEFF 		bl	enqueue
 1766              	.LVL102:
 214:Src/main.c    ****       }
 1767              		.loc 1 214 0
 1768 00fc 8A4B     		ldr	r3, .L126+40
 1769 00fe 1D70     		strb	r5, [r3]
 1770              	.LBE16:
 1771 0100 C9E7     		b	.L83
 1772              	.LVL103:
 1773              	.L122:
 1774              	.LBB17:
 217:Src/main.c    ****           MIDI_NOTE_OFF,
 1775              		.loc 1 217 0 discriminator 2
 1776 0102 8023     		movs	r3, #128
 1777 0104 8DF80030 		strb	r3, [sp]
 1778 0108 8DF80100 		strb	r0, [sp, #1]
 1779 010c 0025     		movs	r5, #0
 1780 010e 8DF80250 		strb	r5, [sp, #2]
 1781 0112 8DF80350 		strb	r5, [sp, #3]
 223:Src/main.c    ****         note_off_flag = 0;
 1782              		.loc 1 223 0 discriminator 2
 1783 0116 0098     		ldr	r0, [sp]
 1784              	.LVL104:
 1785 0118 FFF7FEFF 		bl	enqueue
 1786              	.LVL105:
 224:Src/main.c    ****       }
 1787              		.loc 1 224 0 discriminator 2
 1788 011c 844B     		ldr	r3, .L126+48
 1789 011e 1D70     		strb	r5, [r3]
 1790              	.LBE17:
 1791 0120 B9E7     		b	.L83
 1792              	.LVL106:
 1793              	.L123:
 1794              	.LBB18:
 227:Src/main.c    ****           ATTACK_CC,
 1795              		.loc 1 227 0 discriminator 3
 1796 0122 1423     		movs	r3, #20
 1797 0124 8DF80030 		strb	r3, [sp]
 1798 0128 8DF80100 		strb	r0, [sp, #1]
 1799 012c 0025     		movs	r5, #0
 1800 012e 8DF80250 		strb	r5, [sp, #2]
 1801 0132 8DF80350 		strb	r5, [sp, #3]
ARM GAS  /tmp/ccR9AC2d.s 			page 50


 233:Src/main.c    ****         attack_cc_flag = 0;
 1802              		.loc 1 233 0 discriminator 3
 1803 0136 0098     		ldr	r0, [sp]
 1804              	.LVL107:
 1805 0138 FFF7FEFF 		bl	enqueue
 1806              	.LVL108:
 234:Src/main.c    ****         UART_PrintADSR();
 1807              		.loc 1 234 0 discriminator 3
 1808 013c 7D4B     		ldr	r3, .L126+52
 1809 013e 1D70     		strb	r5, [r3]
 235:Src/main.c    ****       }
 1810              		.loc 1 235 0 discriminator 3
 1811 0140 FFF7FEFF 		bl	UART_PrintADSR
 1812              	.LVL109:
 1813              	.LBE18:
 1814 0144 A7E7     		b	.L83
 1815              	.LVL110:
 1816              	.L124:
 1817              	.LBB19:
 238:Src/main.c    ****           DECAY_CC,
 1818              		.loc 1 238 0 discriminator 4
 1819 0146 1523     		movs	r3, #21
 1820 0148 8DF80030 		strb	r3, [sp]
 1821 014c 8DF80100 		strb	r0, [sp, #1]
 1822 0150 0025     		movs	r5, #0
 1823 0152 8DF80250 		strb	r5, [sp, #2]
 1824 0156 8DF80350 		strb	r5, [sp, #3]
 244:Src/main.c    ****         decay_cc_flag = 0;
 1825              		.loc 1 244 0 discriminator 4
 1826 015a 0098     		ldr	r0, [sp]
 1827              	.LVL111:
 1828 015c FFF7FEFF 		bl	enqueue
 1829              	.LVL112:
 245:Src/main.c    ****         UART_PrintADSR();
 1830              		.loc 1 245 0 discriminator 4
 1831 0160 704B     		ldr	r3, .L126+36
 1832 0162 1D70     		strb	r5, [r3]
 246:Src/main.c    ****       }
 1833              		.loc 1 246 0 discriminator 4
 1834 0164 FFF7FEFF 		bl	UART_PrintADSR
 1835              	.LVL113:
 1836              	.LBE19:
 1837 0168 95E7     		b	.L83
 1838              	.LVL114:
 1839              	.L125:
 1840              	.LBB20:
 249:Src/main.c    ****           SUSTAIN_CC,
 1841              		.loc 1 249 0 discriminator 5
 1842 016a 1623     		movs	r3, #22
 1843 016c 8DF80030 		strb	r3, [sp]
 1844 0170 8DF80100 		strb	r0, [sp, #1]
 1845 0174 0025     		movs	r5, #0
 1846 0176 8DF80250 		strb	r5, [sp, #2]
 1847 017a 8DF80350 		strb	r5, [sp, #3]
 255:Src/main.c    ****         sustain_cc_flag = 0;
 1848              		.loc 1 255 0 discriminator 5
 1849 017e 0098     		ldr	r0, [sp]
ARM GAS  /tmp/ccR9AC2d.s 			page 51


 1850              	.LVL115:
 1851 0180 FFF7FEFF 		bl	enqueue
 1852              	.LVL116:
 256:Src/main.c    ****         UART_PrintADSR();
 1853              		.loc 1 256 0 discriminator 5
 1854 0184 6C4B     		ldr	r3, .L126+56
 1855 0186 1D70     		strb	r5, [r3]
 257:Src/main.c    ****       }
 1856              		.loc 1 257 0 discriminator 5
 1857 0188 FFF7FEFF 		bl	UART_PrintADSR
 1858              	.LVL117:
 1859              	.LBE20:
 1860 018c 83E7     		b	.L83
 1861              	.LVL118:
 1862              	.L114:
 1863              	.LBE22:
 283:Src/main.c    ****       case MIDI_NOTE_ON:
 1864              		.loc 1 283 0
 1865 018e 142B     		cmp	r3, #20
 1866 0190 00F0A380 		beq	.L100
 1867 0194 152B     		cmp	r3, #21
 1868 0196 91D1     		bne	.L110
 306:Src/main.c    ****         break;
 1869              		.loc 1 306 0
 1870 0198 644B     		ldr	r3, .L126+44
 1871 019a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1872 019c 684B     		ldr	r3, .L126+64
 1873 019e 1A70     		strb	r2, [r3]
 282:Src/main.c    ****       switch(current_midi_msg.byte0) {
 1874              		.loc 1 282 0
 1875 01a0 0024     		movs	r4, #0
 307:Src/main.c    ****       case SUSTAIN_CC:
 1876              		.loc 1 307 0
 1877 01a2 2FE0     		b	.L97
 1878              	.LVL119:
 1879              	.L117:
 1880              	.LBB23:
 287:Src/main.c    ****             note_freq[i] = current_midi_msg.byte1;
 1881              		.loc 1 287 0
 1882 01a4 9021     		movs	r1, #144
 1883 01a6 5A4A     		ldr	r2, .L126+16
 1884 01a8 D154     		strb	r1, [r2, r3]
 288:Src/main.c    ****             env_state[i] = ATTACK_MODE;
 1885              		.loc 1 288 0
 1886 01aa 604A     		ldr	r2, .L126+44
 1887 01ac 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 1888 01ae D2B2     		uxtb	r2, r2
 1889 01b0 5849     		ldr	r1, .L126+20
 1890 01b2 CA54     		strb	r2, [r1, r3]
 289:Src/main.c    ****             break;
 1891              		.loc 1 289 0
 1892 01b4 0121     		movs	r1, #1
 1893 01b6 554A     		ldr	r2, .L126+12
 1894 01b8 D154     		strb	r1, [r2, r3]
 1895              	.LBE23:
 282:Src/main.c    ****       switch(current_midi_msg.byte0) {
 1896              		.loc 1 282 0
ARM GAS  /tmp/ccR9AC2d.s 			page 52


 1897 01ba 0024     		movs	r4, #0
 1898              	.LBB24:
 290:Src/main.c    ****           }
 1899              		.loc 1 290 0
 1900 01bc 22E0     		b	.L97
 1901              	.LVL120:
 1902              	.L112:
 1903              	.LBE24:
 283:Src/main.c    ****       case MIDI_NOTE_ON:
 1904              		.loc 1 283 0
 1905 01be 0023     		movs	r3, #0
 1906              	.L103:
 1907              	.LVL121:
 1908              	.LBB25:
 285:Src/main.c    ****           if(note_on[i] == MIDI_NOTE_OFF){
 1909              		.loc 1 285 0 discriminator 1
 1910 01c0 0F2B     		cmp	r3, #15
 1911 01c2 06DC     		bgt	.L116
 286:Src/main.c    ****             note_on[i] = MIDI_NOTE_ON;
 1912              		.loc 1 286 0
 1913 01c4 524A     		ldr	r2, .L126+16
 1914 01c6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1915 01c8 D2B2     		uxtb	r2, r2
 1916 01ca 802A     		cmp	r2, #128
 1917 01cc EAD0     		beq	.L117
 285:Src/main.c    ****           if(note_on[i] == MIDI_NOTE_OFF){
 1918              		.loc 1 285 0 discriminator 2
 1919 01ce 0133     		adds	r3, r3, #1
 1920              	.LVL122:
 1921 01d0 F6E7     		b	.L103
 1922              	.L116:
 1923              	.LBE25:
 282:Src/main.c    ****       switch(current_midi_msg.byte0) {
 1924              		.loc 1 282 0
 1925 01d2 0024     		movs	r4, #0
 1926 01d4 16E0     		b	.L97
 1927              	.LVL123:
 1928              	.L107:
 1929              	.LBB26:
 295:Src/main.c    ****           if (note_on[i] == MIDI_NOTE_ON && note_freq[i] == current_midi_msg.byte1){
 1930              		.loc 1 295 0 discriminator 2
 1931 01d6 0133     		adds	r3, r3, #1
 1932              	.LVL124:
 1933              	.L102:
 295:Src/main.c    ****           if (note_on[i] == MIDI_NOTE_ON && note_freq[i] == current_midi_msg.byte1){
 1934              		.loc 1 295 0 is_stmt 0 discriminator 1
 1935 01d8 0F2B     		cmp	r3, #15
 1936 01da 12DC     		bgt	.L118
 296:Src/main.c    ****             //note_on[i] = MIDI_NOTE_OFF;
 1937              		.loc 1 296 0 is_stmt 1
 1938 01dc 4C4A     		ldr	r2, .L126+16
 1939 01de D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1940 01e0 D2B2     		uxtb	r2, r2
 1941 01e2 902A     		cmp	r2, #144
 1942 01e4 F7D1     		bne	.L107
 296:Src/main.c    ****             //note_on[i] = MIDI_NOTE_OFF;
 1943              		.loc 1 296 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccR9AC2d.s 			page 53


 1944 01e6 4B4A     		ldr	r2, .L126+20
 1945 01e8 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 1946 01ea C9B2     		uxtb	r1, r1
 1947 01ec 4F4A     		ldr	r2, .L126+44
 1948 01ee 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 1949 01f0 D2B2     		uxtb	r2, r2
 1950 01f2 9142     		cmp	r1, r2
 1951 01f4 EFD1     		bne	.L107
 298:Src/main.c    ****           }
 1952              		.loc 1 298 0 is_stmt 1
 1953 01f6 0421     		movs	r1, #4
 1954 01f8 444A     		ldr	r2, .L126+12
 1955 01fa D154     		strb	r1, [r2, r3]
 1956 01fc EBE7     		b	.L107
 1957              	.LVL125:
 1958              	.L111:
 1959              	.LBE26:
 283:Src/main.c    ****       case MIDI_NOTE_ON:
 1960              		.loc 1 283 0
 1961 01fe 0023     		movs	r3, #0
 1962 0200 EAE7     		b	.L102
 1963              	.LVL126:
 1964              	.L118:
 282:Src/main.c    ****       switch(current_midi_msg.byte0) {
 1965              		.loc 1 282 0
 1966 0202 0024     		movs	r4, #0
 1967              	.LVL127:
 1968              	.L97:
 318:Src/main.c    ****       //      __disable_irq();
 1969              		.loc 1 318 0
 1970 0204 4F4B     		ldr	r3, .L126+68
 1971 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1972 0208 7BB1     		cbz	r3, .L81
 320:Src/main.c    ****       UpdateLFOs();
 1973              		.loc 1 320 0
 1974 020a FFF7FEFF 		bl	UpdateEnvelope
 1975              	.LVL128:
 321:Src/main.c    ****       UpdateOutputValue();
 1976              		.loc 1 321 0
 1977 020e FFF7FEFF 		bl	UpdateLFOs
 1978              	.LVL129:
 322:Src/main.c    ****       HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_8B_R, output_val);
 1979              		.loc 1 322 0
 1980 0212 FFF7FEFF 		bl	UpdateOutputValue
 1981              	.LVL130:
 323:Src/main.c    ****       update_value_flag = 0;
 1982              		.loc 1 323 0
 1983 0216 4C4B     		ldr	r3, .L126+72
 1984 0218 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1985 021a 0822     		movs	r2, #8
 1986 021c 1021     		movs	r1, #16
 1987 021e 3A48     		ldr	r0, .L126+8
 1988 0220 FFF7FEFF 		bl	HAL_DAC_SetValue
 1989              	.LVL131:
 324:Src/main.c    ****       //      __enable_irq();
 1990              		.loc 1 324 0
 1991 0224 0022     		movs	r2, #0
ARM GAS  /tmp/ccR9AC2d.s 			page 54


 1992 0226 474B     		ldr	r3, .L126+68
 1993 0228 1A70     		strb	r2, [r3]
 1994              	.LVL132:
 1995              	.L81:
 175:Src/main.c    ****       current_midi_msg = dequeue();
 1996              		.loc 1 175 0
 1997 022a 484B     		ldr	r3, .L126+76
 1998 022c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1999 022e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2000 0230 9A42     		cmp	r2, r3
 2001 0232 04D0     		beq	.L82
 176:Src/main.c    ****       process_msg_flag = 1;
 2002              		.loc 1 176 0
 2003 0234 FFF7FEFF 		bl	dequeue
 2004              	.LVL133:
 2005 0238 3C4B     		ldr	r3, .L126+44
 2006 023a 1860     		str	r0, [r3]
 2007              	.LVL134:
 177:Src/main.c    ****     }
 2008              		.loc 1 177 0
 2009 023c 0124     		movs	r4, #1
 2010              	.LVL135:
 2011              	.L82:
 180:Src/main.c    ****       MIDI_flag = 0;
 2012              		.loc 1 180 0
 2013 023e 444B     		ldr	r3, .L126+80
 2014 0240 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2015 0242 002B     		cmp	r3, #0
 2016 0244 3FF427AF 		beq	.L83
 181:Src/main.c    **** 
 2017              		.loc 1 181 0
 2018 0248 0022     		movs	r2, #0
 2019 024a 414B     		ldr	r3, .L126+80
 2020 024c 1A70     		strb	r2, [r3]
 183:Src/main.c    ****         uint8_t value = dequeue_byte();
 2021              		.loc 1 183 0
 2022 024e 414B     		ldr	r3, .L126+84
 2023 0250 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2024 0252 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2025 0254 9A42     		cmp	r2, r3
 2026 0256 3FF41EAF 		beq	.L83
 2027              	.LBB27:
 184:Src/main.c    **** 
 2028              		.loc 1 184 0
 2029 025a FFF7FEFF 		bl	dequeue_byte
 2030              	.LVL136:
 186:Src/main.c    ****         case MIDI_NOTE_ON:
 2031              		.loc 1 186 0
 2032 025e 1628     		cmp	r0, #22
 2033 0260 3FF436AF 		beq	.L85
 2034 0264 7FF60BAF 		bls	.L119
 2035 0268 8028     		cmp	r0, #128
 2036 026a 3FF429AF 		beq	.L89
 2037 026e 9028     		cmp	r0, #144
 2038 0270 3FF40EAF 		beq	.L90
 2039 0274 1728     		cmp	r0, #23
 2040 0276 3FF42FAF 		beq	.L120
ARM GAS  /tmp/ccR9AC2d.s 			page 55


 2041              	.L84:
 206:Src/main.c    ****         struct midi_msg new_midi_note_msg = {
 2042              		.loc 1 206 0
 2043 027a 2B4B     		ldr	r3, .L126+40
 2044 027c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2045 027e 002B     		cmp	r3, #0
 2046 0280 7FF42EAF 		bne	.L121
 216:Src/main.c    ****         struct midi_msg new_midi_note_msg = {
 2047              		.loc 1 216 0
 2048 0284 2A4B     		ldr	r3, .L126+48
 2049 0286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2050 0288 002B     		cmp	r3, #0
 2051 028a 7FF43AAF 		bne	.L122
 226:Src/main.c    ****         struct midi_msg new_cc = {
 2052              		.loc 1 226 0
 2053 028e 294B     		ldr	r3, .L126+52
 2054 0290 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2055 0292 002B     		cmp	r3, #0
 2056 0294 7FF445AF 		bne	.L123
 237:Src/main.c    ****         struct midi_msg new_cc = {
 2057              		.loc 1 237 0
 2058 0298 224B     		ldr	r3, .L126+36
 2059 029a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2060 029c 002B     		cmp	r3, #0
 2061 029e 7FF452AF 		bne	.L124
 248:Src/main.c    ****         struct midi_msg new_cc = {
 2062              		.loc 1 248 0
 2063 02a2 254B     		ldr	r3, .L126+56
 2064 02a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2065 02a6 002B     		cmp	r3, #0
 2066 02a8 7FF45FAF 		bne	.L125
 259:Src/main.c    ****         struct midi_msg new_cc = {
 2067              		.loc 1 259 0
 2068 02ac 234B     		ldr	r3, .L126+60
 2069 02ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2070 02b0 002B     		cmp	r3, #0
 2071 02b2 3FF4F0AE 		beq	.L83
 2072              	.LBB21:
 260:Src/main.c    ****           RELEASE_CC,
 2073              		.loc 1 260 0 discriminator 6
 2074 02b6 1723     		movs	r3, #23
 2075 02b8 8DF80030 		strb	r3, [sp]
 2076 02bc 8DF80100 		strb	r0, [sp, #1]
 2077 02c0 0025     		movs	r5, #0
 2078 02c2 8DF80250 		strb	r5, [sp, #2]
 2079 02c6 8DF80350 		strb	r5, [sp, #3]
 266:Src/main.c    ****         release_cc_flag = 0;
 2080              		.loc 1 266 0 discriminator 6
 2081 02ca 0098     		ldr	r0, [sp]
 2082              	.LVL137:
 2083 02cc FFF7FEFF 		bl	enqueue
 2084              	.LVL138:
 267:Src/main.c    ****         UART_PrintADSR();
 2085              		.loc 1 267 0 discriminator 6
 2086 02d0 1A4B     		ldr	r3, .L126+60
 2087 02d2 1D70     		strb	r5, [r3]
 268:Src/main.c    ****       }
ARM GAS  /tmp/ccR9AC2d.s 			page 56


 2088              		.loc 1 268 0 discriminator 6
 2089 02d4 FFF7FEFF 		bl	UART_PrintADSR
 2090              	.LVL139:
 2091              	.LBE21:
 2092 02d8 DDE6     		b	.L83
 2093              	.LVL140:
 2094              	.L100:
 2095              	.LBE27:
 303:Src/main.c    ****         break;
 2096              		.loc 1 303 0
 2097 02da 144B     		ldr	r3, .L126+44
 2098 02dc 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2099 02de 1E4B     		ldr	r3, .L126+88
 2100 02e0 1A70     		strb	r2, [r3]
 282:Src/main.c    ****       switch(current_midi_msg.byte0) {
 2101              		.loc 1 282 0
 2102 02e2 0024     		movs	r4, #0
 304:Src/main.c    ****       case DECAY_CC:
 2103              		.loc 1 304 0
 2104 02e4 8EE7     		b	.L97
 2105              	.L98:
 309:Src/main.c    ****         break;
 2106              		.loc 1 309 0
 2107 02e6 114B     		ldr	r3, .L126+44
 2108 02e8 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2109 02ea 1C4B     		ldr	r3, .L126+92
 2110 02ec 1A70     		strb	r2, [r3]
 282:Src/main.c    ****       switch(current_midi_msg.byte0) {
 2111              		.loc 1 282 0
 2112 02ee 0024     		movs	r4, #0
 310:Src/main.c    ****       case RELEASE_CC:
 2113              		.loc 1 310 0
 2114 02f0 88E7     		b	.L97
 2115              	.L115:
 312:Src/main.c    ****         break;
 2116              		.loc 1 312 0
 2117 02f2 0E4B     		ldr	r3, .L126+44
 2118 02f4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2119 02f6 1A4B     		ldr	r3, .L126+96
 2120 02f8 1A70     		strb	r2, [r3]
 282:Src/main.c    ****       switch(current_midi_msg.byte0) {
 2121              		.loc 1 282 0
 2122 02fa 0024     		movs	r4, #0
 313:Src/main.c    **** 
 2123              		.loc 1 313 0
 2124 02fc 82E7     		b	.L97
 2125              	.L127:
 2126 02fe 00BF     		.align	2
 2127              	.L126:
 2128 0300 00000000 		.word	htim6
 2129 0304 00000000 		.word	htim7
 2130 0308 00000000 		.word	hdac
 2131 030c 00000000 		.word	env_state
 2132 0310 00000000 		.word	note_on
 2133 0314 00000000 		.word	note_freq
 2134 0318 00000000 		.word	.LANCHOR4
 2135 031c 00000000 		.word	.LANCHOR6
ARM GAS  /tmp/ccR9AC2d.s 			page 57


 2136 0320 00000000 		.word	huart1
 2137 0324 00000000 		.word	.LANCHOR12
 2138 0328 00000000 		.word	.LANCHOR9
 2139 032c 00000000 		.word	.LANCHOR7
 2140 0330 00000000 		.word	.LANCHOR10
 2141 0334 00000000 		.word	.LANCHOR11
 2142 0338 00000000 		.word	.LANCHOR13
 2143 033c 00000000 		.word	.LANCHOR14
 2144 0340 00000000 		.word	.LANCHOR16
 2145 0344 00000000 		.word	.LANCHOR0
 2146 0348 00000000 		.word	.LANCHOR1
 2147 034c 00000000 		.word	midi_msg_queue
 2148 0350 00000000 		.word	.LANCHOR8
 2149 0354 00000000 		.word	spi_byte_queue
 2150 0358 00000000 		.word	.LANCHOR15
 2151 035c 00000000 		.word	.LANCHOR17
 2152 0360 00000000 		.word	.LANCHOR18
 2153              		.cfi_endproc
 2154              	.LFE130:
 2156              		.section	.text.Error_Handler,"ax",%progbits
 2157              		.align	1
 2158              		.global	Error_Handler
 2159              		.syntax unified
 2160              		.thumb
 2161              		.thumb_func
 2162              		.fpu fpv4-sp-d16
 2164              	Error_Handler:
 2165              	.LFB144:
 886:Src/main.c    **** /* USER CODE END 4 */
 887:Src/main.c    **** 
 888:Src/main.c    **** /**
 889:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 890:Src/main.c    ****   * @retval None
 891:Src/main.c    ****   */
 892:Src/main.c    **** void Error_Handler(void)
 893:Src/main.c    **** {
 2166              		.loc 1 893 0
 2167              		.cfi_startproc
 2168              		@ args = 0, pretend = 0, frame = 0
 2169              		@ frame_needed = 0, uses_anonymous_args = 0
 2170              		@ link register save eliminated.
 2171 0000 7047     		bx	lr
 2172              		.cfi_endproc
 2173              	.LFE144:
 2175              		.global	release
 2176              		.global	sustain
 2177              		.global	decay
 2178              		.global	attack
 2179              		.comm	midi_msg_queue,1022,4
 2180              		.global	MIDI_flag
 2181              		.global	update_value_flag
 2182              		.global	lfo
 2183              		.global	lfo_freq
 2184              		.global	lfo_phase_accumulator
 2185              		.global	output_val
 2186              		.global	phase_accumulator
 2187              		.global	current_midi_msg
ARM GAS  /tmp/ccR9AC2d.s 			page 58


 2188              		.global	release_cc_flag
 2189              		.global	sustain_cc_flag
 2190              		.global	decay_cc_flag
 2191              		.global	attack_cc_flag
 2192              		.global	note_off_flag
 2193              		.global	note_on_flag
 2194              		.global	inv_voices
 2195              		.comm	huart1,64,4
 2196              		.comm	htim7,64,4
 2197              		.comm	htim6,64,4
 2198              		.comm	hspi5,88,4
 2199              		.comm	hdac,20,4
 2200              		.comm	lfo_sine,256,4
 2201              		.comm	base_sq,4096,4
 2202              		.comm	base_tri,4096,4
 2203              		.comm	base_neg_saw,4096,4
 2204              		.comm	base_pos_saw,4096,4
 2205              		.comm	base_sine,4096,4
 2206              		.section	.rodata
 2207              		.align	2
 2208              		.set	.LANCHOR6,. + 0
 2209              	.LC0:
 2210 0000 0A53544D 		.ascii	"\012STM32F429!\012\000"
 2210      33324634 
 2210      3239210A 
 2210      00
 2211 000d 00000000 		.space	7
 2211      000000
 2212              		.section	.bss.MIDI_flag,"aw",%nobits
 2213              		.set	.LANCHOR8,. + 0
 2216              	MIDI_flag:
 2217 0000 00       		.space	1
 2218              		.section	.bss.attack_cc_flag,"aw",%nobits
 2219              		.set	.LANCHOR11,. + 0
 2222              	attack_cc_flag:
 2223 0000 00       		.space	1
 2224              		.section	.bss.current_midi_msg,"aw",%nobits
 2225              		.align	2
 2226              		.set	.LANCHOR7,. + 0
 2229              	current_midi_msg:
 2230 0000 00000000 		.space	4
 2231              		.section	.bss.decay_cc_flag,"aw",%nobits
 2232              		.set	.LANCHOR12,. + 0
 2235              	decay_cc_flag:
 2236 0000 00       		.space	1
 2237              		.section	.bss.lfo,"aw",%nobits
 2238              		.align	2
 2239              		.set	.LANCHOR3,. + 0
 2242              	lfo:
 2243 0000 00000000 		.space	16
 2243      00000000 
 2243      00000000 
 2243      00000000 
 2244              		.section	.bss.lfo_freq,"aw",%nobits
 2245              		.align	2
 2246              		.set	.LANCHOR4,. + 0
 2249              	lfo_freq:
ARM GAS  /tmp/ccR9AC2d.s 			page 59


 2250 0000 00000000 		.space	32
 2250      00000000 
 2250      00000000 
 2250      00000000 
 2250      00000000 
 2251              		.section	.bss.lfo_phase_accumulator,"aw",%nobits
 2252              		.align	2
 2253              		.set	.LANCHOR5,. + 0
 2256              	lfo_phase_accumulator:
 2257 0000 00000000 		.space	64
 2257      00000000 
 2257      00000000 
 2257      00000000 
 2257      00000000 
 2258              		.section	.bss.note_off_flag,"aw",%nobits
 2259              		.set	.LANCHOR10,. + 0
 2262              	note_off_flag:
 2263 0000 00       		.space	1
 2264              		.section	.bss.note_on_flag,"aw",%nobits
 2265              		.set	.LANCHOR9,. + 0
 2268              	note_on_flag:
 2269 0000 00       		.space	1
 2270              		.section	.bss.output_val,"aw",%nobits
 2271              		.set	.LANCHOR1,. + 0
 2274              	output_val:
 2275 0000 00       		.space	1
 2276              		.section	.bss.phase_accumulator,"aw",%nobits
 2277              		.align	2
 2278              		.set	.LANCHOR2,. + 0
 2281              	phase_accumulator:
 2282 0000 00000000 		.space	64
 2282      00000000 
 2282      00000000 
 2282      00000000 
 2282      00000000 
 2283              		.section	.bss.release_cc_flag,"aw",%nobits
 2284              		.set	.LANCHOR14,. + 0
 2287              	release_cc_flag:
 2288 0000 00       		.space	1
 2289              		.section	.bss.sustain_cc_flag,"aw",%nobits
 2290              		.set	.LANCHOR13,. + 0
 2293              	sustain_cc_flag:
 2294 0000 00       		.space	1
 2295              		.section	.bss.update_value_flag,"aw",%nobits
 2296              		.set	.LANCHOR0,. + 0
 2299              	update_value_flag:
 2300 0000 00       		.space	1
 2301              		.section	.data.attack,"aw",%progbits
 2302              		.set	.LANCHOR15,. + 0
 2305              	attack:
 2306 0000 FF       		.byte	-1
 2307              		.section	.data.decay,"aw",%progbits
 2308              		.set	.LANCHOR16,. + 0
 2311              	decay:
 2312 0000 FF       		.byte	-1
 2313              		.section	.data.release,"aw",%progbits
 2314              		.set	.LANCHOR18,. + 0
ARM GAS  /tmp/ccR9AC2d.s 			page 60


 2317              	release:
 2318 0000 FF       		.byte	-1
 2319              		.section	.data.sustain,"aw",%progbits
 2320              		.set	.LANCHOR17,. + 0
 2323              	sustain:
 2324 0000 C8       		.byte	-56
 2325              		.section	.rodata.inv_voices,"a",%progbits
 2326              		.align	2
 2329              	inv_voices:
 2330 0000 0000803D 		.word	1031798784
 2331              		.text
 2332              	.Letext0:
 2333              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2334              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2335              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2336              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2337              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 2338              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2339              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2340              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2341              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2342              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2343              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dac.h"
 2344              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 2345              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2346              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2347              		.file 16 "/usr/include/newlib/sys/lock.h"
 2348              		.file 17 "/usr/include/newlib/sys/_types.h"
 2349              		.file 18 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 2350              		.file 19 "/usr/include/newlib/sys/reent.h"
 2351              		.file 20 "/usr/include/newlib/math.h"
 2352              		.file 21 "Inc/globals.h"
 2353              		.file 22 "Inc/spi_handler.h"
 2354              		.file 23 "Inc/midi.h"
 2355              		.file 24 "/usr/include/newlib/stdlib.h"
 2356              		.file 25 "Inc/waves.h"
 2357              		.file 26 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 2358              		.file 27 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 2359              		.file 28 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccR9AC2d.s 			page 61


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccR9AC2d.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccR9AC2d.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccR9AC2d.s:484    .text.MX_GPIO_Init:00000000000002c0 $d
     /tmp/ccR9AC2d.s:496    .text.MX_GPIO_Init:00000000000002e8 $t
     /tmp/ccR9AC2d.s:632    .text.MX_GPIO_Init:00000000000003b0 $d
     /tmp/ccR9AC2d.s:642    .text.MX_SPI5_Init:0000000000000000 $t
     /tmp/ccR9AC2d.s:648    .text.MX_SPI5_Init:0000000000000000 MX_SPI5_Init
     /tmp/ccR9AC2d.s:692    .text.MX_SPI5_Init:0000000000000028 $d
                            *COM*:0000000000000058 hspi5
     /tmp/ccR9AC2d.s:698    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccR9AC2d.s:704    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccR9AC2d.s:743    .text.MX_USART1_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart1
     /tmp/ccR9AC2d.s:749    .text.MX_DAC_Init:0000000000000000 $t
     /tmp/ccR9AC2d.s:755    .text.MX_DAC_Init:0000000000000000 MX_DAC_Init
     /tmp/ccR9AC2d.s:801    .text.MX_DAC_Init:0000000000000028 $d
                            *COM*:0000000000000014 hdac
     /tmp/ccR9AC2d.s:807    .text.MX_TIM6_Init:0000000000000000 $t
     /tmp/ccR9AC2d.s:813    .text.MX_TIM6_Init:0000000000000000 MX_TIM6_Init
     /tmp/ccR9AC2d.s:867    .text.MX_TIM6_Init:0000000000000034 $d
                            *COM*:0000000000000040 htim6
     /tmp/ccR9AC2d.s:873    .text.MX_TIM7_Init:0000000000000000 $t
     /tmp/ccR9AC2d.s:879    .text.MX_TIM7_Init:0000000000000000 MX_TIM7_Init
     /tmp/ccR9AC2d.s:933    .text.MX_TIM7_Init:0000000000000034 $d
                            *COM*:0000000000000040 htim7
     /tmp/ccR9AC2d.s:939    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccR9AC2d.s:946    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccR9AC2d.s:1054   .text.SystemClock_Config:0000000000000090 $d
     /tmp/ccR9AC2d.s:1060   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccR9AC2d.s:1067   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccR9AC2d.s:1092   .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccR9AC2d.s:1101   .text.UpdateOutputValue:0000000000000000 $t
     /tmp/ccR9AC2d.s:1108   .text.UpdateOutputValue:0000000000000000 UpdateOutputValue
     /tmp/ccR9AC2d.s:1212   .text.UpdateOutputValue:00000000000000a8 $d
                            *COM*:0000000000001000 base_sine
     /tmp/ccR9AC2d.s:1229   .text.UpdateLFOs:0000000000000000 $t
     /tmp/ccR9AC2d.s:1236   .text.UpdateLFOs:0000000000000000 UpdateLFOs
     /tmp/ccR9AC2d.s:1288   .text.UpdateLFOs:0000000000000040 $d
     /tmp/ccR9AC2d.s:1297   .text.Update_R2R_DAC:0000000000000000 $t
     /tmp/ccR9AC2d.s:1304   .text.Update_R2R_DAC:0000000000000000 Update_R2R_DAC
     /tmp/ccR9AC2d.s:1478   .text.Update_R2R_DAC:0000000000000120 $d
     /tmp/ccR9AC2d.s:1484   .text.enqueue:0000000000000000 $t
     /tmp/ccR9AC2d.s:1491   .text.enqueue:0000000000000000 enqueue
     /tmp/ccR9AC2d.s:1517   .text.enqueue:0000000000000018 $d
                            *COM*:00000000000003fe midi_msg_queue
     /tmp/ccR9AC2d.s:1522   .text.dequeue:0000000000000000 $t
     /tmp/ccR9AC2d.s:1529   .text.dequeue:0000000000000000 dequeue
     /tmp/ccR9AC2d.s:1565   .text.dequeue:0000000000000038 $d
     /tmp/ccR9AC2d.s:1570   .text.main:0000000000000000 $t
     /tmp/ccR9AC2d.s:1577   .text.main:0000000000000000 main
     /tmp/ccR9AC2d.s:2128   .text.main:0000000000000300 $d
     /tmp/ccR9AC2d.s:2157   .text.Error_Handler:0000000000000000 $t
     /tmp/ccR9AC2d.s:2164   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccR9AC2d.s:2317   .data.release:0000000000000000 release
     /tmp/ccR9AC2d.s:2323   .data.sustain:0000000000000000 sustain
ARM GAS  /tmp/ccR9AC2d.s 			page 62


     /tmp/ccR9AC2d.s:2311   .data.decay:0000000000000000 decay
     /tmp/ccR9AC2d.s:2305   .data.attack:0000000000000000 attack
     /tmp/ccR9AC2d.s:2216   .bss.MIDI_flag:0000000000000000 MIDI_flag
     /tmp/ccR9AC2d.s:2299   .bss.update_value_flag:0000000000000000 update_value_flag
     /tmp/ccR9AC2d.s:2242   .bss.lfo:0000000000000000 lfo
     /tmp/ccR9AC2d.s:2249   .bss.lfo_freq:0000000000000000 lfo_freq
     /tmp/ccR9AC2d.s:2256   .bss.lfo_phase_accumulator:0000000000000000 lfo_phase_accumulator
     /tmp/ccR9AC2d.s:2274   .bss.output_val:0000000000000000 output_val
     /tmp/ccR9AC2d.s:2281   .bss.phase_accumulator:0000000000000000 phase_accumulator
     /tmp/ccR9AC2d.s:2229   .bss.current_midi_msg:0000000000000000 current_midi_msg
     /tmp/ccR9AC2d.s:2287   .bss.release_cc_flag:0000000000000000 release_cc_flag
     /tmp/ccR9AC2d.s:2293   .bss.sustain_cc_flag:0000000000000000 sustain_cc_flag
     /tmp/ccR9AC2d.s:2235   .bss.decay_cc_flag:0000000000000000 decay_cc_flag
     /tmp/ccR9AC2d.s:2222   .bss.attack_cc_flag:0000000000000000 attack_cc_flag
     /tmp/ccR9AC2d.s:2262   .bss.note_off_flag:0000000000000000 note_off_flag
     /tmp/ccR9AC2d.s:2268   .bss.note_on_flag:0000000000000000 note_on_flag
     /tmp/ccR9AC2d.s:2329   .rodata.inv_voices:0000000000000000 inv_voices
                            *COM*:0000000000000100 lfo_sine
                            *COM*:0000000000001000 base_sq
                            *COM*:0000000000001000 base_tri
                            *COM*:0000000000001000 base_neg_saw
                            *COM*:0000000000001000 base_pos_saw
     /tmp/ccR9AC2d.s:2207   .rodata:0000000000000000 $d
     /tmp/ccR9AC2d.s:2217   .bss.MIDI_flag:0000000000000000 $d
     /tmp/ccR9AC2d.s:2223   .bss.attack_cc_flag:0000000000000000 $d
     /tmp/ccR9AC2d.s:2225   .bss.current_midi_msg:0000000000000000 $d
     /tmp/ccR9AC2d.s:2236   .bss.decay_cc_flag:0000000000000000 $d
     /tmp/ccR9AC2d.s:2238   .bss.lfo:0000000000000000 $d
     /tmp/ccR9AC2d.s:2245   .bss.lfo_freq:0000000000000000 $d
     /tmp/ccR9AC2d.s:2252   .bss.lfo_phase_accumulator:0000000000000000 $d
     /tmp/ccR9AC2d.s:2263   .bss.note_off_flag:0000000000000000 $d
     /tmp/ccR9AC2d.s:2269   .bss.note_on_flag:0000000000000000 $d
     /tmp/ccR9AC2d.s:2275   .bss.output_val:0000000000000000 $d
     /tmp/ccR9AC2d.s:2277   .bss.phase_accumulator:0000000000000000 $d
     /tmp/ccR9AC2d.s:2288   .bss.release_cc_flag:0000000000000000 $d
     /tmp/ccR9AC2d.s:2294   .bss.sustain_cc_flag:0000000000000000 $d
     /tmp/ccR9AC2d.s:2300   .bss.update_value_flag:0000000000000000 $d
     /tmp/ccR9AC2d.s:2326   .rodata.inv_voices:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_SPI_Init
HAL_UART_Init
HAL_DAC_Init
HAL_DAC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_f2d
__aeabi_dmul
__aeabi_d2uiz
ARM GAS  /tmp/ccR9AC2d.s 			page 63


note_freq
midi_notes
envelope
__aeabi_i2d
HAL_Init
init_wavetable
HAL_TIM_Base_Start_IT
HAL_DAC_Start
HAL_UART_Transmit
UART_PrintADSR
UpdateEnvelope
HAL_DAC_SetValue
dequeue_byte
env_state
note_on
spi_byte_queue
