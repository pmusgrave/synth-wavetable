ARM GAS  /tmp/ccm1naOn.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB137:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include "midi.h"
  27:Src/main.c    **** #include "waves.h"
  28:Src/main.c    **** #include <math.h>
  29:Src/main.c    **** /* USER CODE END Includes */
  30:Src/main.c    **** 
  31:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  32:Src/main.c    **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/ccm1naOn.s 			page 2


  33:Src/main.c    **** 
  34:Src/main.c    **** /* USER CODE END PTD */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  37:Src/main.c    **** /* USER CODE BEGIN PD */
  38:Src/main.c    **** #define DDS_SCALE_FACTOR 89.4745833
  39:Src/main.c    **** #define VOICES 16
  40:Src/main.c    **** #define NOT_TRIGGERED 0
  41:Src/main.c    **** #define ATTACK_MODE 1
  42:Src/main.c    **** #define DECAY_MODE 2
  43:Src/main.c    **** #define SUSTAIN_MODE 3
  44:Src/main.c    **** #define RELEASE_MODE 4
  45:Src/main.c    **** /* USER CODE END PD */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  48:Src/main.c    **** /* USER CODE BEGIN PM */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END PM */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** DAC_HandleTypeDef hdac;
  54:Src/main.c    **** SPI_HandleTypeDef hspi5;
  55:Src/main.c    **** TIM_HandleTypeDef htim6;
  56:Src/main.c    **** TIM_HandleTypeDef htim7;
  57:Src/main.c    **** UART_HandleTypeDef huart1;
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE BEGIN PV */
  60:Src/main.c    **** uint8_t spi_tx_buffer[3] = {49,50,51};
  61:Src/main.c    **** uint8_t spi_rx_buffer[3];
  62:Src/main.c    **** const float inv_voices = 1.0/VOICES;
  63:Src/main.c    **** volatile struct midi_note_msg current_midi_note_msg = {0,0,0};
  64:Src/main.c    **** volatile uint32_t phase_accumulator[VOICES] = {0};
  65:Src/main.c    **** volatile uint8_t output_val = 0;
  66:Src/main.c    **** volatile uint32_t envelope_index[VOICES] = {0};
  67:Src/main.c    **** volatile float envelope[VOICES] = {0};
  68:Src/main.c    **** volatile uint8_t env_state[VOICES];
  69:Src/main.c    **** volatile uint8_t note_on[88] = {0};
  70:Src/main.c    **** volatile uint8_t note_freq[VOICES] = {0};
  71:Src/main.c    **** 
  72:Src/main.c    **** volatile uint32_t lfo_phase_accumulator[VOICES] = {0};
  73:Src/main.c    **** volatile uint16_t lfo_freq[VOICES] = {0};
  74:Src/main.c    **** volatile uint8_t lfo[VOICES] = {0};
  75:Src/main.c    **** 
  76:Src/main.c    **** volatile uint8_t update_value_flag = 0;
  77:Src/main.c    **** volatile uint8_t MIDI_flag = 0;
  78:Src/main.c    **** 
  79:Src/main.c    **** uint8_t attack = 30;
  80:Src/main.c    **** uint8_t decay = 30;
  81:Src/main.c    **** uint8_t sustain = 200;
  82:Src/main.c    **** uint8_t release = 2;
  83:Src/main.c    **** /* USER CODE END PV */
  84:Src/main.c    **** 
  85:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  86:Src/main.c    **** void SystemClock_Config(void);
  87:Src/main.c    **** static void MX_GPIO_Init(void);
  88:Src/main.c    **** static void MX_SPI5_Init(void);
  89:Src/main.c    **** static void MX_USART1_UART_Init(void);
ARM GAS  /tmp/ccm1naOn.s 			page 3


  90:Src/main.c    **** static void MX_DAC_Init(void);
  91:Src/main.c    **** static void MX_TIM6_Init(void);
  92:Src/main.c    **** static void MX_TIM7_Init(void);
  93:Src/main.c    **** /* USER CODE BEGIN PFP */
  94:Src/main.c    **** void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi);
  95:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim);
  96:Src/main.c    **** void UpdateOutputValue(void);
  97:Src/main.c    **** void UpdateLFOs(void);
  98:Src/main.c    **** void UpdateEnvelope(void);
  99:Src/main.c    **** void Update_R2R_DAC(void);
 100:Src/main.c    **** /* USER CODE END PFP */
 101:Src/main.c    **** 
 102:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 103:Src/main.c    **** /* USER CODE BEGIN 0 */
 104:Src/main.c    **** 
 105:Src/main.c    **** /* USER CODE END 0 */
 106:Src/main.c    **** 
 107:Src/main.c    **** /**
 108:Src/main.c    ****   * @brief  The application entry point.
 109:Src/main.c    ****   * @retval int
 110:Src/main.c    ****   */
 111:Src/main.c    **** int main(void)
 112:Src/main.c    **** {
 113:Src/main.c    ****   /* USER CODE BEGIN 1 */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* USER CODE END 1 */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 118:Src/main.c    **** 
 119:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 120:Src/main.c    ****   HAL_Init();
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* USER CODE BEGIN Init */
 123:Src/main.c    **** 
 124:Src/main.c    ****   /* USER CODE END Init */
 125:Src/main.c    **** 
 126:Src/main.c    ****   /* Configure the system clock */
 127:Src/main.c    ****   SystemClock_Config();
 128:Src/main.c    **** 
 129:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 130:Src/main.c    **** 
 131:Src/main.c    ****   /* USER CODE END SysInit */
 132:Src/main.c    **** 
 133:Src/main.c    ****   /* Initialize all configured peripherals */
 134:Src/main.c    ****   MX_GPIO_Init();
 135:Src/main.c    ****   MX_SPI5_Init();
 136:Src/main.c    ****   MX_USART1_UART_Init();
 137:Src/main.c    ****   MX_DAC_Init();
 138:Src/main.c    ****   MX_TIM6_Init();
 139:Src/main.c    ****   MX_TIM7_Init();
 140:Src/main.c    ****   /* USER CODE BEGIN 2 */
 141:Src/main.c    ****   init_wavetable();
 142:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim6);
 143:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim7);
 144:Src/main.c    ****   HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 145:Src/main.c    **** 
 146:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
ARM GAS  /tmp/ccm1naOn.s 			page 4


 147:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 148:Src/main.c    ****     note_on[i] = MIDI_NOTE_OFF;
 149:Src/main.c    ****     note_freq[i] = 0;
 150:Src/main.c    ****     lfo_freq[i] = 200;
 151:Src/main.c    ****   }
 152:Src/main.c    **** 
 153:Src/main.c    ****   /*
 154:Src/main.c    ****   note_on[0] = MIDI_NOTE_ON;
 155:Src/main.c    ****   note_freq[0] = 50;
 156:Src/main.c    ****   env_state[0] = ATTACK_MODE;
 157:Src/main.c    **** 
 158:Src/main.c    ****   note_on[1] = MIDI_NOTE_ON;
 159:Src/main.c    ****   note_freq[1] = 54;
 160:Src/main.c    ****   env_state[1] = ATTACK_MODE;
 161:Src/main.c    **** 
 162:Src/main.c    ****   note_on[2] = MIDI_NOTE_ON;
 163:Src/main.c    ****   note_freq[2] = 57;
 164:Src/main.c    ****   env_state[2] = ATTACK_MODE;
 165:Src/main.c    **** 
 166:Src/main.c    ****   note_on[3] = MIDI_NOTE_ON;
 167:Src/main.c    ****   note_freq[3] = 62;
 168:Src/main.c    ****   env_state[3] = ATTACK_MODE;
 169:Src/main.c    ****   */
 170:Src/main.c    **** 
 171:Src/main.c    ****   /* USER CODE END 2 */
 172:Src/main.c    **** 
 173:Src/main.c    ****   /* Infinite loop */
 174:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 175:Src/main.c    ****   while (1)
 176:Src/main.c    ****   {
 177:Src/main.c    ****     Receive_MIDI(&hspi5, spi_rx_buffer);
 178:Src/main.c    **** 
 179:Src/main.c    ****     if(MIDI_flag) {
 180:Src/main.c    ****       MIDI_flag = 0;
 181:Src/main.c    ****       switch(current_midi_note_msg.command) {
 182:Src/main.c    ****       case MIDI_NOTE_ON:
 183:Src/main.c    ****         for (int i = 0; i < VOICES; i++) {
 184:Src/main.c    ****           if(note_on[i] == MIDI_NOTE_OFF){
 185:Src/main.c    ****             note_on[i] = MIDI_NOTE_ON;
 186:Src/main.c    ****             note_freq[i] = current_midi_note_msg.note;
 187:Src/main.c    ****             env_state[i] = ATTACK_MODE;
 188:Src/main.c    ****           }
 189:Src/main.c    ****         }
 190:Src/main.c    ****         break;
 191:Src/main.c    ****       case MIDI_NOTE_OFF:
 192:Src/main.c    ****         for (int i = 0; i < VOICES; i++) {
 193:Src/main.c    ****           if (note_on[i] == MIDI_NOTE_ON && note_freq[i] == current_midi_note_msg.note){
 194:Src/main.c    ****             note_on[i] = MIDI_NOTE_OFF;
 195:Src/main.c    ****             env_state[i] = RELEASE_MODE;
 196:Src/main.c    ****           }
 197:Src/main.c    ****         }
 198:Src/main.c    ****         break;
 199:Src/main.c    ****       }
 200:Src/main.c    ****     }
 201:Src/main.c    **** 
 202:Src/main.c    ****     if(update_value_flag) {
 203:Src/main.c    ****       //      __disable_irq();
ARM GAS  /tmp/ccm1naOn.s 			page 5


 204:Src/main.c    ****       UpdateEnvelope();
 205:Src/main.c    ****       UpdateLFOs();
 206:Src/main.c    ****       UpdateOutputValue();
 207:Src/main.c    ****       HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_8B_R, output_val);
 208:Src/main.c    ****       update_value_flag = 0;
 209:Src/main.c    ****       //      __enable_irq();
 210:Src/main.c    ****     }
 211:Src/main.c    **** 
 212:Src/main.c    ****     //Update_R2R_DAC();
 213:Src/main.c    **** 
 214:Src/main.c    **** 
 215:Src/main.c    ****     /* USER CODE END WHILE */
 216:Src/main.c    **** 
 217:Src/main.c    ****     /* USER CODE BEGIN 3 */
 218:Src/main.c    ****   }
 219:Src/main.c    ****   /* USER CODE END 3 */
 220:Src/main.c    **** }
 221:Src/main.c    **** 
 222:Src/main.c    **** /**
 223:Src/main.c    ****   * @brief System Clock Configuration
 224:Src/main.c    ****   * @retval None
 225:Src/main.c    ****   */
 226:Src/main.c    **** void SystemClock_Config(void)
 227:Src/main.c    **** {
 228:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 229:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 230:Src/main.c    **** 
 231:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 232:Src/main.c    ****   */
 233:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 234:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 235:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 236:Src/main.c    ****   */
 237:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 238:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 239:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 240:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 241:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 242:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 243:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 100;
 244:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 245:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 246:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 247:Src/main.c    ****   {
 248:Src/main.c    ****     Error_Handler();
 249:Src/main.c    ****   }
 250:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 251:Src/main.c    ****   */
 252:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 253:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 254:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 255:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 256:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 257:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 258:Src/main.c    **** 
 259:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 260:Src/main.c    ****   {
ARM GAS  /tmp/ccm1naOn.s 			page 6


 261:Src/main.c    ****     Error_Handler();
 262:Src/main.c    ****   }
 263:Src/main.c    **** }
 264:Src/main.c    **** 
 265:Src/main.c    **** /**
 266:Src/main.c    ****   * @brief DAC Initialization Function
 267:Src/main.c    ****   * @param None
 268:Src/main.c    ****   * @retval None
 269:Src/main.c    ****   */
 270:Src/main.c    **** static void MX_DAC_Init(void)
 271:Src/main.c    **** {
 272:Src/main.c    **** 
 273:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 0 */
 274:Src/main.c    **** 
 275:Src/main.c    ****   /* USER CODE END DAC_Init 0 */
 276:Src/main.c    **** 
 277:Src/main.c    ****   DAC_ChannelConfTypeDef sConfig = {0};
 278:Src/main.c    **** 
 279:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 1 */
 280:Src/main.c    **** 
 281:Src/main.c    ****   /* USER CODE END DAC_Init 1 */
 282:Src/main.c    ****   /** DAC Initialization 
 283:Src/main.c    ****   */
 284:Src/main.c    ****   hdac.Instance = DAC;
 285:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 286:Src/main.c    ****   {
 287:Src/main.c    ****     Error_Handler();
 288:Src/main.c    ****   }
 289:Src/main.c    ****   /** DAC channel OUT2 config 
 290:Src/main.c    ****   */
 291:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 292:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 293:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 294:Src/main.c    ****   {
 295:Src/main.c    ****     Error_Handler();
 296:Src/main.c    ****   }
 297:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 2 */
 298:Src/main.c    **** 
 299:Src/main.c    ****   /* USER CODE END DAC_Init 2 */
 300:Src/main.c    **** 
 301:Src/main.c    **** }
 302:Src/main.c    **** 
 303:Src/main.c    **** /**
 304:Src/main.c    ****   * @brief SPI5 Initialization Function
 305:Src/main.c    ****   * @param None
 306:Src/main.c    ****   * @retval None
 307:Src/main.c    ****   */
 308:Src/main.c    **** static void MX_SPI5_Init(void)
 309:Src/main.c    **** {
 310:Src/main.c    **** 
 311:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 0 */
 312:Src/main.c    **** 
 313:Src/main.c    ****   /* USER CODE END SPI5_Init 0 */
 314:Src/main.c    **** 
 315:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 1 */
 316:Src/main.c    **** 
 317:Src/main.c    ****   /* USER CODE END SPI5_Init 1 */
ARM GAS  /tmp/ccm1naOn.s 			page 7


 318:Src/main.c    ****   /* SPI5 parameter configuration*/
 319:Src/main.c    ****   hspi5.Instance = SPI5;
 320:Src/main.c    ****   hspi5.Init.Mode = SPI_MODE_SLAVE;
 321:Src/main.c    ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 322:Src/main.c    ****   hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 323:Src/main.c    ****   hspi5.Init.CLKPolarity = SPI_POLARITY_HIGH;
 324:Src/main.c    ****   hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 325:Src/main.c    ****   hspi5.Init.NSS = SPI_NSS_HARD_INPUT;
 326:Src/main.c    ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 327:Src/main.c    ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 328:Src/main.c    ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 329:Src/main.c    ****   hspi5.Init.CRCPolynomial = 10;
 330:Src/main.c    ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 331:Src/main.c    ****   {
 332:Src/main.c    ****     Error_Handler();
 333:Src/main.c    ****   }
 334:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 2 */
 335:Src/main.c    **** 
 336:Src/main.c    ****   /* USER CODE END SPI5_Init 2 */
 337:Src/main.c    **** 
 338:Src/main.c    **** }
 339:Src/main.c    **** 
 340:Src/main.c    **** /**
 341:Src/main.c    ****   * @brief TIM6 Initialization Function
 342:Src/main.c    ****   * @param None
 343:Src/main.c    ****   * @retval None
 344:Src/main.c    ****   */
 345:Src/main.c    **** static void MX_TIM6_Init(void)
 346:Src/main.c    **** {
 347:Src/main.c    **** 
 348:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 0 */
 349:Src/main.c    **** 
 350:Src/main.c    ****   /* USER CODE END TIM6_Init 0 */
 351:Src/main.c    **** 
 352:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 353:Src/main.c    **** 
 354:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 1 */
 355:Src/main.c    **** 
 356:Src/main.c    ****   /* USER CODE END TIM6_Init 1 */
 357:Src/main.c    ****   htim6.Instance = TIM6;
 358:Src/main.c    ****   htim6.Init.Prescaler = 0;
 359:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 360:Src/main.c    ****   htim6.Init.Period = 1290;
 361:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 362:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 363:Src/main.c    ****   {
 364:Src/main.c    ****     Error_Handler();
 365:Src/main.c    ****   }
 366:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 367:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 368:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 369:Src/main.c    ****   {
 370:Src/main.c    ****     Error_Handler();
 371:Src/main.c    ****   }
 372:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 2 */
 373:Src/main.c    **** 
 374:Src/main.c    ****   /* USER CODE END TIM6_Init 2 */
ARM GAS  /tmp/ccm1naOn.s 			page 8


 375:Src/main.c    **** 
 376:Src/main.c    **** }
 377:Src/main.c    **** 
 378:Src/main.c    **** /**
 379:Src/main.c    ****   * @brief TIM7 Initialization Function
 380:Src/main.c    ****   * @param None
 381:Src/main.c    ****   * @retval None
 382:Src/main.c    ****   */
 383:Src/main.c    **** static void MX_TIM7_Init(void)
 384:Src/main.c    **** {
 385:Src/main.c    **** 
 386:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 0 */
 387:Src/main.c    **** 
 388:Src/main.c    ****   /* USER CODE END TIM7_Init 0 */
 389:Src/main.c    **** 
 390:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 391:Src/main.c    **** 
 392:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 1 */
 393:Src/main.c    **** 
 394:Src/main.c    ****   /* USER CODE END TIM7_Init 1 */
 395:Src/main.c    ****   htim7.Instance = TIM7;
 396:Src/main.c    ****   htim7.Init.Prescaler = 1024;
 397:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 398:Src/main.c    ****   htim7.Init.Period = 35000;
 399:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 400:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 401:Src/main.c    ****   {
 402:Src/main.c    ****     Error_Handler();
 403:Src/main.c    ****   }
 404:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 405:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 406:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 407:Src/main.c    ****   {
 408:Src/main.c    ****     Error_Handler();
 409:Src/main.c    ****   }
 410:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 2 */
 411:Src/main.c    **** 
 412:Src/main.c    ****   /* USER CODE END TIM7_Init 2 */
 413:Src/main.c    **** 
 414:Src/main.c    **** }
 415:Src/main.c    **** 
 416:Src/main.c    **** /**
 417:Src/main.c    ****   * @brief USART1 Initialization Function
 418:Src/main.c    ****   * @param None
 419:Src/main.c    ****   * @retval None
 420:Src/main.c    ****   */
 421:Src/main.c    **** static void MX_USART1_UART_Init(void)
 422:Src/main.c    **** {
 423:Src/main.c    **** 
 424:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 425:Src/main.c    **** 
 426:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 427:Src/main.c    **** 
 428:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 429:Src/main.c    **** 
 430:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 431:Src/main.c    ****   huart1.Instance = USART1;
ARM GAS  /tmp/ccm1naOn.s 			page 9


 432:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 433:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 434:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 435:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 436:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 437:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 438:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 439:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 440:Src/main.c    ****   {
 441:Src/main.c    ****     Error_Handler();
 442:Src/main.c    ****   }
 443:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 444:Src/main.c    **** 
 445:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 446:Src/main.c    **** 
 447:Src/main.c    **** }
 448:Src/main.c    **** 
 449:Src/main.c    **** /**
 450:Src/main.c    ****   * @brief GPIO Initialization Function
 451:Src/main.c    ****   * @param None
 452:Src/main.c    ****   * @retval None
 453:Src/main.c    ****   */
 454:Src/main.c    **** static void MX_GPIO_Init(void)
 455:Src/main.c    **** {
  27              		.loc 1 455 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 56
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
  43 0004 8FB0     		sub	sp, sp, #60
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 96
 456:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  46              		.loc 1 456 0
  47 0006 0024     		movs	r4, #0
  48 0008 0994     		str	r4, [sp, #36]
  49 000a 0A94     		str	r4, [sp, #40]
  50 000c 0B94     		str	r4, [sp, #44]
  51 000e 0C94     		str	r4, [sp, #48]
  52 0010 0D94     		str	r4, [sp, #52]
  53              	.LBB2:
 457:Src/main.c    **** 
 458:Src/main.c    ****   /* GPIO Ports Clock Enable */
 459:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  54              		.loc 1 459 0
  55 0012 0194     		str	r4, [sp, #4]
ARM GAS  /tmp/ccm1naOn.s 			page 10


  56 0014 AA4B     		ldr	r3, .L3
  57 0016 1A6B     		ldr	r2, [r3, #48]
  58 0018 42F00402 		orr	r2, r2, #4
  59 001c 1A63     		str	r2, [r3, #48]
  60 001e 1A6B     		ldr	r2, [r3, #48]
  61 0020 02F00402 		and	r2, r2, #4
  62 0024 0192     		str	r2, [sp, #4]
  63 0026 019A     		ldr	r2, [sp, #4]
  64              	.LBE2:
  65              	.LBB3:
 460:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  66              		.loc 1 460 0
  67 0028 0294     		str	r4, [sp, #8]
  68 002a 1A6B     		ldr	r2, [r3, #48]
  69 002c 42F02002 		orr	r2, r2, #32
  70 0030 1A63     		str	r2, [r3, #48]
  71 0032 1A6B     		ldr	r2, [r3, #48]
  72 0034 02F02002 		and	r2, r2, #32
  73 0038 0292     		str	r2, [sp, #8]
  74 003a 029A     		ldr	r2, [sp, #8]
  75              	.LBE3:
  76              	.LBB4:
 461:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  77              		.loc 1 461 0
  78 003c 0394     		str	r4, [sp, #12]
  79 003e 1A6B     		ldr	r2, [r3, #48]
  80 0040 42F08002 		orr	r2, r2, #128
  81 0044 1A63     		str	r2, [r3, #48]
  82 0046 1A6B     		ldr	r2, [r3, #48]
  83 0048 02F08002 		and	r2, r2, #128
  84 004c 0392     		str	r2, [sp, #12]
  85 004e 039A     		ldr	r2, [sp, #12]
  86              	.LBE4:
  87              	.LBB5:
 462:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  88              		.loc 1 462 0
  89 0050 0494     		str	r4, [sp, #16]
  90 0052 1A6B     		ldr	r2, [r3, #48]
  91 0054 42F00102 		orr	r2, r2, #1
  92 0058 1A63     		str	r2, [r3, #48]
  93 005a 1A6B     		ldr	r2, [r3, #48]
  94 005c 02F00102 		and	r2, r2, #1
  95 0060 0492     		str	r2, [sp, #16]
  96 0062 049A     		ldr	r2, [sp, #16]
  97              	.LBE5:
  98              	.LBB6:
 463:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  99              		.loc 1 463 0
 100 0064 0594     		str	r4, [sp, #20]
 101 0066 1A6B     		ldr	r2, [r3, #48]
 102 0068 42F00202 		orr	r2, r2, #2
 103 006c 1A63     		str	r2, [r3, #48]
 104 006e 1A6B     		ldr	r2, [r3, #48]
 105 0070 02F00202 		and	r2, r2, #2
 106 0074 0592     		str	r2, [sp, #20]
 107 0076 059A     		ldr	r2, [sp, #20]
 108              	.LBE6:
ARM GAS  /tmp/ccm1naOn.s 			page 11


 109              	.LBB7:
 464:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 110              		.loc 1 464 0
 111 0078 0694     		str	r4, [sp, #24]
 112 007a 1A6B     		ldr	r2, [r3, #48]
 113 007c 42F04002 		orr	r2, r2, #64
 114 0080 1A63     		str	r2, [r3, #48]
 115 0082 1A6B     		ldr	r2, [r3, #48]
 116 0084 02F04002 		and	r2, r2, #64
 117 0088 0692     		str	r2, [sp, #24]
 118 008a 069A     		ldr	r2, [sp, #24]
 119              	.LBE7:
 120              	.LBB8:
 465:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 121              		.loc 1 465 0
 122 008c 0794     		str	r4, [sp, #28]
 123 008e 1A6B     		ldr	r2, [r3, #48]
 124 0090 42F01002 		orr	r2, r2, #16
 125 0094 1A63     		str	r2, [r3, #48]
 126 0096 1A6B     		ldr	r2, [r3, #48]
 127 0098 02F01002 		and	r2, r2, #16
 128 009c 0792     		str	r2, [sp, #28]
 129 009e 079A     		ldr	r2, [sp, #28]
 130              	.LBE8:
 131              	.LBB9:
 466:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 132              		.loc 1 466 0
 133 00a0 0894     		str	r4, [sp, #32]
 134 00a2 1A6B     		ldr	r2, [r3, #48]
 135 00a4 42F00802 		orr	r2, r2, #8
 136 00a8 1A63     		str	r2, [r3, #48]
 137 00aa 1B6B     		ldr	r3, [r3, #48]
 138 00ac 03F00803 		and	r3, r3, #8
 139 00b0 0893     		str	r3, [sp, #32]
 140 00b2 089B     		ldr	r3, [sp, #32]
 141              	.LBE9:
 467:Src/main.c    **** 
 468:Src/main.c    ****   /*Configure GPIO pin Output Level */
 469:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin, GPIO_PIN_RESET);
 142              		.loc 1 469 0
 143 00b4 2246     		mov	r2, r4
 144 00b6 1621     		movs	r1, #22
 145 00b8 8248     		ldr	r0, .L3+4
 146 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 147              	.LVL0:
 470:Src/main.c    **** 
 471:Src/main.c    ****   /*Configure GPIO pin Output Level */
 472:Src/main.c    ****   HAL_GPIO_WritePin(ACP_RST_GPIO_Port, ACP_RST_Pin, GPIO_PIN_RESET);
 148              		.loc 1 472 0
 149 00be 2246     		mov	r2, r4
 150 00c0 8021     		movs	r1, #128
 151 00c2 8148     		ldr	r0, .L3+8
 152 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 153              	.LVL1:
 473:Src/main.c    **** 
 474:Src/main.c    ****   /*Configure GPIO pin Output Level */
 475:Src/main.c    ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15, GPIO_PIN_RESET);
ARM GAS  /tmp/ccm1naOn.s 			page 12


 154              		.loc 1 475 0
 155 00c8 DFF810A2 		ldr	r10, .L3+28
 156 00cc 2246     		mov	r2, r4
 157 00ce 4FF46041 		mov	r1, #57344
 158 00d2 5046     		mov	r0, r10
 159 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 160              	.LVL2:
 476:Src/main.c    **** 
 477:Src/main.c    ****   /*Configure GPIO pin Output Level */
 478:Src/main.c    ****   HAL_GPIO_WritePin(GPIOG, GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD4_Pin, GPIO_PIN_RESET);
 161              		.loc 1 478 0
 162 00d8 2246     		mov	r2, r4
 163 00da 46F20301 		movw	r1, #24579
 164 00de 7B48     		ldr	r0, .L3+12
 165 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 166              	.LVL3:
 479:Src/main.c    **** 
 480:Src/main.c    ****   /*Configure GPIO pin Output Level */
 481:Src/main.c    ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 167              		.loc 1 481 0
 168 00e4 2246     		mov	r2, r4
 169 00e6 4FF68071 		movw	r1, #65408
 170 00ea 7948     		ldr	r0, .L3+16
 171 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 172              	.LVL4:
 482:Src/main.c    ****                           |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
 483:Src/main.c    ****                           |GPIO_PIN_15, GPIO_PIN_RESET);
 484:Src/main.c    **** 
 485:Src/main.c    ****   /*Configure GPIO pin Output Level */
 486:Src/main.c    ****   HAL_GPIO_WritePin(GPIOD, RDX_Pin|WRX_DCX_Pin, GPIO_PIN_RESET);
 173              		.loc 1 486 0
 174 00f0 2246     		mov	r2, r4
 175 00f2 4FF44051 		mov	r1, #12288
 176 00f6 7748     		ldr	r0, .L3+20
 177 00f8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 178              	.LVL5:
 487:Src/main.c    **** 
 488:Src/main.c    ****   /*Configure GPIO pins : A0_Pin A1_Pin A2_Pin A3_Pin 
 489:Src/main.c    ****                            A4_Pin A5_Pin SDNRAS_Pin A6_Pin */
 490:Src/main.c    ****   GPIO_InitStruct.Pin = A0_Pin|A1_Pin|A2_Pin|A3_Pin 
 179              		.loc 1 490 0
 180 00fc 41F63F03 		movw	r3, #6207
 181 0100 0993     		str	r3, [sp, #36]
 491:Src/main.c    ****                           |A4_Pin|A5_Pin|SDNRAS_Pin|A6_Pin;
 492:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 182              		.loc 1 492 0
 183 0102 0225     		movs	r5, #2
 184 0104 0A95     		str	r5, [sp, #40]
 493:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 185              		.loc 1 493 0
 186 0106 0B94     		str	r4, [sp, #44]
 494:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 187              		.loc 1 494 0
 188 0108 0327     		movs	r7, #3
 189 010a 0C97     		str	r7, [sp, #48]
 495:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 190              		.loc 1 495 0
ARM GAS  /tmp/ccm1naOn.s 			page 13


 191 010c 4FF00C08 		mov	r8, #12
 192 0110 CDF83480 		str	r8, [sp, #52]
 496:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 193              		.loc 1 496 0
 194 0114 09A9     		add	r1, sp, #36
 195 0116 5046     		mov	r0, r10
 196 0118 FFF7FEFF 		bl	HAL_GPIO_Init
 197              	.LVL6:
 497:Src/main.c    **** 
 498:Src/main.c    ****   /*Configure GPIO pin : ENABLE_Pin */
 499:Src/main.c    ****   GPIO_InitStruct.Pin = ENABLE_Pin;
 198              		.loc 1 499 0
 199 011c 4FF48063 		mov	r3, #1024
 200 0120 0993     		str	r3, [sp, #36]
 500:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 201              		.loc 1 500 0
 202 0122 0A95     		str	r5, [sp, #40]
 501:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 203              		.loc 1 501 0
 204 0124 0B94     		str	r4, [sp, #44]
 502:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 205              		.loc 1 502 0
 206 0126 0C94     		str	r4, [sp, #48]
 503:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 207              		.loc 1 503 0
 208 0128 4FF00E09 		mov	r9, #14
 209 012c CDF83490 		str	r9, [sp, #52]
 504:Src/main.c    ****   HAL_GPIO_Init(ENABLE_GPIO_Port, &GPIO_InitStruct);
 210              		.loc 1 504 0
 211 0130 09A9     		add	r1, sp, #36
 212 0132 5046     		mov	r0, r10
 213 0134 FFF7FEFF 		bl	HAL_GPIO_Init
 214              	.LVL7:
 505:Src/main.c    **** 
 506:Src/main.c    ****   /*Configure GPIO pin : SDNWE_Pin */
 507:Src/main.c    ****   GPIO_InitStruct.Pin = SDNWE_Pin;
 215              		.loc 1 507 0
 216 0138 0126     		movs	r6, #1
 217 013a 0996     		str	r6, [sp, #36]
 508:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 218              		.loc 1 508 0
 219 013c 0A95     		str	r5, [sp, #40]
 509:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 220              		.loc 1 509 0
 221 013e 0B94     		str	r4, [sp, #44]
 510:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 222              		.loc 1 510 0
 223 0140 0C97     		str	r7, [sp, #48]
 511:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 224              		.loc 1 511 0
 225 0142 CDF83480 		str	r8, [sp, #52]
 512:Src/main.c    ****   HAL_GPIO_Init(SDNWE_GPIO_Port, &GPIO_InitStruct);
 226              		.loc 1 512 0
 227 0146 09A9     		add	r1, sp, #36
 228 0148 5E48     		ldr	r0, .L3+4
 229 014a FFF7FEFF 		bl	HAL_GPIO_Init
 230              	.LVL8:
ARM GAS  /tmp/ccm1naOn.s 			page 14


 513:Src/main.c    **** 
 514:Src/main.c    ****   /*Configure GPIO pins : NCS_MEMS_SPI_Pin CSX_Pin OTG_FS_PSO_Pin */
 515:Src/main.c    ****   GPIO_InitStruct.Pin = NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin;
 231              		.loc 1 515 0
 232 014e 1623     		movs	r3, #22
 233 0150 0993     		str	r3, [sp, #36]
 516:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 234              		.loc 1 516 0
 235 0152 0A96     		str	r6, [sp, #40]
 517:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 236              		.loc 1 517 0
 237 0154 0B94     		str	r4, [sp, #44]
 518:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 238              		.loc 1 518 0
 239 0156 0C94     		str	r4, [sp, #48]
 519:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 240              		.loc 1 519 0
 241 0158 09A9     		add	r1, sp, #36
 242 015a 5A48     		ldr	r0, .L3+4
 243 015c FFF7FEFF 		bl	HAL_GPIO_Init
 244              	.LVL9:
 520:Src/main.c    **** 
 521:Src/main.c    ****   /*Configure GPIO pins : B1_Pin MEMS_INT1_Pin MEMS_INT2_Pin TP_INT1_Pin */
 522:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin|MEMS_INT1_Pin|MEMS_INT2_Pin|TP_INT1_Pin;
 245              		.loc 1 522 0
 246 0160 48F20703 		movw	r3, #32775
 247 0164 0993     		str	r3, [sp, #36]
 523:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 248              		.loc 1 523 0
 249 0166 DFF878B1 		ldr	fp, .L3+32
 250 016a CDF828B0 		str	fp, [sp, #40]
 524:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 251              		.loc 1 524 0
 252 016e 0B94     		str	r4, [sp, #44]
 525:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 253              		.loc 1 525 0
 254 0170 09A9     		add	r1, sp, #36
 255 0172 5548     		ldr	r0, .L3+8
 256 0174 FFF7FEFF 		bl	HAL_GPIO_Init
 257              	.LVL10:
 526:Src/main.c    **** 
 527:Src/main.c    ****   /*Configure GPIO pins : B5_Pin VSYNC_Pin G2_Pin R4_Pin 
 528:Src/main.c    ****                            R5_Pin */
 529:Src/main.c    ****   GPIO_InitStruct.Pin = B5_Pin|VSYNC_Pin|G2_Pin|R4_Pin 
 258              		.loc 1 529 0
 259 0178 41F65803 		movw	r3, #6232
 260 017c 0993     		str	r3, [sp, #36]
 530:Src/main.c    ****                           |R5_Pin;
 531:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 261              		.loc 1 531 0
 262 017e 0A95     		str	r5, [sp, #40]
 532:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 263              		.loc 1 532 0
 264 0180 0B94     		str	r4, [sp, #44]
 533:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 265              		.loc 1 533 0
 266 0182 0C94     		str	r4, [sp, #48]
ARM GAS  /tmp/ccm1naOn.s 			page 15


 534:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 267              		.loc 1 534 0
 268 0184 CDF83490 		str	r9, [sp, #52]
 535:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 269              		.loc 1 535 0
 270 0188 09A9     		add	r1, sp, #36
 271 018a 4F48     		ldr	r0, .L3+8
 272 018c FFF7FEFF 		bl	HAL_GPIO_Init
 273              	.LVL11:
 536:Src/main.c    **** 
 537:Src/main.c    ****   /*Configure GPIO pin : ACP_RST_Pin */
 538:Src/main.c    ****   GPIO_InitStruct.Pin = ACP_RST_Pin;
 274              		.loc 1 538 0
 275 0190 8023     		movs	r3, #128
 276 0192 0993     		str	r3, [sp, #36]
 539:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 277              		.loc 1 539 0
 278 0194 0A96     		str	r6, [sp, #40]
 540:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 279              		.loc 1 540 0
 280 0196 0B94     		str	r4, [sp, #44]
 541:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 281              		.loc 1 541 0
 282 0198 0C94     		str	r4, [sp, #48]
 542:Src/main.c    ****   HAL_GPIO_Init(ACP_RST_GPIO_Port, &GPIO_InitStruct);
 283              		.loc 1 542 0
 284 019a 09A9     		add	r1, sp, #36
 285 019c 4A48     		ldr	r0, .L3+8
 286 019e FFF7FEFF 		bl	HAL_GPIO_Init
 287              	.LVL12:
 543:Src/main.c    **** 
 544:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_OC_Pin */
 545:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_OC_Pin;
 288              		.loc 1 545 0
 289 01a2 2023     		movs	r3, #32
 290 01a4 0993     		str	r3, [sp, #36]
 546:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 291              		.loc 1 546 0
 292 01a6 CDF828B0 		str	fp, [sp, #40]
 547:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 293              		.loc 1 547 0
 294 01aa 0B94     		str	r4, [sp, #44]
 548:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_OC_GPIO_Port, &GPIO_InitStruct);
 295              		.loc 1 548 0
 296 01ac 09A9     		add	r1, sp, #36
 297 01ae 4548     		ldr	r0, .L3+4
 298 01b0 FFF7FEFF 		bl	HAL_GPIO_Init
 299              	.LVL13:
 549:Src/main.c    **** 
 550:Src/main.c    ****   /*Configure GPIO pins : R3_Pin R6_Pin */
 551:Src/main.c    ****   GPIO_InitStruct.Pin = R3_Pin|R6_Pin;
 300              		.loc 1 551 0
 301 01b4 0997     		str	r7, [sp, #36]
 552:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 302              		.loc 1 552 0
 303 01b6 0A95     		str	r5, [sp, #40]
 553:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccm1naOn.s 			page 16


 304              		.loc 1 553 0
 305 01b8 0B94     		str	r4, [sp, #44]
 554:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 306              		.loc 1 554 0
 307 01ba 0C94     		str	r4, [sp, #48]
 555:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 308              		.loc 1 555 0
 309 01bc 0923     		movs	r3, #9
 310 01be 0D93     		str	r3, [sp, #52]
 556:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 311              		.loc 1 556 0
 312 01c0 09A9     		add	r1, sp, #36
 313 01c2 4548     		ldr	r0, .L3+24
 314 01c4 FFF7FEFF 		bl	HAL_GPIO_Init
 315              	.LVL14:
 557:Src/main.c    **** 
 558:Src/main.c    ****   /*Configure GPIO pin : BOOT1_Pin */
 559:Src/main.c    ****   GPIO_InitStruct.Pin = BOOT1_Pin;
 316              		.loc 1 559 0
 317 01c8 4FF0040B 		mov	fp, #4
 318 01cc CDF824B0 		str	fp, [sp, #36]
 560:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 319              		.loc 1 560 0
 320 01d0 0A94     		str	r4, [sp, #40]
 561:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 321              		.loc 1 561 0
 322 01d2 0B94     		str	r4, [sp, #44]
 562:Src/main.c    ****   HAL_GPIO_Init(BOOT1_GPIO_Port, &GPIO_InitStruct);
 323              		.loc 1 562 0
 324 01d4 09A9     		add	r1, sp, #36
 325 01d6 4048     		ldr	r0, .L3+24
 326 01d8 FFF7FEFF 		bl	HAL_GPIO_Init
 327              	.LVL15:
 563:Src/main.c    **** 
 564:Src/main.c    ****   /*Configure GPIO pins : PF13 PF14 PF15 */
 565:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 328              		.loc 1 565 0
 329 01dc 4FF46043 		mov	r3, #57344
 330 01e0 0993     		str	r3, [sp, #36]
 566:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 331              		.loc 1 566 0
 332 01e2 0A96     		str	r6, [sp, #40]
 567:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 333              		.loc 1 567 0
 334 01e4 0B94     		str	r4, [sp, #44]
 568:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 335              		.loc 1 568 0
 336 01e6 0C94     		str	r4, [sp, #48]
 569:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 337              		.loc 1 569 0
 338 01e8 09A9     		add	r1, sp, #36
 339 01ea 5046     		mov	r0, r10
 340 01ec FFF7FEFF 		bl	HAL_GPIO_Init
 341              	.LVL16:
 570:Src/main.c    **** 
 571:Src/main.c    ****   /*Configure GPIO pins : PG0 PG1 LD3_Pin LD4_Pin */
 572:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD4_Pin;
ARM GAS  /tmp/ccm1naOn.s 			page 17


 342              		.loc 1 572 0
 343 01f0 46F20303 		movw	r3, #24579
 344 01f4 0993     		str	r3, [sp, #36]
 573:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 345              		.loc 1 573 0
 346 01f6 0A96     		str	r6, [sp, #40]
 574:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 347              		.loc 1 574 0
 348 01f8 0B94     		str	r4, [sp, #44]
 575:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 349              		.loc 1 575 0
 350 01fa 0C94     		str	r4, [sp, #48]
 576:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 351              		.loc 1 576 0
 352 01fc 09A9     		add	r1, sp, #36
 353 01fe 3348     		ldr	r0, .L3+12
 354 0200 FFF7FEFF 		bl	HAL_GPIO_Init
 355              	.LVL17:
 577:Src/main.c    **** 
 578:Src/main.c    ****   /*Configure GPIO pins : PE7 PE8 PE9 PE10 
 579:Src/main.c    ****                            PE11 PE12 PE13 PE14 
 580:Src/main.c    ****                            PE15 */
 581:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 356              		.loc 1 581 0
 357 0204 4FF68073 		movw	r3, #65408
 358 0208 0993     		str	r3, [sp, #36]
 582:Src/main.c    ****                           |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
 583:Src/main.c    ****                           |GPIO_PIN_15;
 584:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 359              		.loc 1 584 0
 360 020a 0A96     		str	r6, [sp, #40]
 585:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 361              		.loc 1 585 0
 362 020c 0B94     		str	r4, [sp, #44]
 586:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 363              		.loc 1 586 0
 364 020e 0C94     		str	r4, [sp, #48]
 587:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 365              		.loc 1 587 0
 366 0210 09A9     		add	r1, sp, #36
 367 0212 2F48     		ldr	r0, .L3+16
 368 0214 FFF7FEFF 		bl	HAL_GPIO_Init
 369              	.LVL18:
 588:Src/main.c    **** 
 589:Src/main.c    ****   /*Configure GPIO pins : G4_Pin G5_Pin B6_Pin B7_Pin */
 590:Src/main.c    ****   GPIO_InitStruct.Pin = G4_Pin|G5_Pin|B6_Pin|B7_Pin;
 370              		.loc 1 590 0
 371 0218 4FF47063 		mov	r3, #3840
 372 021c 0993     		str	r3, [sp, #36]
 591:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 373              		.loc 1 591 0
 374 021e 0A95     		str	r5, [sp, #40]
 592:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 375              		.loc 1 592 0
 376 0220 0B94     		str	r4, [sp, #44]
 593:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 377              		.loc 1 593 0
ARM GAS  /tmp/ccm1naOn.s 			page 18


 378 0222 0C94     		str	r4, [sp, #48]
 594:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 379              		.loc 1 594 0
 380 0224 CDF83490 		str	r9, [sp, #52]
 595:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 381              		.loc 1 595 0
 382 0228 09A9     		add	r1, sp, #36
 383 022a 2B48     		ldr	r0, .L3+24
 384 022c FFF7FEFF 		bl	HAL_GPIO_Init
 385              	.LVL19:
 596:Src/main.c    **** 
 597:Src/main.c    ****   /*Configure GPIO pins : OTG_HS_ID_Pin OTG_HS_DM_Pin OTG_HS_DP_Pin */
 598:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_HS_ID_Pin|OTG_HS_DM_Pin|OTG_HS_DP_Pin;
 386              		.loc 1 598 0
 387 0230 4FF45043 		mov	r3, #53248
 388 0234 0993     		str	r3, [sp, #36]
 599:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 389              		.loc 1 599 0
 390 0236 0A95     		str	r5, [sp, #40]
 600:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 391              		.loc 1 600 0
 392 0238 0B94     		str	r4, [sp, #44]
 601:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 393              		.loc 1 601 0
 394 023a 0C94     		str	r4, [sp, #48]
 602:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;
 395              		.loc 1 602 0
 396 023c CDF83480 		str	r8, [sp, #52]
 603:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 397              		.loc 1 603 0
 398 0240 09A9     		add	r1, sp, #36
 399 0242 2548     		ldr	r0, .L3+24
 400 0244 FFF7FEFF 		bl	HAL_GPIO_Init
 401              	.LVL20:
 604:Src/main.c    **** 
 605:Src/main.c    ****   /*Configure GPIO pin : VBUS_HS_Pin */
 606:Src/main.c    ****   GPIO_InitStruct.Pin = VBUS_HS_Pin;
 402              		.loc 1 606 0
 403 0248 4FF40053 		mov	r3, #8192
 404 024c 0993     		str	r3, [sp, #36]
 607:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 405              		.loc 1 607 0
 406 024e 0A94     		str	r4, [sp, #40]
 608:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 407              		.loc 1 608 0
 408 0250 0B94     		str	r4, [sp, #44]
 609:Src/main.c    ****   HAL_GPIO_Init(VBUS_HS_GPIO_Port, &GPIO_InitStruct);
 409              		.loc 1 609 0
 410 0252 09A9     		add	r1, sp, #36
 411 0254 2048     		ldr	r0, .L3+24
 412 0256 FFF7FEFF 		bl	HAL_GPIO_Init
 413              	.LVL21:
 610:Src/main.c    **** 
 611:Src/main.c    ****   /*Configure GPIO pins : D13_Pin D14_Pin D15_Pin D0_Pin 
 612:Src/main.c    ****                            D1_Pin D2_Pin D3_Pin */
 613:Src/main.c    ****   GPIO_InitStruct.Pin = D13_Pin|D14_Pin|D15_Pin|D0_Pin 
 414              		.loc 1 613 0
ARM GAS  /tmp/ccm1naOn.s 			page 19


 415 025a 4CF20373 		movw	r3, #50947
 416 025e 0993     		str	r3, [sp, #36]
 614:Src/main.c    ****                           |D1_Pin|D2_Pin|D3_Pin;
 615:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 417              		.loc 1 615 0
 418 0260 0A95     		str	r5, [sp, #40]
 616:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 419              		.loc 1 616 0
 420 0262 0B94     		str	r4, [sp, #44]
 617:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 421              		.loc 1 617 0
 422 0264 0C97     		str	r7, [sp, #48]
 618:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 423              		.loc 1 618 0
 424 0266 CDF83480 		str	r8, [sp, #52]
 619:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 425              		.loc 1 619 0
 426 026a 09A9     		add	r1, sp, #36
 427 026c 1948     		ldr	r0, .L3+20
 428 026e FFF7FEFF 		bl	HAL_GPIO_Init
 429              	.LVL22:
 620:Src/main.c    **** 
 621:Src/main.c    ****   /*Configure GPIO pin : TE_Pin */
 622:Src/main.c    ****   GPIO_InitStruct.Pin = TE_Pin;
 430              		.loc 1 622 0
 431 0272 4FF40063 		mov	r3, #2048
 432 0276 0993     		str	r3, [sp, #36]
 623:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 433              		.loc 1 623 0
 434 0278 0A94     		str	r4, [sp, #40]
 624:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 435              		.loc 1 624 0
 436 027a 0B94     		str	r4, [sp, #44]
 625:Src/main.c    ****   HAL_GPIO_Init(TE_GPIO_Port, &GPIO_InitStruct);
 437              		.loc 1 625 0
 438 027c 09A9     		add	r1, sp, #36
 439 027e 1548     		ldr	r0, .L3+20
 440 0280 FFF7FEFF 		bl	HAL_GPIO_Init
 441              	.LVL23:
 626:Src/main.c    **** 
 627:Src/main.c    ****   /*Configure GPIO pins : RDX_Pin WRX_DCX_Pin */
 628:Src/main.c    ****   GPIO_InitStruct.Pin = RDX_Pin|WRX_DCX_Pin;
 442              		.loc 1 628 0
 443 0284 4FF44053 		mov	r3, #12288
 444 0288 0993     		str	r3, [sp, #36]
 629:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 445              		.loc 1 629 0
 446 028a 0A96     		str	r6, [sp, #40]
 630:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 447              		.loc 1 630 0
 448 028c 0B94     		str	r4, [sp, #44]
 631:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 449              		.loc 1 631 0
 450 028e 0C94     		str	r4, [sp, #48]
 632:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 451              		.loc 1 632 0
 452 0290 09A9     		add	r1, sp, #36
ARM GAS  /tmp/ccm1naOn.s 			page 20


 453 0292 1048     		ldr	r0, .L3+20
 454 0294 FFF7FEFF 		bl	HAL_GPIO_Init
 455              	.LVL24:
 633:Src/main.c    **** 
 634:Src/main.c    ****   /*Configure GPIO pins : BA0_Pin BA1_Pin SDCLK_Pin SDNCAS_Pin */
 635:Src/main.c    ****   GPIO_InitStruct.Pin = BA0_Pin|BA1_Pin|SDCLK_Pin|SDNCAS_Pin;
 456              		.loc 1 635 0
 457 0298 48F23013 		movw	r3, #33072
 458 029c 0993     		str	r3, [sp, #36]
 636:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 459              		.loc 1 636 0
 460 029e 0A95     		str	r5, [sp, #40]
 637:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 461              		.loc 1 637 0
 462 02a0 0B94     		str	r4, [sp, #44]
 638:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 463              		.loc 1 638 0
 464 02a2 0C97     		str	r7, [sp, #48]
 639:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 465              		.loc 1 639 0
 466 02a4 CDF83480 		str	r8, [sp, #52]
 640:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 467              		.loc 1 640 0
 468 02a8 09A9     		add	r1, sp, #36
 469 02aa 0848     		ldr	r0, .L3+12
 470 02ac FFF7FEFF 		bl	HAL_GPIO_Init
 471              	.LVL25:
 641:Src/main.c    **** 
 642:Src/main.c    ****   /*Configure GPIO pins : R7_Pin DOTCLK_Pin B3_Pin */
 643:Src/main.c    ****   GPIO_InitStruct.Pin = R7_Pin|DOTCLK_Pin|B3_Pin;
 472              		.loc 1 643 0
 473 02b0 4FF40C63 		mov	r3, #2240
 474 02b4 0993     		str	r3, [sp, #36]
 644:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 475              		.loc 1 644 0
 476 02b6 0A95     		str	r5, [sp, #40]
 645:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 477              		.loc 1 645 0
 478 02b8 0B94     		str	r4, [sp, #44]
 646:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 479              		.loc 1 646 0
 480 02ba 0C94     		str	r4, [sp, #48]
 481 02bc 12E0     		b	.L4
 482              	.L5:
 483 02be 00BF     		.align	2
 484              	.L3:
 485 02c0 00380240 		.word	1073887232
 486 02c4 00080240 		.word	1073874944
 487 02c8 00000240 		.word	1073872896
 488 02cc 00180240 		.word	1073879040
 489 02d0 00100240 		.word	1073876992
 490 02d4 000C0240 		.word	1073875968
 491 02d8 00040240 		.word	1073873920
 492 02dc 00140240 		.word	1073878016
 493 02e0 00001210 		.word	269615104
 494              	.L4:
 647:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
ARM GAS  /tmp/ccm1naOn.s 			page 21


 495              		.loc 1 647 0
 496 02e4 CDF83490 		str	r9, [sp, #52]
 648:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 497              		.loc 1 648 0
 498 02e8 09A9     		add	r1, sp, #36
 499 02ea 2D48     		ldr	r0, .L6
 500 02ec FFF7FEFF 		bl	HAL_GPIO_Init
 501              	.LVL26:
 649:Src/main.c    **** 
 650:Src/main.c    ****   /*Configure GPIO pins : HSYNC_Pin G6_Pin R2_Pin */
 651:Src/main.c    ****   GPIO_InitStruct.Pin = HSYNC_Pin|G6_Pin|R2_Pin;
 502              		.loc 1 651 0
 503 02f0 4FF49863 		mov	r3, #1216
 504 02f4 0993     		str	r3, [sp, #36]
 652:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 505              		.loc 1 652 0
 506 02f6 0A95     		str	r5, [sp, #40]
 653:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 507              		.loc 1 653 0
 508 02f8 0B94     		str	r4, [sp, #44]
 654:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 509              		.loc 1 654 0
 510 02fa 0C94     		str	r4, [sp, #48]
 655:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 511              		.loc 1 655 0
 512 02fc CDF83490 		str	r9, [sp, #52]
 656:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 513              		.loc 1 656 0
 514 0300 09A9     		add	r1, sp, #36
 515 0302 2848     		ldr	r0, .L6+4
 516 0304 FFF7FEFF 		bl	HAL_GPIO_Init
 517              	.LVL27:
 657:Src/main.c    **** 
 658:Src/main.c    ****   /*Configure GPIO pin : I2C3_SDA_Pin */
 659:Src/main.c    ****   GPIO_InitStruct.Pin = I2C3_SDA_Pin;
 518              		.loc 1 659 0
 519 0308 4FF40073 		mov	r3, #512
 520 030c 0993     		str	r3, [sp, #36]
 660:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 521              		.loc 1 660 0
 522 030e 4FF0120A 		mov	r10, #18
 523 0312 CDF828A0 		str	r10, [sp, #40]
 661:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 524              		.loc 1 661 0
 525 0316 0B96     		str	r6, [sp, #44]
 662:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 526              		.loc 1 662 0
 527 0318 0C94     		str	r4, [sp, #48]
 663:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 528              		.loc 1 663 0
 529 031a CDF834B0 		str	fp, [sp, #52]
 664:Src/main.c    ****   HAL_GPIO_Init(I2C3_SDA_GPIO_Port, &GPIO_InitStruct);
 530              		.loc 1 664 0
 531 031e 09A9     		add	r1, sp, #36
 532 0320 2048     		ldr	r0, .L6+4
 533 0322 FFF7FEFF 		bl	HAL_GPIO_Init
 534              	.LVL28:
ARM GAS  /tmp/ccm1naOn.s 			page 22


 665:Src/main.c    **** 
 666:Src/main.c    ****   /*Configure GPIO pin : I2C3_SCL_Pin */
 667:Src/main.c    ****   GPIO_InitStruct.Pin = I2C3_SCL_Pin;
 535              		.loc 1 667 0
 536 0326 4FF48073 		mov	r3, #256
 537 032a 0993     		str	r3, [sp, #36]
 668:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 538              		.loc 1 668 0
 539 032c CDF828A0 		str	r10, [sp, #40]
 669:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 540              		.loc 1 669 0
 541 0330 0B96     		str	r6, [sp, #44]
 670:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 542              		.loc 1 670 0
 543 0332 0C94     		str	r4, [sp, #48]
 671:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 544              		.loc 1 671 0
 545 0334 CDF834B0 		str	fp, [sp, #52]
 672:Src/main.c    ****   HAL_GPIO_Init(I2C3_SCL_GPIO_Port, &GPIO_InitStruct);
 546              		.loc 1 672 0
 547 0338 09A9     		add	r1, sp, #36
 548 033a 1B48     		ldr	r0, .L6+8
 549 033c FFF7FEFF 		bl	HAL_GPIO_Init
 550              	.LVL29:
 673:Src/main.c    **** 
 674:Src/main.c    ****   /*Configure GPIO pins : G7_Pin B2_Pin */
 675:Src/main.c    ****   GPIO_InitStruct.Pin = G7_Pin|B2_Pin;
 551              		.loc 1 675 0
 552 0340 4823     		movs	r3, #72
 553 0342 0993     		str	r3, [sp, #36]
 676:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 554              		.loc 1 676 0
 555 0344 0A95     		str	r5, [sp, #40]
 677:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 556              		.loc 1 677 0
 557 0346 0B94     		str	r4, [sp, #44]
 678:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 558              		.loc 1 678 0
 559 0348 0C94     		str	r4, [sp, #48]
 679:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 560              		.loc 1 679 0
 561 034a CDF83490 		str	r9, [sp, #52]
 680:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 562              		.loc 1 680 0
 563 034e 09A9     		add	r1, sp, #36
 564 0350 1648     		ldr	r0, .L6+12
 565 0352 FFF7FEFF 		bl	HAL_GPIO_Init
 566              	.LVL30:
 681:Src/main.c    **** 
 682:Src/main.c    ****   /*Configure GPIO pins : G3_Pin B4_Pin */
 683:Src/main.c    ****   GPIO_InitStruct.Pin = G3_Pin|B4_Pin;
 567              		.loc 1 683 0
 568 0356 4FF4A053 		mov	r3, #5120
 569 035a 0993     		str	r3, [sp, #36]
 684:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 570              		.loc 1 684 0
 571 035c 0A95     		str	r5, [sp, #40]
ARM GAS  /tmp/ccm1naOn.s 			page 23


 685:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 572              		.loc 1 685 0
 573 035e 0B94     		str	r4, [sp, #44]
 686:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 574              		.loc 1 686 0
 575 0360 0C94     		str	r4, [sp, #48]
 687:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 576              		.loc 1 687 0
 577 0362 0923     		movs	r3, #9
 578 0364 0D93     		str	r3, [sp, #52]
 688:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 579              		.loc 1 688 0
 580 0366 09A9     		add	r1, sp, #36
 581 0368 0D48     		ldr	r0, .L6
 582 036a FFF7FEFF 		bl	HAL_GPIO_Init
 583              	.LVL31:
 689:Src/main.c    **** 
 690:Src/main.c    ****   /*Configure GPIO pins : SDCKE1_Pin SDNE1_Pin */
 691:Src/main.c    ****   GPIO_InitStruct.Pin = SDCKE1_Pin|SDNE1_Pin;
 584              		.loc 1 691 0
 585 036e 6023     		movs	r3, #96
 586 0370 0993     		str	r3, [sp, #36]
 692:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 587              		.loc 1 692 0
 588 0372 0A95     		str	r5, [sp, #40]
 693:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 589              		.loc 1 693 0
 590 0374 0B94     		str	r4, [sp, #44]
 694:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 591              		.loc 1 694 0
 592 0376 0C97     		str	r7, [sp, #48]
 695:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 593              		.loc 1 695 0
 594 0378 CDF83480 		str	r8, [sp, #52]
 696:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 595              		.loc 1 696 0
 596 037c 09A9     		add	r1, sp, #36
 597 037e 0C48     		ldr	r0, .L6+16
 598 0380 FFF7FEFF 		bl	HAL_GPIO_Init
 599              	.LVL32:
 697:Src/main.c    **** 
 698:Src/main.c    ****   /*Configure GPIO pins : NBL0_Pin NBL1_Pin */
 699:Src/main.c    ****   GPIO_InitStruct.Pin = NBL0_Pin|NBL1_Pin;
 600              		.loc 1 699 0
 601 0384 0997     		str	r7, [sp, #36]
 700:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 602              		.loc 1 700 0
 603 0386 0A95     		str	r5, [sp, #40]
 701:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 604              		.loc 1 701 0
 605 0388 0B94     		str	r4, [sp, #44]
 702:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 606              		.loc 1 702 0
 607 038a 0C97     		str	r7, [sp, #48]
 703:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 608              		.loc 1 703 0
 609 038c CDF83480 		str	r8, [sp, #52]
ARM GAS  /tmp/ccm1naOn.s 			page 24


 704:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 610              		.loc 1 704 0
 611 0390 09A9     		add	r1, sp, #36
 612 0392 0848     		ldr	r0, .L6+20
 613 0394 FFF7FEFF 		bl	HAL_GPIO_Init
 614              	.LVL33:
 705:Src/main.c    **** 
 706:Src/main.c    **** }
 615              		.loc 1 706 0
 616 0398 0FB0     		add	sp, sp, #60
 617              	.LCFI2:
 618              		.cfi_def_cfa_offset 36
 619              		@ sp needed
 620 039a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 621              	.L7:
 622 039e 00BF     		.align	2
 623              	.L6:
 624 03a0 00180240 		.word	1073879040
 625 03a4 00080240 		.word	1073874944
 626 03a8 00000240 		.word	1073872896
 627 03ac 000C0240 		.word	1073875968
 628 03b0 00040240 		.word	1073873920
 629 03b4 00100240 		.word	1073876992
 630              		.cfi_endproc
 631              	.LFE137:
 633              		.section	.text.MX_SPI5_Init,"ax",%progbits
 634              		.align	1
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 638              		.fpu fpv4-sp-d16
 640              	MX_SPI5_Init:
 641              	.LFB133:
 309:Src/main.c    **** 
 642              		.loc 1 309 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646 0000 08B5     		push	{r3, lr}
 647              	.LCFI3:
 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 3, -8
 650              		.cfi_offset 14, -4
 319:Src/main.c    ****   hspi5.Init.Mode = SPI_MODE_SLAVE;
 651              		.loc 1 319 0
 652 0002 0948     		ldr	r0, .L10
 653 0004 094B     		ldr	r3, .L10+4
 654 0006 0360     		str	r3, [r0]
 320:Src/main.c    ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 655              		.loc 1 320 0
 656 0008 0023     		movs	r3, #0
 657 000a 4360     		str	r3, [r0, #4]
 321:Src/main.c    ****   hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 658              		.loc 1 321 0
 659 000c 8360     		str	r3, [r0, #8]
 322:Src/main.c    ****   hspi5.Init.CLKPolarity = SPI_POLARITY_HIGH;
 660              		.loc 1 322 0
ARM GAS  /tmp/ccm1naOn.s 			page 25


 661 000e C360     		str	r3, [r0, #12]
 323:Src/main.c    ****   hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 662              		.loc 1 323 0
 663 0010 0222     		movs	r2, #2
 664 0012 0261     		str	r2, [r0, #16]
 324:Src/main.c    ****   hspi5.Init.NSS = SPI_NSS_HARD_INPUT;
 665              		.loc 1 324 0
 666 0014 4361     		str	r3, [r0, #20]
 325:Src/main.c    ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 667              		.loc 1 325 0
 668 0016 8361     		str	r3, [r0, #24]
 326:Src/main.c    ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 669              		.loc 1 326 0
 670 0018 0362     		str	r3, [r0, #32]
 327:Src/main.c    ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 671              		.loc 1 327 0
 672 001a 4362     		str	r3, [r0, #36]
 328:Src/main.c    ****   hspi5.Init.CRCPolynomial = 10;
 673              		.loc 1 328 0
 674 001c 8362     		str	r3, [r0, #40]
 329:Src/main.c    ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 675              		.loc 1 329 0
 676 001e 0A23     		movs	r3, #10
 677 0020 C362     		str	r3, [r0, #44]
 330:Src/main.c    ****   {
 678              		.loc 1 330 0
 679 0022 FFF7FEFF 		bl	HAL_SPI_Init
 680              	.LVL34:
 681 0026 08BD     		pop	{r3, pc}
 682              	.L11:
 683              		.align	2
 684              	.L10:
 685 0028 00000000 		.word	hspi5
 686 002c 00500140 		.word	1073827840
 687              		.cfi_endproc
 688              	.LFE133:
 690              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 691              		.align	1
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	MX_USART1_UART_Init:
 698              	.LFB136:
 422:Src/main.c    **** 
 699              		.loc 1 422 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703 0000 08B5     		push	{r3, lr}
 704              	.LCFI4:
 705              		.cfi_def_cfa_offset 8
 706              		.cfi_offset 3, -8
 707              		.cfi_offset 14, -4
 431:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 708              		.loc 1 431 0
 709 0002 0848     		ldr	r0, .L14
ARM GAS  /tmp/ccm1naOn.s 			page 26


 710 0004 084B     		ldr	r3, .L14+4
 711 0006 0360     		str	r3, [r0]
 432:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 712              		.loc 1 432 0
 713 0008 4FF4E133 		mov	r3, #115200
 714 000c 4360     		str	r3, [r0, #4]
 433:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 715              		.loc 1 433 0
 716 000e 0023     		movs	r3, #0
 717 0010 8360     		str	r3, [r0, #8]
 434:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 718              		.loc 1 434 0
 719 0012 C360     		str	r3, [r0, #12]
 435:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 720              		.loc 1 435 0
 721 0014 0361     		str	r3, [r0, #16]
 436:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 722              		.loc 1 436 0
 723 0016 0C22     		movs	r2, #12
 724 0018 4261     		str	r2, [r0, #20]
 437:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 725              		.loc 1 437 0
 726 001a 8361     		str	r3, [r0, #24]
 438:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 727              		.loc 1 438 0
 728 001c C361     		str	r3, [r0, #28]
 439:Src/main.c    ****   {
 729              		.loc 1 439 0
 730 001e FFF7FEFF 		bl	HAL_UART_Init
 731              	.LVL35:
 732 0022 08BD     		pop	{r3, pc}
 733              	.L15:
 734              		.align	2
 735              	.L14:
 736 0024 00000000 		.word	huart1
 737 0028 00100140 		.word	1073811456
 738              		.cfi_endproc
 739              	.LFE136:
 741              		.section	.text.MX_DAC_Init,"ax",%progbits
 742              		.align	1
 743              		.syntax unified
 744              		.thumb
 745              		.thumb_func
 746              		.fpu fpv4-sp-d16
 748              	MX_DAC_Init:
 749              	.LFB132:
 271:Src/main.c    **** 
 750              		.loc 1 271 0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 8
 753              		@ frame_needed = 0, uses_anonymous_args = 0
 754 0000 30B5     		push	{r4, r5, lr}
 755              	.LCFI5:
 756              		.cfi_def_cfa_offset 12
 757              		.cfi_offset 4, -12
 758              		.cfi_offset 5, -8
 759              		.cfi_offset 14, -4
ARM GAS  /tmp/ccm1naOn.s 			page 27


 760 0002 83B0     		sub	sp, sp, #12
 761              	.LCFI6:
 762              		.cfi_def_cfa_offset 24
 277:Src/main.c    **** 
 763              		.loc 1 277 0
 764 0004 0024     		movs	r4, #0
 765 0006 0094     		str	r4, [sp]
 766 0008 0194     		str	r4, [sp, #4]
 284:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 767              		.loc 1 284 0
 768 000a 074D     		ldr	r5, .L18
 769 000c 074B     		ldr	r3, .L18+4
 770 000e 2B60     		str	r3, [r5]
 285:Src/main.c    ****   {
 771              		.loc 1 285 0
 772 0010 2846     		mov	r0, r5
 773 0012 FFF7FEFF 		bl	HAL_DAC_Init
 774              	.LVL36:
 291:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 775              		.loc 1 291 0
 776 0016 0094     		str	r4, [sp]
 292:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 777              		.loc 1 292 0
 778 0018 0194     		str	r4, [sp, #4]
 293:Src/main.c    ****   {
 779              		.loc 1 293 0
 780 001a 1022     		movs	r2, #16
 781 001c 6946     		mov	r1, sp
 782 001e 2846     		mov	r0, r5
 783 0020 FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 784              	.LVL37:
 301:Src/main.c    **** 
 785              		.loc 1 301 0
 786 0024 03B0     		add	sp, sp, #12
 787              	.LCFI7:
 788              		.cfi_def_cfa_offset 12
 789              		@ sp needed
 790 0026 30BD     		pop	{r4, r5, pc}
 791              	.L19:
 792              		.align	2
 793              	.L18:
 794 0028 00000000 		.word	hdac
 795 002c 00740040 		.word	1073771520
 796              		.cfi_endproc
 797              	.LFE132:
 799              		.section	.text.MX_TIM6_Init,"ax",%progbits
 800              		.align	1
 801              		.syntax unified
 802              		.thumb
 803              		.thumb_func
 804              		.fpu fpv4-sp-d16
 806              	MX_TIM6_Init:
 807              	.LFB134:
 346:Src/main.c    **** 
 808              		.loc 1 346 0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccm1naOn.s 			page 28


 811              		@ frame_needed = 0, uses_anonymous_args = 0
 812 0000 30B5     		push	{r4, r5, lr}
 813              	.LCFI8:
 814              		.cfi_def_cfa_offset 12
 815              		.cfi_offset 4, -12
 816              		.cfi_offset 5, -8
 817              		.cfi_offset 14, -4
 818 0002 83B0     		sub	sp, sp, #12
 819              	.LCFI9:
 820              		.cfi_def_cfa_offset 24
 352:Src/main.c    **** 
 821              		.loc 1 352 0
 822 0004 0025     		movs	r5, #0
 823 0006 0095     		str	r5, [sp]
 824 0008 0195     		str	r5, [sp, #4]
 357:Src/main.c    ****   htim6.Init.Prescaler = 0;
 825              		.loc 1 357 0
 826 000a 0A4C     		ldr	r4, .L22
 827 000c 0A4B     		ldr	r3, .L22+4
 828 000e 2360     		str	r3, [r4]
 358:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 829              		.loc 1 358 0
 830 0010 6560     		str	r5, [r4, #4]
 359:Src/main.c    ****   htim6.Init.Period = 1290;
 831              		.loc 1 359 0
 832 0012 A560     		str	r5, [r4, #8]
 360:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 833              		.loc 1 360 0
 834 0014 40F20A53 		movw	r3, #1290
 835 0018 E360     		str	r3, [r4, #12]
 361:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 836              		.loc 1 361 0
 837 001a A561     		str	r5, [r4, #24]
 362:Src/main.c    ****   {
 838              		.loc 1 362 0
 839 001c 2046     		mov	r0, r4
 840 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 841              	.LVL38:
 366:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 842              		.loc 1 366 0
 843 0022 0095     		str	r5, [sp]
 367:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 844              		.loc 1 367 0
 845 0024 0195     		str	r5, [sp, #4]
 368:Src/main.c    ****   {
 846              		.loc 1 368 0
 847 0026 6946     		mov	r1, sp
 848 0028 2046     		mov	r0, r4
 849 002a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 850              	.LVL39:
 376:Src/main.c    **** 
 851              		.loc 1 376 0
 852 002e 03B0     		add	sp, sp, #12
 853              	.LCFI10:
 854              		.cfi_def_cfa_offset 12
 855              		@ sp needed
 856 0030 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccm1naOn.s 			page 29


 857              	.L23:
 858 0032 00BF     		.align	2
 859              	.L22:
 860 0034 00000000 		.word	htim6
 861 0038 00100040 		.word	1073745920
 862              		.cfi_endproc
 863              	.LFE134:
 865              		.section	.text.MX_TIM7_Init,"ax",%progbits
 866              		.align	1
 867              		.syntax unified
 868              		.thumb
 869              		.thumb_func
 870              		.fpu fpv4-sp-d16
 872              	MX_TIM7_Init:
 873              	.LFB135:
 384:Src/main.c    **** 
 874              		.loc 1 384 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 8
 877              		@ frame_needed = 0, uses_anonymous_args = 0
 878 0000 30B5     		push	{r4, r5, lr}
 879              	.LCFI11:
 880              		.cfi_def_cfa_offset 12
 881              		.cfi_offset 4, -12
 882              		.cfi_offset 5, -8
 883              		.cfi_offset 14, -4
 884 0002 83B0     		sub	sp, sp, #12
 885              	.LCFI12:
 886              		.cfi_def_cfa_offset 24
 390:Src/main.c    **** 
 887              		.loc 1 390 0
 888 0004 0025     		movs	r5, #0
 889 0006 0095     		str	r5, [sp]
 890 0008 0195     		str	r5, [sp, #4]
 395:Src/main.c    ****   htim7.Init.Prescaler = 1024;
 891              		.loc 1 395 0
 892 000a 0B4C     		ldr	r4, .L26
 893 000c 0B4B     		ldr	r3, .L26+4
 894 000e 2360     		str	r3, [r4]
 396:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 895              		.loc 1 396 0
 896 0010 4FF48063 		mov	r3, #1024
 897 0014 6360     		str	r3, [r4, #4]
 397:Src/main.c    ****   htim7.Init.Period = 35000;
 898              		.loc 1 397 0
 899 0016 A560     		str	r5, [r4, #8]
 398:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 900              		.loc 1 398 0
 901 0018 48F6B803 		movw	r3, #35000
 902 001c E360     		str	r3, [r4, #12]
 399:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 903              		.loc 1 399 0
 904 001e A561     		str	r5, [r4, #24]
 400:Src/main.c    ****   {
 905              		.loc 1 400 0
 906 0020 2046     		mov	r0, r4
 907 0022 FFF7FEFF 		bl	HAL_TIM_Base_Init
ARM GAS  /tmp/ccm1naOn.s 			page 30


 908              	.LVL40:
 404:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 909              		.loc 1 404 0
 910 0026 0095     		str	r5, [sp]
 405:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 911              		.loc 1 405 0
 912 0028 0195     		str	r5, [sp, #4]
 406:Src/main.c    ****   {
 913              		.loc 1 406 0
 914 002a 6946     		mov	r1, sp
 915 002c 2046     		mov	r0, r4
 916 002e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 917              	.LVL41:
 414:Src/main.c    **** 
 918              		.loc 1 414 0
 919 0032 03B0     		add	sp, sp, #12
 920              	.LCFI13:
 921              		.cfi_def_cfa_offset 12
 922              		@ sp needed
 923 0034 30BD     		pop	{r4, r5, pc}
 924              	.L27:
 925 0036 00BF     		.align	2
 926              	.L26:
 927 0038 00000000 		.word	htim7
 928 003c 00140040 		.word	1073746944
 929              		.cfi_endproc
 930              	.LFE135:
 932              		.section	.text.SystemClock_Config,"ax",%progbits
 933              		.align	1
 934              		.global	SystemClock_Config
 935              		.syntax unified
 936              		.thumb
 937              		.thumb_func
 938              		.fpu fpv4-sp-d16
 940              	SystemClock_Config:
 941              	.LFB131:
 227:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 942              		.loc 1 227 0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 80
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 946 0000 30B5     		push	{r4, r5, lr}
 947              	.LCFI14:
 948              		.cfi_def_cfa_offset 12
 949              		.cfi_offset 4, -12
 950              		.cfi_offset 5, -8
 951              		.cfi_offset 14, -4
 952 0002 95B0     		sub	sp, sp, #84
 953              	.LCFI15:
 954              		.cfi_def_cfa_offset 96
 228:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 955              		.loc 1 228 0
 956 0004 3022     		movs	r2, #48
 957 0006 0021     		movs	r1, #0
 958 0008 08A8     		add	r0, sp, #32
 959 000a FFF7FEFF 		bl	memset
 960              	.LVL42:
ARM GAS  /tmp/ccm1naOn.s 			page 31


 229:Src/main.c    **** 
 961              		.loc 1 229 0
 962 000e 0024     		movs	r4, #0
 963 0010 0394     		str	r4, [sp, #12]
 964 0012 0494     		str	r4, [sp, #16]
 965 0014 0594     		str	r4, [sp, #20]
 966 0016 0694     		str	r4, [sp, #24]
 967 0018 0794     		str	r4, [sp, #28]
 968              	.LBB10:
 233:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 969              		.loc 1 233 0
 970 001a 0194     		str	r4, [sp, #4]
 971 001c 1B4B     		ldr	r3, .L30
 972 001e 1A6C     		ldr	r2, [r3, #64]
 973 0020 42F08052 		orr	r2, r2, #268435456
 974 0024 1A64     		str	r2, [r3, #64]
 975 0026 1B6C     		ldr	r3, [r3, #64]
 976 0028 03F08053 		and	r3, r3, #268435456
 977 002c 0193     		str	r3, [sp, #4]
 978 002e 019B     		ldr	r3, [sp, #4]
 979              	.LBE10:
 980              	.LBB11:
 234:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 981              		.loc 1 234 0
 982 0030 0294     		str	r4, [sp, #8]
 983 0032 174A     		ldr	r2, .L30+4
 984 0034 1368     		ldr	r3, [r2]
 985 0036 23F44043 		bic	r3, r3, #49152
 986 003a 43F48043 		orr	r3, r3, #16384
 987 003e 1360     		str	r3, [r2]
 988 0040 1368     		ldr	r3, [r2]
 989 0042 03F44043 		and	r3, r3, #49152
 990 0046 0293     		str	r3, [sp, #8]
 991 0048 029B     		ldr	r3, [sp, #8]
 992              	.LBE11:
 237:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 993              		.loc 1 237 0
 994 004a 0225     		movs	r5, #2
 995 004c 0895     		str	r5, [sp, #32]
 238:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 996              		.loc 1 238 0
 997 004e 0123     		movs	r3, #1
 998 0050 0B93     		str	r3, [sp, #44]
 239:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 999              		.loc 1 239 0
 1000 0052 1023     		movs	r3, #16
 1001 0054 0C93     		str	r3, [sp, #48]
 240:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1002              		.loc 1 240 0
 1003 0056 0E95     		str	r5, [sp, #56]
 241:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1004              		.loc 1 241 0
 1005 0058 0F94     		str	r4, [sp, #60]
 242:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 100;
 1006              		.loc 1 242 0
 1007 005a 0823     		movs	r3, #8
 1008 005c 1093     		str	r3, [sp, #64]
ARM GAS  /tmp/ccm1naOn.s 			page 32


 243:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1009              		.loc 1 243 0
 1010 005e 6423     		movs	r3, #100
 1011 0060 1193     		str	r3, [sp, #68]
 244:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 1012              		.loc 1 244 0
 1013 0062 1295     		str	r5, [sp, #72]
 245:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1014              		.loc 1 245 0
 1015 0064 0723     		movs	r3, #7
 1016 0066 1393     		str	r3, [sp, #76]
 246:Src/main.c    ****   {
 1017              		.loc 1 246 0
 1018 0068 08A8     		add	r0, sp, #32
 1019 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 1020              	.LVL43:
 252:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1021              		.loc 1 252 0
 1022 006e 0F23     		movs	r3, #15
 1023 0070 0393     		str	r3, [sp, #12]
 254:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1024              		.loc 1 254 0
 1025 0072 0495     		str	r5, [sp, #16]
 255:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1026              		.loc 1 255 0
 1027 0074 0594     		str	r4, [sp, #20]
 256:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 1028              		.loc 1 256 0
 1029 0076 4FF4A053 		mov	r3, #5120
 1030 007a 0693     		str	r3, [sp, #24]
 257:Src/main.c    **** 
 1031              		.loc 1 257 0
 1032 007c 0793     		str	r3, [sp, #28]
 259:Src/main.c    ****   {
 1033              		.loc 1 259 0
 1034 007e 0321     		movs	r1, #3
 1035 0080 03A8     		add	r0, sp, #12
 1036 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1037              	.LVL44:
 263:Src/main.c    **** 
 1038              		.loc 1 263 0
 1039 0086 15B0     		add	sp, sp, #84
 1040              	.LCFI16:
 1041              		.cfi_def_cfa_offset 12
 1042              		@ sp needed
 1043 0088 30BD     		pop	{r4, r5, pc}
 1044              	.L31:
 1045 008a 00BF     		.align	2
 1046              	.L30:
 1047 008c 00380240 		.word	1073887232
 1048 0090 00700040 		.word	1073770496
 1049              		.cfi_endproc
 1050              	.LFE131:
 1052              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 1053              		.align	1
 1054              		.global	HAL_SPI_TxRxCpltCallback
 1055              		.syntax unified
ARM GAS  /tmp/ccm1naOn.s 			page 33


 1056              		.thumb
 1057              		.thumb_func
 1058              		.fpu fpv4-sp-d16
 1060              	HAL_SPI_TxRxCpltCallback:
 1061              	.LFB138:
 707:Src/main.c    **** 
 708:Src/main.c    **** /* USER CODE BEGIN 4 */
 709:Src/main.c    **** void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi) {
 1062              		.loc 1 709 0
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 0
 1065              		@ frame_needed = 0, uses_anonymous_args = 0
 1066              		@ link register save eliminated.
 1067              	.LVL45:
 710:Src/main.c    ****   uint8_t uart_tx_buffer;
 711:Src/main.c    **** 
 712:Src/main.c    ****   current_midi_note_msg.command = spi_rx_buffer[0];
 1068              		.loc 1 712 0
 1069 0000 054A     		ldr	r2, .L33
 1070 0002 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1071 0004 054B     		ldr	r3, .L33+4
 1072 0006 1970     		strb	r1, [r3]
 713:Src/main.c    ****   current_midi_note_msg.note = spi_rx_buffer[1];
 1073              		.loc 1 713 0
 1074 0008 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 1075 000a 5970     		strb	r1, [r3, #1]
 714:Src/main.c    ****   current_midi_note_msg.velocity = spi_rx_buffer[2];
 1076              		.loc 1 714 0
 1077 000c 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 1078 000e 9A70     		strb	r2, [r3, #2]
 715:Src/main.c    **** 
 716:Src/main.c    ****   MIDI_flag = 1;
 1079              		.loc 1 716 0
 1080 0010 0122     		movs	r2, #1
 1081 0012 034B     		ldr	r3, .L33+8
 1082 0014 1A70     		strb	r2, [r3]
 1083 0016 7047     		bx	lr
 1084              	.L34:
 1085              		.align	2
 1086              	.L33:
 1087 0018 00000000 		.word	spi_rx_buffer
 1088 001c 00000000 		.word	.LANCHOR0
 1089 0020 00000000 		.word	.LANCHOR1
 1090              		.cfi_endproc
 1091              	.LFE138:
 1093              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1094              		.align	1
 1095              		.global	HAL_TIM_PeriodElapsedCallback
 1096              		.syntax unified
 1097              		.thumb
 1098              		.thumb_func
 1099              		.fpu fpv4-sp-d16
 1101              	HAL_TIM_PeriodElapsedCallback:
 1102              	.LFB139:
 717:Src/main.c    **** 
 718:Src/main.c    ****   /*
 719:Src/main.c    ****   uart_tx_buffer = spi_rx_buffer[0];
ARM GAS  /tmp/ccm1naOn.s 			page 34


 720:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 721:Src/main.c    ****   uart_tx_buffer = spi_rx_buffer[1];
 722:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 723:Src/main.c    ****   uart_tx_buffer = spi_rx_buffer[2];
 724:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 725:Src/main.c    ****   uart_tx_buffer = '\n';
 726:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 727:Src/main.c    **** 
 728:Src/main.c    ****   if(spi_rx_buffer[0] == MIDI_NOTE_ON){
 729:Src/main.c    ****     uart_tx_buffer = 'n';
 730:Src/main.c    ****     HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 731:Src/main.c    ****   }
 732:Src/main.c    ****   else if (spi_rx_buffer[0] == MIDI_NOTE_OFF){
 733:Src/main.c    ****     uart_tx_buffer = 'f';
 734:Src/main.c    ****     HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 735:Src/main.c    ****   }
 736:Src/main.c    ****   else {
 737:Src/main.c    ****     uart_tx_buffer = 'z';
 738:Src/main.c    ****     HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 739:Src/main.c    ****   }
 740:Src/main.c    ****   uart_tx_buffer = '\n';
 741:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 742:Src/main.c    ****   */
 743:Src/main.c    **** }
 744:Src/main.c    **** 
 745:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 1103              		.loc 1 745 0
 1104              		.cfi_startproc
 1105              		@ args = 0, pretend = 0, frame = 0
 1106              		@ frame_needed = 0, uses_anonymous_args = 0
 1107              		@ link register save eliminated.
 1108              	.LVL46:
 746:Src/main.c    ****   if(htim->Instance == TIM6){
 1109              		.loc 1 746 0
 1110 0000 0268     		ldr	r2, [r0]
 1111 0002 044B     		ldr	r3, .L38
 1112 0004 9A42     		cmp	r2, r3
 1113 0006 00D0     		beq	.L37
 1114              	.L35:
 1115 0008 7047     		bx	lr
 1116              	.L37:
 747:Src/main.c    ****     //  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_1);
 748:Src/main.c    ****     update_value_flag = 1;
 1117              		.loc 1 748 0
 1118 000a 0122     		movs	r2, #1
 1119 000c 024B     		ldr	r3, .L38+4
 1120 000e 1A70     		strb	r2, [r3]
 749:Src/main.c    ****   }
 750:Src/main.c    ****   /*
 751:Src/main.c    ****   else if(htim->Instance == TIM7){
 752:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_8);
 753:Src/main.c    ****     for(int i = 0; i < VOICES; i++){
 754:Src/main.c    ****       if(note_on[i] == MIDI_NOTE_ON){
 755:Src/main.c    ****         if(env_state[i] == NOT_TRIGGERED){
 756:Src/main.c    ****           env_state[i] = ATTACK_MODE;
 757:Src/main.c    ****         }
 758:Src/main.c    ****         else{
ARM GAS  /tmp/ccm1naOn.s 			page 35


 759:Src/main.c    ****           env_state[i] = RELEASE_MODE;
 760:Src/main.c    ****         }
 761:Src/main.c    ****       }
 762:Src/main.c    ****     }
 763:Src/main.c    ****   }
 764:Src/main.c    ****   */
 765:Src/main.c    **** }
 1121              		.loc 1 765 0
 1122 0010 FAE7     		b	.L35
 1123              	.L39:
 1124 0012 00BF     		.align	2
 1125              	.L38:
 1126 0014 00100040 		.word	1073745920
 1127 0018 00000000 		.word	.LANCHOR2
 1128              		.cfi_endproc
 1129              	.LFE139:
 1131              		.global	__aeabi_f2d
 1132              		.global	__aeabi_dmul
 1133              		.global	__aeabi_d2uiz
 1134              		.section	.text.UpdateOutputValue,"ax",%progbits
 1135              		.align	1
 1136              		.global	UpdateOutputValue
 1137              		.syntax unified
 1138              		.thumb
 1139              		.thumb_func
 1140              		.fpu fpv4-sp-d16
 1142              	UpdateOutputValue:
 1143              	.LFB140:
 766:Src/main.c    **** 
 767:Src/main.c    **** void UpdateOutputValue() {
 1144              		.loc 1 767 0
 1145              		.cfi_startproc
 1146              		@ args = 0, pretend = 0, frame = 8
 1147              		@ frame_needed = 0, uses_anonymous_args = 0
 1148 0000 10B5     		push	{r4, lr}
 1149              	.LCFI17:
 1150              		.cfi_def_cfa_offset 8
 1151              		.cfi_offset 4, -8
 1152              		.cfi_offset 14, -4
 1153 0002 2DED028B 		vpush.64	{d8}
 1154              	.LCFI18:
 1155              		.cfi_def_cfa_offset 16
 1156              		.cfi_offset 80, -16
 1157              		.cfi_offset 81, -12
 1158 0006 82B0     		sub	sp, sp, #8
 1159              	.LCFI19:
 1160              		.cfi_def_cfa_offset 24
 1161              	.LVL47:
 768:Src/main.c    ****   //  HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_7);
 769:Src/main.c    ****   float val = 0;
 770:Src/main.c    ****   output_val = 0;
 1162              		.loc 1 770 0
 1163 0008 0024     		movs	r4, #0
 1164 000a 2B4B     		ldr	r3, .L44+8
 1165 000c 1C70     		strb	r4, [r3]
 1166              	.LVL48:
 769:Src/main.c    ****   output_val = 0;
ARM GAS  /tmp/ccm1naOn.s 			page 36


 1167              		.loc 1 769 0
 1168 000e 9FED2B8A 		vldr.32	s16, .L44+12
 1169              	.LBB12:
 771:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1170              		.loc 1 771 0
 1171 0012 3BE0     		b	.L41
 1172              	.LVL49:
 1173              	.L42:
 772:Src/main.c    ****     phase_accumulator[i] += (uint32_t)(midi_notes[note_freq[i]]*DDS_SCALE_FACTOR);
 1174              		.loc 1 772 0 discriminator 3
 1175 0014 2A4B     		ldr	r3, .L44+16
 1176 0016 1A5D     		ldrb	r2, [r3, r4]	@ zero_extendqisi2
 1177 0018 2A4B     		ldr	r3, .L44+20
 1178 001a 03EB8203 		add	r3, r3, r2, lsl #2
 1179 001e 1868     		ldr	r0, [r3]	@ float
 1180 0020 FFF7FEFF 		bl	__aeabi_f2d
 1181              	.LVL50:
 1182 0024 22A3     		adr	r3, .L44
 1183 0026 D3E90023 		ldrd	r2, [r3]
 1184 002a FFF7FEFF 		bl	__aeabi_dmul
 1185              	.LVL51:
 1186 002e FFF7FEFF 		bl	__aeabi_d2uiz
 1187              	.LVL52:
 1188 0032 254A     		ldr	r2, .L44+24
 1189 0034 52F82430 		ldr	r3, [r2, r4, lsl #2]
 1190 0038 1844     		add	r0, r0, r3
 1191 003a 42F82400 		str	r0, [r2, r4, lsl #2]
 773:Src/main.c    ****     val += ((base_sine[(phase_accumulator[i]>>10)%4096] + base_sine[(phase_accumulator[i]>>10)%4096
 1192              		.loc 1 773 0 discriminator 3
 1193 003e 52F82430 		ldr	r3, [r2, r4, lsl #2]
 1194 0042 C3F38B23 		ubfx	r3, r3, #10, #12
 1195 0046 2149     		ldr	r1, .L44+28
 1196 0048 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1197 004a 52F82420 		ldr	r2, [r2, r4, lsl #2]
 1198 004e C2F38B22 		ubfx	r2, r2, #10, #12
 1199 0052 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1200 0054 1344     		add	r3, r3, r2
 1201 0056 07EE903A 		vmov	s15, r3	@ int
 1202 005a 1D4B     		ldr	r3, .L44+32
 1203 005c 03EB8403 		add	r3, r3, r4, lsl #2
 1204 0060 93ED007A 		vldr.32	s14, [r3]
 1205 0064 F8EEE77A 		vcvt.f32.s32	s15, s15
 1206 0068 27EE877A 		vmul.f32	s14, s15, s14
 1207 006c 194B     		ldr	r3, .L44+36
 1208 006e 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1209 0070 DBB2     		uxtb	r3, r3
 1210 0072 07EE903A 		vmov	s15, r3	@ int
 1211 0076 F8EEE77A 		vcvt.f32.s32	s15, s15
 1212 007a 67EE877A 		vmul.f32	s15, s15, s14
 1213 007e DFED166A 		vldr.32	s13, .L44+40
 1214 0082 87EEA67A 		vdiv.f32	s14, s15, s13
 1215 0086 38EE078A 		vadd.f32	s16, s16, s14
 1216              	.LVL53:
 771:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1217              		.loc 1 771 0 discriminator 3
 1218 008a 0134     		adds	r4, r4, #1
 1219              	.LVL54:
ARM GAS  /tmp/ccm1naOn.s 			page 37


 1220              	.L41:
 771:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1221              		.loc 1 771 0 is_stmt 0 discriminator 1
 1222 008c 0F2C     		cmp	r4, #15
 1223 008e C1DD     		ble	.L42
 1224              	.LBE12:
 774:Src/main.c    ****   }
 775:Src/main.c    **** 
 776:Src/main.c    ****   output_val = (uint8_t) (val / VOICES);
 1225              		.loc 1 776 0 is_stmt 1
 1226 0090 DFED127A 		vldr.32	s15, .L44+44
 1227 0094 28EE278A 		vmul.f32	s16, s16, s15
 1228              	.LVL55:
 1229 0098 FCEEC87A 		vcvt.u32.f32	s15, s16
 1230 009c CDED017A 		vstr.32	s15, [sp, #4]	@ int
 1231 00a0 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 1232 00a4 044A     		ldr	r2, .L44+8
 1233 00a6 1370     		strb	r3, [r2]
 777:Src/main.c    **** }
 1234              		.loc 1 777 0
 1235 00a8 02B0     		add	sp, sp, #8
 1236              	.LCFI20:
 1237              		.cfi_def_cfa_offset 16
 1238              		@ sp needed
 1239 00aa BDEC028B 		vldm	sp!, {d8}
 1240              	.LCFI21:
 1241              		.cfi_restore 80
 1242              		.cfi_restore 81
 1243              		.cfi_def_cfa_offset 8
 1244 00ae 10BD     		pop	{r4, pc}
 1245              	.LVL56:
 1246              	.L45:
 1247              		.align	3
 1248              	.L44:
 1249 00b0 942EA292 		.word	2460102292
 1250 00b4 5F5E5640 		.word	1079402079
 1251 00b8 00000000 		.word	.LANCHOR3
 1252 00bc 00000000 		.word	0
 1253 00c0 00000000 		.word	.LANCHOR4
 1254 00c4 00000000 		.word	midi_notes
 1255 00c8 00000000 		.word	.LANCHOR5
 1256 00cc 00000000 		.word	base_sine
 1257 00d0 00000000 		.word	.LANCHOR6
 1258 00d4 00000000 		.word	.LANCHOR7
 1259 00d8 0001FE47 		.word	1207828736
 1260 00dc 0000803D 		.word	1031798784
 1261              		.cfi_endproc
 1262              	.LFE140:
 1264              		.global	__aeabi_i2d
 1265              		.section	.text.UpdateLFOs,"ax",%progbits
 1266              		.align	1
 1267              		.global	UpdateLFOs
 1268              		.syntax unified
 1269              		.thumb
 1270              		.thumb_func
 1271              		.fpu fpv4-sp-d16
 1273              	UpdateLFOs:
ARM GAS  /tmp/ccm1naOn.s 			page 38


 1274              	.LFB141:
 778:Src/main.c    **** 
 779:Src/main.c    **** void UpdateLFOs() {
 1275              		.loc 1 779 0
 1276              		.cfi_startproc
 1277              		@ args = 0, pretend = 0, frame = 0
 1278              		@ frame_needed = 0, uses_anonymous_args = 0
 1279 0000 10B5     		push	{r4, lr}
 1280              	.LCFI22:
 1281              		.cfi_def_cfa_offset 8
 1282              		.cfi_offset 4, -8
 1283              		.cfi_offset 14, -4
 1284              	.LVL57:
 1285              	.LBB13:
 780:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1286              		.loc 1 780 0
 1287 0002 0024     		movs	r4, #0
 1288 0004 1BE0     		b	.L47
 1289              	.LVL58:
 1290              	.L48:
 781:Src/main.c    ****     lfo_phase_accumulator[i] += (uint32_t)(lfo_freq[i] * (DDS_SCALE_FACTOR/10));
 1291              		.loc 1 781 0 discriminator 3
 1292 0006 124B     		ldr	r3, .L50+8
 1293 0008 33F81400 		ldrh	r0, [r3, r4, lsl #1]
 1294 000c 80B2     		uxth	r0, r0
 1295 000e FFF7FEFF 		bl	__aeabi_i2d
 1296              	.LVL59:
 1297 0012 0DA3     		adr	r3, .L50
 1298 0014 D3E90023 		ldrd	r2, [r3]
 1299 0018 FFF7FEFF 		bl	__aeabi_dmul
 1300              	.LVL60:
 1301 001c FFF7FEFF 		bl	__aeabi_d2uiz
 1302              	.LVL61:
 1303 0020 0C4B     		ldr	r3, .L50+12
 1304 0022 53F82420 		ldr	r2, [r3, r4, lsl #2]
 1305 0026 1044     		add	r0, r0, r2
 1306 0028 43F82400 		str	r0, [r3, r4, lsl #2]
 782:Src/main.c    ****     lfo[i] = base_tri[(lfo_phase_accumulator[i]>>10)%4096];
 1307              		.loc 1 782 0 discriminator 3
 1308 002c 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1309 0030 C3F38B23 		ubfx	r3, r3, #10, #12
 1310 0034 084A     		ldr	r2, .L50+16
 1311 0036 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1312 0038 084B     		ldr	r3, .L50+20
 1313 003a 1A55     		strb	r2, [r3, r4]
 780:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1314              		.loc 1 780 0 discriminator 3
 1315 003c 0134     		adds	r4, r4, #1
 1316              	.LVL62:
 1317              	.L47:
 780:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1318              		.loc 1 780 0 is_stmt 0 discriminator 1
 1319 003e 0F2C     		cmp	r4, #15
 1320 0040 E1DD     		ble	.L48
 1321              	.LBE13:
 783:Src/main.c    ****   }
 784:Src/main.c    **** }
ARM GAS  /tmp/ccm1naOn.s 			page 39


 1322              		.loc 1 784 0 is_stmt 1
 1323 0042 10BD     		pop	{r4, pc}
 1324              	.LVL63:
 1325              	.L51:
 1326 0044 AFF30080 		.align	3
 1327              	.L50:
 1328 0048 76581B42 		.word	1109088374
 1329 004c 19E52140 		.word	1075963161
 1330 0050 00000000 		.word	.LANCHOR8
 1331 0054 00000000 		.word	.LANCHOR9
 1332 0058 00000000 		.word	base_tri
 1333 005c 00000000 		.word	.LANCHOR7
 1334              		.cfi_endproc
 1335              	.LFE141:
 1337              		.section	.text.UpdateEnvelope,"ax",%progbits
 1338              		.align	1
 1339              		.global	UpdateEnvelope
 1340              		.syntax unified
 1341              		.thumb
 1342              		.thumb_func
 1343              		.fpu fpv4-sp-d16
 1345              	UpdateEnvelope:
 1346              	.LFB142:
 785:Src/main.c    **** 
 786:Src/main.c    **** void UpdateEnvelope() {
 1347              		.loc 1 786 0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 0
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
 1351 0000 70B5     		push	{r4, r5, r6, lr}
 1352              	.LCFI23:
 1353              		.cfi_def_cfa_offset 16
 1354              		.cfi_offset 4, -16
 1355              		.cfi_offset 5, -12
 1356              		.cfi_offset 6, -8
 1357              		.cfi_offset 14, -4
 1358              	.LVL64:
 1359              	.LBB14:
 787:Src/main.c    ****   for(int i = 0; i < VOICES; i++){
 1360              		.loc 1 787 0
 1361 0002 0024     		movs	r4, #0
 1362 0004 09E0     		b	.L53
 1363              	.LVL65:
 1364              	.L55:
 788:Src/main.c    ****     //if(note_on[i] == MIDI_NOTE_OFF){
 789:Src/main.c    ****     //  env_state[i] = RELEASE_MODE;
 790:Src/main.c    ****     //}
 791:Src/main.c    **** 
 792:Src/main.c    ****     switch(env_state[i]){
 793:Src/main.c    ****     case NOT_TRIGGERED:
 794:Src/main.c    ****       envelope_index[i] = 0;
 1365              		.loc 1 794 0
 1366 0006 0022     		movs	r2, #0
 1367 0008 5F4B     		ldr	r3, .L66+8
 1368 000a 43F82420 		str	r2, [r3, r4, lsl #2]
 795:Src/main.c    ****       envelope[i] = 0;
 1369              		.loc 1 795 0
ARM GAS  /tmp/ccm1naOn.s 			page 40


 1370 000e 5F4B     		ldr	r3, .L66+12
 1371 0010 03EB8403 		add	r3, r3, r4, lsl #2
 1372 0014 0022     		movs	r2, #0
 1373 0016 1A60     		str	r2, [r3]	@ float
 1374              	.L54:
 787:Src/main.c    ****   for(int i = 0; i < VOICES; i++){
 1375              		.loc 1 787 0 discriminator 2
 1376 0018 0134     		adds	r4, r4, #1
 1377              	.LVL66:
 1378              	.L53:
 787:Src/main.c    ****   for(int i = 0; i < VOICES; i++){
 1379              		.loc 1 787 0 is_stmt 0 discriminator 1
 1380 001a 0F2C     		cmp	r4, #15
 1381 001c 00F3AE80 		bgt	.L65
 792:Src/main.c    ****     case NOT_TRIGGERED:
 1382              		.loc 1 792 0 is_stmt 1
 1383 0020 5B4B     		ldr	r3, .L66+16
 1384 0022 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1385 0024 DBB2     		uxtb	r3, r3
 1386 0026 042B     		cmp	r3, #4
 1387 0028 F6D8     		bhi	.L54
 1388 002a 01A2     		adr	r2, .L56
 1389 002c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1390              		.p2align 2
 1391              	.L56:
 1392 0030 07000000 		.word	.L55+1
 1393 0034 45000000 		.word	.L57+1
 1394 0038 A3000000 		.word	.L58+1
 1395 003c 19000000 		.word	.L54+1
 1396 0040 07010000 		.word	.L59+1
 1397              		.p2align 1
 1398              	.L57:
 796:Src/main.c    ****       break;
 797:Src/main.c    ****     case ATTACK_MODE:
 798:Src/main.c    ****       //    if((UINT32_MAX - envelope_index) < DDS_SCALE_FACTOR){
 799:Src/main.c    ****       if(envelope_index[i] <= 4200000) {
 1399              		.loc 1 799 0
 1400 0044 504B     		ldr	r3, .L66+8
 1401 0046 53F82420 		ldr	r2, [r3, r4, lsl #2]
 1402 004a 524B     		ldr	r3, .L66+20
 1403 004c 9A42     		cmp	r2, r3
 1404 004e 20D8     		bhi	.L60
 800:Src/main.c    ****         envelope_index[i] += (uint32_t)(attack * DDS_SCALE_FACTOR);
 1405              		.loc 1 800 0
 1406 0050 4D4D     		ldr	r5, .L66+8
 1407 0052 55F82460 		ldr	r6, [r5, r4, lsl #2]
 1408 0056 504B     		ldr	r3, .L66+24
 1409 0058 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1410 005a FFF7FEFF 		bl	__aeabi_i2d
 1411              	.LVL67:
 1412 005e 48A3     		adr	r3, .L66
 1413 0060 D3E90023 		ldrd	r2, [r3]
 1414 0064 FFF7FEFF 		bl	__aeabi_dmul
 1415              	.LVL68:
 1416 0068 FFF7FEFF 		bl	__aeabi_d2uiz
 1417              	.LVL69:
 1418 006c 3044     		add	r0, r0, r6
ARM GAS  /tmp/ccm1naOn.s 			page 41


 1419 006e 45F82400 		str	r0, [r5, r4, lsl #2]
 801:Src/main.c    ****         envelope[i] = base_pos_saw[(envelope_index[i]>>10)%4096];
 1420              		.loc 1 801 0
 1421 0072 55F82430 		ldr	r3, [r5, r4, lsl #2]
 1422 0076 C3F38B23 		ubfx	r3, r3, #10, #12
 1423 007a 484A     		ldr	r2, .L66+28
 1424 007c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1425 007e 07EE903A 		vmov	s15, r3	@ int
 1426 0082 F8EE677A 		vcvt.f32.u32	s15, s15
 1427 0086 414B     		ldr	r3, .L66+12
 1428 0088 03EB8403 		add	r3, r3, r4, lsl #2
 1429 008c C3ED007A 		vstr.32	s15, [r3]
 1430 0090 C2E7     		b	.L54
 1431              	.L60:
 802:Src/main.c    ****       }
 803:Src/main.c    ****       else {
 804:Src/main.c    ****         // env_state++;
 805:Src/main.c    ****         envelope_index[i] = 0;
 1432              		.loc 1 805 0
 1433 0092 0022     		movs	r2, #0
 1434 0094 3C4B     		ldr	r3, .L66+8
 1435 0096 43F82420 		str	r2, [r3, r4, lsl #2]
 806:Src/main.c    ****         env_state[i] = DECAY_MODE;
 1436              		.loc 1 806 0
 1437 009a 0222     		movs	r2, #2
 1438 009c 3C4B     		ldr	r3, .L66+16
 1439 009e 1A55     		strb	r2, [r3, r4]
 1440 00a0 BAE7     		b	.L54
 1441              	.L58:
 807:Src/main.c    ****       }
 808:Src/main.c    ****       break;
 809:Src/main.c    ****     case DECAY_MODE:
 810:Src/main.c    ****       if(base_neg_saw[(envelope_index[i]>>10)%4096] >= sustain){
 1442              		.loc 1 810 0
 1443 00a2 394B     		ldr	r3, .L66+8
 1444 00a4 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1445 00a8 C3F38B23 		ubfx	r3, r3, #10, #12
 1446 00ac 3C4A     		ldr	r2, .L66+32
 1447 00ae D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1448 00b0 3C4B     		ldr	r3, .L66+36
 1449 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1450 00b4 9A42     		cmp	r2, r3
 1451 00b6 20D3     		bcc	.L61
 811:Src/main.c    ****         envelope_index[i] += (uint32_t)(decay * DDS_SCALE_FACTOR);
 1452              		.loc 1 811 0
 1453 00b8 334D     		ldr	r5, .L66+8
 1454 00ba 55F82460 		ldr	r6, [r5, r4, lsl #2]
 1455 00be 3A4B     		ldr	r3, .L66+40
 1456 00c0 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1457 00c2 FFF7FEFF 		bl	__aeabi_i2d
 1458              	.LVL70:
 1459 00c6 2EA3     		adr	r3, .L66
 1460 00c8 D3E90023 		ldrd	r2, [r3]
 1461 00cc FFF7FEFF 		bl	__aeabi_dmul
 1462              	.LVL71:
 1463 00d0 FFF7FEFF 		bl	__aeabi_d2uiz
 1464              	.LVL72:
ARM GAS  /tmp/ccm1naOn.s 			page 42


 1465 00d4 3044     		add	r0, r0, r6
 1466 00d6 45F82400 		str	r0, [r5, r4, lsl #2]
 812:Src/main.c    ****         envelope[i] = base_neg_saw[(envelope_index[i]>>10)%4096];
 1467              		.loc 1 812 0
 1468 00da 55F82430 		ldr	r3, [r5, r4, lsl #2]
 1469 00de C3F38B23 		ubfx	r3, r3, #10, #12
 1470 00e2 2F4A     		ldr	r2, .L66+32
 1471 00e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1472 00e6 07EE903A 		vmov	s15, r3	@ int
 1473 00ea F8EE677A 		vcvt.f32.u32	s15, s15
 1474 00ee 274B     		ldr	r3, .L66+12
 1475 00f0 03EB8403 		add	r3, r3, r4, lsl #2
 1476 00f4 C3ED007A 		vstr.32	s15, [r3]
 1477 00f8 8EE7     		b	.L54
 1478              	.L61:
 813:Src/main.c    ****       }
 814:Src/main.c    ****       else {
 815:Src/main.c    ****         //envelope_index[i] = 0;
 816:Src/main.c    ****         env_state[i]++;
 1479              		.loc 1 816 0
 1480 00fa 254A     		ldr	r2, .L66+16
 1481 00fc 135D     		ldrb	r3, [r2, r4]	@ zero_extendqisi2
 1482 00fe 0133     		adds	r3, r3, #1
 1483 0100 DBB2     		uxtb	r3, r3
 1484 0102 1355     		strb	r3, [r2, r4]
 1485 0104 88E7     		b	.L54
 1486              	.L59:
 817:Src/main.c    ****         //env_state[i] = RELEASE_MODE;
 818:Src/main.c    ****       }
 819:Src/main.c    ****       break;
 820:Src/main.c    ****     case SUSTAIN_MODE:
 821:Src/main.c    ****       //env_state[i]++;
 822:Src/main.c    ****       break;
 823:Src/main.c    ****     case RELEASE_MODE:
 824:Src/main.c    ****       //      if((UINT32_MAX - envelope_index) < DDS_SCALE_FACTOR){
 825:Src/main.c    ****       if(envelope_index[i] <= 4200000){
 1487              		.loc 1 825 0
 1488 0106 204B     		ldr	r3, .L66+8
 1489 0108 53F82420 		ldr	r2, [r3, r4, lsl #2]
 1490 010c 214B     		ldr	r3, .L66+20
 1491 010e 9A42     		cmp	r2, r3
 1492 0110 20D8     		bhi	.L62
 826:Src/main.c    ****         envelope_index[i] += (uint32_t)(release * DDS_SCALE_FACTOR);
 1493              		.loc 1 826 0
 1494 0112 1D4D     		ldr	r5, .L66+8
 1495 0114 55F82460 		ldr	r6, [r5, r4, lsl #2]
 1496 0118 244B     		ldr	r3, .L66+44
 1497 011a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1498 011c FFF7FEFF 		bl	__aeabi_i2d
 1499              	.LVL73:
 1500 0120 17A3     		adr	r3, .L66
 1501 0122 D3E90023 		ldrd	r2, [r3]
 1502 0126 FFF7FEFF 		bl	__aeabi_dmul
 1503              	.LVL74:
 1504 012a FFF7FEFF 		bl	__aeabi_d2uiz
 1505              	.LVL75:
 1506 012e 3044     		add	r0, r0, r6
ARM GAS  /tmp/ccm1naOn.s 			page 43


 1507 0130 45F82400 		str	r0, [r5, r4, lsl #2]
 827:Src/main.c    ****         envelope[i] = base_neg_saw[(envelope_index[i]>>10)%4096];
 1508              		.loc 1 827 0
 1509 0134 55F82430 		ldr	r3, [r5, r4, lsl #2]
 1510 0138 C3F38B23 		ubfx	r3, r3, #10, #12
 1511 013c 184A     		ldr	r2, .L66+32
 1512 013e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1513 0140 07EE903A 		vmov	s15, r3	@ int
 1514 0144 F8EE677A 		vcvt.f32.u32	s15, s15
 1515 0148 104B     		ldr	r3, .L66+12
 1516 014a 03EB8403 		add	r3, r3, r4, lsl #2
 1517 014e C3ED007A 		vstr.32	s15, [r3]
 1518 0152 61E7     		b	.L54
 1519              	.L62:
 828:Src/main.c    ****       }
 829:Src/main.c    ****       else {
 830:Src/main.c    ****         env_state[i] = NOT_TRIGGERED;
 1520              		.loc 1 830 0
 1521 0154 0023     		movs	r3, #0
 1522 0156 0E4A     		ldr	r2, .L66+16
 1523 0158 1355     		strb	r3, [r2, r4]
 831:Src/main.c    ****         note_on[i] = MIDI_NOTE_OFF;
 1524              		.loc 1 831 0
 1525 015a 8021     		movs	r1, #128
 1526 015c 144A     		ldr	r2, .L66+48
 1527 015e 1155     		strb	r1, [r2, r4]
 832:Src/main.c    ****         envelope_index[i] = 0;
 1528              		.loc 1 832 0
 1529 0160 094A     		ldr	r2, .L66+8
 1530 0162 42F82430 		str	r3, [r2, r4, lsl #2]
 833:Src/main.c    ****         envelope[i] = 0;
 1531              		.loc 1 833 0
 1532 0166 094A     		ldr	r2, .L66+12
 1533 0168 02EB8402 		add	r2, r2, r4, lsl #2
 1534 016c 0021     		movs	r1, #0
 1535 016e 1160     		str	r1, [r2]	@ float
 834:Src/main.c    ****         lfo_phase_accumulator[i] = 0;
 1536              		.loc 1 834 0
 1537 0170 104A     		ldr	r2, .L66+52
 1538 0172 42F82430 		str	r3, [r2, r4, lsl #2]
 835:Src/main.c    ****         lfo[i] = 0;
 1539              		.loc 1 835 0
 1540 0176 104A     		ldr	r2, .L66+56
 1541 0178 1355     		strb	r3, [r2, r4]
 1542 017a 4DE7     		b	.L54
 1543              	.L65:
 1544              	.LBE14:
 836:Src/main.c    ****       }
 837:Src/main.c    ****       break;
 838:Src/main.c    ****     }
 839:Src/main.c    ****   }
 840:Src/main.c    **** }
 1545              		.loc 1 840 0
 1546 017c 70BD     		pop	{r4, r5, r6, pc}
 1547              	.LVL76:
 1548              	.L67:
 1549 017e 00BF     		.align	3
ARM GAS  /tmp/ccm1naOn.s 			page 44


 1550              	.L66:
 1551 0180 942EA292 		.word	2460102292
 1552 0184 5F5E5640 		.word	1079402079
 1553 0188 00000000 		.word	.LANCHOR10
 1554 018c 00000000 		.word	.LANCHOR6
 1555 0190 00000000 		.word	env_state
 1556 0194 40164000 		.word	4200000
 1557 0198 00000000 		.word	.LANCHOR11
 1558 019c 00000000 		.word	base_pos_saw
 1559 01a0 00000000 		.word	base_neg_saw
 1560 01a4 00000000 		.word	.LANCHOR12
 1561 01a8 00000000 		.word	.LANCHOR13
 1562 01ac 00000000 		.word	.LANCHOR14
 1563 01b0 00000000 		.word	.LANCHOR15
 1564 01b4 00000000 		.word	.LANCHOR9
 1565 01b8 00000000 		.word	.LANCHOR7
 1566              		.cfi_endproc
 1567              	.LFE142:
 1569              		.section	.text.main,"ax",%progbits
 1570              		.align	1
 1571              		.global	main
 1572              		.syntax unified
 1573              		.thumb
 1574              		.thumb_func
 1575              		.fpu fpv4-sp-d16
 1577              	main:
 1578              	.LFB130:
 112:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1579              		.loc 1 112 0
 1580              		.cfi_startproc
 1581              		@ args = 0, pretend = 0, frame = 0
 1582              		@ frame_needed = 0, uses_anonymous_args = 0
 1583 0000 08B5     		push	{r3, lr}
 1584              	.LCFI24:
 1585              		.cfi_def_cfa_offset 8
 1586              		.cfi_offset 3, -8
 1587              		.cfi_offset 14, -4
 120:Src/main.c    **** 
 1588              		.loc 1 120 0
 1589 0002 FFF7FEFF 		bl	HAL_Init
 1590              	.LVL77:
 127:Src/main.c    **** 
 1591              		.loc 1 127 0
 1592 0006 FFF7FEFF 		bl	SystemClock_Config
 1593              	.LVL78:
 134:Src/main.c    ****   MX_SPI5_Init();
 1594              		.loc 1 134 0
 1595 000a FFF7FEFF 		bl	MX_GPIO_Init
 1596              	.LVL79:
 135:Src/main.c    ****   MX_USART1_UART_Init();
 1597              		.loc 1 135 0
 1598 000e FFF7FEFF 		bl	MX_SPI5_Init
 1599              	.LVL80:
 136:Src/main.c    ****   MX_DAC_Init();
 1600              		.loc 1 136 0
 1601 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 1602              	.LVL81:
ARM GAS  /tmp/ccm1naOn.s 			page 45


 137:Src/main.c    ****   MX_TIM6_Init();
 1603              		.loc 1 137 0
 1604 0016 FFF7FEFF 		bl	MX_DAC_Init
 1605              	.LVL82:
 138:Src/main.c    ****   MX_TIM7_Init();
 1606              		.loc 1 138 0
 1607 001a FFF7FEFF 		bl	MX_TIM6_Init
 1608              	.LVL83:
 139:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1609              		.loc 1 139 0
 1610 001e FFF7FEFF 		bl	MX_TIM7_Init
 1611              	.LVL84:
 141:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim6);
 1612              		.loc 1 141 0
 1613 0022 FFF7FEFF 		bl	init_wavetable
 1614              	.LVL85:
 142:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim7);
 1615              		.loc 1 142 0
 1616 0026 3848     		ldr	r0, .L84
 1617 0028 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1618              	.LVL86:
 143:Src/main.c    ****   HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 1619              		.loc 1 143 0
 1620 002c 3748     		ldr	r0, .L84+4
 1621 002e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1622              	.LVL87:
 144:Src/main.c    **** 
 1623              		.loc 1 144 0
 1624 0032 1021     		movs	r1, #16
 1625 0034 3648     		ldr	r0, .L84+8
 1626 0036 FFF7FEFF 		bl	HAL_DAC_Start
 1627              	.LVL88:
 1628              	.LBB15:
 146:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 1629              		.loc 1 146 0
 1630 003a 0023     		movs	r3, #0
 1631 003c 0CE0     		b	.L69
 1632              	.LVL89:
 1633              	.L70:
 147:Src/main.c    ****     note_on[i] = MIDI_NOTE_OFF;
 1634              		.loc 1 147 0 discriminator 3
 1635 003e 0022     		movs	r2, #0
 1636 0040 3449     		ldr	r1, .L84+12
 1637 0042 CA54     		strb	r2, [r1, r3]
 148:Src/main.c    ****     note_freq[i] = 0;
 1638              		.loc 1 148 0 discriminator 3
 1639 0044 8020     		movs	r0, #128
 1640 0046 3449     		ldr	r1, .L84+16
 1641 0048 C854     		strb	r0, [r1, r3]
 149:Src/main.c    ****     lfo_freq[i] = 200;
 1642              		.loc 1 149 0 discriminator 3
 1643 004a 3449     		ldr	r1, .L84+20
 1644 004c CA54     		strb	r2, [r1, r3]
 150:Src/main.c    ****   }
 1645              		.loc 1 150 0 discriminator 3
 1646 004e C821     		movs	r1, #200
 1647 0050 334A     		ldr	r2, .L84+24
ARM GAS  /tmp/ccm1naOn.s 			page 46


 1648 0052 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 146:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 1649              		.loc 1 146 0 discriminator 3
 1650 0056 0133     		adds	r3, r3, #1
 1651              	.LVL90:
 1652              	.L69:
 146:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 1653              		.loc 1 146 0 is_stmt 0 discriminator 1
 1654 0058 0F2B     		cmp	r3, #15
 1655 005a F0DD     		ble	.L70
 1656 005c 2FE0     		b	.L78
 1657              	.LVL91:
 1658              	.L74:
 1659              	.LBE15:
 1660              	.LBB16:
 183:Src/main.c    ****           if(note_on[i] == MIDI_NOTE_OFF){
 1661              		.loc 1 183 0 is_stmt 1 discriminator 2
 1662 005e 0133     		adds	r3, r3, #1
 1663              	.LVL92:
 1664              	.L73:
 183:Src/main.c    ****           if(note_on[i] == MIDI_NOTE_OFF){
 1665              		.loc 1 183 0 is_stmt 0 discriminator 1
 1666 0060 0F2B     		cmp	r3, #15
 1667 0062 29DC     		bgt	.L71
 184:Src/main.c    ****             note_on[i] = MIDI_NOTE_ON;
 1668              		.loc 1 184 0 is_stmt 1
 1669 0064 2C4A     		ldr	r2, .L84+16
 1670 0066 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1671 0068 D2B2     		uxtb	r2, r2
 1672 006a 802A     		cmp	r2, #128
 1673 006c F7D1     		bne	.L74
 185:Src/main.c    ****             note_freq[i] = current_midi_note_msg.note;
 1674              		.loc 1 185 0
 1675 006e 9021     		movs	r1, #144
 1676 0070 294A     		ldr	r2, .L84+16
 1677 0072 D154     		strb	r1, [r2, r3]
 186:Src/main.c    ****             env_state[i] = ATTACK_MODE;
 1678              		.loc 1 186 0
 1679 0074 2B4A     		ldr	r2, .L84+28
 1680 0076 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 1681 0078 D2B2     		uxtb	r2, r2
 1682 007a 2849     		ldr	r1, .L84+20
 1683 007c CA54     		strb	r2, [r1, r3]
 187:Src/main.c    ****           }
 1684              		.loc 1 187 0
 1685 007e 0121     		movs	r1, #1
 1686 0080 244A     		ldr	r2, .L84+12
 1687 0082 D154     		strb	r1, [r2, r3]
 1688 0084 EBE7     		b	.L74
 1689              	.LVL93:
 1690              	.L76:
 1691              	.LBE16:
 1692              	.LBB17:
 192:Src/main.c    ****           if (note_on[i] == MIDI_NOTE_ON && note_freq[i] == current_midi_note_msg.note){
 1693              		.loc 1 192 0 discriminator 2
 1694 0086 0133     		adds	r3, r3, #1
 1695              	.LVL94:
ARM GAS  /tmp/ccm1naOn.s 			page 47


 1696              	.L72:
 192:Src/main.c    ****           if (note_on[i] == MIDI_NOTE_ON && note_freq[i] == current_midi_note_msg.note){
 1697              		.loc 1 192 0 is_stmt 0 discriminator 1
 1698 0088 0F2B     		cmp	r3, #15
 1699 008a 15DC     		bgt	.L71
 193:Src/main.c    ****             note_on[i] = MIDI_NOTE_OFF;
 1700              		.loc 1 193 0 is_stmt 1
 1701 008c 224A     		ldr	r2, .L84+16
 1702 008e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1703 0090 D2B2     		uxtb	r2, r2
 1704 0092 902A     		cmp	r2, #144
 1705 0094 F7D1     		bne	.L76
 193:Src/main.c    ****             note_on[i] = MIDI_NOTE_OFF;
 1706              		.loc 1 193 0 is_stmt 0 discriminator 1
 1707 0096 214A     		ldr	r2, .L84+20
 1708 0098 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 1709 009a C9B2     		uxtb	r1, r1
 1710 009c 214A     		ldr	r2, .L84+28
 1711 009e 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 1712 00a0 D2B2     		uxtb	r2, r2
 1713 00a2 9142     		cmp	r1, r2
 1714 00a4 EFD1     		bne	.L76
 194:Src/main.c    ****             env_state[i] = RELEASE_MODE;
 1715              		.loc 1 194 0 is_stmt 1
 1716 00a6 8021     		movs	r1, #128
 1717 00a8 1B4A     		ldr	r2, .L84+16
 1718 00aa D154     		strb	r1, [r2, r3]
 195:Src/main.c    ****           }
 1719              		.loc 1 195 0
 1720 00ac 0421     		movs	r1, #4
 1721 00ae 194A     		ldr	r2, .L84+12
 1722 00b0 D154     		strb	r1, [r2, r3]
 1723 00b2 E8E7     		b	.L76
 1724              	.LVL95:
 1725              	.L80:
 1726              	.LBE17:
 181:Src/main.c    ****       case MIDI_NOTE_ON:
 1727              		.loc 1 181 0
 1728 00b4 0023     		movs	r3, #0
 1729 00b6 E7E7     		b	.L72
 1730              	.L71:
 202:Src/main.c    ****       //      __disable_irq();
 1731              		.loc 1 202 0
 1732 00b8 1B4B     		ldr	r3, .L84+32
 1733 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1734 00bc 9BB9     		cbnz	r3, .L83
 1735              	.L78:
 177:Src/main.c    **** 
 1736              		.loc 1 177 0
 1737 00be 1B49     		ldr	r1, .L84+36
 1738 00c0 1B48     		ldr	r0, .L84+40
 1739 00c2 FFF7FEFF 		bl	Receive_MIDI
 1740              	.LVL96:
 179:Src/main.c    ****       MIDI_flag = 0;
 1741              		.loc 1 179 0
 1742 00c6 1B4B     		ldr	r3, .L84+44
 1743 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccm1naOn.s 			page 48


 1744 00ca 002B     		cmp	r3, #0
 1745 00cc F4D0     		beq	.L71
 180:Src/main.c    ****       switch(current_midi_note_msg.command) {
 1746              		.loc 1 180 0
 1747 00ce 0022     		movs	r2, #0
 1748 00d0 184B     		ldr	r3, .L84+44
 1749 00d2 1A70     		strb	r2, [r3]
 181:Src/main.c    ****       case MIDI_NOTE_ON:
 1750              		.loc 1 181 0
 1751 00d4 134B     		ldr	r3, .L84+28
 1752 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1753 00d8 DBB2     		uxtb	r3, r3
 1754 00da 802B     		cmp	r3, #128
 1755 00dc EAD0     		beq	.L80
 1756 00de 902B     		cmp	r3, #144
 1757 00e0 EAD1     		bne	.L71
 1758 00e2 0023     		movs	r3, #0
 1759 00e4 BCE7     		b	.L73
 1760              	.L83:
 204:Src/main.c    ****       UpdateLFOs();
 1761              		.loc 1 204 0
 1762 00e6 FFF7FEFF 		bl	UpdateEnvelope
 1763              	.LVL97:
 205:Src/main.c    ****       UpdateOutputValue();
 1764              		.loc 1 205 0
 1765 00ea FFF7FEFF 		bl	UpdateLFOs
 1766              	.LVL98:
 206:Src/main.c    ****       HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_8B_R, output_val);
 1767              		.loc 1 206 0
 1768 00ee FFF7FEFF 		bl	UpdateOutputValue
 1769              	.LVL99:
 207:Src/main.c    ****       update_value_flag = 0;
 1770              		.loc 1 207 0
 1771 00f2 114B     		ldr	r3, .L84+48
 1772 00f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1773 00f6 0822     		movs	r2, #8
 1774 00f8 1021     		movs	r1, #16
 1775 00fa 0548     		ldr	r0, .L84+8
 1776 00fc FFF7FEFF 		bl	HAL_DAC_SetValue
 1777              	.LVL100:
 208:Src/main.c    ****       //      __enable_irq();
 1778              		.loc 1 208 0
 1779 0100 0022     		movs	r2, #0
 1780 0102 094B     		ldr	r3, .L84+32
 1781 0104 1A70     		strb	r2, [r3]
 1782 0106 DAE7     		b	.L78
 1783              	.L85:
 1784              		.align	2
 1785              	.L84:
 1786 0108 00000000 		.word	htim6
 1787 010c 00000000 		.word	htim7
 1788 0110 00000000 		.word	hdac
 1789 0114 00000000 		.word	env_state
 1790 0118 00000000 		.word	.LANCHOR15
 1791 011c 00000000 		.word	.LANCHOR4
 1792 0120 00000000 		.word	.LANCHOR8
 1793 0124 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccm1naOn.s 			page 49


 1794 0128 00000000 		.word	.LANCHOR2
 1795 012c 00000000 		.word	spi_rx_buffer
 1796 0130 00000000 		.word	hspi5
 1797 0134 00000000 		.word	.LANCHOR1
 1798 0138 00000000 		.word	.LANCHOR3
 1799              		.cfi_endproc
 1800              	.LFE130:
 1802              		.section	.text.Update_R2R_DAC,"ax",%progbits
 1803              		.align	1
 1804              		.global	Update_R2R_DAC
 1805              		.syntax unified
 1806              		.thumb
 1807              		.thumb_func
 1808              		.fpu fpv4-sp-d16
 1810              	Update_R2R_DAC:
 1811              	.LFB143:
 841:Src/main.c    **** 
 842:Src/main.c    **** void Update_R2R_DAC() {
 1812              		.loc 1 842 0
 1813              		.cfi_startproc
 1814              		@ args = 0, pretend = 0, frame = 0
 1815              		@ frame_needed = 0, uses_anonymous_args = 0
 1816 0000 08B5     		push	{r3, lr}
 1817              	.LCFI25:
 1818              		.cfi_def_cfa_offset 8
 1819              		.cfi_offset 3, -8
 1820              		.cfi_offset 14, -4
 843:Src/main.c    ****   ((output_val>>0)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_7, GPIO_PIN_SET) : HAL_GPIO_Write
 1821              		.loc 1 843 0
 1822 0002 474B     		ldr	r3, .L105
 1823 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1824 0006 13F0010F 		tst	r3, #1
 1825 000a 51D0     		beq	.L87
 1826              		.loc 1 843 0 is_stmt 0 discriminator 1
 1827 000c 0122     		movs	r2, #1
 1828 000e 8021     		movs	r1, #128
 1829 0010 4448     		ldr	r0, .L105+4
 1830 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1831              	.LVL101:
 1832              	.L88:
 844:Src/main.c    ****   ((output_val>>1)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_8, GPIO_PIN_SET) : HAL_GPIO_Write
 1833              		.loc 1 844 0 is_stmt 1
 1834 0016 424B     		ldr	r3, .L105
 1835 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1836 001a 13F0020F 		tst	r3, #2
 1837 001e 4DD0     		beq	.L89
 1838              		.loc 1 844 0 is_stmt 0 discriminator 1
 1839 0020 0122     		movs	r2, #1
 1840 0022 4FF48071 		mov	r1, #256
 1841 0026 3F48     		ldr	r0, .L105+4
 1842 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1843              	.LVL102:
 1844              	.L90:
 845:Src/main.c    ****   ((output_val>>2)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_9, GPIO_PIN_SET) : HAL_GPIO_Write
 1845              		.loc 1 845 0 is_stmt 1
 1846 002c 3C4B     		ldr	r3, .L105
 1847 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccm1naOn.s 			page 50


 1848 0030 13F0040F 		tst	r3, #4
 1849 0034 49D0     		beq	.L91
 1850              		.loc 1 845 0 is_stmt 0 discriminator 1
 1851 0036 0122     		movs	r2, #1
 1852 0038 4FF40071 		mov	r1, #512
 1853 003c 3948     		ldr	r0, .L105+4
 1854 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1855              	.LVL103:
 1856              	.L92:
 846:Src/main.c    ****   ((output_val>>3)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_10, GPIO_PIN_SET) : HAL_GPIO_Writ
 1857              		.loc 1 846 0 is_stmt 1
 1858 0042 374B     		ldr	r3, .L105
 1859 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1860 0046 13F0080F 		tst	r3, #8
 1861 004a 45D0     		beq	.L93
 1862              		.loc 1 846 0 is_stmt 0 discriminator 1
 1863 004c 0122     		movs	r2, #1
 1864 004e 4FF48061 		mov	r1, #1024
 1865 0052 3448     		ldr	r0, .L105+4
 1866 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1867              	.LVL104:
 1868              	.L94:
 847:Src/main.c    ****   ((output_val>>4)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET) : HAL_GPIO_Writ
 1869              		.loc 1 847 0 is_stmt 1
 1870 0058 314B     		ldr	r3, .L105
 1871 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1872 005c 13F0100F 		tst	r3, #16
 1873 0060 41D0     		beq	.L95
 1874              		.loc 1 847 0 is_stmt 0 discriminator 1
 1875 0062 0122     		movs	r2, #1
 1876 0064 4FF40061 		mov	r1, #2048
 1877 0068 2E48     		ldr	r0, .L105+4
 1878 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1879              	.LVL105:
 1880              	.L96:
 848:Src/main.c    ****   ((output_val>>5)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET) : HAL_GPIO_Writ
 1881              		.loc 1 848 0 is_stmt 1
 1882 006e 2C4B     		ldr	r3, .L105
 1883 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1884 0072 13F0200F 		tst	r3, #32
 1885 0076 3DD0     		beq	.L97
 1886              		.loc 1 848 0 is_stmt 0 discriminator 1
 1887 0078 0122     		movs	r2, #1
 1888 007a 4FF48051 		mov	r1, #4096
 1889 007e 2948     		ldr	r0, .L105+4
 1890 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1891              	.LVL106:
 1892              	.L98:
 849:Src/main.c    ****   ((output_val>>6)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_13, GPIO_PIN_SET) : HAL_GPIO_Writ
 1893              		.loc 1 849 0 is_stmt 1
 1894 0084 264B     		ldr	r3, .L105
 1895 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1896 0088 13F0400F 		tst	r3, #64
 1897 008c 39D0     		beq	.L99
 1898              		.loc 1 849 0 is_stmt 0 discriminator 1
 1899 008e 0122     		movs	r2, #1
 1900 0090 4FF40051 		mov	r1, #8192
ARM GAS  /tmp/ccm1naOn.s 			page 51


 1901 0094 2348     		ldr	r0, .L105+4
 1902 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1903              	.LVL107:
 1904              	.L100:
 850:Src/main.c    ****   ((output_val>>7)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_14, GPIO_PIN_SET) : HAL_GPIO_Writ
 1905              		.loc 1 850 0 is_stmt 1
 1906 009a 214B     		ldr	r3, .L105
 1907 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1908 009e DB09     		lsrs	r3, r3, #7
 1909 00a0 36D1     		bne	.L104
 1910              		.loc 1 850 0 is_stmt 0 discriminator 2
 1911 00a2 0022     		movs	r2, #0
 1912 00a4 4FF48041 		mov	r1, #16384
 1913 00a8 1E48     		ldr	r0, .L105+4
 1914 00aa FFF7FEFF 		bl	HAL_GPIO_WritePin
 1915              	.LVL108:
 1916 00ae 08BD     		pop	{r3, pc}
 1917              	.L87:
 843:Src/main.c    ****   ((output_val>>1)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_8, GPIO_PIN_SET) : HAL_GPIO_Write
 1918              		.loc 1 843 0 is_stmt 1 discriminator 2
 1919 00b0 0022     		movs	r2, #0
 1920 00b2 8021     		movs	r1, #128
 1921 00b4 1B48     		ldr	r0, .L105+4
 1922 00b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1923              	.LVL109:
 1924 00ba ACE7     		b	.L88
 1925              	.L89:
 844:Src/main.c    ****   ((output_val>>2)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_9, GPIO_PIN_SET) : HAL_GPIO_Write
 1926              		.loc 1 844 0 discriminator 2
 1927 00bc 0022     		movs	r2, #0
 1928 00be 4FF48071 		mov	r1, #256
 1929 00c2 1848     		ldr	r0, .L105+4
 1930 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1931              	.LVL110:
 1932 00c8 B0E7     		b	.L90
 1933              	.L91:
 845:Src/main.c    ****   ((output_val>>3)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_10, GPIO_PIN_SET) : HAL_GPIO_Writ
 1934              		.loc 1 845 0 discriminator 2
 1935 00ca 0022     		movs	r2, #0
 1936 00cc 4FF40071 		mov	r1, #512
 1937 00d0 1448     		ldr	r0, .L105+4
 1938 00d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1939              	.LVL111:
 1940 00d6 B4E7     		b	.L92
 1941              	.L93:
 846:Src/main.c    ****   ((output_val>>4)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET) : HAL_GPIO_Writ
 1942              		.loc 1 846 0 discriminator 2
 1943 00d8 0022     		movs	r2, #0
 1944 00da 4FF48061 		mov	r1, #1024
 1945 00de 1148     		ldr	r0, .L105+4
 1946 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1947              	.LVL112:
 1948 00e4 B8E7     		b	.L94
 1949              	.L95:
 847:Src/main.c    ****   ((output_val>>5)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET) : HAL_GPIO_Writ
 1950              		.loc 1 847 0 discriminator 2
 1951 00e6 0022     		movs	r2, #0
ARM GAS  /tmp/ccm1naOn.s 			page 52


 1952 00e8 4FF40061 		mov	r1, #2048
 1953 00ec 0D48     		ldr	r0, .L105+4
 1954 00ee FFF7FEFF 		bl	HAL_GPIO_WritePin
 1955              	.LVL113:
 1956 00f2 BCE7     		b	.L96
 1957              	.L97:
 848:Src/main.c    ****   ((output_val>>6)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_13, GPIO_PIN_SET) : HAL_GPIO_Writ
 1958              		.loc 1 848 0 discriminator 2
 1959 00f4 0022     		movs	r2, #0
 1960 00f6 4FF48051 		mov	r1, #4096
 1961 00fa 0A48     		ldr	r0, .L105+4
 1962 00fc FFF7FEFF 		bl	HAL_GPIO_WritePin
 1963              	.LVL114:
 1964 0100 C0E7     		b	.L98
 1965              	.L99:
 849:Src/main.c    ****   ((output_val>>7)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_14, GPIO_PIN_SET) : HAL_GPIO_Writ
 1966              		.loc 1 849 0 discriminator 2
 1967 0102 0022     		movs	r2, #0
 1968 0104 4FF40051 		mov	r1, #8192
 1969 0108 0648     		ldr	r0, .L105+4
 1970 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1971              	.LVL115:
 1972 010e C4E7     		b	.L100
 1973              	.L104:
 1974              		.loc 1 850 0 discriminator 1
 1975 0110 0122     		movs	r2, #1
 1976 0112 4FF48041 		mov	r1, #16384
 1977 0116 0348     		ldr	r0, .L105+4
 1978 0118 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1979              	.LVL116:
 1980 011c 08BD     		pop	{r3, pc}
 1981              	.L106:
 1982 011e 00BF     		.align	2
 1983              	.L105:
 1984 0120 00000000 		.word	.LANCHOR3
 1985 0124 00100240 		.word	1073876992
 1986              		.cfi_endproc
 1987              	.LFE143:
 1989              		.section	.text.Error_Handler,"ax",%progbits
 1990              		.align	1
 1991              		.global	Error_Handler
 1992              		.syntax unified
 1993              		.thumb
 1994              		.thumb_func
 1995              		.fpu fpv4-sp-d16
 1997              	Error_Handler:
 1998              	.LFB144:
 851:Src/main.c    **** }
 852:Src/main.c    **** /* USER CODE END 4 */
 853:Src/main.c    **** 
 854:Src/main.c    **** /**
 855:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 856:Src/main.c    ****   * @retval None
 857:Src/main.c    ****   */
 858:Src/main.c    **** void Error_Handler(void)
 859:Src/main.c    **** {
 1999              		.loc 1 859 0
ARM GAS  /tmp/ccm1naOn.s 			page 53


 2000              		.cfi_startproc
 2001              		@ args = 0, pretend = 0, frame = 0
 2002              		@ frame_needed = 0, uses_anonymous_args = 0
 2003              		@ link register save eliminated.
 2004 0000 7047     		bx	lr
 2005              		.cfi_endproc
 2006              	.LFE144:
 2008              		.global	release
 2009              		.global	sustain
 2010              		.global	decay
 2011              		.global	attack
 2012              		.global	MIDI_flag
 2013              		.global	update_value_flag
 2014              		.global	lfo
 2015              		.global	lfo_freq
 2016              		.global	lfo_phase_accumulator
 2017              		.global	note_freq
 2018              		.global	note_on
 2019              		.comm	env_state,16,4
 2020              		.global	envelope
 2021              		.global	envelope_index
 2022              		.global	output_val
 2023              		.global	phase_accumulator
 2024              		.global	current_midi_note_msg
 2025              		.global	inv_voices
 2026              		.comm	spi_rx_buffer,3,4
 2027              		.global	spi_tx_buffer
 2028              		.comm	huart1,64,4
 2029              		.comm	htim7,64,4
 2030              		.comm	htim6,64,4
 2031              		.comm	hspi5,88,4
 2032              		.comm	hdac,20,4
 2033              		.comm	lfo_sine,256,4
 2034              		.comm	base_sq,4096,4
 2035              		.comm	base_tri,4096,4
 2036              		.comm	base_neg_saw,4096,4
 2037              		.comm	base_pos_saw,4096,4
 2038              		.comm	base_sine,4096,4
 2039              		.section	.bss.MIDI_flag,"aw",%nobits
 2040              		.set	.LANCHOR1,. + 0
 2043              	MIDI_flag:
 2044 0000 00       		.space	1
 2045              		.section	.bss.current_midi_note_msg,"aw",%nobits
 2046              		.align	2
 2047              		.set	.LANCHOR0,. + 0
 2050              	current_midi_note_msg:
 2051 0000 000000   		.space	3
 2052              		.section	.bss.envelope,"aw",%nobits
 2053              		.align	2
 2054              		.set	.LANCHOR6,. + 0
 2057              	envelope:
 2058 0000 00000000 		.space	64
 2058      00000000 
 2058      00000000 
 2058      00000000 
 2058      00000000 
 2059              		.section	.bss.envelope_index,"aw",%nobits
ARM GAS  /tmp/ccm1naOn.s 			page 54


 2060              		.align	2
 2061              		.set	.LANCHOR10,. + 0
 2064              	envelope_index:
 2065 0000 00000000 		.space	64
 2065      00000000 
 2065      00000000 
 2065      00000000 
 2065      00000000 
 2066              		.section	.bss.lfo,"aw",%nobits
 2067              		.align	2
 2068              		.set	.LANCHOR7,. + 0
 2071              	lfo:
 2072 0000 00000000 		.space	16
 2072      00000000 
 2072      00000000 
 2072      00000000 
 2073              		.section	.bss.lfo_freq,"aw",%nobits
 2074              		.align	2
 2075              		.set	.LANCHOR8,. + 0
 2078              	lfo_freq:
 2079 0000 00000000 		.space	32
 2079      00000000 
 2079      00000000 
 2079      00000000 
 2079      00000000 
 2080              		.section	.bss.lfo_phase_accumulator,"aw",%nobits
 2081              		.align	2
 2082              		.set	.LANCHOR9,. + 0
 2085              	lfo_phase_accumulator:
 2086 0000 00000000 		.space	64
 2086      00000000 
 2086      00000000 
 2086      00000000 
 2086      00000000 
 2087              		.section	.bss.note_freq,"aw",%nobits
 2088              		.align	2
 2089              		.set	.LANCHOR4,. + 0
 2092              	note_freq:
 2093 0000 00000000 		.space	16
 2093      00000000 
 2093      00000000 
 2093      00000000 
 2094              		.section	.bss.note_on,"aw",%nobits
 2095              		.align	2
 2096              		.set	.LANCHOR15,. + 0
 2099              	note_on:
 2100 0000 00000000 		.space	88
 2100      00000000 
 2100      00000000 
 2100      00000000 
 2100      00000000 
 2101              		.section	.bss.output_val,"aw",%nobits
 2102              		.set	.LANCHOR3,. + 0
 2105              	output_val:
 2106 0000 00       		.space	1
 2107              		.section	.bss.phase_accumulator,"aw",%nobits
 2108              		.align	2
ARM GAS  /tmp/ccm1naOn.s 			page 55


 2109              		.set	.LANCHOR5,. + 0
 2112              	phase_accumulator:
 2113 0000 00000000 		.space	64
 2113      00000000 
 2113      00000000 
 2113      00000000 
 2113      00000000 
 2114              		.section	.bss.update_value_flag,"aw",%nobits
 2115              		.set	.LANCHOR2,. + 0
 2118              	update_value_flag:
 2119 0000 00       		.space	1
 2120              		.section	.data.attack,"aw",%progbits
 2121              		.set	.LANCHOR11,. + 0
 2124              	attack:
 2125 0000 1E       		.byte	30
 2126              		.section	.data.decay,"aw",%progbits
 2127              		.set	.LANCHOR13,. + 0
 2130              	decay:
 2131 0000 1E       		.byte	30
 2132              		.section	.data.release,"aw",%progbits
 2133              		.set	.LANCHOR14,. + 0
 2136              	release:
 2137 0000 02       		.byte	2
 2138              		.section	.data.spi_tx_buffer,"aw",%progbits
 2139              		.align	2
 2142              	spi_tx_buffer:
 2143 0000 31       		.byte	49
 2144 0001 32       		.byte	50
 2145 0002 33       		.byte	51
 2146              		.section	.data.sustain,"aw",%progbits
 2147              		.set	.LANCHOR12,. + 0
 2150              	sustain:
 2151 0000 C8       		.byte	-56
 2152              		.section	.rodata.inv_voices,"a",%progbits
 2153              		.align	2
 2156              	inv_voices:
 2157 0000 0000803D 		.word	1031798784
 2158              		.text
 2159              	.Letext0:
 2160              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2161              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2162              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2163              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2164              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 2165              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2166              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2167              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2168              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2169              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2170              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dac.h"
 2171              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 2172              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2173              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2174              		.file 16 "Inc/midi.h"
 2175              		.file 17 "/usr/include/newlib/sys/lock.h"
 2176              		.file 18 "/usr/include/newlib/sys/_types.h"
 2177              		.file 19 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
ARM GAS  /tmp/ccm1naOn.s 			page 56


 2178              		.file 20 "/usr/include/newlib/sys/reent.h"
 2179              		.file 21 "/usr/include/newlib/stdlib.h"
 2180              		.file 22 "Inc/waves.h"
 2181              		.file 23 "/usr/include/newlib/math.h"
 2182              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 2183              		.file 25 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccm1naOn.s 			page 57


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccm1naOn.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccm1naOn.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccm1naOn.s:485    .text.MX_GPIO_Init:00000000000002c0 $d
     /tmp/ccm1naOn.s:496    .text.MX_GPIO_Init:00000000000002e4 $t
     /tmp/ccm1naOn.s:624    .text.MX_GPIO_Init:00000000000003a0 $d
     /tmp/ccm1naOn.s:634    .text.MX_SPI5_Init:0000000000000000 $t
     /tmp/ccm1naOn.s:640    .text.MX_SPI5_Init:0000000000000000 MX_SPI5_Init
     /tmp/ccm1naOn.s:685    .text.MX_SPI5_Init:0000000000000028 $d
                            *COM*:0000000000000058 hspi5
     /tmp/ccm1naOn.s:691    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccm1naOn.s:697    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccm1naOn.s:736    .text.MX_USART1_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart1
     /tmp/ccm1naOn.s:742    .text.MX_DAC_Init:0000000000000000 $t
     /tmp/ccm1naOn.s:748    .text.MX_DAC_Init:0000000000000000 MX_DAC_Init
     /tmp/ccm1naOn.s:794    .text.MX_DAC_Init:0000000000000028 $d
                            *COM*:0000000000000014 hdac
     /tmp/ccm1naOn.s:800    .text.MX_TIM6_Init:0000000000000000 $t
     /tmp/ccm1naOn.s:806    .text.MX_TIM6_Init:0000000000000000 MX_TIM6_Init
     /tmp/ccm1naOn.s:860    .text.MX_TIM6_Init:0000000000000034 $d
                            *COM*:0000000000000040 htim6
     /tmp/ccm1naOn.s:866    .text.MX_TIM7_Init:0000000000000000 $t
     /tmp/ccm1naOn.s:872    .text.MX_TIM7_Init:0000000000000000 MX_TIM7_Init
     /tmp/ccm1naOn.s:927    .text.MX_TIM7_Init:0000000000000038 $d
                            *COM*:0000000000000040 htim7
     /tmp/ccm1naOn.s:933    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccm1naOn.s:940    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccm1naOn.s:1047   .text.SystemClock_Config:000000000000008c $d
     /tmp/ccm1naOn.s:1053   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/ccm1naOn.s:1060   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/ccm1naOn.s:1087   .text.HAL_SPI_TxRxCpltCallback:0000000000000018 $d
                            *COM*:0000000000000003 spi_rx_buffer
     /tmp/ccm1naOn.s:1094   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccm1naOn.s:1101   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccm1naOn.s:1126   .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccm1naOn.s:1135   .text.UpdateOutputValue:0000000000000000 $t
     /tmp/ccm1naOn.s:1142   .text.UpdateOutputValue:0000000000000000 UpdateOutputValue
     /tmp/ccm1naOn.s:1249   .text.UpdateOutputValue:00000000000000b0 $d
                            *COM*:0000000000001000 base_sine
     /tmp/ccm1naOn.s:1266   .text.UpdateLFOs:0000000000000000 $t
     /tmp/ccm1naOn.s:1273   .text.UpdateLFOs:0000000000000000 UpdateLFOs
     /tmp/ccm1naOn.s:1328   .text.UpdateLFOs:0000000000000048 $d
                            *COM*:0000000000001000 base_tri
     /tmp/ccm1naOn.s:1338   .text.UpdateEnvelope:0000000000000000 $t
     /tmp/ccm1naOn.s:1345   .text.UpdateEnvelope:0000000000000000 UpdateEnvelope
     /tmp/ccm1naOn.s:1392   .text.UpdateEnvelope:0000000000000030 $d
     /tmp/ccm1naOn.s:1397   .text.UpdateEnvelope:0000000000000044 $t
     /tmp/ccm1naOn.s:1551   .text.UpdateEnvelope:0000000000000180 $d
                            *COM*:0000000000000010 env_state
                            *COM*:0000000000001000 base_pos_saw
                            *COM*:0000000000001000 base_neg_saw
     /tmp/ccm1naOn.s:1570   .text.main:0000000000000000 $t
     /tmp/ccm1naOn.s:1577   .text.main:0000000000000000 main
     /tmp/ccm1naOn.s:1786   .text.main:0000000000000108 $d
     /tmp/ccm1naOn.s:1803   .text.Update_R2R_DAC:0000000000000000 $t
ARM GAS  /tmp/ccm1naOn.s 			page 58


     /tmp/ccm1naOn.s:1810   .text.Update_R2R_DAC:0000000000000000 Update_R2R_DAC
     /tmp/ccm1naOn.s:1984   .text.Update_R2R_DAC:0000000000000120 $d
     /tmp/ccm1naOn.s:1990   .text.Error_Handler:0000000000000000 $t
     /tmp/ccm1naOn.s:1997   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccm1naOn.s:2136   .data.release:0000000000000000 release
     /tmp/ccm1naOn.s:2150   .data.sustain:0000000000000000 sustain
     /tmp/ccm1naOn.s:2130   .data.decay:0000000000000000 decay
     /tmp/ccm1naOn.s:2124   .data.attack:0000000000000000 attack
     /tmp/ccm1naOn.s:2043   .bss.MIDI_flag:0000000000000000 MIDI_flag
     /tmp/ccm1naOn.s:2118   .bss.update_value_flag:0000000000000000 update_value_flag
     /tmp/ccm1naOn.s:2071   .bss.lfo:0000000000000000 lfo
     /tmp/ccm1naOn.s:2078   .bss.lfo_freq:0000000000000000 lfo_freq
     /tmp/ccm1naOn.s:2085   .bss.lfo_phase_accumulator:0000000000000000 lfo_phase_accumulator
     /tmp/ccm1naOn.s:2092   .bss.note_freq:0000000000000000 note_freq
     /tmp/ccm1naOn.s:2099   .bss.note_on:0000000000000000 note_on
     /tmp/ccm1naOn.s:2057   .bss.envelope:0000000000000000 envelope
     /tmp/ccm1naOn.s:2064   .bss.envelope_index:0000000000000000 envelope_index
     /tmp/ccm1naOn.s:2105   .bss.output_val:0000000000000000 output_val
     /tmp/ccm1naOn.s:2112   .bss.phase_accumulator:0000000000000000 phase_accumulator
     /tmp/ccm1naOn.s:2050   .bss.current_midi_note_msg:0000000000000000 current_midi_note_msg
     /tmp/ccm1naOn.s:2156   .rodata.inv_voices:0000000000000000 inv_voices
     /tmp/ccm1naOn.s:2142   .data.spi_tx_buffer:0000000000000000 spi_tx_buffer
                            *COM*:0000000000000100 lfo_sine
                            *COM*:0000000000001000 base_sq
     /tmp/ccm1naOn.s:2044   .bss.MIDI_flag:0000000000000000 $d
     /tmp/ccm1naOn.s:2046   .bss.current_midi_note_msg:0000000000000000 $d
     /tmp/ccm1naOn.s:2053   .bss.envelope:0000000000000000 $d
     /tmp/ccm1naOn.s:2060   .bss.envelope_index:0000000000000000 $d
     /tmp/ccm1naOn.s:2067   .bss.lfo:0000000000000000 $d
     /tmp/ccm1naOn.s:2074   .bss.lfo_freq:0000000000000000 $d
     /tmp/ccm1naOn.s:2081   .bss.lfo_phase_accumulator:0000000000000000 $d
     /tmp/ccm1naOn.s:2088   .bss.note_freq:0000000000000000 $d
     /tmp/ccm1naOn.s:2095   .bss.note_on:0000000000000000 $d
     /tmp/ccm1naOn.s:2106   .bss.output_val:0000000000000000 $d
     /tmp/ccm1naOn.s:2108   .bss.phase_accumulator:0000000000000000 $d
     /tmp/ccm1naOn.s:2119   .bss.update_value_flag:0000000000000000 $d
     /tmp/ccm1naOn.s:2139   .data.spi_tx_buffer:0000000000000000 $d
     /tmp/ccm1naOn.s:2153   .rodata.inv_voices:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Init
HAL_UART_Init
HAL_DAC_Init
HAL_DAC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_f2d
__aeabi_dmul
__aeabi_d2uiz
midi_notes
__aeabi_i2d
ARM GAS  /tmp/ccm1naOn.s 			page 59


HAL_Init
init_wavetable
HAL_TIM_Base_Start_IT
HAL_DAC_Start
Receive_MIDI
HAL_DAC_SetValue
