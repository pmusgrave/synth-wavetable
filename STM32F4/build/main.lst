ARM GAS  /tmp/cc7mjtlt.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB136:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include "midi.h"
  27:Src/main.c    **** #include "waves.h"
  28:Src/main.c    **** /* USER CODE END Includes */
  29:Src/main.c    **** 
  30:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  31:Src/main.c    **** /* USER CODE BEGIN PTD */
  32:Src/main.c    **** 
ARM GAS  /tmp/cc7mjtlt.s 			page 2


  33:Src/main.c    **** /* USER CODE END PTD */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PD */
  37:Src/main.c    **** #define DDS_SCALE_FACTOR 894.745833
  38:Src/main.c    **** #define VOICES 48
  39:Src/main.c    **** #define NOT_TRIGGERED 0
  40:Src/main.c    **** #define ATTACK_MODE 1
  41:Src/main.c    **** #define DECAY_MODE 2
  42:Src/main.c    **** #define SUSTAIN_MODE 3
  43:Src/main.c    **** #define RELEASE_MODE 4
  44:Src/main.c    **** /* USER CODE END PD */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  47:Src/main.c    **** /* USER CODE BEGIN PM */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE END PM */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  52:Src/main.c    **** DAC_HandleTypeDef hdac;
  53:Src/main.c    **** 
  54:Src/main.c    **** SPI_HandleTypeDef hspi5;
  55:Src/main.c    **** 
  56:Src/main.c    **** TIM_HandleTypeDef htim6;
  57:Src/main.c    **** 
  58:Src/main.c    **** UART_HandleTypeDef huart1;
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE BEGIN PV */
  61:Src/main.c    **** uint8_t spi_tx_buffer[3] = {49,50,51};
  62:Src/main.c    **** uint8_t spi_rx_buffer[3];
  63:Src/main.c    **** const float inv_voices = 1.0/VOICES;
  64:Src/main.c    **** volatile struct midi_note_msg current_midi_note_msg = {0,0,0};
  65:Src/main.c    **** volatile uint32_t phase_accumulator[VOICES] = {0};
  66:Src/main.c    **** volatile uint8_t output_val = 0;
  67:Src/main.c    **** volatile uint32_t envelope_index[VOICES] = {0};
  68:Src/main.c    **** volatile float envelope[VOICES] = {0};
  69:Src/main.c    **** volatile uint8_t env_state[VOICES];
  70:Src/main.c    **** volatile uint8_t note_on[88] = {0};
  71:Src/main.c    **** volatile uint8_t note_freq[VOICES] = {0};
  72:Src/main.c    **** 
  73:Src/main.c    **** volatile uint8_t update_value_flag = 0;
  74:Src/main.c    **** volatile uint8_t MIDI_flag = 0;
  75:Src/main.c    **** /* USER CODE END PV */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  78:Src/main.c    **** void SystemClock_Config(void);
  79:Src/main.c    **** static void MX_GPIO_Init(void);
  80:Src/main.c    **** static void MX_SPI5_Init(void);
  81:Src/main.c    **** static void MX_USART1_UART_Init(void);
  82:Src/main.c    **** static void MX_DAC_Init(void);
  83:Src/main.c    **** static void MX_TIM6_Init(void);
  84:Src/main.c    **** /* USER CODE BEGIN PFP */
  85:Src/main.c    **** void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi);
  86:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim);
  87:Src/main.c    **** void UpdateOutputValue(void);
  88:Src/main.c    **** void UpdateEnvelope(void);
  89:Src/main.c    **** void Update_R2R_DAC(void);
ARM GAS  /tmp/cc7mjtlt.s 			page 3


  90:Src/main.c    **** /* USER CODE END PFP */
  91:Src/main.c    **** 
  92:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  93:Src/main.c    **** /* USER CODE BEGIN 0 */
  94:Src/main.c    **** 
  95:Src/main.c    **** /* USER CODE END 0 */
  96:Src/main.c    **** 
  97:Src/main.c    **** /**
  98:Src/main.c    ****   * @brief  The application entry point.
  99:Src/main.c    ****   * @retval int
 100:Src/main.c    ****   */
 101:Src/main.c    **** int main(void)
 102:Src/main.c    **** {
 103:Src/main.c    ****   /* USER CODE BEGIN 1 */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE END 1 */
 106:Src/main.c    ****   
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 111:Src/main.c    ****   HAL_Init();
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE BEGIN Init */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* USER CODE END Init */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* Configure the system clock */
 118:Src/main.c    ****   SystemClock_Config();
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* USER CODE END SysInit */
 123:Src/main.c    **** 
 124:Src/main.c    ****   /* Initialize all configured peripherals */
 125:Src/main.c    ****   MX_GPIO_Init();
 126:Src/main.c    ****   MX_SPI5_Init();
 127:Src/main.c    ****   MX_USART1_UART_Init();
 128:Src/main.c    ****   MX_DAC_Init();
 129:Src/main.c    ****   MX_TIM6_Init();
 130:Src/main.c    ****   /* USER CODE BEGIN 2 */
 131:Src/main.c    ****   init_wavetable();
 132:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim6);
 133:Src/main.c    ****   HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 134:Src/main.c    **** 
 135:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 136:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 137:Src/main.c    ****     note_on[i] = MIDI_NOTE_OFF;
 138:Src/main.c    ****     note_freq[i] = 0;
 139:Src/main.c    ****   }
 140:Src/main.c    **** 
 141:Src/main.c    ****   note_on[0] = MIDI_NOTE_ON;
 142:Src/main.c    ****   note_freq[0] = 48;
 143:Src/main.c    ****   env_state[0] = ATTACK_MODE;
 144:Src/main.c    **** 
 145:Src/main.c    ****   /* USER CODE END 2 */
 146:Src/main.c    **** 
ARM GAS  /tmp/cc7mjtlt.s 			page 4


 147:Src/main.c    ****   /* Infinite loop */
 148:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 149:Src/main.c    ****   while (1)
 150:Src/main.c    ****   {
 151:Src/main.c    ****     Receive_MIDI(&hspi5, spi_rx_buffer);
 152:Src/main.c    **** 
 153:Src/main.c    ****     /*
 154:Src/main.c    ****     if(MIDI_flag) {
 155:Src/main.c    ****       MIDI_flag = 0;
 156:Src/main.c    ****       for(int i = 0; i < VOICES; i++) {
 157:Src/main.c    ****         if(note_on[i] == MIDI_NOTE_OFF) {
 158:Src/main.c    ****           note_on[i] = current_midi_note_msg.command;
 159:Src/main.c    ****           note_freq[i] = current_midi_note_msg.note;
 160:Src/main.c    ****           env_state[i] = ATTACK_MODE;
 161:Src/main.c    ****           break;
 162:Src/main.c    ****         }
 163:Src/main.c    ****       }
 164:Src/main.c    ****     }
 165:Src/main.c    ****     */
 166:Src/main.c    **** 
 167:Src/main.c    ****     if(update_value_flag) {
 168:Src/main.c    ****       //      __disable_irq();
 169:Src/main.c    ****       UpdateEnvelope();
 170:Src/main.c    ****       UpdateOutputValue();
 171:Src/main.c    ****       update_value_flag = 0;
 172:Src/main.c    ****       //      __enable_irq();
 173:Src/main.c    ****     }
 174:Src/main.c    **** 
 175:Src/main.c    ****     //Update_R2R_DAC();
 176:Src/main.c    ****     uint8_t output_val_byte =(uint8_t)(output_val);
 177:Src/main.c    ****     HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_8B_R, output_val_byte);
 178:Src/main.c    **** 
 179:Src/main.c    ****     /* USER CODE END WHILE */
 180:Src/main.c    **** 
 181:Src/main.c    ****     /* USER CODE BEGIN 3 */
 182:Src/main.c    ****   }
 183:Src/main.c    ****   /* USER CODE END 3 */
 184:Src/main.c    **** }
 185:Src/main.c    **** 
 186:Src/main.c    **** /**
 187:Src/main.c    ****   * @brief System Clock Configuration
 188:Src/main.c    ****   * @retval None
 189:Src/main.c    ****   */
 190:Src/main.c    **** void SystemClock_Config(void)
 191:Src/main.c    **** {
 192:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 193:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 194:Src/main.c    **** 
 195:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 196:Src/main.c    ****   */
 197:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 198:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 199:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 200:Src/main.c    ****   */
 201:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 202:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 203:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
ARM GAS  /tmp/cc7mjtlt.s 			page 5


 204:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 205:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 206:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 207:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 80;
 208:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 209:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 210:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 211:Src/main.c    ****   {
 212:Src/main.c    ****     Error_Handler();
 213:Src/main.c    ****   }
 214:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 215:Src/main.c    ****   */
 216:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 217:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 218:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 219:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 220:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 221:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 222:Src/main.c    **** 
 223:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 224:Src/main.c    ****   {
 225:Src/main.c    ****     Error_Handler();
 226:Src/main.c    ****   }
 227:Src/main.c    **** }
 228:Src/main.c    **** 
 229:Src/main.c    **** /**
 230:Src/main.c    ****   * @brief DAC Initialization Function
 231:Src/main.c    ****   * @param None
 232:Src/main.c    ****   * @retval None
 233:Src/main.c    ****   */
 234:Src/main.c    **** static void MX_DAC_Init(void)
 235:Src/main.c    **** {
 236:Src/main.c    **** 
 237:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 0 */
 238:Src/main.c    **** 
 239:Src/main.c    ****   /* USER CODE END DAC_Init 0 */
 240:Src/main.c    **** 
 241:Src/main.c    ****   DAC_ChannelConfTypeDef sConfig = {0};
 242:Src/main.c    **** 
 243:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 1 */
 244:Src/main.c    **** 
 245:Src/main.c    ****   /* USER CODE END DAC_Init 1 */
 246:Src/main.c    ****   /** DAC Initialization 
 247:Src/main.c    ****   */
 248:Src/main.c    ****   hdac.Instance = DAC;
 249:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 250:Src/main.c    ****   {
 251:Src/main.c    ****     Error_Handler();
 252:Src/main.c    ****   }
 253:Src/main.c    ****   /** DAC channel OUT2 config 
 254:Src/main.c    ****   */
 255:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 256:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 257:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 258:Src/main.c    ****   {
 259:Src/main.c    ****     Error_Handler();
 260:Src/main.c    ****   }
ARM GAS  /tmp/cc7mjtlt.s 			page 6


 261:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 2 */
 262:Src/main.c    **** 
 263:Src/main.c    ****   /* USER CODE END DAC_Init 2 */
 264:Src/main.c    **** 
 265:Src/main.c    **** }
 266:Src/main.c    **** 
 267:Src/main.c    **** /**
 268:Src/main.c    ****   * @brief SPI5 Initialization Function
 269:Src/main.c    ****   * @param None
 270:Src/main.c    ****   * @retval None
 271:Src/main.c    ****   */
 272:Src/main.c    **** static void MX_SPI5_Init(void)
 273:Src/main.c    **** {
 274:Src/main.c    **** 
 275:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 0 */
 276:Src/main.c    **** 
 277:Src/main.c    ****   /* USER CODE END SPI5_Init 0 */
 278:Src/main.c    **** 
 279:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 1 */
 280:Src/main.c    **** 
 281:Src/main.c    ****   /* USER CODE END SPI5_Init 1 */
 282:Src/main.c    ****   /* SPI5 parameter configuration*/
 283:Src/main.c    ****   hspi5.Instance = SPI5;
 284:Src/main.c    ****   hspi5.Init.Mode = SPI_MODE_SLAVE;
 285:Src/main.c    ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 286:Src/main.c    ****   hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 287:Src/main.c    ****   hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 288:Src/main.c    ****   hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 289:Src/main.c    ****   hspi5.Init.NSS = SPI_NSS_HARD_INPUT;
 290:Src/main.c    ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 291:Src/main.c    ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 292:Src/main.c    ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 293:Src/main.c    ****   hspi5.Init.CRCPolynomial = 10;
 294:Src/main.c    ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 295:Src/main.c    ****   {
 296:Src/main.c    ****     Error_Handler();
 297:Src/main.c    ****   }
 298:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 2 */
 299:Src/main.c    **** 
 300:Src/main.c    ****   /* USER CODE END SPI5_Init 2 */
 301:Src/main.c    **** 
 302:Src/main.c    **** }
 303:Src/main.c    **** 
 304:Src/main.c    **** /**
 305:Src/main.c    ****   * @brief TIM6 Initialization Function
 306:Src/main.c    ****   * @param None
 307:Src/main.c    ****   * @retval None
 308:Src/main.c    ****   */
 309:Src/main.c    **** static void MX_TIM6_Init(void)
 310:Src/main.c    **** {
 311:Src/main.c    **** 
 312:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 0 */
 313:Src/main.c    **** 
 314:Src/main.c    ****   /* USER CODE END TIM6_Init 0 */
 315:Src/main.c    **** 
 316:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 317:Src/main.c    **** 
ARM GAS  /tmp/cc7mjtlt.s 			page 7


 318:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 1 */
 319:Src/main.c    **** 
 320:Src/main.c    ****   /* USER CODE END TIM6_Init 1 */
 321:Src/main.c    ****   htim6.Instance = TIM6;
 322:Src/main.c    ****   htim6.Init.Prescaler = 0;
 323:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 324:Src/main.c    ****   htim6.Init.Period = 1290;
 325:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 326:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 327:Src/main.c    ****   {
 328:Src/main.c    ****     Error_Handler();
 329:Src/main.c    ****   }
 330:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 331:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 332:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 333:Src/main.c    ****   {
 334:Src/main.c    ****     Error_Handler();
 335:Src/main.c    ****   }
 336:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 2 */
 337:Src/main.c    **** 
 338:Src/main.c    ****   /* USER CODE END TIM6_Init 2 */
 339:Src/main.c    **** 
 340:Src/main.c    **** }
 341:Src/main.c    **** 
 342:Src/main.c    **** /**
 343:Src/main.c    ****   * @brief USART1 Initialization Function
 344:Src/main.c    ****   * @param None
 345:Src/main.c    ****   * @retval None
 346:Src/main.c    ****   */
 347:Src/main.c    **** static void MX_USART1_UART_Init(void)
 348:Src/main.c    **** {
 349:Src/main.c    **** 
 350:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 351:Src/main.c    **** 
 352:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 353:Src/main.c    **** 
 354:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 355:Src/main.c    **** 
 356:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 357:Src/main.c    ****   huart1.Instance = USART1;
 358:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 359:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 360:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 361:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 362:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 363:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 364:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 365:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 366:Src/main.c    ****   {
 367:Src/main.c    ****     Error_Handler();
 368:Src/main.c    ****   }
 369:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 370:Src/main.c    **** 
 371:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 372:Src/main.c    **** 
 373:Src/main.c    **** }
 374:Src/main.c    **** 
ARM GAS  /tmp/cc7mjtlt.s 			page 8


 375:Src/main.c    **** /**
 376:Src/main.c    ****   * @brief GPIO Initialization Function
 377:Src/main.c    ****   * @param None
 378:Src/main.c    ****   * @retval None
 379:Src/main.c    ****   */
 380:Src/main.c    **** static void MX_GPIO_Init(void)
 381:Src/main.c    **** {
  27              		.loc 1 381 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 56
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
  43 0004 8FB0     		sub	sp, sp, #60
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 96
 382:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  46              		.loc 1 382 0
  47 0006 0024     		movs	r4, #0
  48 0008 0994     		str	r4, [sp, #36]
  49 000a 0A94     		str	r4, [sp, #40]
  50 000c 0B94     		str	r4, [sp, #44]
  51 000e 0C94     		str	r4, [sp, #48]
  52 0010 0D94     		str	r4, [sp, #52]
  53              	.LBB2:
 383:Src/main.c    **** 
 384:Src/main.c    ****   /* GPIO Ports Clock Enable */
 385:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  54              		.loc 1 385 0
  55 0012 0194     		str	r4, [sp, #4]
  56 0014 AA4B     		ldr	r3, .L3
  57 0016 1A6B     		ldr	r2, [r3, #48]
  58 0018 42F00402 		orr	r2, r2, #4
  59 001c 1A63     		str	r2, [r3, #48]
  60 001e 1A6B     		ldr	r2, [r3, #48]
  61 0020 02F00402 		and	r2, r2, #4
  62 0024 0192     		str	r2, [sp, #4]
  63 0026 019A     		ldr	r2, [sp, #4]
  64              	.LBE2:
  65              	.LBB3:
 386:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  66              		.loc 1 386 0
  67 0028 0294     		str	r4, [sp, #8]
  68 002a 1A6B     		ldr	r2, [r3, #48]
  69 002c 42F02002 		orr	r2, r2, #32
  70 0030 1A63     		str	r2, [r3, #48]
  71 0032 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/cc7mjtlt.s 			page 9


  72 0034 02F02002 		and	r2, r2, #32
  73 0038 0292     		str	r2, [sp, #8]
  74 003a 029A     		ldr	r2, [sp, #8]
  75              	.LBE3:
  76              	.LBB4:
 387:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  77              		.loc 1 387 0
  78 003c 0394     		str	r4, [sp, #12]
  79 003e 1A6B     		ldr	r2, [r3, #48]
  80 0040 42F08002 		orr	r2, r2, #128
  81 0044 1A63     		str	r2, [r3, #48]
  82 0046 1A6B     		ldr	r2, [r3, #48]
  83 0048 02F08002 		and	r2, r2, #128
  84 004c 0392     		str	r2, [sp, #12]
  85 004e 039A     		ldr	r2, [sp, #12]
  86              	.LBE4:
  87              	.LBB5:
 388:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  88              		.loc 1 388 0
  89 0050 0494     		str	r4, [sp, #16]
  90 0052 1A6B     		ldr	r2, [r3, #48]
  91 0054 42F00102 		orr	r2, r2, #1
  92 0058 1A63     		str	r2, [r3, #48]
  93 005a 1A6B     		ldr	r2, [r3, #48]
  94 005c 02F00102 		and	r2, r2, #1
  95 0060 0492     		str	r2, [sp, #16]
  96 0062 049A     		ldr	r2, [sp, #16]
  97              	.LBE5:
  98              	.LBB6:
 389:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  99              		.loc 1 389 0
 100 0064 0594     		str	r4, [sp, #20]
 101 0066 1A6B     		ldr	r2, [r3, #48]
 102 0068 42F00202 		orr	r2, r2, #2
 103 006c 1A63     		str	r2, [r3, #48]
 104 006e 1A6B     		ldr	r2, [r3, #48]
 105 0070 02F00202 		and	r2, r2, #2
 106 0074 0592     		str	r2, [sp, #20]
 107 0076 059A     		ldr	r2, [sp, #20]
 108              	.LBE6:
 109              	.LBB7:
 390:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 110              		.loc 1 390 0
 111 0078 0694     		str	r4, [sp, #24]
 112 007a 1A6B     		ldr	r2, [r3, #48]
 113 007c 42F04002 		orr	r2, r2, #64
 114 0080 1A63     		str	r2, [r3, #48]
 115 0082 1A6B     		ldr	r2, [r3, #48]
 116 0084 02F04002 		and	r2, r2, #64
 117 0088 0692     		str	r2, [sp, #24]
 118 008a 069A     		ldr	r2, [sp, #24]
 119              	.LBE7:
 120              	.LBB8:
 391:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 121              		.loc 1 391 0
 122 008c 0794     		str	r4, [sp, #28]
 123 008e 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/cc7mjtlt.s 			page 10


 124 0090 42F01002 		orr	r2, r2, #16
 125 0094 1A63     		str	r2, [r3, #48]
 126 0096 1A6B     		ldr	r2, [r3, #48]
 127 0098 02F01002 		and	r2, r2, #16
 128 009c 0792     		str	r2, [sp, #28]
 129 009e 079A     		ldr	r2, [sp, #28]
 130              	.LBE8:
 131              	.LBB9:
 392:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 132              		.loc 1 392 0
 133 00a0 0894     		str	r4, [sp, #32]
 134 00a2 1A6B     		ldr	r2, [r3, #48]
 135 00a4 42F00802 		orr	r2, r2, #8
 136 00a8 1A63     		str	r2, [r3, #48]
 137 00aa 1B6B     		ldr	r3, [r3, #48]
 138 00ac 03F00803 		and	r3, r3, #8
 139 00b0 0893     		str	r3, [sp, #32]
 140 00b2 089B     		ldr	r3, [sp, #32]
 141              	.LBE9:
 393:Src/main.c    **** 
 394:Src/main.c    ****   /*Configure GPIO pin Output Level */
 395:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin, GPIO_PIN_RESET);
 142              		.loc 1 395 0
 143 00b4 2246     		mov	r2, r4
 144 00b6 1621     		movs	r1, #22
 145 00b8 8248     		ldr	r0, .L3+4
 146 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 147              	.LVL0:
 396:Src/main.c    **** 
 397:Src/main.c    ****   /*Configure GPIO pin Output Level */
 398:Src/main.c    ****   HAL_GPIO_WritePin(ACP_RST_GPIO_Port, ACP_RST_Pin, GPIO_PIN_RESET);
 148              		.loc 1 398 0
 149 00be 2246     		mov	r2, r4
 150 00c0 8021     		movs	r1, #128
 151 00c2 8148     		ldr	r0, .L3+8
 152 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 153              	.LVL1:
 399:Src/main.c    **** 
 400:Src/main.c    ****   /*Configure GPIO pin Output Level */
 401:Src/main.c    ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15, GPIO_PIN_RESET);
 154              		.loc 1 401 0
 155 00c8 DFF810A2 		ldr	r10, .L3+28
 156 00cc 2246     		mov	r2, r4
 157 00ce 4FF46041 		mov	r1, #57344
 158 00d2 5046     		mov	r0, r10
 159 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 160              	.LVL2:
 402:Src/main.c    **** 
 403:Src/main.c    ****   /*Configure GPIO pin Output Level */
 404:Src/main.c    ****   HAL_GPIO_WritePin(GPIOG, GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD4_Pin, GPIO_PIN_RESET);
 161              		.loc 1 404 0
 162 00d8 2246     		mov	r2, r4
 163 00da 46F20301 		movw	r1, #24579
 164 00de 7B48     		ldr	r0, .L3+12
 165 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 166              	.LVL3:
 405:Src/main.c    **** 
ARM GAS  /tmp/cc7mjtlt.s 			page 11


 406:Src/main.c    ****   /*Configure GPIO pin Output Level */
 407:Src/main.c    ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 167              		.loc 1 407 0
 168 00e4 2246     		mov	r2, r4
 169 00e6 4FF68071 		movw	r1, #65408
 170 00ea 7948     		ldr	r0, .L3+16
 171 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 172              	.LVL4:
 408:Src/main.c    ****                           |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
 409:Src/main.c    ****                           |GPIO_PIN_15, GPIO_PIN_RESET);
 410:Src/main.c    **** 
 411:Src/main.c    ****   /*Configure GPIO pin Output Level */
 412:Src/main.c    ****   HAL_GPIO_WritePin(GPIOD, RDX_Pin|WRX_DCX_Pin, GPIO_PIN_RESET);
 173              		.loc 1 412 0
 174 00f0 2246     		mov	r2, r4
 175 00f2 4FF44051 		mov	r1, #12288
 176 00f6 7748     		ldr	r0, .L3+20
 177 00f8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 178              	.LVL5:
 413:Src/main.c    **** 
 414:Src/main.c    ****   /*Configure GPIO pins : A0_Pin A1_Pin A2_Pin A3_Pin 
 415:Src/main.c    ****                            A4_Pin A5_Pin SDNRAS_Pin A6_Pin */
 416:Src/main.c    ****   GPIO_InitStruct.Pin = A0_Pin|A1_Pin|A2_Pin|A3_Pin 
 179              		.loc 1 416 0
 180 00fc 41F63F03 		movw	r3, #6207
 181 0100 0993     		str	r3, [sp, #36]
 417:Src/main.c    ****                           |A4_Pin|A5_Pin|SDNRAS_Pin|A6_Pin;
 418:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 182              		.loc 1 418 0
 183 0102 0225     		movs	r5, #2
 184 0104 0A95     		str	r5, [sp, #40]
 419:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 185              		.loc 1 419 0
 186 0106 0B94     		str	r4, [sp, #44]
 420:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 187              		.loc 1 420 0
 188 0108 0327     		movs	r7, #3
 189 010a 0C97     		str	r7, [sp, #48]
 421:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 190              		.loc 1 421 0
 191 010c 4FF00C08 		mov	r8, #12
 192 0110 CDF83480 		str	r8, [sp, #52]
 422:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 193              		.loc 1 422 0
 194 0114 09A9     		add	r1, sp, #36
 195 0116 5046     		mov	r0, r10
 196 0118 FFF7FEFF 		bl	HAL_GPIO_Init
 197              	.LVL6:
 423:Src/main.c    **** 
 424:Src/main.c    ****   /*Configure GPIO pin : ENABLE_Pin */
 425:Src/main.c    ****   GPIO_InitStruct.Pin = ENABLE_Pin;
 198              		.loc 1 425 0
 199 011c 4FF48063 		mov	r3, #1024
 200 0120 0993     		str	r3, [sp, #36]
 426:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 201              		.loc 1 426 0
 202 0122 0A95     		str	r5, [sp, #40]
ARM GAS  /tmp/cc7mjtlt.s 			page 12


 427:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 203              		.loc 1 427 0
 204 0124 0B94     		str	r4, [sp, #44]
 428:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 205              		.loc 1 428 0
 206 0126 0C94     		str	r4, [sp, #48]
 429:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 207              		.loc 1 429 0
 208 0128 4FF00E09 		mov	r9, #14
 209 012c CDF83490 		str	r9, [sp, #52]
 430:Src/main.c    ****   HAL_GPIO_Init(ENABLE_GPIO_Port, &GPIO_InitStruct);
 210              		.loc 1 430 0
 211 0130 09A9     		add	r1, sp, #36
 212 0132 5046     		mov	r0, r10
 213 0134 FFF7FEFF 		bl	HAL_GPIO_Init
 214              	.LVL7:
 431:Src/main.c    **** 
 432:Src/main.c    ****   /*Configure GPIO pin : SDNWE_Pin */
 433:Src/main.c    ****   GPIO_InitStruct.Pin = SDNWE_Pin;
 215              		.loc 1 433 0
 216 0138 0126     		movs	r6, #1
 217 013a 0996     		str	r6, [sp, #36]
 434:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 218              		.loc 1 434 0
 219 013c 0A95     		str	r5, [sp, #40]
 435:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 220              		.loc 1 435 0
 221 013e 0B94     		str	r4, [sp, #44]
 436:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 222              		.loc 1 436 0
 223 0140 0C97     		str	r7, [sp, #48]
 437:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 224              		.loc 1 437 0
 225 0142 CDF83480 		str	r8, [sp, #52]
 438:Src/main.c    ****   HAL_GPIO_Init(SDNWE_GPIO_Port, &GPIO_InitStruct);
 226              		.loc 1 438 0
 227 0146 09A9     		add	r1, sp, #36
 228 0148 5E48     		ldr	r0, .L3+4
 229 014a FFF7FEFF 		bl	HAL_GPIO_Init
 230              	.LVL8:
 439:Src/main.c    **** 
 440:Src/main.c    ****   /*Configure GPIO pins : NCS_MEMS_SPI_Pin CSX_Pin OTG_FS_PSO_Pin */
 441:Src/main.c    ****   GPIO_InitStruct.Pin = NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin;
 231              		.loc 1 441 0
 232 014e 1623     		movs	r3, #22
 233 0150 0993     		str	r3, [sp, #36]
 442:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 234              		.loc 1 442 0
 235 0152 0A96     		str	r6, [sp, #40]
 443:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 236              		.loc 1 443 0
 237 0154 0B94     		str	r4, [sp, #44]
 444:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 238              		.loc 1 444 0
 239 0156 0C94     		str	r4, [sp, #48]
 445:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 240              		.loc 1 445 0
ARM GAS  /tmp/cc7mjtlt.s 			page 13


 241 0158 09A9     		add	r1, sp, #36
 242 015a 5A48     		ldr	r0, .L3+4
 243 015c FFF7FEFF 		bl	HAL_GPIO_Init
 244              	.LVL9:
 446:Src/main.c    **** 
 447:Src/main.c    ****   /*Configure GPIO pins : B1_Pin MEMS_INT1_Pin MEMS_INT2_Pin TP_INT1_Pin */
 448:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin|MEMS_INT1_Pin|MEMS_INT2_Pin|TP_INT1_Pin;
 245              		.loc 1 448 0
 246 0160 48F20703 		movw	r3, #32775
 247 0164 0993     		str	r3, [sp, #36]
 449:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 248              		.loc 1 449 0
 249 0166 DFF878B1 		ldr	fp, .L3+32
 250 016a CDF828B0 		str	fp, [sp, #40]
 450:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 251              		.loc 1 450 0
 252 016e 0B94     		str	r4, [sp, #44]
 451:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 253              		.loc 1 451 0
 254 0170 09A9     		add	r1, sp, #36
 255 0172 5548     		ldr	r0, .L3+8
 256 0174 FFF7FEFF 		bl	HAL_GPIO_Init
 257              	.LVL10:
 452:Src/main.c    **** 
 453:Src/main.c    ****   /*Configure GPIO pins : B5_Pin VSYNC_Pin G2_Pin R4_Pin 
 454:Src/main.c    ****                            R5_Pin */
 455:Src/main.c    ****   GPIO_InitStruct.Pin = B5_Pin|VSYNC_Pin|G2_Pin|R4_Pin 
 258              		.loc 1 455 0
 259 0178 41F65803 		movw	r3, #6232
 260 017c 0993     		str	r3, [sp, #36]
 456:Src/main.c    ****                           |R5_Pin;
 457:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 261              		.loc 1 457 0
 262 017e 0A95     		str	r5, [sp, #40]
 458:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 263              		.loc 1 458 0
 264 0180 0B94     		str	r4, [sp, #44]
 459:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 265              		.loc 1 459 0
 266 0182 0C94     		str	r4, [sp, #48]
 460:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 267              		.loc 1 460 0
 268 0184 CDF83490 		str	r9, [sp, #52]
 461:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 269              		.loc 1 461 0
 270 0188 09A9     		add	r1, sp, #36
 271 018a 4F48     		ldr	r0, .L3+8
 272 018c FFF7FEFF 		bl	HAL_GPIO_Init
 273              	.LVL11:
 462:Src/main.c    **** 
 463:Src/main.c    ****   /*Configure GPIO pin : ACP_RST_Pin */
 464:Src/main.c    ****   GPIO_InitStruct.Pin = ACP_RST_Pin;
 274              		.loc 1 464 0
 275 0190 8023     		movs	r3, #128
 276 0192 0993     		str	r3, [sp, #36]
 465:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 277              		.loc 1 465 0
ARM GAS  /tmp/cc7mjtlt.s 			page 14


 278 0194 0A96     		str	r6, [sp, #40]
 466:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 279              		.loc 1 466 0
 280 0196 0B94     		str	r4, [sp, #44]
 467:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 281              		.loc 1 467 0
 282 0198 0C94     		str	r4, [sp, #48]
 468:Src/main.c    ****   HAL_GPIO_Init(ACP_RST_GPIO_Port, &GPIO_InitStruct);
 283              		.loc 1 468 0
 284 019a 09A9     		add	r1, sp, #36
 285 019c 4A48     		ldr	r0, .L3+8
 286 019e FFF7FEFF 		bl	HAL_GPIO_Init
 287              	.LVL12:
 469:Src/main.c    **** 
 470:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_OC_Pin */
 471:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_OC_Pin;
 288              		.loc 1 471 0
 289 01a2 2023     		movs	r3, #32
 290 01a4 0993     		str	r3, [sp, #36]
 472:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 291              		.loc 1 472 0
 292 01a6 CDF828B0 		str	fp, [sp, #40]
 473:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 293              		.loc 1 473 0
 294 01aa 0B94     		str	r4, [sp, #44]
 474:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_OC_GPIO_Port, &GPIO_InitStruct);
 295              		.loc 1 474 0
 296 01ac 09A9     		add	r1, sp, #36
 297 01ae 4548     		ldr	r0, .L3+4
 298 01b0 FFF7FEFF 		bl	HAL_GPIO_Init
 299              	.LVL13:
 475:Src/main.c    **** 
 476:Src/main.c    ****   /*Configure GPIO pins : R3_Pin R6_Pin */
 477:Src/main.c    ****   GPIO_InitStruct.Pin = R3_Pin|R6_Pin;
 300              		.loc 1 477 0
 301 01b4 0997     		str	r7, [sp, #36]
 478:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 302              		.loc 1 478 0
 303 01b6 0A95     		str	r5, [sp, #40]
 479:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 304              		.loc 1 479 0
 305 01b8 0B94     		str	r4, [sp, #44]
 480:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 306              		.loc 1 480 0
 307 01ba 0C94     		str	r4, [sp, #48]
 481:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 308              		.loc 1 481 0
 309 01bc 0923     		movs	r3, #9
 310 01be 0D93     		str	r3, [sp, #52]
 482:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 311              		.loc 1 482 0
 312 01c0 09A9     		add	r1, sp, #36
 313 01c2 4548     		ldr	r0, .L3+24
 314 01c4 FFF7FEFF 		bl	HAL_GPIO_Init
 315              	.LVL14:
 483:Src/main.c    **** 
 484:Src/main.c    ****   /*Configure GPIO pin : BOOT1_Pin */
ARM GAS  /tmp/cc7mjtlt.s 			page 15


 485:Src/main.c    ****   GPIO_InitStruct.Pin = BOOT1_Pin;
 316              		.loc 1 485 0
 317 01c8 4FF0040B 		mov	fp, #4
 318 01cc CDF824B0 		str	fp, [sp, #36]
 486:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 319              		.loc 1 486 0
 320 01d0 0A94     		str	r4, [sp, #40]
 487:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 321              		.loc 1 487 0
 322 01d2 0B94     		str	r4, [sp, #44]
 488:Src/main.c    ****   HAL_GPIO_Init(BOOT1_GPIO_Port, &GPIO_InitStruct);
 323              		.loc 1 488 0
 324 01d4 09A9     		add	r1, sp, #36
 325 01d6 4048     		ldr	r0, .L3+24
 326 01d8 FFF7FEFF 		bl	HAL_GPIO_Init
 327              	.LVL15:
 489:Src/main.c    **** 
 490:Src/main.c    ****   /*Configure GPIO pins : PF13 PF14 PF15 */
 491:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 328              		.loc 1 491 0
 329 01dc 4FF46043 		mov	r3, #57344
 330 01e0 0993     		str	r3, [sp, #36]
 492:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 331              		.loc 1 492 0
 332 01e2 0A96     		str	r6, [sp, #40]
 493:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 333              		.loc 1 493 0
 334 01e4 0B94     		str	r4, [sp, #44]
 494:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 335              		.loc 1 494 0
 336 01e6 0C94     		str	r4, [sp, #48]
 495:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 337              		.loc 1 495 0
 338 01e8 09A9     		add	r1, sp, #36
 339 01ea 5046     		mov	r0, r10
 340 01ec FFF7FEFF 		bl	HAL_GPIO_Init
 341              	.LVL16:
 496:Src/main.c    **** 
 497:Src/main.c    ****   /*Configure GPIO pins : PG0 PG1 LD3_Pin LD4_Pin */
 498:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD4_Pin;
 342              		.loc 1 498 0
 343 01f0 46F20303 		movw	r3, #24579
 344 01f4 0993     		str	r3, [sp, #36]
 499:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 345              		.loc 1 499 0
 346 01f6 0A96     		str	r6, [sp, #40]
 500:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 347              		.loc 1 500 0
 348 01f8 0B94     		str	r4, [sp, #44]
 501:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 349              		.loc 1 501 0
 350 01fa 0C94     		str	r4, [sp, #48]
 502:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 351              		.loc 1 502 0
 352 01fc 09A9     		add	r1, sp, #36
 353 01fe 3348     		ldr	r0, .L3+12
 354 0200 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/cc7mjtlt.s 			page 16


 355              	.LVL17:
 503:Src/main.c    **** 
 504:Src/main.c    ****   /*Configure GPIO pins : PE7 PE8 PE9 PE10 
 505:Src/main.c    ****                            PE11 PE12 PE13 PE14 
 506:Src/main.c    ****                            PE15 */
 507:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 356              		.loc 1 507 0
 357 0204 4FF68073 		movw	r3, #65408
 358 0208 0993     		str	r3, [sp, #36]
 508:Src/main.c    ****                           |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
 509:Src/main.c    ****                           |GPIO_PIN_15;
 510:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 359              		.loc 1 510 0
 360 020a 0A96     		str	r6, [sp, #40]
 511:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 361              		.loc 1 511 0
 362 020c 0B94     		str	r4, [sp, #44]
 512:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 363              		.loc 1 512 0
 364 020e 0C94     		str	r4, [sp, #48]
 513:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 365              		.loc 1 513 0
 366 0210 09A9     		add	r1, sp, #36
 367 0212 2F48     		ldr	r0, .L3+16
 368 0214 FFF7FEFF 		bl	HAL_GPIO_Init
 369              	.LVL18:
 514:Src/main.c    **** 
 515:Src/main.c    ****   /*Configure GPIO pins : G4_Pin G5_Pin B6_Pin B7_Pin */
 516:Src/main.c    ****   GPIO_InitStruct.Pin = G4_Pin|G5_Pin|B6_Pin|B7_Pin;
 370              		.loc 1 516 0
 371 0218 4FF47063 		mov	r3, #3840
 372 021c 0993     		str	r3, [sp, #36]
 517:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 373              		.loc 1 517 0
 374 021e 0A95     		str	r5, [sp, #40]
 518:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 375              		.loc 1 518 0
 376 0220 0B94     		str	r4, [sp, #44]
 519:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 377              		.loc 1 519 0
 378 0222 0C94     		str	r4, [sp, #48]
 520:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 379              		.loc 1 520 0
 380 0224 CDF83490 		str	r9, [sp, #52]
 521:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 381              		.loc 1 521 0
 382 0228 09A9     		add	r1, sp, #36
 383 022a 2B48     		ldr	r0, .L3+24
 384 022c FFF7FEFF 		bl	HAL_GPIO_Init
 385              	.LVL19:
 522:Src/main.c    **** 
 523:Src/main.c    ****   /*Configure GPIO pins : OTG_HS_ID_Pin OTG_HS_DM_Pin OTG_HS_DP_Pin */
 524:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_HS_ID_Pin|OTG_HS_DM_Pin|OTG_HS_DP_Pin;
 386              		.loc 1 524 0
 387 0230 4FF45043 		mov	r3, #53248
 388 0234 0993     		str	r3, [sp, #36]
 525:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  /tmp/cc7mjtlt.s 			page 17


 389              		.loc 1 525 0
 390 0236 0A95     		str	r5, [sp, #40]
 526:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 391              		.loc 1 526 0
 392 0238 0B94     		str	r4, [sp, #44]
 527:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 393              		.loc 1 527 0
 394 023a 0C94     		str	r4, [sp, #48]
 528:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;
 395              		.loc 1 528 0
 396 023c CDF83480 		str	r8, [sp, #52]
 529:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 397              		.loc 1 529 0
 398 0240 09A9     		add	r1, sp, #36
 399 0242 2548     		ldr	r0, .L3+24
 400 0244 FFF7FEFF 		bl	HAL_GPIO_Init
 401              	.LVL20:
 530:Src/main.c    **** 
 531:Src/main.c    ****   /*Configure GPIO pin : VBUS_HS_Pin */
 532:Src/main.c    ****   GPIO_InitStruct.Pin = VBUS_HS_Pin;
 402              		.loc 1 532 0
 403 0248 4FF40053 		mov	r3, #8192
 404 024c 0993     		str	r3, [sp, #36]
 533:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 405              		.loc 1 533 0
 406 024e 0A94     		str	r4, [sp, #40]
 534:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 407              		.loc 1 534 0
 408 0250 0B94     		str	r4, [sp, #44]
 535:Src/main.c    ****   HAL_GPIO_Init(VBUS_HS_GPIO_Port, &GPIO_InitStruct);
 409              		.loc 1 535 0
 410 0252 09A9     		add	r1, sp, #36
 411 0254 2048     		ldr	r0, .L3+24
 412 0256 FFF7FEFF 		bl	HAL_GPIO_Init
 413              	.LVL21:
 536:Src/main.c    **** 
 537:Src/main.c    ****   /*Configure GPIO pins : D13_Pin D14_Pin D15_Pin D0_Pin 
 538:Src/main.c    ****                            D1_Pin D2_Pin D3_Pin */
 539:Src/main.c    ****   GPIO_InitStruct.Pin = D13_Pin|D14_Pin|D15_Pin|D0_Pin 
 414              		.loc 1 539 0
 415 025a 4CF20373 		movw	r3, #50947
 416 025e 0993     		str	r3, [sp, #36]
 540:Src/main.c    ****                           |D1_Pin|D2_Pin|D3_Pin;
 541:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 417              		.loc 1 541 0
 418 0260 0A95     		str	r5, [sp, #40]
 542:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 419              		.loc 1 542 0
 420 0262 0B94     		str	r4, [sp, #44]
 543:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 421              		.loc 1 543 0
 422 0264 0C97     		str	r7, [sp, #48]
 544:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 423              		.loc 1 544 0
 424 0266 CDF83480 		str	r8, [sp, #52]
 545:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 425              		.loc 1 545 0
ARM GAS  /tmp/cc7mjtlt.s 			page 18


 426 026a 09A9     		add	r1, sp, #36
 427 026c 1948     		ldr	r0, .L3+20
 428 026e FFF7FEFF 		bl	HAL_GPIO_Init
 429              	.LVL22:
 546:Src/main.c    **** 
 547:Src/main.c    ****   /*Configure GPIO pin : TE_Pin */
 548:Src/main.c    ****   GPIO_InitStruct.Pin = TE_Pin;
 430              		.loc 1 548 0
 431 0272 4FF40063 		mov	r3, #2048
 432 0276 0993     		str	r3, [sp, #36]
 549:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 433              		.loc 1 549 0
 434 0278 0A94     		str	r4, [sp, #40]
 550:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 435              		.loc 1 550 0
 436 027a 0B94     		str	r4, [sp, #44]
 551:Src/main.c    ****   HAL_GPIO_Init(TE_GPIO_Port, &GPIO_InitStruct);
 437              		.loc 1 551 0
 438 027c 09A9     		add	r1, sp, #36
 439 027e 1548     		ldr	r0, .L3+20
 440 0280 FFF7FEFF 		bl	HAL_GPIO_Init
 441              	.LVL23:
 552:Src/main.c    **** 
 553:Src/main.c    ****   /*Configure GPIO pins : RDX_Pin WRX_DCX_Pin */
 554:Src/main.c    ****   GPIO_InitStruct.Pin = RDX_Pin|WRX_DCX_Pin;
 442              		.loc 1 554 0
 443 0284 4FF44053 		mov	r3, #12288
 444 0288 0993     		str	r3, [sp, #36]
 555:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 445              		.loc 1 555 0
 446 028a 0A96     		str	r6, [sp, #40]
 556:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 447              		.loc 1 556 0
 448 028c 0B94     		str	r4, [sp, #44]
 557:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 449              		.loc 1 557 0
 450 028e 0C94     		str	r4, [sp, #48]
 558:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 451              		.loc 1 558 0
 452 0290 09A9     		add	r1, sp, #36
 453 0292 1048     		ldr	r0, .L3+20
 454 0294 FFF7FEFF 		bl	HAL_GPIO_Init
 455              	.LVL24:
 559:Src/main.c    **** 
 560:Src/main.c    ****   /*Configure GPIO pins : BA0_Pin BA1_Pin SDCLK_Pin SDNCAS_Pin */
 561:Src/main.c    ****   GPIO_InitStruct.Pin = BA0_Pin|BA1_Pin|SDCLK_Pin|SDNCAS_Pin;
 456              		.loc 1 561 0
 457 0298 48F23013 		movw	r3, #33072
 458 029c 0993     		str	r3, [sp, #36]
 562:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 459              		.loc 1 562 0
 460 029e 0A95     		str	r5, [sp, #40]
 563:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 461              		.loc 1 563 0
 462 02a0 0B94     		str	r4, [sp, #44]
 564:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 463              		.loc 1 564 0
ARM GAS  /tmp/cc7mjtlt.s 			page 19


 464 02a2 0C97     		str	r7, [sp, #48]
 565:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 465              		.loc 1 565 0
 466 02a4 CDF83480 		str	r8, [sp, #52]
 566:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 467              		.loc 1 566 0
 468 02a8 09A9     		add	r1, sp, #36
 469 02aa 0848     		ldr	r0, .L3+12
 470 02ac FFF7FEFF 		bl	HAL_GPIO_Init
 471              	.LVL25:
 567:Src/main.c    **** 
 568:Src/main.c    ****   /*Configure GPIO pins : R7_Pin DOTCLK_Pin B3_Pin */
 569:Src/main.c    ****   GPIO_InitStruct.Pin = R7_Pin|DOTCLK_Pin|B3_Pin;
 472              		.loc 1 569 0
 473 02b0 4FF40C63 		mov	r3, #2240
 474 02b4 0993     		str	r3, [sp, #36]
 570:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 475              		.loc 1 570 0
 476 02b6 0A95     		str	r5, [sp, #40]
 571:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 477              		.loc 1 571 0
 478 02b8 0B94     		str	r4, [sp, #44]
 572:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 479              		.loc 1 572 0
 480 02ba 0C94     		str	r4, [sp, #48]
 481 02bc 12E0     		b	.L4
 482              	.L5:
 483 02be 00BF     		.align	2
 484              	.L3:
 485 02c0 00380240 		.word	1073887232
 486 02c4 00080240 		.word	1073874944
 487 02c8 00000240 		.word	1073872896
 488 02cc 00180240 		.word	1073879040
 489 02d0 00100240 		.word	1073876992
 490 02d4 000C0240 		.word	1073875968
 491 02d8 00040240 		.word	1073873920
 492 02dc 00140240 		.word	1073878016
 493 02e0 00001210 		.word	269615104
 494              	.L4:
 573:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 495              		.loc 1 573 0
 496 02e4 CDF83490 		str	r9, [sp, #52]
 574:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 497              		.loc 1 574 0
 498 02e8 09A9     		add	r1, sp, #36
 499 02ea 2D48     		ldr	r0, .L6
 500 02ec FFF7FEFF 		bl	HAL_GPIO_Init
 501              	.LVL26:
 575:Src/main.c    **** 
 576:Src/main.c    ****   /*Configure GPIO pins : HSYNC_Pin G6_Pin R2_Pin */
 577:Src/main.c    ****   GPIO_InitStruct.Pin = HSYNC_Pin|G6_Pin|R2_Pin;
 502              		.loc 1 577 0
 503 02f0 4FF49863 		mov	r3, #1216
 504 02f4 0993     		str	r3, [sp, #36]
 578:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 505              		.loc 1 578 0
 506 02f6 0A95     		str	r5, [sp, #40]
ARM GAS  /tmp/cc7mjtlt.s 			page 20


 579:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 507              		.loc 1 579 0
 508 02f8 0B94     		str	r4, [sp, #44]
 580:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 509              		.loc 1 580 0
 510 02fa 0C94     		str	r4, [sp, #48]
 581:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 511              		.loc 1 581 0
 512 02fc CDF83490 		str	r9, [sp, #52]
 582:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 513              		.loc 1 582 0
 514 0300 09A9     		add	r1, sp, #36
 515 0302 2848     		ldr	r0, .L6+4
 516 0304 FFF7FEFF 		bl	HAL_GPIO_Init
 517              	.LVL27:
 583:Src/main.c    **** 
 584:Src/main.c    ****   /*Configure GPIO pin : I2C3_SDA_Pin */
 585:Src/main.c    ****   GPIO_InitStruct.Pin = I2C3_SDA_Pin;
 518              		.loc 1 585 0
 519 0308 4FF40073 		mov	r3, #512
 520 030c 0993     		str	r3, [sp, #36]
 586:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 521              		.loc 1 586 0
 522 030e 4FF0120A 		mov	r10, #18
 523 0312 CDF828A0 		str	r10, [sp, #40]
 587:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 524              		.loc 1 587 0
 525 0316 0B96     		str	r6, [sp, #44]
 588:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 526              		.loc 1 588 0
 527 0318 0C94     		str	r4, [sp, #48]
 589:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 528              		.loc 1 589 0
 529 031a CDF834B0 		str	fp, [sp, #52]
 590:Src/main.c    ****   HAL_GPIO_Init(I2C3_SDA_GPIO_Port, &GPIO_InitStruct);
 530              		.loc 1 590 0
 531 031e 09A9     		add	r1, sp, #36
 532 0320 2048     		ldr	r0, .L6+4
 533 0322 FFF7FEFF 		bl	HAL_GPIO_Init
 534              	.LVL28:
 591:Src/main.c    **** 
 592:Src/main.c    ****   /*Configure GPIO pin : I2C3_SCL_Pin */
 593:Src/main.c    ****   GPIO_InitStruct.Pin = I2C3_SCL_Pin;
 535              		.loc 1 593 0
 536 0326 4FF48073 		mov	r3, #256
 537 032a 0993     		str	r3, [sp, #36]
 594:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 538              		.loc 1 594 0
 539 032c CDF828A0 		str	r10, [sp, #40]
 595:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 540              		.loc 1 595 0
 541 0330 0B96     		str	r6, [sp, #44]
 596:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 542              		.loc 1 596 0
 543 0332 0C94     		str	r4, [sp, #48]
 597:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 544              		.loc 1 597 0
ARM GAS  /tmp/cc7mjtlt.s 			page 21


 545 0334 CDF834B0 		str	fp, [sp, #52]
 598:Src/main.c    ****   HAL_GPIO_Init(I2C3_SCL_GPIO_Port, &GPIO_InitStruct);
 546              		.loc 1 598 0
 547 0338 09A9     		add	r1, sp, #36
 548 033a 1B48     		ldr	r0, .L6+8
 549 033c FFF7FEFF 		bl	HAL_GPIO_Init
 550              	.LVL29:
 599:Src/main.c    **** 
 600:Src/main.c    ****   /*Configure GPIO pins : G7_Pin B2_Pin */
 601:Src/main.c    ****   GPIO_InitStruct.Pin = G7_Pin|B2_Pin;
 551              		.loc 1 601 0
 552 0340 4823     		movs	r3, #72
 553 0342 0993     		str	r3, [sp, #36]
 602:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 554              		.loc 1 602 0
 555 0344 0A95     		str	r5, [sp, #40]
 603:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 556              		.loc 1 603 0
 557 0346 0B94     		str	r4, [sp, #44]
 604:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 558              		.loc 1 604 0
 559 0348 0C94     		str	r4, [sp, #48]
 605:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 560              		.loc 1 605 0
 561 034a CDF83490 		str	r9, [sp, #52]
 606:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 562              		.loc 1 606 0
 563 034e 09A9     		add	r1, sp, #36
 564 0350 1648     		ldr	r0, .L6+12
 565 0352 FFF7FEFF 		bl	HAL_GPIO_Init
 566              	.LVL30:
 607:Src/main.c    **** 
 608:Src/main.c    ****   /*Configure GPIO pins : G3_Pin B4_Pin */
 609:Src/main.c    ****   GPIO_InitStruct.Pin = G3_Pin|B4_Pin;
 567              		.loc 1 609 0
 568 0356 4FF4A053 		mov	r3, #5120
 569 035a 0993     		str	r3, [sp, #36]
 610:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 570              		.loc 1 610 0
 571 035c 0A95     		str	r5, [sp, #40]
 611:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 572              		.loc 1 611 0
 573 035e 0B94     		str	r4, [sp, #44]
 612:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 574              		.loc 1 612 0
 575 0360 0C94     		str	r4, [sp, #48]
 613:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 576              		.loc 1 613 0
 577 0362 0923     		movs	r3, #9
 578 0364 0D93     		str	r3, [sp, #52]
 614:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 579              		.loc 1 614 0
 580 0366 09A9     		add	r1, sp, #36
 581 0368 0D48     		ldr	r0, .L6
 582 036a FFF7FEFF 		bl	HAL_GPIO_Init
 583              	.LVL31:
 615:Src/main.c    **** 
ARM GAS  /tmp/cc7mjtlt.s 			page 22


 616:Src/main.c    ****   /*Configure GPIO pins : SDCKE1_Pin SDNE1_Pin */
 617:Src/main.c    ****   GPIO_InitStruct.Pin = SDCKE1_Pin|SDNE1_Pin;
 584              		.loc 1 617 0
 585 036e 6023     		movs	r3, #96
 586 0370 0993     		str	r3, [sp, #36]
 618:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 587              		.loc 1 618 0
 588 0372 0A95     		str	r5, [sp, #40]
 619:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 589              		.loc 1 619 0
 590 0374 0B94     		str	r4, [sp, #44]
 620:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 591              		.loc 1 620 0
 592 0376 0C97     		str	r7, [sp, #48]
 621:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 593              		.loc 1 621 0
 594 0378 CDF83480 		str	r8, [sp, #52]
 622:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 595              		.loc 1 622 0
 596 037c 09A9     		add	r1, sp, #36
 597 037e 0C48     		ldr	r0, .L6+16
 598 0380 FFF7FEFF 		bl	HAL_GPIO_Init
 599              	.LVL32:
 623:Src/main.c    **** 
 624:Src/main.c    ****   /*Configure GPIO pins : NBL0_Pin NBL1_Pin */
 625:Src/main.c    ****   GPIO_InitStruct.Pin = NBL0_Pin|NBL1_Pin;
 600              		.loc 1 625 0
 601 0384 0997     		str	r7, [sp, #36]
 626:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 602              		.loc 1 626 0
 603 0386 0A95     		str	r5, [sp, #40]
 627:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 604              		.loc 1 627 0
 605 0388 0B94     		str	r4, [sp, #44]
 628:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 606              		.loc 1 628 0
 607 038a 0C97     		str	r7, [sp, #48]
 629:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 608              		.loc 1 629 0
 609 038c CDF83480 		str	r8, [sp, #52]
 630:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 610              		.loc 1 630 0
 611 0390 09A9     		add	r1, sp, #36
 612 0392 0848     		ldr	r0, .L6+20
 613 0394 FFF7FEFF 		bl	HAL_GPIO_Init
 614              	.LVL33:
 631:Src/main.c    **** 
 632:Src/main.c    **** }
 615              		.loc 1 632 0
 616 0398 0FB0     		add	sp, sp, #60
 617              	.LCFI2:
 618              		.cfi_def_cfa_offset 36
 619              		@ sp needed
 620 039a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 621              	.L7:
 622 039e 00BF     		.align	2
 623              	.L6:
ARM GAS  /tmp/cc7mjtlt.s 			page 23


 624 03a0 00180240 		.word	1073879040
 625 03a4 00080240 		.word	1073874944
 626 03a8 00000240 		.word	1073872896
 627 03ac 000C0240 		.word	1073875968
 628 03b0 00040240 		.word	1073873920
 629 03b4 00100240 		.word	1073876992
 630              		.cfi_endproc
 631              	.LFE136:
 633              		.section	.text.MX_SPI5_Init,"ax",%progbits
 634              		.align	1
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 638              		.fpu fpv4-sp-d16
 640              	MX_SPI5_Init:
 641              	.LFB133:
 273:Src/main.c    **** 
 642              		.loc 1 273 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646 0000 08B5     		push	{r3, lr}
 647              	.LCFI3:
 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 3, -8
 650              		.cfi_offset 14, -4
 283:Src/main.c    ****   hspi5.Init.Mode = SPI_MODE_SLAVE;
 651              		.loc 1 283 0
 652 0002 0948     		ldr	r0, .L10
 653 0004 094B     		ldr	r3, .L10+4
 654 0006 0360     		str	r3, [r0]
 284:Src/main.c    ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 655              		.loc 1 284 0
 656 0008 0023     		movs	r3, #0
 657 000a 4360     		str	r3, [r0, #4]
 285:Src/main.c    ****   hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 658              		.loc 1 285 0
 659 000c 8360     		str	r3, [r0, #8]
 286:Src/main.c    ****   hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 660              		.loc 1 286 0
 661 000e C360     		str	r3, [r0, #12]
 287:Src/main.c    ****   hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 662              		.loc 1 287 0
 663 0010 0361     		str	r3, [r0, #16]
 288:Src/main.c    ****   hspi5.Init.NSS = SPI_NSS_HARD_INPUT;
 664              		.loc 1 288 0
 665 0012 4361     		str	r3, [r0, #20]
 289:Src/main.c    ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 666              		.loc 1 289 0
 667 0014 8361     		str	r3, [r0, #24]
 290:Src/main.c    ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 668              		.loc 1 290 0
 669 0016 0362     		str	r3, [r0, #32]
 291:Src/main.c    ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 670              		.loc 1 291 0
 671 0018 4362     		str	r3, [r0, #36]
 292:Src/main.c    ****   hspi5.Init.CRCPolynomial = 10;
ARM GAS  /tmp/cc7mjtlt.s 			page 24


 672              		.loc 1 292 0
 673 001a 8362     		str	r3, [r0, #40]
 293:Src/main.c    ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 674              		.loc 1 293 0
 675 001c 0A23     		movs	r3, #10
 676 001e C362     		str	r3, [r0, #44]
 294:Src/main.c    ****   {
 677              		.loc 1 294 0
 678 0020 FFF7FEFF 		bl	HAL_SPI_Init
 679              	.LVL34:
 680 0024 08BD     		pop	{r3, pc}
 681              	.L11:
 682 0026 00BF     		.align	2
 683              	.L10:
 684 0028 00000000 		.word	hspi5
 685 002c 00500140 		.word	1073827840
 686              		.cfi_endproc
 687              	.LFE133:
 689              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 690              		.align	1
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 694              		.fpu fpv4-sp-d16
 696              	MX_USART1_UART_Init:
 697              	.LFB135:
 348:Src/main.c    **** 
 698              		.loc 1 348 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 0
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702 0000 08B5     		push	{r3, lr}
 703              	.LCFI4:
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 3, -8
 706              		.cfi_offset 14, -4
 357:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 707              		.loc 1 357 0
 708 0002 0848     		ldr	r0, .L14
 709 0004 084B     		ldr	r3, .L14+4
 710 0006 0360     		str	r3, [r0]
 358:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 711              		.loc 1 358 0
 712 0008 4FF4E133 		mov	r3, #115200
 713 000c 4360     		str	r3, [r0, #4]
 359:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 714              		.loc 1 359 0
 715 000e 0023     		movs	r3, #0
 716 0010 8360     		str	r3, [r0, #8]
 360:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 717              		.loc 1 360 0
 718 0012 C360     		str	r3, [r0, #12]
 361:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 719              		.loc 1 361 0
 720 0014 0361     		str	r3, [r0, #16]
 362:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 721              		.loc 1 362 0
ARM GAS  /tmp/cc7mjtlt.s 			page 25


 722 0016 0C22     		movs	r2, #12
 723 0018 4261     		str	r2, [r0, #20]
 363:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 724              		.loc 1 363 0
 725 001a 8361     		str	r3, [r0, #24]
 364:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 726              		.loc 1 364 0
 727 001c C361     		str	r3, [r0, #28]
 365:Src/main.c    ****   {
 728              		.loc 1 365 0
 729 001e FFF7FEFF 		bl	HAL_UART_Init
 730              	.LVL35:
 731 0022 08BD     		pop	{r3, pc}
 732              	.L15:
 733              		.align	2
 734              	.L14:
 735 0024 00000000 		.word	huart1
 736 0028 00100140 		.word	1073811456
 737              		.cfi_endproc
 738              	.LFE135:
 740              		.section	.text.MX_DAC_Init,"ax",%progbits
 741              		.align	1
 742              		.syntax unified
 743              		.thumb
 744              		.thumb_func
 745              		.fpu fpv4-sp-d16
 747              	MX_DAC_Init:
 748              	.LFB132:
 235:Src/main.c    **** 
 749              		.loc 1 235 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 8
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 753 0000 30B5     		push	{r4, r5, lr}
 754              	.LCFI5:
 755              		.cfi_def_cfa_offset 12
 756              		.cfi_offset 4, -12
 757              		.cfi_offset 5, -8
 758              		.cfi_offset 14, -4
 759 0002 83B0     		sub	sp, sp, #12
 760              	.LCFI6:
 761              		.cfi_def_cfa_offset 24
 241:Src/main.c    **** 
 762              		.loc 1 241 0
 763 0004 0024     		movs	r4, #0
 764 0006 0094     		str	r4, [sp]
 765 0008 0194     		str	r4, [sp, #4]
 248:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 766              		.loc 1 248 0
 767 000a 074D     		ldr	r5, .L18
 768 000c 074B     		ldr	r3, .L18+4
 769 000e 2B60     		str	r3, [r5]
 249:Src/main.c    ****   {
 770              		.loc 1 249 0
 771 0010 2846     		mov	r0, r5
 772 0012 FFF7FEFF 		bl	HAL_DAC_Init
 773              	.LVL36:
ARM GAS  /tmp/cc7mjtlt.s 			page 26


 255:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 774              		.loc 1 255 0
 775 0016 0094     		str	r4, [sp]
 256:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 776              		.loc 1 256 0
 777 0018 0194     		str	r4, [sp, #4]
 257:Src/main.c    ****   {
 778              		.loc 1 257 0
 779 001a 1022     		movs	r2, #16
 780 001c 6946     		mov	r1, sp
 781 001e 2846     		mov	r0, r5
 782 0020 FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 783              	.LVL37:
 265:Src/main.c    **** 
 784              		.loc 1 265 0
 785 0024 03B0     		add	sp, sp, #12
 786              	.LCFI7:
 787              		.cfi_def_cfa_offset 12
 788              		@ sp needed
 789 0026 30BD     		pop	{r4, r5, pc}
 790              	.L19:
 791              		.align	2
 792              	.L18:
 793 0028 00000000 		.word	hdac
 794 002c 00740040 		.word	1073771520
 795              		.cfi_endproc
 796              	.LFE132:
 798              		.section	.text.MX_TIM6_Init,"ax",%progbits
 799              		.align	1
 800              		.syntax unified
 801              		.thumb
 802              		.thumb_func
 803              		.fpu fpv4-sp-d16
 805              	MX_TIM6_Init:
 806              	.LFB134:
 310:Src/main.c    **** 
 807              		.loc 1 310 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 8
 810              		@ frame_needed = 0, uses_anonymous_args = 0
 811 0000 30B5     		push	{r4, r5, lr}
 812              	.LCFI8:
 813              		.cfi_def_cfa_offset 12
 814              		.cfi_offset 4, -12
 815              		.cfi_offset 5, -8
 816              		.cfi_offset 14, -4
 817 0002 83B0     		sub	sp, sp, #12
 818              	.LCFI9:
 819              		.cfi_def_cfa_offset 24
 316:Src/main.c    **** 
 820              		.loc 1 316 0
 821 0004 0025     		movs	r5, #0
 822 0006 0095     		str	r5, [sp]
 823 0008 0195     		str	r5, [sp, #4]
 321:Src/main.c    ****   htim6.Init.Prescaler = 0;
 824              		.loc 1 321 0
 825 000a 0A4C     		ldr	r4, .L22
ARM GAS  /tmp/cc7mjtlt.s 			page 27


 826 000c 0A4B     		ldr	r3, .L22+4
 827 000e 2360     		str	r3, [r4]
 322:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 828              		.loc 1 322 0
 829 0010 6560     		str	r5, [r4, #4]
 323:Src/main.c    ****   htim6.Init.Period = 1290;
 830              		.loc 1 323 0
 831 0012 A560     		str	r5, [r4, #8]
 324:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 832              		.loc 1 324 0
 833 0014 40F20A53 		movw	r3, #1290
 834 0018 E360     		str	r3, [r4, #12]
 325:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 835              		.loc 1 325 0
 836 001a A561     		str	r5, [r4, #24]
 326:Src/main.c    ****   {
 837              		.loc 1 326 0
 838 001c 2046     		mov	r0, r4
 839 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 840              	.LVL38:
 330:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 841              		.loc 1 330 0
 842 0022 0095     		str	r5, [sp]
 331:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 843              		.loc 1 331 0
 844 0024 0195     		str	r5, [sp, #4]
 332:Src/main.c    ****   {
 845              		.loc 1 332 0
 846 0026 6946     		mov	r1, sp
 847 0028 2046     		mov	r0, r4
 848 002a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 849              	.LVL39:
 340:Src/main.c    **** 
 850              		.loc 1 340 0
 851 002e 03B0     		add	sp, sp, #12
 852              	.LCFI10:
 853              		.cfi_def_cfa_offset 12
 854              		@ sp needed
 855 0030 30BD     		pop	{r4, r5, pc}
 856              	.L23:
 857 0032 00BF     		.align	2
 858              	.L22:
 859 0034 00000000 		.word	htim6
 860 0038 00100040 		.word	1073745920
 861              		.cfi_endproc
 862              	.LFE134:
 864              		.section	.text.SystemClock_Config,"ax",%progbits
 865              		.align	1
 866              		.global	SystemClock_Config
 867              		.syntax unified
 868              		.thumb
 869              		.thumb_func
 870              		.fpu fpv4-sp-d16
 872              	SystemClock_Config:
 873              	.LFB131:
 191:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 874              		.loc 1 191 0
ARM GAS  /tmp/cc7mjtlt.s 			page 28


 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 80
 877              		@ frame_needed = 0, uses_anonymous_args = 0
 878 0000 30B5     		push	{r4, r5, lr}
 879              	.LCFI11:
 880              		.cfi_def_cfa_offset 12
 881              		.cfi_offset 4, -12
 882              		.cfi_offset 5, -8
 883              		.cfi_offset 14, -4
 884 0002 95B0     		sub	sp, sp, #84
 885              	.LCFI12:
 886              		.cfi_def_cfa_offset 96
 192:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 887              		.loc 1 192 0
 888 0004 3022     		movs	r2, #48
 889 0006 0021     		movs	r1, #0
 890 0008 08A8     		add	r0, sp, #32
 891 000a FFF7FEFF 		bl	memset
 892              	.LVL40:
 193:Src/main.c    **** 
 893              		.loc 1 193 0
 894 000e 0024     		movs	r4, #0
 895 0010 0394     		str	r4, [sp, #12]
 896 0012 0494     		str	r4, [sp, #16]
 897 0014 0594     		str	r4, [sp, #20]
 898 0016 0694     		str	r4, [sp, #24]
 899 0018 0794     		str	r4, [sp, #28]
 900              	.LBB10:
 197:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 901              		.loc 1 197 0
 902 001a 0194     		str	r4, [sp, #4]
 903 001c 1C4B     		ldr	r3, .L26
 904 001e 1A6C     		ldr	r2, [r3, #64]
 905 0020 42F08052 		orr	r2, r2, #268435456
 906 0024 1A64     		str	r2, [r3, #64]
 907 0026 1B6C     		ldr	r3, [r3, #64]
 908 0028 03F08053 		and	r3, r3, #268435456
 909 002c 0193     		str	r3, [sp, #4]
 910 002e 019B     		ldr	r3, [sp, #4]
 911              	.LBE10:
 912              	.LBB11:
 198:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 913              		.loc 1 198 0
 914 0030 0294     		str	r4, [sp, #8]
 915 0032 184A     		ldr	r2, .L26+4
 916 0034 1368     		ldr	r3, [r2]
 917 0036 23F44043 		bic	r3, r3, #49152
 918 003a 43F48043 		orr	r3, r3, #16384
 919 003e 1360     		str	r3, [r2]
 920 0040 1368     		ldr	r3, [r2]
 921 0042 03F44043 		and	r3, r3, #49152
 922 0046 0293     		str	r3, [sp, #8]
 923 0048 029B     		ldr	r3, [sp, #8]
 924              	.LBE11:
 201:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 925              		.loc 1 201 0
 926 004a 0225     		movs	r5, #2
ARM GAS  /tmp/cc7mjtlt.s 			page 29


 927 004c 0895     		str	r5, [sp, #32]
 202:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 928              		.loc 1 202 0
 929 004e 0123     		movs	r3, #1
 930 0050 0B93     		str	r3, [sp, #44]
 203:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 931              		.loc 1 203 0
 932 0052 1023     		movs	r3, #16
 933 0054 0C93     		str	r3, [sp, #48]
 204:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 934              		.loc 1 204 0
 935 0056 0E95     		str	r5, [sp, #56]
 205:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 936              		.loc 1 205 0
 937 0058 0F94     		str	r4, [sp, #60]
 206:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 80;
 938              		.loc 1 206 0
 939 005a 0823     		movs	r3, #8
 940 005c 1093     		str	r3, [sp, #64]
 207:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 941              		.loc 1 207 0
 942 005e 5023     		movs	r3, #80
 943 0060 1193     		str	r3, [sp, #68]
 208:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 944              		.loc 1 208 0
 945 0062 1295     		str	r5, [sp, #72]
 209:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 946              		.loc 1 209 0
 947 0064 0723     		movs	r3, #7
 948 0066 1393     		str	r3, [sp, #76]
 210:Src/main.c    ****   {
 949              		.loc 1 210 0
 950 0068 08A8     		add	r0, sp, #32
 951 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 952              	.LVL41:
 216:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 953              		.loc 1 216 0
 954 006e 0F23     		movs	r3, #15
 955 0070 0393     		str	r3, [sp, #12]
 218:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 956              		.loc 1 218 0
 957 0072 0495     		str	r5, [sp, #16]
 219:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 958              		.loc 1 219 0
 959 0074 0594     		str	r4, [sp, #20]
 220:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 960              		.loc 1 220 0
 961 0076 4FF48053 		mov	r3, #4096
 962 007a 0693     		str	r3, [sp, #24]
 221:Src/main.c    **** 
 963              		.loc 1 221 0
 964 007c 4FF4A053 		mov	r3, #5120
 965 0080 0793     		str	r3, [sp, #28]
 223:Src/main.c    ****   {
 966              		.loc 1 223 0
 967 0082 2946     		mov	r1, r5
 968 0084 03A8     		add	r0, sp, #12
ARM GAS  /tmp/cc7mjtlt.s 			page 30


 969 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 970              	.LVL42:
 227:Src/main.c    **** 
 971              		.loc 1 227 0
 972 008a 15B0     		add	sp, sp, #84
 973              	.LCFI13:
 974              		.cfi_def_cfa_offset 12
 975              		@ sp needed
 976 008c 30BD     		pop	{r4, r5, pc}
 977              	.L27:
 978 008e 00BF     		.align	2
 979              	.L26:
 980 0090 00380240 		.word	1073887232
 981 0094 00700040 		.word	1073770496
 982              		.cfi_endproc
 983              	.LFE131:
 985              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 986              		.align	1
 987              		.global	HAL_SPI_TxRxCpltCallback
 988              		.syntax unified
 989              		.thumb
 990              		.thumb_func
 991              		.fpu fpv4-sp-d16
 993              	HAL_SPI_TxRxCpltCallback:
 994              	.LFB137:
 633:Src/main.c    **** 
 634:Src/main.c    **** /* USER CODE BEGIN 4 */
 635:Src/main.c    **** void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi) {
 995              		.loc 1 635 0
 996              		.cfi_startproc
 997              		@ args = 0, pretend = 0, frame = 0
 998              		@ frame_needed = 0, uses_anonymous_args = 0
 999              		@ link register save eliminated.
 1000              	.LVL43:
 636:Src/main.c    ****   //  uint8_t uart_tx_buffer;
 637:Src/main.c    **** 
 638:Src/main.c    ****   current_midi_note_msg.command = spi_rx_buffer[0];
 1001              		.loc 1 638 0
 1002 0000 054A     		ldr	r2, .L29
 1003 0002 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1004 0004 054B     		ldr	r3, .L29+4
 1005 0006 1970     		strb	r1, [r3]
 639:Src/main.c    ****   current_midi_note_msg.note = spi_rx_buffer[1];
 1006              		.loc 1 639 0
 1007 0008 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 1008 000a 5970     		strb	r1, [r3, #1]
 640:Src/main.c    ****   current_midi_note_msg.velocity = spi_rx_buffer[2];
 1009              		.loc 1 640 0
 1010 000c 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 1011 000e 9A70     		strb	r2, [r3, #2]
 641:Src/main.c    **** 
 642:Src/main.c    ****   MIDI_flag = 1;
 1012              		.loc 1 642 0
 1013 0010 0122     		movs	r2, #1
 1014 0012 034B     		ldr	r3, .L29+8
 1015 0014 1A70     		strb	r2, [r3]
 1016 0016 7047     		bx	lr
ARM GAS  /tmp/cc7mjtlt.s 			page 31


 1017              	.L30:
 1018              		.align	2
 1019              	.L29:
 1020 0018 00000000 		.word	spi_rx_buffer
 1021 001c 00000000 		.word	.LANCHOR0
 1022 0020 00000000 		.word	.LANCHOR1
 1023              		.cfi_endproc
 1024              	.LFE137:
 1026              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1027              		.align	1
 1028              		.global	HAL_TIM_PeriodElapsedCallback
 1029              		.syntax unified
 1030              		.thumb
 1031              		.thumb_func
 1032              		.fpu fpv4-sp-d16
 1034              	HAL_TIM_PeriodElapsedCallback:
 1035              	.LFB138:
 643:Src/main.c    **** 
 644:Src/main.c    ****   /*
 645:Src/main.c    ****   uart_tx_buffer = spi_rx_buffer[0];
 646:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 647:Src/main.c    ****   uart_tx_buffer = spi_rx_buffer[1];
 648:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 649:Src/main.c    ****   uart_tx_buffer = spi_rx_buffer[2];
 650:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 651:Src/main.c    ****   uart_tx_buffer = '\n';
 652:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 653:Src/main.c    **** 
 654:Src/main.c    ****   if(spi_rx_buffer[0] == MIDI_NOTE_ON){
 655:Src/main.c    ****     uart_tx_buffer = 'n';
 656:Src/main.c    ****     HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 657:Src/main.c    ****   }
 658:Src/main.c    ****   else if (spi_rx_buffer[0] == MIDI_NOTE_OFF){
 659:Src/main.c    ****     uart_tx_buffer = 'f';
 660:Src/main.c    ****     HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 661:Src/main.c    ****   }
 662:Src/main.c    ****   uart_tx_buffer = '\n';
 663:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 664:Src/main.c    ****   */
 665:Src/main.c    **** }
 666:Src/main.c    **** 
 667:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 1036              		.loc 1 667 0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 0
 1039              		@ frame_needed = 0, uses_anonymous_args = 0
 1040              	.LVL44:
 1041 0000 08B5     		push	{r3, lr}
 1042              	.LCFI14:
 1043              		.cfi_def_cfa_offset 8
 1044              		.cfi_offset 3, -8
 1045              		.cfi_offset 14, -4
 668:Src/main.c    ****   HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_1);
 1046              		.loc 1 668 0
 1047 0002 0221     		movs	r1, #2
 1048 0004 0348     		ldr	r0, .L33
 1049              	.LVL45:
ARM GAS  /tmp/cc7mjtlt.s 			page 32


 1050 0006 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1051              	.LVL46:
 669:Src/main.c    ****   update_value_flag = 1;
 1052              		.loc 1 669 0
 1053 000a 0122     		movs	r2, #1
 1054 000c 024B     		ldr	r3, .L33+4
 1055 000e 1A70     		strb	r2, [r3]
 1056 0010 08BD     		pop	{r3, pc}
 1057              	.L34:
 1058 0012 00BF     		.align	2
 1059              	.L33:
 1060 0014 00180240 		.word	1073879040
 1061 0018 00000000 		.word	.LANCHOR2
 1062              		.cfi_endproc
 1063              	.LFE138:
 1065              		.global	__aeabi_f2d
 1066              		.global	__aeabi_dmul
 1067              		.global	__aeabi_d2uiz
 1068              		.section	.text.UpdateOutputValue,"ax",%progbits
 1069              		.align	1
 1070              		.global	UpdateOutputValue
 1071              		.syntax unified
 1072              		.thumb
 1073              		.thumb_func
 1074              		.fpu fpv4-sp-d16
 1076              	UpdateOutputValue:
 1077              	.LFB139:
 670:Src/main.c    **** }
 671:Src/main.c    **** 
 672:Src/main.c    **** void UpdateOutputValue() {
 1078              		.loc 1 672 0
 1079              		.cfi_startproc
 1080              		@ args = 0, pretend = 0, frame = 8
 1081              		@ frame_needed = 0, uses_anonymous_args = 0
 1082 0000 10B5     		push	{r4, lr}
 1083              	.LCFI15:
 1084              		.cfi_def_cfa_offset 8
 1085              		.cfi_offset 4, -8
 1086              		.cfi_offset 14, -4
 1087 0002 2DED028B 		vpush.64	{d8}
 1088              	.LCFI16:
 1089              		.cfi_def_cfa_offset 16
 1090              		.cfi_offset 80, -16
 1091              		.cfi_offset 81, -12
 1092 0006 82B0     		sub	sp, sp, #8
 1093              	.LCFI17:
 1094              		.cfi_def_cfa_offset 24
 1095              	.LVL47:
 673:Src/main.c    ****   float val = 0;
 674:Src/main.c    ****   output_val = 0;
 1096              		.loc 1 674 0
 1097 0008 0024     		movs	r4, #0
 1098 000a 1F4B     		ldr	r3, .L39+8
 1099 000c 1C70     		strb	r4, [r3]
 1100              	.LVL48:
 673:Src/main.c    ****   float val = 0;
 1101              		.loc 1 673 0
ARM GAS  /tmp/cc7mjtlt.s 			page 33


 1102 000e 9FED1F8A 		vldr.32	s16, .L39+12
 1103              	.LBB12:
 675:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1104              		.loc 1 675 0
 1105 0012 21E0     		b	.L36
 1106              	.LVL49:
 1107              	.L37:
 676:Src/main.c    ****     phase_accumulator[i] += (uint32_t)(midi_notes[note_freq[i]]*DDS_SCALE_FACTOR);
 1108              		.loc 1 676 0 discriminator 3
 1109 0014 1E4B     		ldr	r3, .L39+16
 1110 0016 1A5D     		ldrb	r2, [r3, r4]	@ zero_extendqisi2
 1111 0018 1E4B     		ldr	r3, .L39+20
 1112 001a 03EB8203 		add	r3, r3, r2, lsl #2
 1113 001e 1868     		ldr	r0, [r3]	@ float
 1114 0020 FFF7FEFF 		bl	__aeabi_f2d
 1115              	.LVL50:
 1116 0024 16A3     		adr	r3, .L39
 1117 0026 D3E90023 		ldrd	r2, [r3]
 1118 002a FFF7FEFF 		bl	__aeabi_dmul
 1119              	.LVL51:
 1120 002e FFF7FEFF 		bl	__aeabi_d2uiz
 1121              	.LVL52:
 1122 0032 194B     		ldr	r3, .L39+24
 1123 0034 53F82420 		ldr	r2, [r3, r4, lsl #2]
 1124 0038 1044     		add	r0, r0, r2
 1125 003a 43F82400 		str	r0, [r3, r4, lsl #2]
 677:Src/main.c    ****     val += (base_sine[(phase_accumulator[i]>>10)%4096]);// * envelope[i] / AMPLITUDE);
 1126              		.loc 1 677 0 discriminator 3
 1127 003e 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1128 0042 C3F38B23 		ubfx	r3, r3, #10, #12
 1129 0046 154A     		ldr	r2, .L39+28
 1130 0048 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1131 004a 07EE903A 		vmov	s15, r3	@ int
 1132 004e F8EEE77A 		vcvt.f32.s32	s15, s15
 1133 0052 38EE278A 		vadd.f32	s16, s16, s15
 1134              	.LVL53:
 675:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1135              		.loc 1 675 0 discriminator 3
 1136 0056 0134     		adds	r4, r4, #1
 1137              	.LVL54:
 1138              	.L36:
 675:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1139              		.loc 1 675 0 is_stmt 0 discriminator 1
 1140 0058 2F2C     		cmp	r4, #47
 1141 005a DBDD     		ble	.L37
 1142              	.LBE12:
 678:Src/main.c    ****   }
 679:Src/main.c    **** 
 680:Src/main.c    ****   output_val = (uint8_t) (val / VOICES);
 1143              		.loc 1 680 0 is_stmt 1
 1144 005c 9FED107A 		vldr.32	s14, .L39+32
 1145 0060 C8EE077A 		vdiv.f32	s15, s16, s14
 1146 0064 FCEEE77A 		vcvt.u32.f32	s15, s15
 1147 0068 CDED017A 		vstr.32	s15, [sp, #4]	@ int
 1148 006c 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 1149 0070 054A     		ldr	r2, .L39+8
 1150 0072 1370     		strb	r3, [r2]
ARM GAS  /tmp/cc7mjtlt.s 			page 34


 681:Src/main.c    **** }
 1151              		.loc 1 681 0
 1152 0074 02B0     		add	sp, sp, #8
 1153              	.LCFI18:
 1154              		.cfi_def_cfa_offset 16
 1155              		@ sp needed
 1156 0076 BDEC028B 		vldm	sp!, {d8}
 1157              	.LCFI19:
 1158              		.cfi_restore 80
 1159              		.cfi_restore 81
 1160              		.cfi_def_cfa_offset 8
 1161              	.LVL55:
 1162 007a 10BD     		pop	{r4, pc}
 1163              	.LVL56:
 1164              	.L40:
 1165 007c AFF30080 		.align	3
 1166              	.L39:
 1167 0080 38BA4A77 		.word	2001386040
 1168 0084 F7F58B40 		.word	1082914295
 1169 0088 00000000 		.word	.LANCHOR3
 1170 008c 00000000 		.word	0
 1171 0090 00000000 		.word	.LANCHOR4
 1172 0094 00000000 		.word	midi_notes
 1173 0098 00000000 		.word	.LANCHOR5
 1174 009c 00000000 		.word	base_sine
 1175 00a0 00004042 		.word	1111490560
 1176              		.cfi_endproc
 1177              	.LFE139:
 1179              		.section	.text.UpdateEnvelope,"ax",%progbits
 1180              		.align	1
 1181              		.global	UpdateEnvelope
 1182              		.syntax unified
 1183              		.thumb
 1184              		.thumb_func
 1185              		.fpu fpv4-sp-d16
 1187              	UpdateEnvelope:
 1188              	.LFB140:
 682:Src/main.c    **** 
 683:Src/main.c    **** void UpdateEnvelope() {
 1189              		.loc 1 683 0
 1190              		.cfi_startproc
 1191              		@ args = 0, pretend = 0, frame = 0
 1192              		@ frame_needed = 0, uses_anonymous_args = 0
 1193              		@ link register save eliminated.
 1194              	.LVL57:
 1195              	.LBB13:
 684:Src/main.c    ****   for(int i = 0; i < VOICES; i++){
 1196              		.loc 1 684 0
 1197 0000 0023     		movs	r3, #0
 1198 0002 09E0     		b	.L42
 1199              	.LVL58:
 1200              	.L44:
 685:Src/main.c    ****     //if(note_on[i] == MIDI_NOTE_OFF){
 686:Src/main.c    ****     //  env_state[i] = RELEASE_MODE;
 687:Src/main.c    ****     //}
 688:Src/main.c    **** 
 689:Src/main.c    ****     switch(env_state[i]){
ARM GAS  /tmp/cc7mjtlt.s 			page 35


 690:Src/main.c    ****     case NOT_TRIGGERED:
 691:Src/main.c    ****       envelope_index[i] = 0;
 1201              		.loc 1 691 0
 1202 0004 0021     		movs	r1, #0
 1203 0006 4C4A     		ldr	r2, .L55
 1204 0008 42F82310 		str	r1, [r2, r3, lsl #2]
 692:Src/main.c    ****       envelope[i] = 0;
 1205              		.loc 1 692 0
 1206 000c 4B4A     		ldr	r2, .L55+4
 1207 000e 02EB8302 		add	r2, r2, r3, lsl #2
 1208 0012 0021     		movs	r1, #0
 1209 0014 1160     		str	r1, [r2]	@ float
 1210              	.L43:
 684:Src/main.c    ****   for(int i = 0; i < VOICES; i++){
 1211              		.loc 1 684 0 discriminator 2
 1212 0016 0133     		adds	r3, r3, #1
 1213              	.LVL59:
 1214              	.L42:
 684:Src/main.c    ****   for(int i = 0; i < VOICES; i++){
 1215              		.loc 1 684 0 is_stmt 0 discriminator 1
 1216 0018 2F2B     		cmp	r3, #47
 1217 001a 00F38C80 		bgt	.L54
 689:Src/main.c    ****     case NOT_TRIGGERED:
 1218              		.loc 1 689 0 is_stmt 1
 1219 001e 484A     		ldr	r2, .L55+8
 1220 0020 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1221 0022 D2B2     		uxtb	r2, r2
 1222 0024 042A     		cmp	r2, #4
 1223 0026 F6D8     		bhi	.L43
 1224 0028 01A1     		adr	r1, .L45
 1225 002a 51F822F0 		ldr	pc, [r1, r2, lsl #2]
 1226 002e 00BF     		.p2align 2
 1227              	.L45:
 1228 0030 05000000 		.word	.L44+1
 1229 0034 45000000 		.word	.L46+1
 1230 0038 8F000000 		.word	.L47+1
 1231 003c D9000000 		.word	.L48+1
 1232 0040 E5000000 		.word	.L49+1
 1233              		.p2align 1
 1234              	.L46:
 693:Src/main.c    ****       break;
 694:Src/main.c    ****     case ATTACK_MODE:
 695:Src/main.c    ****       //    if((UINT32_MAX - envelope_index) < DDS_SCALE_FACTOR){
 696:Src/main.c    ****       if(envelope_index[i] <= 4200000) {
 1235              		.loc 1 696 0
 1236 0044 3C4A     		ldr	r2, .L55
 1237 0046 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1238 004a 3E4A     		ldr	r2, .L55+12
 1239 004c 9142     		cmp	r1, r2
 1240 004e 16D8     		bhi	.L50
 697:Src/main.c    ****         envelope_index[i] += (uint32_t)(DDS_SCALE_FACTOR);
 1241              		.loc 1 697 0
 1242 0050 394A     		ldr	r2, .L55
 1243 0052 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1244 0056 01F27E31 		addw	r1, r1, #894
 1245 005a 42F82310 		str	r1, [r2, r3, lsl #2]
 698:Src/main.c    ****         envelope[i] = base_pos_saw[(envelope_index[i]>>10)%4096];
ARM GAS  /tmp/cc7mjtlt.s 			page 36


 1246              		.loc 1 698 0
 1247 005e 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1248 0062 C2F38B22 		ubfx	r2, r2, #10, #12
 1249 0066 3849     		ldr	r1, .L55+16
 1250 0068 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1251 006a 07EE902A 		vmov	s15, r2	@ int
 1252 006e F8EE677A 		vcvt.f32.u32	s15, s15
 1253 0072 324A     		ldr	r2, .L55+4
 1254 0074 02EB8302 		add	r2, r2, r3, lsl #2
 1255 0078 C2ED007A 		vstr.32	s15, [r2]
 1256 007c CBE7     		b	.L43
 1257              	.L50:
 699:Src/main.c    ****       }
 700:Src/main.c    ****       else {
 701:Src/main.c    ****         // env_state++;
 702:Src/main.c    ****         envelope_index[i] = 0;
 1258              		.loc 1 702 0
 1259 007e 0021     		movs	r1, #0
 1260 0080 2D4A     		ldr	r2, .L55
 1261 0082 42F82310 		str	r1, [r2, r3, lsl #2]
 703:Src/main.c    ****         env_state[i] = DECAY_MODE;
 1262              		.loc 1 703 0
 1263 0086 0221     		movs	r1, #2
 1264 0088 2D4A     		ldr	r2, .L55+8
 1265 008a D154     		strb	r1, [r2, r3]
 1266 008c C3E7     		b	.L43
 1267              	.L47:
 704:Src/main.c    ****       }
 705:Src/main.c    ****       break;
 706:Src/main.c    ****     case DECAY_MODE:
 707:Src/main.c    ****       //    if(envelope <= base_neg_saw[sustain_level]){
 708:Src/main.c    ****       if(envelope_index[i] <= 4200000) {
 1268              		.loc 1 708 0
 1269 008e 2A4A     		ldr	r2, .L55
 1270 0090 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1271 0094 2B4A     		ldr	r2, .L55+12
 1272 0096 9142     		cmp	r1, r2
 1273 0098 16D8     		bhi	.L51
 709:Src/main.c    ****         envelope_index[i] += (uint32_t)(DDS_SCALE_FACTOR);
 1274              		.loc 1 709 0
 1275 009a 274A     		ldr	r2, .L55
 1276 009c 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1277 00a0 01F27E31 		addw	r1, r1, #894
 1278 00a4 42F82310 		str	r1, [r2, r3, lsl #2]
 710:Src/main.c    ****         envelope[i] = base_neg_saw[(envelope_index[i]>>10)%4096];
 1279              		.loc 1 710 0
 1280 00a8 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1281 00ac C2F38B22 		ubfx	r2, r2, #10, #12
 1282 00b0 2649     		ldr	r1, .L55+20
 1283 00b2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1284 00b4 07EE902A 		vmov	s15, r2	@ int
 1285 00b8 F8EE677A 		vcvt.f32.u32	s15, s15
 1286 00bc 1F4A     		ldr	r2, .L55+4
 1287 00be 02EB8302 		add	r2, r2, r3, lsl #2
 1288 00c2 C2ED007A 		vstr.32	s15, [r2]
 1289 00c6 A6E7     		b	.L43
 1290              	.L51:
ARM GAS  /tmp/cc7mjtlt.s 			page 37


 711:Src/main.c    ****       }
 712:Src/main.c    ****       else {
 713:Src/main.c    ****         envelope_index[i] = 0;
 1291              		.loc 1 713 0
 1292 00c8 0021     		movs	r1, #0
 1293 00ca 1B4A     		ldr	r2, .L55
 1294 00cc 42F82310 		str	r1, [r2, r3, lsl #2]
 714:Src/main.c    ****         //env_state++;
 715:Src/main.c    ****         env_state[i] = ATTACK_MODE;
 1295              		.loc 1 715 0
 1296 00d0 0121     		movs	r1, #1
 1297 00d2 1B4A     		ldr	r2, .L55+8
 1298 00d4 D154     		strb	r1, [r2, r3]
 1299 00d6 9EE7     		b	.L43
 1300              	.L48:
 716:Src/main.c    ****       }
 717:Src/main.c    ****       break;
 718:Src/main.c    ****     case SUSTAIN_MODE:
 719:Src/main.c    ****       env_state[i]++;
 1301              		.loc 1 719 0
 1302 00d8 1949     		ldr	r1, .L55+8
 1303 00da CA5C     		ldrb	r2, [r1, r3]	@ zero_extendqisi2
 1304 00dc 0132     		adds	r2, r2, #1
 1305 00de D2B2     		uxtb	r2, r2
 1306 00e0 CA54     		strb	r2, [r1, r3]
 720:Src/main.c    ****       break;
 1307              		.loc 1 720 0
 1308 00e2 98E7     		b	.L43
 1309              	.L49:
 721:Src/main.c    ****     case RELEASE_MODE:
 722:Src/main.c    ****       //      if((UINT32_MAX - envelope_index) < DDS_SCALE_FACTOR){
 723:Src/main.c    ****       if(envelope_index[i] <= 4200000){
 1310              		.loc 1 723 0
 1311 00e4 144A     		ldr	r2, .L55
 1312 00e6 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1313 00ea 164A     		ldr	r2, .L55+12
 1314 00ec 9142     		cmp	r1, r2
 1315 00ee 16D8     		bhi	.L52
 724:Src/main.c    ****         envelope_index[i] += (uint32_t)(DDS_SCALE_FACTOR);
 1316              		.loc 1 724 0
 1317 00f0 114A     		ldr	r2, .L55
 1318 00f2 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1319 00f6 01F27E31 		addw	r1, r1, #894
 1320 00fa 42F82310 		str	r1, [r2, r3, lsl #2]
 725:Src/main.c    ****         envelope[i] = base_neg_saw[(envelope_index[i]>>10)%4096];
 1321              		.loc 1 725 0
 1322 00fe 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1323 0102 C2F38B22 		ubfx	r2, r2, #10, #12
 1324 0106 1149     		ldr	r1, .L55+20
 1325 0108 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1326 010a 07EE902A 		vmov	s15, r2	@ int
 1327 010e F8EE677A 		vcvt.f32.u32	s15, s15
 1328 0112 0A4A     		ldr	r2, .L55+4
 1329 0114 02EB8302 		add	r2, r2, r3, lsl #2
 1330 0118 C2ED007A 		vstr.32	s15, [r2]
 1331 011c 7BE7     		b	.L43
 1332              	.L52:
ARM GAS  /tmp/cc7mjtlt.s 			page 38


 726:Src/main.c    ****       }
 727:Src/main.c    ****       else {
 728:Src/main.c    ****         env_state[i] = NOT_TRIGGERED;
 1333              		.loc 1 728 0
 1334 011e 0021     		movs	r1, #0
 1335 0120 074A     		ldr	r2, .L55+8
 1336 0122 D154     		strb	r1, [r2, r3]
 729:Src/main.c    ****         note_on[i] = MIDI_NOTE_OFF;
 1337              		.loc 1 729 0
 1338 0124 8021     		movs	r1, #128
 1339 0126 0A4A     		ldr	r2, .L55+24
 1340 0128 D154     		strb	r1, [r2, r3]
 730:Src/main.c    ****         envelope[i] = 0;
 1341              		.loc 1 730 0
 1342 012a 044A     		ldr	r2, .L55+4
 1343 012c 02EB8302 		add	r2, r2, r3, lsl #2
 1344 0130 0021     		movs	r1, #0
 1345 0132 1160     		str	r1, [r2]	@ float
 1346 0134 6FE7     		b	.L43
 1347              	.L54:
 1348              	.LBE13:
 731:Src/main.c    ****       }
 732:Src/main.c    ****       break;
 733:Src/main.c    ****     }
 734:Src/main.c    ****   }
 735:Src/main.c    **** }
 1349              		.loc 1 735 0
 1350 0136 7047     		bx	lr
 1351              	.L56:
 1352              		.align	2
 1353              	.L55:
 1354 0138 00000000 		.word	.LANCHOR6
 1355 013c 00000000 		.word	.LANCHOR7
 1356 0140 00000000 		.word	env_state
 1357 0144 40164000 		.word	4200000
 1358 0148 00000000 		.word	base_pos_saw
 1359 014c 00000000 		.word	base_neg_saw
 1360 0150 00000000 		.word	.LANCHOR8
 1361              		.cfi_endproc
 1362              	.LFE140:
 1364              		.section	.text.main,"ax",%progbits
 1365              		.align	1
 1366              		.global	main
 1367              		.syntax unified
 1368              		.thumb
 1369              		.thumb_func
 1370              		.fpu fpv4-sp-d16
 1372              	main:
 1373              	.LFB130:
 102:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1374              		.loc 1 102 0
 1375              		.cfi_startproc
 1376              		@ args = 0, pretend = 0, frame = 0
 1377              		@ frame_needed = 0, uses_anonymous_args = 0
 1378 0000 08B5     		push	{r3, lr}
 1379              	.LCFI20:
 1380              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc7mjtlt.s 			page 39


 1381              		.cfi_offset 3, -8
 1382              		.cfi_offset 14, -4
 111:Src/main.c    **** 
 1383              		.loc 1 111 0
 1384 0002 FFF7FEFF 		bl	HAL_Init
 1385              	.LVL60:
 118:Src/main.c    **** 
 1386              		.loc 1 118 0
 1387 0006 FFF7FEFF 		bl	SystemClock_Config
 1388              	.LVL61:
 125:Src/main.c    ****   MX_SPI5_Init();
 1389              		.loc 1 125 0
 1390 000a FFF7FEFF 		bl	MX_GPIO_Init
 1391              	.LVL62:
 126:Src/main.c    ****   MX_USART1_UART_Init();
 1392              		.loc 1 126 0
 1393 000e FFF7FEFF 		bl	MX_SPI5_Init
 1394              	.LVL63:
 127:Src/main.c    ****   MX_DAC_Init();
 1395              		.loc 1 127 0
 1396 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 1397              	.LVL64:
 128:Src/main.c    ****   MX_TIM6_Init();
 1398              		.loc 1 128 0
 1399 0016 FFF7FEFF 		bl	MX_DAC_Init
 1400              	.LVL65:
 129:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1401              		.loc 1 129 0
 1402 001a FFF7FEFF 		bl	MX_TIM6_Init
 1403              	.LVL66:
 131:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim6);
 1404              		.loc 1 131 0
 1405 001e FFF7FEFF 		bl	init_wavetable
 1406              	.LVL67:
 132:Src/main.c    ****   HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 1407              		.loc 1 132 0
 1408 0022 1A48     		ldr	r0, .L63
 1409 0024 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1410              	.LVL68:
 133:Src/main.c    **** 
 1411              		.loc 1 133 0
 1412 0028 1021     		movs	r1, #16
 1413 002a 1948     		ldr	r0, .L63+4
 1414 002c FFF7FEFF 		bl	HAL_DAC_Start
 1415              	.LVL69:
 1416              	.LBB14:
 135:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 1417              		.loc 1 135 0
 1418 0030 0023     		movs	r3, #0
 1419 0032 08E0     		b	.L58
 1420              	.LVL70:
 1421              	.L59:
 136:Src/main.c    ****     note_on[i] = MIDI_NOTE_OFF;
 1422              		.loc 1 136 0 discriminator 3
 1423 0034 0022     		movs	r2, #0
 1424 0036 1749     		ldr	r1, .L63+8
 1425 0038 CA54     		strb	r2, [r1, r3]
ARM GAS  /tmp/cc7mjtlt.s 			page 40


 137:Src/main.c    ****     note_freq[i] = 0;
 1426              		.loc 1 137 0 discriminator 3
 1427 003a 8020     		movs	r0, #128
 1428 003c 1649     		ldr	r1, .L63+12
 1429 003e C854     		strb	r0, [r1, r3]
 138:Src/main.c    ****   }
 1430              		.loc 1 138 0 discriminator 3
 1431 0040 1649     		ldr	r1, .L63+16
 1432 0042 CA54     		strb	r2, [r1, r3]
 135:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 1433              		.loc 1 135 0 discriminator 3
 1434 0044 0133     		adds	r3, r3, #1
 1435              	.LVL71:
 1436              	.L58:
 135:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 1437              		.loc 1 135 0 is_stmt 0 discriminator 1
 1438 0046 2F2B     		cmp	r3, #47
 1439 0048 F4DD     		ble	.L59
 1440              	.LBE14:
 141:Src/main.c    ****   note_freq[0] = 48;
 1441              		.loc 1 141 0 is_stmt 1
 1442 004a 9022     		movs	r2, #144
 1443 004c 124B     		ldr	r3, .L63+12
 1444              	.LVL72:
 1445 004e 1A70     		strb	r2, [r3]
 142:Src/main.c    ****   env_state[0] = ATTACK_MODE;
 1446              		.loc 1 142 0
 1447 0050 3022     		movs	r2, #48
 1448 0052 124B     		ldr	r3, .L63+16
 1449 0054 1A70     		strb	r2, [r3]
 143:Src/main.c    **** 
 1450              		.loc 1 143 0
 1451 0056 0122     		movs	r2, #1
 1452 0058 0E4B     		ldr	r3, .L63+8
 1453 005a 1A70     		strb	r2, [r3]
 1454 005c 06E0     		b	.L61
 1455              	.L60:
 1456              	.LBB15:
 176:Src/main.c    ****     HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_8B_R, output_val_byte);
 1457              		.loc 1 176 0
 1458 005e 104B     		ldr	r3, .L63+20
 1459 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1460              	.LVL73:
 177:Src/main.c    **** 
 1461              		.loc 1 177 0
 1462 0062 0822     		movs	r2, #8
 1463 0064 1021     		movs	r1, #16
 1464 0066 0A48     		ldr	r0, .L63+4
 1465 0068 FFF7FEFF 		bl	HAL_DAC_SetValue
 1466              	.LVL74:
 1467              	.L61:
 151:Src/main.c    **** 
 1468              		.loc 1 151 0
 1469 006c 0D49     		ldr	r1, .L63+24
 1470 006e 0E48     		ldr	r0, .L63+28
 1471 0070 FFF7FEFF 		bl	Receive_MIDI
 1472              	.LVL75:
ARM GAS  /tmp/cc7mjtlt.s 			page 41


 167:Src/main.c    ****       //      __disable_irq();
 1473              		.loc 1 167 0
 1474 0074 0D4B     		ldr	r3, .L63+32
 1475 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1476 0078 002B     		cmp	r3, #0
 1477 007a F0D0     		beq	.L60
 169:Src/main.c    ****       UpdateOutputValue();
 1478              		.loc 1 169 0
 1479 007c FFF7FEFF 		bl	UpdateEnvelope
 1480              	.LVL76:
 170:Src/main.c    ****       update_value_flag = 0;
 1481              		.loc 1 170 0
 1482 0080 FFF7FEFF 		bl	UpdateOutputValue
 1483              	.LVL77:
 171:Src/main.c    ****       //      __enable_irq();
 1484              		.loc 1 171 0
 1485 0084 0022     		movs	r2, #0
 1486 0086 094B     		ldr	r3, .L63+32
 1487 0088 1A70     		strb	r2, [r3]
 1488 008a E8E7     		b	.L60
 1489              	.L64:
 1490              		.align	2
 1491              	.L63:
 1492 008c 00000000 		.word	htim6
 1493 0090 00000000 		.word	hdac
 1494 0094 00000000 		.word	env_state
 1495 0098 00000000 		.word	.LANCHOR8
 1496 009c 00000000 		.word	.LANCHOR4
 1497 00a0 00000000 		.word	.LANCHOR3
 1498 00a4 00000000 		.word	spi_rx_buffer
 1499 00a8 00000000 		.word	hspi5
 1500 00ac 00000000 		.word	.LANCHOR2
 1501              	.LBE15:
 1502              		.cfi_endproc
 1503              	.LFE130:
 1505              		.section	.text.Update_R2R_DAC,"ax",%progbits
 1506              		.align	1
 1507              		.global	Update_R2R_DAC
 1508              		.syntax unified
 1509              		.thumb
 1510              		.thumb_func
 1511              		.fpu fpv4-sp-d16
 1513              	Update_R2R_DAC:
 1514              	.LFB141:
 736:Src/main.c    **** 
 737:Src/main.c    **** void Update_R2R_DAC() {
 1515              		.loc 1 737 0
 1516              		.cfi_startproc
 1517              		@ args = 0, pretend = 0, frame = 0
 1518              		@ frame_needed = 0, uses_anonymous_args = 0
 1519 0000 08B5     		push	{r3, lr}
 1520              	.LCFI21:
 1521              		.cfi_def_cfa_offset 8
 1522              		.cfi_offset 3, -8
 1523              		.cfi_offset 14, -4
 738:Src/main.c    ****   ((output_val>>0)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_7, GPIO_PIN_SET) : HAL_GPIO_Write
 1524              		.loc 1 738 0
ARM GAS  /tmp/cc7mjtlt.s 			page 42


 1525 0002 474B     		ldr	r3, .L84
 1526 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1527 0006 13F0010F 		tst	r3, #1
 1528 000a 51D0     		beq	.L66
 1529              		.loc 1 738 0 is_stmt 0 discriminator 1
 1530 000c 0122     		movs	r2, #1
 1531 000e 8021     		movs	r1, #128
 1532 0010 4448     		ldr	r0, .L84+4
 1533 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1534              	.LVL78:
 1535              	.L67:
 739:Src/main.c    ****   ((output_val>>1)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_8, GPIO_PIN_SET) : HAL_GPIO_Write
 1536              		.loc 1 739 0 is_stmt 1
 1537 0016 424B     		ldr	r3, .L84
 1538 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1539 001a 13F0020F 		tst	r3, #2
 1540 001e 4DD0     		beq	.L68
 1541              		.loc 1 739 0 is_stmt 0 discriminator 1
 1542 0020 0122     		movs	r2, #1
 1543 0022 4FF48071 		mov	r1, #256
 1544 0026 3F48     		ldr	r0, .L84+4
 1545 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1546              	.LVL79:
 1547              	.L69:
 740:Src/main.c    ****   ((output_val>>2)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_9, GPIO_PIN_SET) : HAL_GPIO_Write
 1548              		.loc 1 740 0 is_stmt 1
 1549 002c 3C4B     		ldr	r3, .L84
 1550 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1551 0030 13F0040F 		tst	r3, #4
 1552 0034 49D0     		beq	.L70
 1553              		.loc 1 740 0 is_stmt 0 discriminator 1
 1554 0036 0122     		movs	r2, #1
 1555 0038 4FF40071 		mov	r1, #512
 1556 003c 3948     		ldr	r0, .L84+4
 1557 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1558              	.LVL80:
 1559              	.L71:
 741:Src/main.c    ****   ((output_val>>3)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_10, GPIO_PIN_SET) : HAL_GPIO_Writ
 1560              		.loc 1 741 0 is_stmt 1
 1561 0042 374B     		ldr	r3, .L84
 1562 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1563 0046 13F0080F 		tst	r3, #8
 1564 004a 45D0     		beq	.L72
 1565              		.loc 1 741 0 is_stmt 0 discriminator 1
 1566 004c 0122     		movs	r2, #1
 1567 004e 4FF48061 		mov	r1, #1024
 1568 0052 3448     		ldr	r0, .L84+4
 1569 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1570              	.LVL81:
 1571              	.L73:
 742:Src/main.c    ****   ((output_val>>4)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET) : HAL_GPIO_Writ
 1572              		.loc 1 742 0 is_stmt 1
 1573 0058 314B     		ldr	r3, .L84
 1574 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1575 005c 13F0100F 		tst	r3, #16
 1576 0060 41D0     		beq	.L74
 1577              		.loc 1 742 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cc7mjtlt.s 			page 43


 1578 0062 0122     		movs	r2, #1
 1579 0064 4FF40061 		mov	r1, #2048
 1580 0068 2E48     		ldr	r0, .L84+4
 1581 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1582              	.LVL82:
 1583              	.L75:
 743:Src/main.c    ****   ((output_val>>5)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET) : HAL_GPIO_Writ
 1584              		.loc 1 743 0 is_stmt 1
 1585 006e 2C4B     		ldr	r3, .L84
 1586 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1587 0072 13F0200F 		tst	r3, #32
 1588 0076 3DD0     		beq	.L76
 1589              		.loc 1 743 0 is_stmt 0 discriminator 1
 1590 0078 0122     		movs	r2, #1
 1591 007a 4FF48051 		mov	r1, #4096
 1592 007e 2948     		ldr	r0, .L84+4
 1593 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1594              	.LVL83:
 1595              	.L77:
 744:Src/main.c    ****   ((output_val>>6)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_13, GPIO_PIN_SET) : HAL_GPIO_Writ
 1596              		.loc 1 744 0 is_stmt 1
 1597 0084 264B     		ldr	r3, .L84
 1598 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1599 0088 13F0400F 		tst	r3, #64
 1600 008c 39D0     		beq	.L78
 1601              		.loc 1 744 0 is_stmt 0 discriminator 1
 1602 008e 0122     		movs	r2, #1
 1603 0090 4FF40051 		mov	r1, #8192
 1604 0094 2348     		ldr	r0, .L84+4
 1605 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1606              	.LVL84:
 1607              	.L79:
 745:Src/main.c    ****   ((output_val>>7)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_14, GPIO_PIN_SET) : HAL_GPIO_Writ
 1608              		.loc 1 745 0 is_stmt 1
 1609 009a 214B     		ldr	r3, .L84
 1610 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1611 009e DB09     		lsrs	r3, r3, #7
 1612 00a0 36D1     		bne	.L83
 1613              		.loc 1 745 0 is_stmt 0 discriminator 2
 1614 00a2 0022     		movs	r2, #0
 1615 00a4 4FF48041 		mov	r1, #16384
 1616 00a8 1E48     		ldr	r0, .L84+4
 1617 00aa FFF7FEFF 		bl	HAL_GPIO_WritePin
 1618              	.LVL85:
 1619 00ae 08BD     		pop	{r3, pc}
 1620              	.L66:
 738:Src/main.c    ****   ((output_val>>1)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_8, GPIO_PIN_SET) : HAL_GPIO_Write
 1621              		.loc 1 738 0 is_stmt 1 discriminator 2
 1622 00b0 0022     		movs	r2, #0
 1623 00b2 8021     		movs	r1, #128
 1624 00b4 1B48     		ldr	r0, .L84+4
 1625 00b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1626              	.LVL86:
 1627 00ba ACE7     		b	.L67
 1628              	.L68:
 739:Src/main.c    ****   ((output_val>>2)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_9, GPIO_PIN_SET) : HAL_GPIO_Write
 1629              		.loc 1 739 0 discriminator 2
ARM GAS  /tmp/cc7mjtlt.s 			page 44


 1630 00bc 0022     		movs	r2, #0
 1631 00be 4FF48071 		mov	r1, #256
 1632 00c2 1848     		ldr	r0, .L84+4
 1633 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1634              	.LVL87:
 1635 00c8 B0E7     		b	.L69
 1636              	.L70:
 740:Src/main.c    ****   ((output_val>>3)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_10, GPIO_PIN_SET) : HAL_GPIO_Writ
 1637              		.loc 1 740 0 discriminator 2
 1638 00ca 0022     		movs	r2, #0
 1639 00cc 4FF40071 		mov	r1, #512
 1640 00d0 1448     		ldr	r0, .L84+4
 1641 00d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1642              	.LVL88:
 1643 00d6 B4E7     		b	.L71
 1644              	.L72:
 741:Src/main.c    ****   ((output_val>>4)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET) : HAL_GPIO_Writ
 1645              		.loc 1 741 0 discriminator 2
 1646 00d8 0022     		movs	r2, #0
 1647 00da 4FF48061 		mov	r1, #1024
 1648 00de 1148     		ldr	r0, .L84+4
 1649 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1650              	.LVL89:
 1651 00e4 B8E7     		b	.L73
 1652              	.L74:
 742:Src/main.c    ****   ((output_val>>5)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET) : HAL_GPIO_Writ
 1653              		.loc 1 742 0 discriminator 2
 1654 00e6 0022     		movs	r2, #0
 1655 00e8 4FF40061 		mov	r1, #2048
 1656 00ec 0D48     		ldr	r0, .L84+4
 1657 00ee FFF7FEFF 		bl	HAL_GPIO_WritePin
 1658              	.LVL90:
 1659 00f2 BCE7     		b	.L75
 1660              	.L76:
 743:Src/main.c    ****   ((output_val>>6)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_13, GPIO_PIN_SET) : HAL_GPIO_Writ
 1661              		.loc 1 743 0 discriminator 2
 1662 00f4 0022     		movs	r2, #0
 1663 00f6 4FF48051 		mov	r1, #4096
 1664 00fa 0A48     		ldr	r0, .L84+4
 1665 00fc FFF7FEFF 		bl	HAL_GPIO_WritePin
 1666              	.LVL91:
 1667 0100 C0E7     		b	.L77
 1668              	.L78:
 744:Src/main.c    ****   ((output_val>>7)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_14, GPIO_PIN_SET) : HAL_GPIO_Writ
 1669              		.loc 1 744 0 discriminator 2
 1670 0102 0022     		movs	r2, #0
 1671 0104 4FF40051 		mov	r1, #8192
 1672 0108 0648     		ldr	r0, .L84+4
 1673 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1674              	.LVL92:
 1675 010e C4E7     		b	.L79
 1676              	.L83:
 1677              		.loc 1 745 0 discriminator 1
 1678 0110 0122     		movs	r2, #1
 1679 0112 4FF48041 		mov	r1, #16384
 1680 0116 0348     		ldr	r0, .L84+4
 1681 0118 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/cc7mjtlt.s 			page 45


 1682              	.LVL93:
 1683 011c 08BD     		pop	{r3, pc}
 1684              	.L85:
 1685 011e 00BF     		.align	2
 1686              	.L84:
 1687 0120 00000000 		.word	.LANCHOR3
 1688 0124 00100240 		.word	1073876992
 1689              		.cfi_endproc
 1690              	.LFE141:
 1692              		.section	.text.Error_Handler,"ax",%progbits
 1693              		.align	1
 1694              		.global	Error_Handler
 1695              		.syntax unified
 1696              		.thumb
 1697              		.thumb_func
 1698              		.fpu fpv4-sp-d16
 1700              	Error_Handler:
 1701              	.LFB142:
 746:Src/main.c    **** }
 747:Src/main.c    **** /* USER CODE END 4 */
 748:Src/main.c    **** 
 749:Src/main.c    **** /**
 750:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 751:Src/main.c    ****   * @retval None
 752:Src/main.c    ****   */
 753:Src/main.c    **** void Error_Handler(void)
 754:Src/main.c    **** {
 1702              		.loc 1 754 0
 1703              		.cfi_startproc
 1704              		@ args = 0, pretend = 0, frame = 0
 1705              		@ frame_needed = 0, uses_anonymous_args = 0
 1706              		@ link register save eliminated.
 1707 0000 7047     		bx	lr
 1708              		.cfi_endproc
 1709              	.LFE142:
 1711              		.global	MIDI_flag
 1712              		.global	update_value_flag
 1713              		.global	note_freq
 1714              		.global	note_on
 1715              		.comm	env_state,48,4
 1716              		.global	envelope
 1717              		.global	envelope_index
 1718              		.global	output_val
 1719              		.global	phase_accumulator
 1720              		.global	current_midi_note_msg
 1721              		.global	inv_voices
 1722              		.comm	spi_rx_buffer,3,4
 1723              		.global	spi_tx_buffer
 1724              		.comm	huart1,64,4
 1725              		.comm	htim6,64,4
 1726              		.comm	hspi5,88,4
 1727              		.comm	hdac,20,4
 1728              		.comm	lfo_sine,256,4
 1729              		.comm	base_sq,4096,4
 1730              		.comm	base_tri,4096,4
 1731              		.comm	base_neg_saw,4096,4
 1732              		.comm	base_pos_saw,4096,4
ARM GAS  /tmp/cc7mjtlt.s 			page 46


 1733              		.comm	base_sine,4096,4
 1734              		.section	.bss.MIDI_flag,"aw",%nobits
 1735              		.set	.LANCHOR1,. + 0
 1738              	MIDI_flag:
 1739 0000 00       		.space	1
 1740              		.section	.bss.current_midi_note_msg,"aw",%nobits
 1741              		.align	2
 1742              		.set	.LANCHOR0,. + 0
 1745              	current_midi_note_msg:
 1746 0000 000000   		.space	3
 1747              		.section	.bss.envelope,"aw",%nobits
 1748              		.align	2
 1749              		.set	.LANCHOR7,. + 0
 1752              	envelope:
 1753 0000 00000000 		.space	192
 1753      00000000 
 1753      00000000 
 1753      00000000 
 1753      00000000 
 1754              		.section	.bss.envelope_index,"aw",%nobits
 1755              		.align	2
 1756              		.set	.LANCHOR6,. + 0
 1759              	envelope_index:
 1760 0000 00000000 		.space	192
 1760      00000000 
 1760      00000000 
 1760      00000000 
 1760      00000000 
 1761              		.section	.bss.note_freq,"aw",%nobits
 1762              		.align	2
 1763              		.set	.LANCHOR4,. + 0
 1766              	note_freq:
 1767 0000 00000000 		.space	48
 1767      00000000 
 1767      00000000 
 1767      00000000 
 1767      00000000 
 1768              		.section	.bss.note_on,"aw",%nobits
 1769              		.align	2
 1770              		.set	.LANCHOR8,. + 0
 1773              	note_on:
 1774 0000 00000000 		.space	88
 1774      00000000 
 1774      00000000 
 1774      00000000 
 1774      00000000 
 1775              		.section	.bss.output_val,"aw",%nobits
 1776              		.set	.LANCHOR3,. + 0
 1779              	output_val:
 1780 0000 00       		.space	1
 1781              		.section	.bss.phase_accumulator,"aw",%nobits
 1782              		.align	2
 1783              		.set	.LANCHOR5,. + 0
 1786              	phase_accumulator:
 1787 0000 00000000 		.space	192
 1787      00000000 
 1787      00000000 
ARM GAS  /tmp/cc7mjtlt.s 			page 47


 1787      00000000 
 1787      00000000 
 1788              		.section	.bss.update_value_flag,"aw",%nobits
 1789              		.set	.LANCHOR2,. + 0
 1792              	update_value_flag:
 1793 0000 00       		.space	1
 1794              		.section	.data.spi_tx_buffer,"aw",%progbits
 1795              		.align	2
 1798              	spi_tx_buffer:
 1799 0000 31       		.byte	49
 1800 0001 32       		.byte	50
 1801 0002 33       		.byte	51
 1802              		.section	.rodata.inv_voices,"a",%progbits
 1803              		.align	2
 1806              	inv_voices:
 1807 0000 ABAAAA3C 		.word	1017817771
 1808              		.text
 1809              	.Letext0:
 1810              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1811              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1812              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1813              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1814              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 1815              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1816              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1817              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1818              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1819              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1820              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dac.h"
 1821              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1822              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1823              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1824              		.file 16 "Inc/midi.h"
 1825              		.file 17 "/usr/include/newlib/sys/lock.h"
 1826              		.file 18 "/usr/include/newlib/sys/_types.h"
 1827              		.file 19 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1828              		.file 20 "/usr/include/newlib/sys/reent.h"
 1829              		.file 21 "/usr/include/newlib/stdlib.h"
 1830              		.file 22 "Inc/waves.h"
 1831              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1832              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/cc7mjtlt.s 			page 48


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc7mjtlt.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc7mjtlt.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc7mjtlt.s:485    .text.MX_GPIO_Init:00000000000002c0 $d
     /tmp/cc7mjtlt.s:496    .text.MX_GPIO_Init:00000000000002e4 $t
     /tmp/cc7mjtlt.s:624    .text.MX_GPIO_Init:00000000000003a0 $d
     /tmp/cc7mjtlt.s:634    .text.MX_SPI5_Init:0000000000000000 $t
     /tmp/cc7mjtlt.s:640    .text.MX_SPI5_Init:0000000000000000 MX_SPI5_Init
     /tmp/cc7mjtlt.s:684    .text.MX_SPI5_Init:0000000000000028 $d
                            *COM*:0000000000000058 hspi5
     /tmp/cc7mjtlt.s:690    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/cc7mjtlt.s:696    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/cc7mjtlt.s:735    .text.MX_USART1_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart1
     /tmp/cc7mjtlt.s:741    .text.MX_DAC_Init:0000000000000000 $t
     /tmp/cc7mjtlt.s:747    .text.MX_DAC_Init:0000000000000000 MX_DAC_Init
     /tmp/cc7mjtlt.s:793    .text.MX_DAC_Init:0000000000000028 $d
                            *COM*:0000000000000014 hdac
     /tmp/cc7mjtlt.s:799    .text.MX_TIM6_Init:0000000000000000 $t
     /tmp/cc7mjtlt.s:805    .text.MX_TIM6_Init:0000000000000000 MX_TIM6_Init
     /tmp/cc7mjtlt.s:859    .text.MX_TIM6_Init:0000000000000034 $d
                            *COM*:0000000000000040 htim6
     /tmp/cc7mjtlt.s:865    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc7mjtlt.s:872    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc7mjtlt.s:980    .text.SystemClock_Config:0000000000000090 $d
     /tmp/cc7mjtlt.s:986    .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/cc7mjtlt.s:993    .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/cc7mjtlt.s:1020   .text.HAL_SPI_TxRxCpltCallback:0000000000000018 $d
                            *COM*:0000000000000003 spi_rx_buffer
     /tmp/cc7mjtlt.s:1027   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cc7mjtlt.s:1034   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cc7mjtlt.s:1060   .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/cc7mjtlt.s:1069   .text.UpdateOutputValue:0000000000000000 $t
     /tmp/cc7mjtlt.s:1076   .text.UpdateOutputValue:0000000000000000 UpdateOutputValue
     /tmp/cc7mjtlt.s:1167   .text.UpdateOutputValue:0000000000000080 $d
                            *COM*:0000000000001000 base_sine
     /tmp/cc7mjtlt.s:1180   .text.UpdateEnvelope:0000000000000000 $t
     /tmp/cc7mjtlt.s:1187   .text.UpdateEnvelope:0000000000000000 UpdateEnvelope
     /tmp/cc7mjtlt.s:1228   .text.UpdateEnvelope:0000000000000030 $d
     /tmp/cc7mjtlt.s:1233   .text.UpdateEnvelope:0000000000000044 $t
     /tmp/cc7mjtlt.s:1354   .text.UpdateEnvelope:0000000000000138 $d
                            *COM*:0000000000000030 env_state
                            *COM*:0000000000001000 base_pos_saw
                            *COM*:0000000000001000 base_neg_saw
     /tmp/cc7mjtlt.s:1365   .text.main:0000000000000000 $t
     /tmp/cc7mjtlt.s:1372   .text.main:0000000000000000 main
     /tmp/cc7mjtlt.s:1492   .text.main:000000000000008c $d
     /tmp/cc7mjtlt.s:1506   .text.Update_R2R_DAC:0000000000000000 $t
     /tmp/cc7mjtlt.s:1513   .text.Update_R2R_DAC:0000000000000000 Update_R2R_DAC
     /tmp/cc7mjtlt.s:1687   .text.Update_R2R_DAC:0000000000000120 $d
     /tmp/cc7mjtlt.s:1693   .text.Error_Handler:0000000000000000 $t
     /tmp/cc7mjtlt.s:1700   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc7mjtlt.s:1738   .bss.MIDI_flag:0000000000000000 MIDI_flag
     /tmp/cc7mjtlt.s:1792   .bss.update_value_flag:0000000000000000 update_value_flag
     /tmp/cc7mjtlt.s:1766   .bss.note_freq:0000000000000000 note_freq
     /tmp/cc7mjtlt.s:1773   .bss.note_on:0000000000000000 note_on
ARM GAS  /tmp/cc7mjtlt.s 			page 49


     /tmp/cc7mjtlt.s:1752   .bss.envelope:0000000000000000 envelope
     /tmp/cc7mjtlt.s:1759   .bss.envelope_index:0000000000000000 envelope_index
     /tmp/cc7mjtlt.s:1779   .bss.output_val:0000000000000000 output_val
     /tmp/cc7mjtlt.s:1786   .bss.phase_accumulator:0000000000000000 phase_accumulator
     /tmp/cc7mjtlt.s:1745   .bss.current_midi_note_msg:0000000000000000 current_midi_note_msg
     /tmp/cc7mjtlt.s:1806   .rodata.inv_voices:0000000000000000 inv_voices
     /tmp/cc7mjtlt.s:1798   .data.spi_tx_buffer:0000000000000000 spi_tx_buffer
                            *COM*:0000000000000100 lfo_sine
                            *COM*:0000000000001000 base_sq
                            *COM*:0000000000001000 base_tri
     /tmp/cc7mjtlt.s:1739   .bss.MIDI_flag:0000000000000000 $d
     /tmp/cc7mjtlt.s:1741   .bss.current_midi_note_msg:0000000000000000 $d
     /tmp/cc7mjtlt.s:1748   .bss.envelope:0000000000000000 $d
     /tmp/cc7mjtlt.s:1755   .bss.envelope_index:0000000000000000 $d
     /tmp/cc7mjtlt.s:1762   .bss.note_freq:0000000000000000 $d
     /tmp/cc7mjtlt.s:1769   .bss.note_on:0000000000000000 $d
     /tmp/cc7mjtlt.s:1780   .bss.output_val:0000000000000000 $d
     /tmp/cc7mjtlt.s:1782   .bss.phase_accumulator:0000000000000000 $d
     /tmp/cc7mjtlt.s:1793   .bss.update_value_flag:0000000000000000 $d
     /tmp/cc7mjtlt.s:1795   .data.spi_tx_buffer:0000000000000000 $d
     /tmp/cc7mjtlt.s:1803   .rodata.inv_voices:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Init
HAL_UART_Init
HAL_DAC_Init
HAL_DAC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_GPIO_TogglePin
__aeabi_f2d
__aeabi_dmul
__aeabi_d2uiz
midi_notes
HAL_Init
init_wavetable
HAL_TIM_Base_Start_IT
HAL_DAC_Start
HAL_DAC_SetValue
Receive_MIDI
