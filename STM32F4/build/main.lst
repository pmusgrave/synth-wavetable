ARM GAS  /tmp/ccUmEqZm.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB135:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    **** nn  ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "waves.h"
  24:Src/main.c    **** #include "midi.h"
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** 
  28:Src/main.c    **** /* USER CODE END Includes */
  29:Src/main.c    **** 
  30:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  31:Src/main.c    **** /* USER CODE BEGIN PTD */
  32:Src/main.c    **** 
ARM GAS  /tmp/ccUmEqZm.s 			page 2


  33:Src/main.c    **** /* USER CODE END PTD */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PD */
  37:Src/main.c    **** #define DDS_SCALE_FACTOR 89.4745833
  38:Src/main.c    **** #define VOICES 2
  39:Src/main.c    **** #define NOT_TRIGGERED 0
  40:Src/main.c    **** #define ATTACK_MODE 1
  41:Src/main.c    **** #define DECAY_MODE 2
  42:Src/main.c    **** #define SUSTAIN_MODE 3
  43:Src/main.c    **** #define RELEASE_MODE 4
  44:Src/main.c    **** /* USER CODE END PD */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  47:Src/main.c    **** /* USER CODE BEGIN PM */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE END PM */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  52:Src/main.c    **** SPI_HandleTypeDef hspi5;
  53:Src/main.c    **** TIM_HandleTypeDef htim6;
  54:Src/main.c    **** UART_HandleTypeDef huart1;
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE BEGIN PV */
  57:Src/main.c    **** uint8_t spi_tx_buffer[3] = {49,50,51};
  58:Src/main.c    **** uint8_t spi_rx_buffer[3];
  59:Src/main.c    **** volatile struct midi_note_msg current_midi_note_msg = {0,0,0};
  60:Src/main.c    **** volatile uint32_t phase_accumulator[VOICES] = {0};
  61:Src/main.c    **** volatile uint8_t output_val = 0;
  62:Src/main.c    **** volatile uint32_t envelope_index[VOICES] = {0};
  63:Src/main.c    **** volatile float envelope[VOICES] = {0};
  64:Src/main.c    **** volatile uint8_t env_state[VOICES] = {1,1};
  65:Src/main.c    **** volatile uint8_t note_on[88] = {0};
  66:Src/main.c    **** 
  67:Src/main.c    **** volatile uint8_t update_value_flag = 0;
  68:Src/main.c    **** /* USER CODE END PV */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  71:Src/main.c    **** void SystemClock_Config(void);
  72:Src/main.c    **** static void MX_GPIO_Init(void);
  73:Src/main.c    **** static void MX_SPI5_Init(void);
  74:Src/main.c    **** static void MX_USART1_UART_Init(void);
  75:Src/main.c    **** static void MX_TIM6_Init(void);
  76:Src/main.c    **** /* USER CODE BEGIN PFP */
  77:Src/main.c    **** void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi);
  78:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim);
  79:Src/main.c    **** void UpdateOutputValue(void);
  80:Src/main.c    **** void UpdateEnvelope(void);
  81:Src/main.c    **** void Update_R2R_DAC(void);
  82:Src/main.c    **** /* USER CODE END PFP */
  83:Src/main.c    **** 
  84:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  85:Src/main.c    **** /* USER CODE BEGIN 0 */
  86:Src/main.c    **** 
  87:Src/main.c    **** /* USER CODE END 0 */
  88:Src/main.c    **** 
  89:Src/main.c    **** /**
ARM GAS  /tmp/ccUmEqZm.s 			page 3


  90:Src/main.c    ****   * @brief  The application entry point.
  91:Src/main.c    ****   * @retval int
  92:Src/main.c    ****   */
  93:Src/main.c    **** int main(void)
  94:Src/main.c    **** {
  95:Src/main.c    ****   HAL_Init();
  96:Src/main.c    ****   SystemClock_Config();
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Initialize all configured peripherals */
  99:Src/main.c    ****   MX_GPIO_Init();
 100:Src/main.c    ****   MX_SPI5_Init();
 101:Src/main.c    ****   MX_USART1_UART_Init();
 102:Src/main.c    ****   MX_TIM6_Init();
 103:Src/main.c    **** 
 104:Src/main.c    ****   init_wavetable();
 105:Src/main.c    **** 
 106:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim6);
 107:Src/main.c    **** 
 108:Src/main.c    ****   while (1)
 109:Src/main.c    ****   {
 110:Src/main.c    ****     Receive_MIDI(&hspi5, spi_rx_buffer);
 111:Src/main.c    **** 
 112:Src/main.c    ****     if(update_value_flag) {
 113:Src/main.c    ****       UpdateEnvelope();
 114:Src/main.c    ****       UpdateOutputValue();
 115:Src/main.c    ****       update_value_flag = 0;
 116:Src/main.c    ****     }
 117:Src/main.c    **** 
 118:Src/main.c    ****     Update_R2R_DAC();
 119:Src/main.c    ****   }
 120:Src/main.c    **** }
 121:Src/main.c    **** 
 122:Src/main.c    **** /**
 123:Src/main.c    ****   * @brief System Clock Configuration
 124:Src/main.c    ****   * @retval None
 125:Src/main.c    ****   */
 126:Src/main.c    **** void SystemClock_Config(void)
 127:Src/main.c    **** {
 128:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 129:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 130:Src/main.c    **** 
 131:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 132:Src/main.c    ****   */
 133:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 134:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 135:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 136:Src/main.c    ****   */
 137:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 138:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 139:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 140:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 50;
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 146:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /tmp/ccUmEqZm.s 			page 4


 147:Src/main.c    ****   {
 148:Src/main.c    ****     Error_Handler();
 149:Src/main.c    ****   }
 150:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 151:Src/main.c    ****   */
 152:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 153:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 154:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 155:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 156:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 157:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 158:Src/main.c    **** 
 159:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 160:Src/main.c    ****   {
 161:Src/main.c    ****     Error_Handler();
 162:Src/main.c    ****   }
 163:Src/main.c    **** }
 164:Src/main.c    **** 
 165:Src/main.c    **** /**
 166:Src/main.c    ****   * @brief SPI5 Initialization Function
 167:Src/main.c    ****   * @param None
 168:Src/main.c    ****   * @retval None
 169:Src/main.c    ****   */
 170:Src/main.c    **** static void MX_SPI5_Init(void)
 171:Src/main.c    **** {
 172:Src/main.c    **** 
 173:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 0 */
 174:Src/main.c    **** 
 175:Src/main.c    ****   /* USER CODE END SPI5_Init 0 */
 176:Src/main.c    **** 
 177:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 1 */
 178:Src/main.c    **** 
 179:Src/main.c    ****   /* USER CODE END SPI5_Init 1 */
 180:Src/main.c    ****   /* SPI5 parameter configuration*/
 181:Src/main.c    ****   hspi5.Instance = SPI5;
 182:Src/main.c    ****   hspi5.Init.Mode = SPI_MODE_SLAVE;
 183:Src/main.c    ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 184:Src/main.c    ****   hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 185:Src/main.c    ****   hspi5.Init.CLKPolarity = SPI_POLARITY_HIGH;
 186:Src/main.c    ****   hspi5.Init.CLKPhase = SPI_PHASE_2EDGE;
 187:Src/main.c    ****   hspi5.Init.NSS = SPI_NSS_HARD_INPUT;
 188:Src/main.c    ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 189:Src/main.c    ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 190:Src/main.c    ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 191:Src/main.c    ****   hspi5.Init.CRCPolynomial = 10;
 192:Src/main.c    ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 193:Src/main.c    ****   {
 194:Src/main.c    ****     Error_Handler();
 195:Src/main.c    ****   }
 196:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 2 */
 197:Src/main.c    **** 
 198:Src/main.c    ****   /* USER CODE END SPI5_Init 2 */
 199:Src/main.c    **** 
 200:Src/main.c    **** }
 201:Src/main.c    **** 
 202:Src/main.c    **** /**
 203:Src/main.c    ****   * @brief TIM6 Initialization Function
ARM GAS  /tmp/ccUmEqZm.s 			page 5


 204:Src/main.c    ****   * @param None
 205:Src/main.c    ****   * @retval None
 206:Src/main.c    ****   */
 207:Src/main.c    **** static void MX_TIM6_Init(void)
 208:Src/main.c    **** {
 209:Src/main.c    **** 
 210:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 0 */
 211:Src/main.c    **** 
 212:Src/main.c    ****   /* USER CODE END TIM6_Init 0 */
 213:Src/main.c    **** 
 214:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 215:Src/main.c    **** 
 216:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 1 */
 217:Src/main.c    **** 
 218:Src/main.c    ****   /* USER CODE END TIM6_Init 1 */
 219:Src/main.c    ****   htim6.Instance = TIM6;
 220:Src/main.c    ****   htim6.Init.Prescaler = 0;
 221:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 222:Src/main.c    ****   htim6.Init.Period = 129;
 223:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 224:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 225:Src/main.c    ****   {
 226:Src/main.c    ****     Error_Handler();
 227:Src/main.c    ****   }
 228:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 229:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 230:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 231:Src/main.c    ****   {
 232:Src/main.c    ****     Error_Handler();
 233:Src/main.c    ****   }
 234:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 2 */
 235:Src/main.c    **** 
 236:Src/main.c    ****   /* USER CODE END TIM6_Init 2 */
 237:Src/main.c    **** 
 238:Src/main.c    **** }
 239:Src/main.c    **** 
 240:Src/main.c    **** /**
 241:Src/main.c    ****   * @brief USART1 Initialization Function
 242:Src/main.c    ****   * @param None
 243:Src/main.c    ****   * @retval None
 244:Src/main.c    ****   */
 245:Src/main.c    **** static void MX_USART1_UART_Init(void)
 246:Src/main.c    **** {
 247:Src/main.c    **** 
 248:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 249:Src/main.c    **** 
 250:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 251:Src/main.c    **** 
 252:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 253:Src/main.c    **** 
 254:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 255:Src/main.c    ****   huart1.Instance = USART1;
 256:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 257:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 258:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 259:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 260:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
ARM GAS  /tmp/ccUmEqZm.s 			page 6


 261:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 262:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 263:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 264:Src/main.c    ****   {
 265:Src/main.c    ****     Error_Handler();
 266:Src/main.c    ****   }
 267:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 268:Src/main.c    **** 
 269:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 270:Src/main.c    **** 
 271:Src/main.c    **** }
 272:Src/main.c    **** 
 273:Src/main.c    **** /**
 274:Src/main.c    ****   * @brief GPIO Initialization Function
 275:Src/main.c    ****   * @param None
 276:Src/main.c    ****   * @retval None
 277:Src/main.c    ****   */
 278:Src/main.c    **** static void MX_GPIO_Init(void)
 279:Src/main.c    **** {
  27              		.loc 1 279 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 56
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
  43 0004 8FB0     		sub	sp, sp, #60
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 96
 280:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  46              		.loc 1 280 0
  47 0006 0024     		movs	r4, #0
  48 0008 0994     		str	r4, [sp, #36]
  49 000a 0A94     		str	r4, [sp, #40]
  50 000c 0B94     		str	r4, [sp, #44]
  51 000e 0C94     		str	r4, [sp, #48]
  52 0010 0D94     		str	r4, [sp, #52]
  53              	.LBB2:
 281:Src/main.c    **** 
 282:Src/main.c    ****   /* GPIO Ports Clock Enable */
 283:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  54              		.loc 1 283 0
  55 0012 0194     		str	r4, [sp, #4]
  56 0014 AA4B     		ldr	r3, .L3
  57 0016 1A6B     		ldr	r2, [r3, #48]
  58 0018 42F00402 		orr	r2, r2, #4
  59 001c 1A63     		str	r2, [r3, #48]
  60 001e 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/ccUmEqZm.s 			page 7


  61 0020 02F00402 		and	r2, r2, #4
  62 0024 0192     		str	r2, [sp, #4]
  63 0026 019A     		ldr	r2, [sp, #4]
  64              	.LBE2:
  65              	.LBB3:
 284:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  66              		.loc 1 284 0
  67 0028 0294     		str	r4, [sp, #8]
  68 002a 1A6B     		ldr	r2, [r3, #48]
  69 002c 42F02002 		orr	r2, r2, #32
  70 0030 1A63     		str	r2, [r3, #48]
  71 0032 1A6B     		ldr	r2, [r3, #48]
  72 0034 02F02002 		and	r2, r2, #32
  73 0038 0292     		str	r2, [sp, #8]
  74 003a 029A     		ldr	r2, [sp, #8]
  75              	.LBE3:
  76              	.LBB4:
 285:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  77              		.loc 1 285 0
  78 003c 0394     		str	r4, [sp, #12]
  79 003e 1A6B     		ldr	r2, [r3, #48]
  80 0040 42F08002 		orr	r2, r2, #128
  81 0044 1A63     		str	r2, [r3, #48]
  82 0046 1A6B     		ldr	r2, [r3, #48]
  83 0048 02F08002 		and	r2, r2, #128
  84 004c 0392     		str	r2, [sp, #12]
  85 004e 039A     		ldr	r2, [sp, #12]
  86              	.LBE4:
  87              	.LBB5:
 286:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  88              		.loc 1 286 0
  89 0050 0494     		str	r4, [sp, #16]
  90 0052 1A6B     		ldr	r2, [r3, #48]
  91 0054 42F00102 		orr	r2, r2, #1
  92 0058 1A63     		str	r2, [r3, #48]
  93 005a 1A6B     		ldr	r2, [r3, #48]
  94 005c 02F00102 		and	r2, r2, #1
  95 0060 0492     		str	r2, [sp, #16]
  96 0062 049A     		ldr	r2, [sp, #16]
  97              	.LBE5:
  98              	.LBB6:
 287:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  99              		.loc 1 287 0
 100 0064 0594     		str	r4, [sp, #20]
 101 0066 1A6B     		ldr	r2, [r3, #48]
 102 0068 42F00202 		orr	r2, r2, #2
 103 006c 1A63     		str	r2, [r3, #48]
 104 006e 1A6B     		ldr	r2, [r3, #48]
 105 0070 02F00202 		and	r2, r2, #2
 106 0074 0592     		str	r2, [sp, #20]
 107 0076 059A     		ldr	r2, [sp, #20]
 108              	.LBE6:
 109              	.LBB7:
 288:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 110              		.loc 1 288 0
 111 0078 0694     		str	r4, [sp, #24]
 112 007a 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/ccUmEqZm.s 			page 8


 113 007c 42F04002 		orr	r2, r2, #64
 114 0080 1A63     		str	r2, [r3, #48]
 115 0082 1A6B     		ldr	r2, [r3, #48]
 116 0084 02F04002 		and	r2, r2, #64
 117 0088 0692     		str	r2, [sp, #24]
 118 008a 069A     		ldr	r2, [sp, #24]
 119              	.LBE7:
 120              	.LBB8:
 289:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 121              		.loc 1 289 0
 122 008c 0794     		str	r4, [sp, #28]
 123 008e 1A6B     		ldr	r2, [r3, #48]
 124 0090 42F01002 		orr	r2, r2, #16
 125 0094 1A63     		str	r2, [r3, #48]
 126 0096 1A6B     		ldr	r2, [r3, #48]
 127 0098 02F01002 		and	r2, r2, #16
 128 009c 0792     		str	r2, [sp, #28]
 129 009e 079A     		ldr	r2, [sp, #28]
 130              	.LBE8:
 131              	.LBB9:
 290:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 132              		.loc 1 290 0
 133 00a0 0894     		str	r4, [sp, #32]
 134 00a2 1A6B     		ldr	r2, [r3, #48]
 135 00a4 42F00802 		orr	r2, r2, #8
 136 00a8 1A63     		str	r2, [r3, #48]
 137 00aa 1B6B     		ldr	r3, [r3, #48]
 138 00ac 03F00803 		and	r3, r3, #8
 139 00b0 0893     		str	r3, [sp, #32]
 140 00b2 089B     		ldr	r3, [sp, #32]
 141              	.LBE9:
 291:Src/main.c    **** 
 292:Src/main.c    ****   /*Configure GPIO pin Output Level */
 293:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin, GPIO_PIN_RESET);
 142              		.loc 1 293 0
 143 00b4 2246     		mov	r2, r4
 144 00b6 1621     		movs	r1, #22
 145 00b8 8248     		ldr	r0, .L3+4
 146 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 147              	.LVL0:
 294:Src/main.c    **** 
 295:Src/main.c    ****   /*Configure GPIO pin Output Level */
 296:Src/main.c    ****   HAL_GPIO_WritePin(ACP_RST_GPIO_Port, ACP_RST_Pin, GPIO_PIN_RESET);
 148              		.loc 1 296 0
 149 00be 2246     		mov	r2, r4
 150 00c0 8021     		movs	r1, #128
 151 00c2 8148     		ldr	r0, .L3+8
 152 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 153              	.LVL1:
 297:Src/main.c    **** 
 298:Src/main.c    ****   /*Configure GPIO pin Output Level */
 299:Src/main.c    ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15, GPIO_PIN_RESET);
 154              		.loc 1 299 0
 155 00c8 DFF810A2 		ldr	r10, .L3+28
 156 00cc 2246     		mov	r2, r4
 157 00ce 4FF46041 		mov	r1, #57344
 158 00d2 5046     		mov	r0, r10
ARM GAS  /tmp/ccUmEqZm.s 			page 9


 159 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 160              	.LVL2:
 300:Src/main.c    **** 
 301:Src/main.c    ****   /*Configure GPIO pin Output Level */
 302:Src/main.c    ****   HAL_GPIO_WritePin(GPIOG, GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD4_Pin, GPIO_PIN_RESET);
 161              		.loc 1 302 0
 162 00d8 2246     		mov	r2, r4
 163 00da 46F20301 		movw	r1, #24579
 164 00de 7B48     		ldr	r0, .L3+12
 165 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 166              	.LVL3:
 303:Src/main.c    **** 
 304:Src/main.c    ****   /*Configure GPIO pin Output Level */
 305:Src/main.c    ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 167              		.loc 1 305 0
 168 00e4 2246     		mov	r2, r4
 169 00e6 4FF68071 		movw	r1, #65408
 170 00ea 7948     		ldr	r0, .L3+16
 171 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 172              	.LVL4:
 306:Src/main.c    ****                           |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
 307:Src/main.c    ****                           |GPIO_PIN_15, GPIO_PIN_RESET);
 308:Src/main.c    **** 
 309:Src/main.c    ****   /*Configure GPIO pin Output Level */
 310:Src/main.c    ****   HAL_GPIO_WritePin(GPIOD, RDX_Pin|WRX_DCX_Pin, GPIO_PIN_RESET);
 173              		.loc 1 310 0
 174 00f0 2246     		mov	r2, r4
 175 00f2 4FF44051 		mov	r1, #12288
 176 00f6 7748     		ldr	r0, .L3+20
 177 00f8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 178              	.LVL5:
 311:Src/main.c    **** 
 312:Src/main.c    ****   /*Configure GPIO pins : A0_Pin A1_Pin A2_Pin A3_Pin 
 313:Src/main.c    ****                            A4_Pin A5_Pin SDNRAS_Pin A6_Pin */
 314:Src/main.c    ****   GPIO_InitStruct.Pin = A0_Pin|A1_Pin|A2_Pin|A3_Pin 
 179              		.loc 1 314 0
 180 00fc 41F63F03 		movw	r3, #6207
 181 0100 0993     		str	r3, [sp, #36]
 315:Src/main.c    ****                           |A4_Pin|A5_Pin|SDNRAS_Pin|A6_Pin;
 316:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 182              		.loc 1 316 0
 183 0102 0225     		movs	r5, #2
 184 0104 0A95     		str	r5, [sp, #40]
 317:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 185              		.loc 1 317 0
 186 0106 0B94     		str	r4, [sp, #44]
 318:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 187              		.loc 1 318 0
 188 0108 0327     		movs	r7, #3
 189 010a 0C97     		str	r7, [sp, #48]
 319:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 190              		.loc 1 319 0
 191 010c 4FF00C08 		mov	r8, #12
 192 0110 CDF83480 		str	r8, [sp, #52]
 320:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 193              		.loc 1 320 0
 194 0114 09A9     		add	r1, sp, #36
ARM GAS  /tmp/ccUmEqZm.s 			page 10


 195 0116 5046     		mov	r0, r10
 196 0118 FFF7FEFF 		bl	HAL_GPIO_Init
 197              	.LVL6:
 321:Src/main.c    **** 
 322:Src/main.c    ****   /*Configure GPIO pin : ENABLE_Pin */
 323:Src/main.c    ****   GPIO_InitStruct.Pin = ENABLE_Pin;
 198              		.loc 1 323 0
 199 011c 4FF48063 		mov	r3, #1024
 200 0120 0993     		str	r3, [sp, #36]
 324:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 201              		.loc 1 324 0
 202 0122 0A95     		str	r5, [sp, #40]
 325:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 203              		.loc 1 325 0
 204 0124 0B94     		str	r4, [sp, #44]
 326:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 205              		.loc 1 326 0
 206 0126 0C94     		str	r4, [sp, #48]
 327:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 207              		.loc 1 327 0
 208 0128 4FF00E09 		mov	r9, #14
 209 012c CDF83490 		str	r9, [sp, #52]
 328:Src/main.c    ****   HAL_GPIO_Init(ENABLE_GPIO_Port, &GPIO_InitStruct);
 210              		.loc 1 328 0
 211 0130 09A9     		add	r1, sp, #36
 212 0132 5046     		mov	r0, r10
 213 0134 FFF7FEFF 		bl	HAL_GPIO_Init
 214              	.LVL7:
 329:Src/main.c    **** 
 330:Src/main.c    ****   /*Configure GPIO pin : SDNWE_Pin */
 331:Src/main.c    ****   GPIO_InitStruct.Pin = SDNWE_Pin;
 215              		.loc 1 331 0
 216 0138 0126     		movs	r6, #1
 217 013a 0996     		str	r6, [sp, #36]
 332:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 218              		.loc 1 332 0
 219 013c 0A95     		str	r5, [sp, #40]
 333:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 220              		.loc 1 333 0
 221 013e 0B94     		str	r4, [sp, #44]
 334:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 222              		.loc 1 334 0
 223 0140 0C97     		str	r7, [sp, #48]
 335:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 224              		.loc 1 335 0
 225 0142 CDF83480 		str	r8, [sp, #52]
 336:Src/main.c    ****   HAL_GPIO_Init(SDNWE_GPIO_Port, &GPIO_InitStruct);
 226              		.loc 1 336 0
 227 0146 09A9     		add	r1, sp, #36
 228 0148 5E48     		ldr	r0, .L3+4
 229 014a FFF7FEFF 		bl	HAL_GPIO_Init
 230              	.LVL8:
 337:Src/main.c    **** 
 338:Src/main.c    ****   /*Configure GPIO pins : NCS_MEMS_SPI_Pin CSX_Pin OTG_FS_PSO_Pin */
 339:Src/main.c    ****   GPIO_InitStruct.Pin = NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin;
 231              		.loc 1 339 0
 232 014e 1623     		movs	r3, #22
ARM GAS  /tmp/ccUmEqZm.s 			page 11


 233 0150 0993     		str	r3, [sp, #36]
 340:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 234              		.loc 1 340 0
 235 0152 0A96     		str	r6, [sp, #40]
 341:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 236              		.loc 1 341 0
 237 0154 0B94     		str	r4, [sp, #44]
 342:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 238              		.loc 1 342 0
 239 0156 0C94     		str	r4, [sp, #48]
 343:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 240              		.loc 1 343 0
 241 0158 09A9     		add	r1, sp, #36
 242 015a 5A48     		ldr	r0, .L3+4
 243 015c FFF7FEFF 		bl	HAL_GPIO_Init
 244              	.LVL9:
 344:Src/main.c    **** 
 345:Src/main.c    ****   /*Configure GPIO pins : B1_Pin MEMS_INT1_Pin MEMS_INT2_Pin TP_INT1_Pin */
 346:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin|MEMS_INT1_Pin|MEMS_INT2_Pin|TP_INT1_Pin;
 245              		.loc 1 346 0
 246 0160 48F20703 		movw	r3, #32775
 247 0164 0993     		str	r3, [sp, #36]
 347:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 248              		.loc 1 347 0
 249 0166 DFF878B1 		ldr	fp, .L3+32
 250 016a CDF828B0 		str	fp, [sp, #40]
 348:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 251              		.loc 1 348 0
 252 016e 0B94     		str	r4, [sp, #44]
 349:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 253              		.loc 1 349 0
 254 0170 09A9     		add	r1, sp, #36
 255 0172 5548     		ldr	r0, .L3+8
 256 0174 FFF7FEFF 		bl	HAL_GPIO_Init
 257              	.LVL10:
 350:Src/main.c    **** 
 351:Src/main.c    ****   /*Configure GPIO pins : B5_Pin VSYNC_Pin G2_Pin R4_Pin 
 352:Src/main.c    ****                            R5_Pin */
 353:Src/main.c    ****   GPIO_InitStruct.Pin = B5_Pin|VSYNC_Pin|G2_Pin|R4_Pin 
 258              		.loc 1 353 0
 259 0178 41F65803 		movw	r3, #6232
 260 017c 0993     		str	r3, [sp, #36]
 354:Src/main.c    ****                           |R5_Pin;
 355:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 261              		.loc 1 355 0
 262 017e 0A95     		str	r5, [sp, #40]
 356:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 263              		.loc 1 356 0
 264 0180 0B94     		str	r4, [sp, #44]
 357:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 265              		.loc 1 357 0
 266 0182 0C94     		str	r4, [sp, #48]
 358:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 267              		.loc 1 358 0
 268 0184 CDF83490 		str	r9, [sp, #52]
 359:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 269              		.loc 1 359 0
ARM GAS  /tmp/ccUmEqZm.s 			page 12


 270 0188 09A9     		add	r1, sp, #36
 271 018a 4F48     		ldr	r0, .L3+8
 272 018c FFF7FEFF 		bl	HAL_GPIO_Init
 273              	.LVL11:
 360:Src/main.c    **** 
 361:Src/main.c    ****   /*Configure GPIO pin : ACP_RST_Pin */
 362:Src/main.c    ****   GPIO_InitStruct.Pin = ACP_RST_Pin;
 274              		.loc 1 362 0
 275 0190 8023     		movs	r3, #128
 276 0192 0993     		str	r3, [sp, #36]
 363:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 277              		.loc 1 363 0
 278 0194 0A96     		str	r6, [sp, #40]
 364:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 279              		.loc 1 364 0
 280 0196 0B94     		str	r4, [sp, #44]
 365:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 281              		.loc 1 365 0
 282 0198 0C94     		str	r4, [sp, #48]
 366:Src/main.c    ****   HAL_GPIO_Init(ACP_RST_GPIO_Port, &GPIO_InitStruct);
 283              		.loc 1 366 0
 284 019a 09A9     		add	r1, sp, #36
 285 019c 4A48     		ldr	r0, .L3+8
 286 019e FFF7FEFF 		bl	HAL_GPIO_Init
 287              	.LVL12:
 367:Src/main.c    **** 
 368:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_OC_Pin */
 369:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_OC_Pin;
 288              		.loc 1 369 0
 289 01a2 2023     		movs	r3, #32
 290 01a4 0993     		str	r3, [sp, #36]
 370:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 291              		.loc 1 370 0
 292 01a6 CDF828B0 		str	fp, [sp, #40]
 371:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 293              		.loc 1 371 0
 294 01aa 0B94     		str	r4, [sp, #44]
 372:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_OC_GPIO_Port, &GPIO_InitStruct);
 295              		.loc 1 372 0
 296 01ac 09A9     		add	r1, sp, #36
 297 01ae 4548     		ldr	r0, .L3+4
 298 01b0 FFF7FEFF 		bl	HAL_GPIO_Init
 299              	.LVL13:
 373:Src/main.c    **** 
 374:Src/main.c    ****   /*Configure GPIO pins : R3_Pin R6_Pin */
 375:Src/main.c    ****   GPIO_InitStruct.Pin = R3_Pin|R6_Pin;
 300              		.loc 1 375 0
 301 01b4 0997     		str	r7, [sp, #36]
 376:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 302              		.loc 1 376 0
 303 01b6 0A95     		str	r5, [sp, #40]
 377:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 304              		.loc 1 377 0
 305 01b8 0B94     		str	r4, [sp, #44]
 378:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 306              		.loc 1 378 0
 307 01ba 0C94     		str	r4, [sp, #48]
ARM GAS  /tmp/ccUmEqZm.s 			page 13


 379:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 308              		.loc 1 379 0
 309 01bc 0923     		movs	r3, #9
 310 01be 0D93     		str	r3, [sp, #52]
 380:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 311              		.loc 1 380 0
 312 01c0 09A9     		add	r1, sp, #36
 313 01c2 4548     		ldr	r0, .L3+24
 314 01c4 FFF7FEFF 		bl	HAL_GPIO_Init
 315              	.LVL14:
 381:Src/main.c    **** 
 382:Src/main.c    ****   /*Configure GPIO pin : BOOT1_Pin */
 383:Src/main.c    ****   GPIO_InitStruct.Pin = BOOT1_Pin;
 316              		.loc 1 383 0
 317 01c8 4FF0040B 		mov	fp, #4
 318 01cc CDF824B0 		str	fp, [sp, #36]
 384:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 319              		.loc 1 384 0
 320 01d0 0A94     		str	r4, [sp, #40]
 385:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 321              		.loc 1 385 0
 322 01d2 0B94     		str	r4, [sp, #44]
 386:Src/main.c    ****   HAL_GPIO_Init(BOOT1_GPIO_Port, &GPIO_InitStruct);
 323              		.loc 1 386 0
 324 01d4 09A9     		add	r1, sp, #36
 325 01d6 4048     		ldr	r0, .L3+24
 326 01d8 FFF7FEFF 		bl	HAL_GPIO_Init
 327              	.LVL15:
 387:Src/main.c    **** 
 388:Src/main.c    ****   /*Configure GPIO pins : PF13 PF14 PF15 */
 389:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 328              		.loc 1 389 0
 329 01dc 4FF46043 		mov	r3, #57344
 330 01e0 0993     		str	r3, [sp, #36]
 390:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 331              		.loc 1 390 0
 332 01e2 0A96     		str	r6, [sp, #40]
 391:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 333              		.loc 1 391 0
 334 01e4 0B94     		str	r4, [sp, #44]
 392:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 335              		.loc 1 392 0
 336 01e6 0C94     		str	r4, [sp, #48]
 393:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 337              		.loc 1 393 0
 338 01e8 09A9     		add	r1, sp, #36
 339 01ea 5046     		mov	r0, r10
 340 01ec FFF7FEFF 		bl	HAL_GPIO_Init
 341              	.LVL16:
 394:Src/main.c    **** 
 395:Src/main.c    ****   /*Configure GPIO pins : PG0 PG1 LD3_Pin LD4_Pin */
 396:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD4_Pin;
 342              		.loc 1 396 0
 343 01f0 46F20303 		movw	r3, #24579
 344 01f4 0993     		str	r3, [sp, #36]
 397:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 345              		.loc 1 397 0
ARM GAS  /tmp/ccUmEqZm.s 			page 14


 346 01f6 0A96     		str	r6, [sp, #40]
 398:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 347              		.loc 1 398 0
 348 01f8 0B94     		str	r4, [sp, #44]
 399:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 349              		.loc 1 399 0
 350 01fa 0C94     		str	r4, [sp, #48]
 400:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 351              		.loc 1 400 0
 352 01fc 09A9     		add	r1, sp, #36
 353 01fe 3348     		ldr	r0, .L3+12
 354 0200 FFF7FEFF 		bl	HAL_GPIO_Init
 355              	.LVL17:
 401:Src/main.c    **** 
 402:Src/main.c    ****   /*Configure GPIO pins : PE7 PE8 PE9 PE10 
 403:Src/main.c    ****                            PE11 PE12 PE13 PE14 
 404:Src/main.c    ****                            PE15 */
 405:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 356              		.loc 1 405 0
 357 0204 4FF68073 		movw	r3, #65408
 358 0208 0993     		str	r3, [sp, #36]
 406:Src/main.c    ****                           |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
 407:Src/main.c    ****                           |GPIO_PIN_15;
 408:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 359              		.loc 1 408 0
 360 020a 0A96     		str	r6, [sp, #40]
 409:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 361              		.loc 1 409 0
 362 020c 0B94     		str	r4, [sp, #44]
 410:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 363              		.loc 1 410 0
 364 020e 0C94     		str	r4, [sp, #48]
 411:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 365              		.loc 1 411 0
 366 0210 09A9     		add	r1, sp, #36
 367 0212 2F48     		ldr	r0, .L3+16
 368 0214 FFF7FEFF 		bl	HAL_GPIO_Init
 369              	.LVL18:
 412:Src/main.c    **** 
 413:Src/main.c    ****   /*Configure GPIO pins : G4_Pin G5_Pin B6_Pin B7_Pin */
 414:Src/main.c    ****   GPIO_InitStruct.Pin = G4_Pin|G5_Pin|B6_Pin|B7_Pin;
 370              		.loc 1 414 0
 371 0218 4FF47063 		mov	r3, #3840
 372 021c 0993     		str	r3, [sp, #36]
 415:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 373              		.loc 1 415 0
 374 021e 0A95     		str	r5, [sp, #40]
 416:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 375              		.loc 1 416 0
 376 0220 0B94     		str	r4, [sp, #44]
 417:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 377              		.loc 1 417 0
 378 0222 0C94     		str	r4, [sp, #48]
 418:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 379              		.loc 1 418 0
 380 0224 CDF83490 		str	r9, [sp, #52]
 419:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
ARM GAS  /tmp/ccUmEqZm.s 			page 15


 381              		.loc 1 419 0
 382 0228 09A9     		add	r1, sp, #36
 383 022a 2B48     		ldr	r0, .L3+24
 384 022c FFF7FEFF 		bl	HAL_GPIO_Init
 385              	.LVL19:
 420:Src/main.c    **** 
 421:Src/main.c    ****   /*Configure GPIO pins : OTG_HS_ID_Pin OTG_HS_DM_Pin OTG_HS_DP_Pin */
 422:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_HS_ID_Pin|OTG_HS_DM_Pin|OTG_HS_DP_Pin;
 386              		.loc 1 422 0
 387 0230 4FF45043 		mov	r3, #53248
 388 0234 0993     		str	r3, [sp, #36]
 423:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 389              		.loc 1 423 0
 390 0236 0A95     		str	r5, [sp, #40]
 424:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 391              		.loc 1 424 0
 392 0238 0B94     		str	r4, [sp, #44]
 425:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 393              		.loc 1 425 0
 394 023a 0C94     		str	r4, [sp, #48]
 426:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;
 395              		.loc 1 426 0
 396 023c CDF83480 		str	r8, [sp, #52]
 427:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 397              		.loc 1 427 0
 398 0240 09A9     		add	r1, sp, #36
 399 0242 2548     		ldr	r0, .L3+24
 400 0244 FFF7FEFF 		bl	HAL_GPIO_Init
 401              	.LVL20:
 428:Src/main.c    **** 
 429:Src/main.c    ****   /*Configure GPIO pin : VBUS_HS_Pin */
 430:Src/main.c    ****   GPIO_InitStruct.Pin = VBUS_HS_Pin;
 402              		.loc 1 430 0
 403 0248 4FF40053 		mov	r3, #8192
 404 024c 0993     		str	r3, [sp, #36]
 431:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 405              		.loc 1 431 0
 406 024e 0A94     		str	r4, [sp, #40]
 432:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 407              		.loc 1 432 0
 408 0250 0B94     		str	r4, [sp, #44]
 433:Src/main.c    ****   HAL_GPIO_Init(VBUS_HS_GPIO_Port, &GPIO_InitStruct);
 409              		.loc 1 433 0
 410 0252 09A9     		add	r1, sp, #36
 411 0254 2048     		ldr	r0, .L3+24
 412 0256 FFF7FEFF 		bl	HAL_GPIO_Init
 413              	.LVL21:
 434:Src/main.c    **** 
 435:Src/main.c    ****   /*Configure GPIO pins : D13_Pin D14_Pin D15_Pin D0_Pin 
 436:Src/main.c    ****                            D1_Pin D2_Pin D3_Pin */
 437:Src/main.c    ****   GPIO_InitStruct.Pin = D13_Pin|D14_Pin|D15_Pin|D0_Pin 
 414              		.loc 1 437 0
 415 025a 4CF20373 		movw	r3, #50947
 416 025e 0993     		str	r3, [sp, #36]
 438:Src/main.c    ****                           |D1_Pin|D2_Pin|D3_Pin;
 439:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 417              		.loc 1 439 0
ARM GAS  /tmp/ccUmEqZm.s 			page 16


 418 0260 0A95     		str	r5, [sp, #40]
 440:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 419              		.loc 1 440 0
 420 0262 0B94     		str	r4, [sp, #44]
 441:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 421              		.loc 1 441 0
 422 0264 0C97     		str	r7, [sp, #48]
 442:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 423              		.loc 1 442 0
 424 0266 CDF83480 		str	r8, [sp, #52]
 443:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 425              		.loc 1 443 0
 426 026a 09A9     		add	r1, sp, #36
 427 026c 1948     		ldr	r0, .L3+20
 428 026e FFF7FEFF 		bl	HAL_GPIO_Init
 429              	.LVL22:
 444:Src/main.c    **** 
 445:Src/main.c    ****   /*Configure GPIO pin : TE_Pin */
 446:Src/main.c    ****   GPIO_InitStruct.Pin = TE_Pin;
 430              		.loc 1 446 0
 431 0272 4FF40063 		mov	r3, #2048
 432 0276 0993     		str	r3, [sp, #36]
 447:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 433              		.loc 1 447 0
 434 0278 0A94     		str	r4, [sp, #40]
 448:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 435              		.loc 1 448 0
 436 027a 0B94     		str	r4, [sp, #44]
 449:Src/main.c    ****   HAL_GPIO_Init(TE_GPIO_Port, &GPIO_InitStruct);
 437              		.loc 1 449 0
 438 027c 09A9     		add	r1, sp, #36
 439 027e 1548     		ldr	r0, .L3+20
 440 0280 FFF7FEFF 		bl	HAL_GPIO_Init
 441              	.LVL23:
 450:Src/main.c    **** 
 451:Src/main.c    ****   /*Configure GPIO pins : RDX_Pin WRX_DCX_Pin */
 452:Src/main.c    ****   GPIO_InitStruct.Pin = RDX_Pin|WRX_DCX_Pin;
 442              		.loc 1 452 0
 443 0284 4FF44053 		mov	r3, #12288
 444 0288 0993     		str	r3, [sp, #36]
 453:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 445              		.loc 1 453 0
 446 028a 0A96     		str	r6, [sp, #40]
 454:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 447              		.loc 1 454 0
 448 028c 0B94     		str	r4, [sp, #44]
 455:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 449              		.loc 1 455 0
 450 028e 0C94     		str	r4, [sp, #48]
 456:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 451              		.loc 1 456 0
 452 0290 09A9     		add	r1, sp, #36
 453 0292 1048     		ldr	r0, .L3+20
 454 0294 FFF7FEFF 		bl	HAL_GPIO_Init
 455              	.LVL24:
 457:Src/main.c    **** 
 458:Src/main.c    ****   /*Configure GPIO pins : BA0_Pin BA1_Pin SDCLK_Pin SDNCAS_Pin */
ARM GAS  /tmp/ccUmEqZm.s 			page 17


 459:Src/main.c    ****   GPIO_InitStruct.Pin = BA0_Pin|BA1_Pin|SDCLK_Pin|SDNCAS_Pin;
 456              		.loc 1 459 0
 457 0298 48F23013 		movw	r3, #33072
 458 029c 0993     		str	r3, [sp, #36]
 460:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 459              		.loc 1 460 0
 460 029e 0A95     		str	r5, [sp, #40]
 461:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 461              		.loc 1 461 0
 462 02a0 0B94     		str	r4, [sp, #44]
 462:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 463              		.loc 1 462 0
 464 02a2 0C97     		str	r7, [sp, #48]
 463:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 465              		.loc 1 463 0
 466 02a4 CDF83480 		str	r8, [sp, #52]
 464:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 467              		.loc 1 464 0
 468 02a8 09A9     		add	r1, sp, #36
 469 02aa 0848     		ldr	r0, .L3+12
 470 02ac FFF7FEFF 		bl	HAL_GPIO_Init
 471              	.LVL25:
 465:Src/main.c    **** 
 466:Src/main.c    ****   /*Configure GPIO pins : R7_Pin DOTCLK_Pin B3_Pin */
 467:Src/main.c    ****   GPIO_InitStruct.Pin = R7_Pin|DOTCLK_Pin|B3_Pin;
 472              		.loc 1 467 0
 473 02b0 4FF40C63 		mov	r3, #2240
 474 02b4 0993     		str	r3, [sp, #36]
 468:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 475              		.loc 1 468 0
 476 02b6 0A95     		str	r5, [sp, #40]
 469:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 477              		.loc 1 469 0
 478 02b8 0B94     		str	r4, [sp, #44]
 470:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 479              		.loc 1 470 0
 480 02ba 0C94     		str	r4, [sp, #48]
 481 02bc 12E0     		b	.L4
 482              	.L5:
 483 02be 00BF     		.align	2
 484              	.L3:
 485 02c0 00380240 		.word	1073887232
 486 02c4 00080240 		.word	1073874944
 487 02c8 00000240 		.word	1073872896
 488 02cc 00180240 		.word	1073879040
 489 02d0 00100240 		.word	1073876992
 490 02d4 000C0240 		.word	1073875968
 491 02d8 00040240 		.word	1073873920
 492 02dc 00140240 		.word	1073878016
 493 02e0 00001210 		.word	269615104
 494              	.L4:
 471:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 495              		.loc 1 471 0
 496 02e4 CDF83490 		str	r9, [sp, #52]
 472:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 497              		.loc 1 472 0
 498 02e8 09A9     		add	r1, sp, #36
ARM GAS  /tmp/ccUmEqZm.s 			page 18


 499 02ea 2D48     		ldr	r0, .L6
 500 02ec FFF7FEFF 		bl	HAL_GPIO_Init
 501              	.LVL26:
 473:Src/main.c    **** 
 474:Src/main.c    ****   /*Configure GPIO pins : HSYNC_Pin G6_Pin R2_Pin */
 475:Src/main.c    ****   GPIO_InitStruct.Pin = HSYNC_Pin|G6_Pin|R2_Pin;
 502              		.loc 1 475 0
 503 02f0 4FF49863 		mov	r3, #1216
 504 02f4 0993     		str	r3, [sp, #36]
 476:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 505              		.loc 1 476 0
 506 02f6 0A95     		str	r5, [sp, #40]
 477:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 507              		.loc 1 477 0
 508 02f8 0B94     		str	r4, [sp, #44]
 478:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 509              		.loc 1 478 0
 510 02fa 0C94     		str	r4, [sp, #48]
 479:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 511              		.loc 1 479 0
 512 02fc CDF83490 		str	r9, [sp, #52]
 480:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 513              		.loc 1 480 0
 514 0300 09A9     		add	r1, sp, #36
 515 0302 2848     		ldr	r0, .L6+4
 516 0304 FFF7FEFF 		bl	HAL_GPIO_Init
 517              	.LVL27:
 481:Src/main.c    **** 
 482:Src/main.c    ****   /*Configure GPIO pin : I2C3_SDA_Pin */
 483:Src/main.c    ****   GPIO_InitStruct.Pin = I2C3_SDA_Pin;
 518              		.loc 1 483 0
 519 0308 4FF40073 		mov	r3, #512
 520 030c 0993     		str	r3, [sp, #36]
 484:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 521              		.loc 1 484 0
 522 030e 4FF0120A 		mov	r10, #18
 523 0312 CDF828A0 		str	r10, [sp, #40]
 485:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 524              		.loc 1 485 0
 525 0316 0B96     		str	r6, [sp, #44]
 486:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 526              		.loc 1 486 0
 527 0318 0C94     		str	r4, [sp, #48]
 487:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 528              		.loc 1 487 0
 529 031a CDF834B0 		str	fp, [sp, #52]
 488:Src/main.c    ****   HAL_GPIO_Init(I2C3_SDA_GPIO_Port, &GPIO_InitStruct);
 530              		.loc 1 488 0
 531 031e 09A9     		add	r1, sp, #36
 532 0320 2048     		ldr	r0, .L6+4
 533 0322 FFF7FEFF 		bl	HAL_GPIO_Init
 534              	.LVL28:
 489:Src/main.c    **** 
 490:Src/main.c    ****   /*Configure GPIO pin : I2C3_SCL_Pin */
 491:Src/main.c    ****   GPIO_InitStruct.Pin = I2C3_SCL_Pin;
 535              		.loc 1 491 0
 536 0326 4FF48073 		mov	r3, #256
ARM GAS  /tmp/ccUmEqZm.s 			page 19


 537 032a 0993     		str	r3, [sp, #36]
 492:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 538              		.loc 1 492 0
 539 032c CDF828A0 		str	r10, [sp, #40]
 493:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 540              		.loc 1 493 0
 541 0330 0B96     		str	r6, [sp, #44]
 494:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 542              		.loc 1 494 0
 543 0332 0C94     		str	r4, [sp, #48]
 495:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 544              		.loc 1 495 0
 545 0334 CDF834B0 		str	fp, [sp, #52]
 496:Src/main.c    ****   HAL_GPIO_Init(I2C3_SCL_GPIO_Port, &GPIO_InitStruct);
 546              		.loc 1 496 0
 547 0338 09A9     		add	r1, sp, #36
 548 033a 1B48     		ldr	r0, .L6+8
 549 033c FFF7FEFF 		bl	HAL_GPIO_Init
 550              	.LVL29:
 497:Src/main.c    **** 
 498:Src/main.c    ****   /*Configure GPIO pins : G7_Pin B2_Pin */
 499:Src/main.c    ****   GPIO_InitStruct.Pin = G7_Pin|B2_Pin;
 551              		.loc 1 499 0
 552 0340 4823     		movs	r3, #72
 553 0342 0993     		str	r3, [sp, #36]
 500:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 554              		.loc 1 500 0
 555 0344 0A95     		str	r5, [sp, #40]
 501:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 556              		.loc 1 501 0
 557 0346 0B94     		str	r4, [sp, #44]
 502:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 558              		.loc 1 502 0
 559 0348 0C94     		str	r4, [sp, #48]
 503:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 560              		.loc 1 503 0
 561 034a CDF83490 		str	r9, [sp, #52]
 504:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 562              		.loc 1 504 0
 563 034e 09A9     		add	r1, sp, #36
 564 0350 1648     		ldr	r0, .L6+12
 565 0352 FFF7FEFF 		bl	HAL_GPIO_Init
 566              	.LVL30:
 505:Src/main.c    **** 
 506:Src/main.c    ****   /*Configure GPIO pins : G3_Pin B4_Pin */
 507:Src/main.c    ****   GPIO_InitStruct.Pin = G3_Pin|B4_Pin;
 567              		.loc 1 507 0
 568 0356 4FF4A053 		mov	r3, #5120
 569 035a 0993     		str	r3, [sp, #36]
 508:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 570              		.loc 1 508 0
 571 035c 0A95     		str	r5, [sp, #40]
 509:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 572              		.loc 1 509 0
 573 035e 0B94     		str	r4, [sp, #44]
 510:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 574              		.loc 1 510 0
ARM GAS  /tmp/ccUmEqZm.s 			page 20


 575 0360 0C94     		str	r4, [sp, #48]
 511:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 576              		.loc 1 511 0
 577 0362 0923     		movs	r3, #9
 578 0364 0D93     		str	r3, [sp, #52]
 512:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 579              		.loc 1 512 0
 580 0366 09A9     		add	r1, sp, #36
 581 0368 0D48     		ldr	r0, .L6
 582 036a FFF7FEFF 		bl	HAL_GPIO_Init
 583              	.LVL31:
 513:Src/main.c    **** 
 514:Src/main.c    ****   /*Configure GPIO pins : SDCKE1_Pin SDNE1_Pin */
 515:Src/main.c    ****   GPIO_InitStruct.Pin = SDCKE1_Pin|SDNE1_Pin;
 584              		.loc 1 515 0
 585 036e 6023     		movs	r3, #96
 586 0370 0993     		str	r3, [sp, #36]
 516:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 587              		.loc 1 516 0
 588 0372 0A95     		str	r5, [sp, #40]
 517:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 589              		.loc 1 517 0
 590 0374 0B94     		str	r4, [sp, #44]
 518:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 591              		.loc 1 518 0
 592 0376 0C97     		str	r7, [sp, #48]
 519:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 593              		.loc 1 519 0
 594 0378 CDF83480 		str	r8, [sp, #52]
 520:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 595              		.loc 1 520 0
 596 037c 09A9     		add	r1, sp, #36
 597 037e 0C48     		ldr	r0, .L6+16
 598 0380 FFF7FEFF 		bl	HAL_GPIO_Init
 599              	.LVL32:
 521:Src/main.c    **** 
 522:Src/main.c    ****   /*Configure GPIO pins : NBL0_Pin NBL1_Pin */
 523:Src/main.c    ****   GPIO_InitStruct.Pin = NBL0_Pin|NBL1_Pin;
 600              		.loc 1 523 0
 601 0384 0997     		str	r7, [sp, #36]
 524:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 602              		.loc 1 524 0
 603 0386 0A95     		str	r5, [sp, #40]
 525:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 604              		.loc 1 525 0
 605 0388 0B94     		str	r4, [sp, #44]
 526:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 606              		.loc 1 526 0
 607 038a 0C97     		str	r7, [sp, #48]
 527:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 608              		.loc 1 527 0
 609 038c CDF83480 		str	r8, [sp, #52]
 528:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 610              		.loc 1 528 0
 611 0390 09A9     		add	r1, sp, #36
 612 0392 0848     		ldr	r0, .L6+20
 613 0394 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/ccUmEqZm.s 			page 21


 614              	.LVL33:
 529:Src/main.c    **** 
 530:Src/main.c    **** }
 615              		.loc 1 530 0
 616 0398 0FB0     		add	sp, sp, #60
 617              	.LCFI2:
 618              		.cfi_def_cfa_offset 36
 619              		@ sp needed
 620 039a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 621              	.L7:
 622 039e 00BF     		.align	2
 623              	.L6:
 624 03a0 00180240 		.word	1073879040
 625 03a4 00080240 		.word	1073874944
 626 03a8 00000240 		.word	1073872896
 627 03ac 000C0240 		.word	1073875968
 628 03b0 00040240 		.word	1073873920
 629 03b4 00100240 		.word	1073876992
 630              		.cfi_endproc
 631              	.LFE135:
 633              		.section	.text.MX_SPI5_Init,"ax",%progbits
 634              		.align	1
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 638              		.fpu fpv4-sp-d16
 640              	MX_SPI5_Init:
 641              	.LFB132:
 171:Src/main.c    **** 
 642              		.loc 1 171 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646 0000 08B5     		push	{r3, lr}
 647              	.LCFI3:
 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 3, -8
 650              		.cfi_offset 14, -4
 181:Src/main.c    ****   hspi5.Init.Mode = SPI_MODE_SLAVE;
 651              		.loc 1 181 0
 652 0002 0A48     		ldr	r0, .L10
 653 0004 0A4B     		ldr	r3, .L10+4
 654 0006 0360     		str	r3, [r0]
 182:Src/main.c    ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 655              		.loc 1 182 0
 656 0008 0023     		movs	r3, #0
 657 000a 4360     		str	r3, [r0, #4]
 183:Src/main.c    ****   hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 658              		.loc 1 183 0
 659 000c 8360     		str	r3, [r0, #8]
 184:Src/main.c    ****   hspi5.Init.CLKPolarity = SPI_POLARITY_HIGH;
 660              		.loc 1 184 0
 661 000e C360     		str	r3, [r0, #12]
 185:Src/main.c    ****   hspi5.Init.CLKPhase = SPI_PHASE_2EDGE;
 662              		.loc 1 185 0
 663 0010 0222     		movs	r2, #2
 664 0012 0261     		str	r2, [r0, #16]
ARM GAS  /tmp/ccUmEqZm.s 			page 22


 186:Src/main.c    ****   hspi5.Init.NSS = SPI_NSS_HARD_INPUT;
 665              		.loc 1 186 0
 666 0014 0122     		movs	r2, #1
 667 0016 4261     		str	r2, [r0, #20]
 187:Src/main.c    ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 668              		.loc 1 187 0
 669 0018 8361     		str	r3, [r0, #24]
 188:Src/main.c    ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 670              		.loc 1 188 0
 671 001a 0362     		str	r3, [r0, #32]
 189:Src/main.c    ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 672              		.loc 1 189 0
 673 001c 4362     		str	r3, [r0, #36]
 190:Src/main.c    ****   hspi5.Init.CRCPolynomial = 10;
 674              		.loc 1 190 0
 675 001e 8362     		str	r3, [r0, #40]
 191:Src/main.c    ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 676              		.loc 1 191 0
 677 0020 0A23     		movs	r3, #10
 678 0022 C362     		str	r3, [r0, #44]
 192:Src/main.c    ****   {
 679              		.loc 1 192 0
 680 0024 FFF7FEFF 		bl	HAL_SPI_Init
 681              	.LVL34:
 682 0028 08BD     		pop	{r3, pc}
 683              	.L11:
 684 002a 00BF     		.align	2
 685              	.L10:
 686 002c 00000000 		.word	hspi5
 687 0030 00500140 		.word	1073827840
 688              		.cfi_endproc
 689              	.LFE132:
 691              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 692              		.align	1
 693              		.syntax unified
 694              		.thumb
 695              		.thumb_func
 696              		.fpu fpv4-sp-d16
 698              	MX_USART1_UART_Init:
 699              	.LFB134:
 246:Src/main.c    **** 
 700              		.loc 1 246 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704 0000 08B5     		push	{r3, lr}
 705              	.LCFI4:
 706              		.cfi_def_cfa_offset 8
 707              		.cfi_offset 3, -8
 708              		.cfi_offset 14, -4
 255:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 709              		.loc 1 255 0
 710 0002 0848     		ldr	r0, .L14
 711 0004 084B     		ldr	r3, .L14+4
 712 0006 0360     		str	r3, [r0]
 256:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 713              		.loc 1 256 0
ARM GAS  /tmp/ccUmEqZm.s 			page 23


 714 0008 4FF4E133 		mov	r3, #115200
 715 000c 4360     		str	r3, [r0, #4]
 257:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 716              		.loc 1 257 0
 717 000e 0023     		movs	r3, #0
 718 0010 8360     		str	r3, [r0, #8]
 258:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 719              		.loc 1 258 0
 720 0012 C360     		str	r3, [r0, #12]
 259:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 721              		.loc 1 259 0
 722 0014 0361     		str	r3, [r0, #16]
 260:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 723              		.loc 1 260 0
 724 0016 0C22     		movs	r2, #12
 725 0018 4261     		str	r2, [r0, #20]
 261:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 726              		.loc 1 261 0
 727 001a 8361     		str	r3, [r0, #24]
 262:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 728              		.loc 1 262 0
 729 001c C361     		str	r3, [r0, #28]
 263:Src/main.c    ****   {
 730              		.loc 1 263 0
 731 001e FFF7FEFF 		bl	HAL_UART_Init
 732              	.LVL35:
 733 0022 08BD     		pop	{r3, pc}
 734              	.L15:
 735              		.align	2
 736              	.L14:
 737 0024 00000000 		.word	huart1
 738 0028 00100140 		.word	1073811456
 739              		.cfi_endproc
 740              	.LFE134:
 742              		.section	.text.MX_TIM6_Init,"ax",%progbits
 743              		.align	1
 744              		.syntax unified
 745              		.thumb
 746              		.thumb_func
 747              		.fpu fpv4-sp-d16
 749              	MX_TIM6_Init:
 750              	.LFB133:
 208:Src/main.c    **** 
 751              		.loc 1 208 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 8
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 755 0000 30B5     		push	{r4, r5, lr}
 756              	.LCFI5:
 757              		.cfi_def_cfa_offset 12
 758              		.cfi_offset 4, -12
 759              		.cfi_offset 5, -8
 760              		.cfi_offset 14, -4
 761 0002 83B0     		sub	sp, sp, #12
 762              	.LCFI6:
 763              		.cfi_def_cfa_offset 24
 214:Src/main.c    **** 
ARM GAS  /tmp/ccUmEqZm.s 			page 24


 764              		.loc 1 214 0
 765 0004 0025     		movs	r5, #0
 766 0006 0095     		str	r5, [sp]
 767 0008 0195     		str	r5, [sp, #4]
 219:Src/main.c    ****   htim6.Init.Prescaler = 0;
 768              		.loc 1 219 0
 769 000a 094C     		ldr	r4, .L18
 770 000c 094B     		ldr	r3, .L18+4
 771 000e 2360     		str	r3, [r4]
 220:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 772              		.loc 1 220 0
 773 0010 6560     		str	r5, [r4, #4]
 221:Src/main.c    ****   htim6.Init.Period = 129;
 774              		.loc 1 221 0
 775 0012 A560     		str	r5, [r4, #8]
 222:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 776              		.loc 1 222 0
 777 0014 8123     		movs	r3, #129
 778 0016 E360     		str	r3, [r4, #12]
 223:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 779              		.loc 1 223 0
 780 0018 A561     		str	r5, [r4, #24]
 224:Src/main.c    ****   {
 781              		.loc 1 224 0
 782 001a 2046     		mov	r0, r4
 783 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 784              	.LVL36:
 228:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 785              		.loc 1 228 0
 786 0020 0095     		str	r5, [sp]
 229:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 787              		.loc 1 229 0
 788 0022 0195     		str	r5, [sp, #4]
 230:Src/main.c    ****   {
 789              		.loc 1 230 0
 790 0024 6946     		mov	r1, sp
 791 0026 2046     		mov	r0, r4
 792 0028 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 793              	.LVL37:
 238:Src/main.c    **** 
 794              		.loc 1 238 0
 795 002c 03B0     		add	sp, sp, #12
 796              	.LCFI7:
 797              		.cfi_def_cfa_offset 12
 798              		@ sp needed
 799 002e 30BD     		pop	{r4, r5, pc}
 800              	.L19:
 801              		.align	2
 802              	.L18:
 803 0030 00000000 		.word	htim6
 804 0034 00100040 		.word	1073745920
 805              		.cfi_endproc
 806              	.LFE133:
 808              		.section	.text.SystemClock_Config,"ax",%progbits
 809              		.align	1
 810              		.global	SystemClock_Config
 811              		.syntax unified
ARM GAS  /tmp/ccUmEqZm.s 			page 25


 812              		.thumb
 813              		.thumb_func
 814              		.fpu fpv4-sp-d16
 816              	SystemClock_Config:
 817              	.LFB131:
 127:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 818              		.loc 1 127 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 80
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822 0000 30B5     		push	{r4, r5, lr}
 823              	.LCFI8:
 824              		.cfi_def_cfa_offset 12
 825              		.cfi_offset 4, -12
 826              		.cfi_offset 5, -8
 827              		.cfi_offset 14, -4
 828 0002 95B0     		sub	sp, sp, #84
 829              	.LCFI9:
 830              		.cfi_def_cfa_offset 96
 128:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 831              		.loc 1 128 0
 832 0004 3022     		movs	r2, #48
 833 0006 0021     		movs	r1, #0
 834 0008 08A8     		add	r0, sp, #32
 835 000a FFF7FEFF 		bl	memset
 836              	.LVL38:
 129:Src/main.c    **** 
 837              		.loc 1 129 0
 838 000e 0024     		movs	r4, #0
 839 0010 0394     		str	r4, [sp, #12]
 840 0012 0494     		str	r4, [sp, #16]
 841 0014 0594     		str	r4, [sp, #20]
 842 0016 0694     		str	r4, [sp, #24]
 843 0018 0794     		str	r4, [sp, #28]
 844              	.LBB10:
 133:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 845              		.loc 1 133 0
 846 001a 0194     		str	r4, [sp, #4]
 847 001c 1C4B     		ldr	r3, .L22
 848 001e 1A6C     		ldr	r2, [r3, #64]
 849 0020 42F08052 		orr	r2, r2, #268435456
 850 0024 1A64     		str	r2, [r3, #64]
 851 0026 1B6C     		ldr	r3, [r3, #64]
 852 0028 03F08053 		and	r3, r3, #268435456
 853 002c 0193     		str	r3, [sp, #4]
 854 002e 019B     		ldr	r3, [sp, #4]
 855              	.LBE10:
 856              	.LBB11:
 134:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 857              		.loc 1 134 0
 858 0030 0294     		str	r4, [sp, #8]
 859 0032 184A     		ldr	r2, .L22+4
 860 0034 1368     		ldr	r3, [r2]
 861 0036 23F44043 		bic	r3, r3, #49152
 862 003a 43F48043 		orr	r3, r3, #16384
 863 003e 1360     		str	r3, [r2]
 864 0040 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccUmEqZm.s 			page 26


 865 0042 03F44043 		and	r3, r3, #49152
 866 0046 0293     		str	r3, [sp, #8]
 867 0048 029B     		ldr	r3, [sp, #8]
 868              	.LBE11:
 137:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 869              		.loc 1 137 0
 870 004a 0225     		movs	r5, #2
 871 004c 0895     		str	r5, [sp, #32]
 138:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 872              		.loc 1 138 0
 873 004e 0123     		movs	r3, #1
 874 0050 0B93     		str	r3, [sp, #44]
 139:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 875              		.loc 1 139 0
 876 0052 1023     		movs	r3, #16
 877 0054 0C93     		str	r3, [sp, #48]
 140:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 878              		.loc 1 140 0
 879 0056 0E95     		str	r5, [sp, #56]
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 880              		.loc 1 141 0
 881 0058 0F94     		str	r4, [sp, #60]
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 50;
 882              		.loc 1 142 0
 883 005a 0823     		movs	r3, #8
 884 005c 1093     		str	r3, [sp, #64]
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 885              		.loc 1 143 0
 886 005e 3223     		movs	r3, #50
 887 0060 1193     		str	r3, [sp, #68]
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 888              		.loc 1 144 0
 889 0062 0423     		movs	r3, #4
 890 0064 1293     		str	r3, [sp, #72]
 145:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 891              		.loc 1 145 0
 892 0066 0723     		movs	r3, #7
 893 0068 1393     		str	r3, [sp, #76]
 146:Src/main.c    ****   {
 894              		.loc 1 146 0
 895 006a 08A8     		add	r0, sp, #32
 896 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 897              	.LVL39:
 152:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 898              		.loc 1 152 0
 899 0070 0F23     		movs	r3, #15
 900 0072 0393     		str	r3, [sp, #12]
 154:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 901              		.loc 1 154 0
 902 0074 0495     		str	r5, [sp, #16]
 155:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 903              		.loc 1 155 0
 904 0076 0594     		str	r4, [sp, #20]
 156:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 905              		.loc 1 156 0
 906 0078 4FF4C053 		mov	r3, #6144
 907 007c 0693     		str	r3, [sp, #24]
ARM GAS  /tmp/ccUmEqZm.s 			page 27


 157:Src/main.c    **** 
 908              		.loc 1 157 0
 909 007e 4FF4A053 		mov	r3, #5120
 910 0082 0793     		str	r3, [sp, #28]
 159:Src/main.c    ****   {
 911              		.loc 1 159 0
 912 0084 2146     		mov	r1, r4
 913 0086 03A8     		add	r0, sp, #12
 914 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 915              	.LVL40:
 163:Src/main.c    **** 
 916              		.loc 1 163 0
 917 008c 15B0     		add	sp, sp, #84
 918              	.LCFI10:
 919              		.cfi_def_cfa_offset 12
 920              		@ sp needed
 921 008e 30BD     		pop	{r4, r5, pc}
 922              	.L23:
 923              		.align	2
 924              	.L22:
 925 0090 00380240 		.word	1073887232
 926 0094 00700040 		.word	1073770496
 927              		.cfi_endproc
 928              	.LFE131:
 930              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 931              		.align	1
 932              		.global	HAL_SPI_TxRxCpltCallback
 933              		.syntax unified
 934              		.thumb
 935              		.thumb_func
 936              		.fpu fpv4-sp-d16
 938              	HAL_SPI_TxRxCpltCallback:
 939              	.LFB136:
 531:Src/main.c    **** 
 532:Src/main.c    **** /* USER CODE BEGIN 4 */
 533:Src/main.c    **** void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi) {
 940              		.loc 1 533 0
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 0
 943              		@ frame_needed = 0, uses_anonymous_args = 0
 944              		@ link register save eliminated.
 945              	.LVL41:
 534:Src/main.c    ****   //  uint8_t uart_tx_buffer;
 535:Src/main.c    **** 
 536:Src/main.c    ****   current_midi_note_msg.command = spi_rx_buffer[0];
 946              		.loc 1 536 0
 947 0000 074A     		ldr	r2, .L25
 948 0002 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 949 0004 074B     		ldr	r3, .L25+4
 950 0006 1970     		strb	r1, [r3]
 537:Src/main.c    ****   current_midi_note_msg.note = spi_rx_buffer[1];
 951              		.loc 1 537 0
 952 0008 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 953 000a 5970     		strb	r1, [r3, #1]
 538:Src/main.c    ****   current_midi_note_msg.velocity = spi_rx_buffer[2];
 954              		.loc 1 538 0
 955 000c 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
ARM GAS  /tmp/ccUmEqZm.s 			page 28


 956 000e 9A70     		strb	r2, [r3, #2]
 539:Src/main.c    **** 
 540:Src/main.c    ****   note_on[current_midi_note_msg.note] = current_midi_note_msg.command;
 957              		.loc 1 540 0
 958 0010 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 959 0012 D2B2     		uxtb	r2, r2
 960 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 961 0016 DBB2     		uxtb	r3, r3
 962 0018 0349     		ldr	r1, .L25+8
 963 001a 8B54     		strb	r3, [r1, r2]
 964 001c 7047     		bx	lr
 965              	.L26:
 966 001e 00BF     		.align	2
 967              	.L25:
 968 0020 00000000 		.word	spi_rx_buffer
 969 0024 00000000 		.word	.LANCHOR0
 970 0028 00000000 		.word	.LANCHOR1
 971              		.cfi_endproc
 972              	.LFE136:
 974              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 975              		.align	1
 976              		.global	HAL_TIM_PeriodElapsedCallback
 977              		.syntax unified
 978              		.thumb
 979              		.thumb_func
 980              		.fpu fpv4-sp-d16
 982              	HAL_TIM_PeriodElapsedCallback:
 983              	.LFB137:
 541:Src/main.c    **** 
 542:Src/main.c    ****   /*
 543:Src/main.c    ****   uart_tx_buffer = spi_rx_buffer[0];
 544:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 545:Src/main.c    ****   uart_tx_buffer = spi_rx_buffer[1];
 546:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 547:Src/main.c    ****   uart_tx_buffer = spi_rx_buffer[2];
 548:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 549:Src/main.c    ****   uart_tx_buffer = '\n';
 550:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 551:Src/main.c    **** 
 552:Src/main.c    ****   if(spi_rx_buffer[0] == MIDI_NOTE_ON){
 553:Src/main.c    ****     uart_tx_buffer = 'n';
 554:Src/main.c    ****     HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 555:Src/main.c    ****   }
 556:Src/main.c    ****   else if (spi_rx_buffer[0] == MIDI_NOTE_OFF){
 557:Src/main.c    ****     uart_tx_buffer = 'f';
 558:Src/main.c    ****     HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 559:Src/main.c    ****   }
 560:Src/main.c    ****   uart_tx_buffer = '\n';
 561:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 562:Src/main.c    ****   */
 563:Src/main.c    **** }
 564:Src/main.c    **** 
 565:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 984              		.loc 1 565 0
 985              		.cfi_startproc
 986              		@ args = 0, pretend = 0, frame = 0
 987              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccUmEqZm.s 			page 29


 988              	.LVL42:
 989 0000 08B5     		push	{r3, lr}
 990              	.LCFI11:
 991              		.cfi_def_cfa_offset 8
 992              		.cfi_offset 3, -8
 993              		.cfi_offset 14, -4
 566:Src/main.c    ****   HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_1);
 994              		.loc 1 566 0
 995 0002 0221     		movs	r1, #2
 996 0004 0348     		ldr	r0, .L29
 997              	.LVL43:
 998 0006 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 999              	.LVL44:
 567:Src/main.c    ****   update_value_flag = 1;
 1000              		.loc 1 567 0
 1001 000a 0122     		movs	r2, #1
 1002 000c 024B     		ldr	r3, .L29+4
 1003 000e 1A70     		strb	r2, [r3]
 1004 0010 08BD     		pop	{r3, pc}
 1005              	.L30:
 1006 0012 00BF     		.align	2
 1007              	.L29:
 1008 0014 00180240 		.word	1073879040
 1009 0018 00000000 		.word	.LANCHOR2
 1010              		.cfi_endproc
 1011              	.LFE137:
 1013              		.section	.text.UpdateOutputValue,"ax",%progbits
 1014              		.align	1
 1015              		.global	UpdateOutputValue
 1016              		.syntax unified
 1017              		.thumb
 1018              		.thumb_func
 1019              		.fpu fpv4-sp-d16
 1021              	UpdateOutputValue:
 1022              	.LFB138:
 568:Src/main.c    ****   //  UpdateOutputValue();
 569:Src/main.c    **** }
 570:Src/main.c    **** 
 571:Src/main.c    **** void UpdateOutputValue() {
 1023              		.loc 1 571 0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 8
 1026              		@ frame_needed = 0, uses_anonymous_args = 0
 1027              		@ link register save eliminated.
 1028 0000 82B0     		sub	sp, sp, #8
 1029              	.LCFI12:
 1030              		.cfi_def_cfa_offset 8
 572:Src/main.c    ****   /*
 573:Src/main.c    ****   output_val = 0;
 574:Src/main.c    ****   for(int i = 0; i < 88; i++) {
 575:Src/main.c    ****     if(note_on[i] == MIDI_NOTE_ON){
 576:Src/main.c    ****       phase_accumulator[i] += (uint32_t)(midi_notes[i] * 89.47848533);
 577:Src/main.c    ****       output_val += base_sine[(phase_accumulator[i]>>10)%4096];
 578:Src/main.c    ****     }
 579:Src/main.c    ****     else {
 580:Src/main.c    ****       phase_accumulator[i] = 0;
 581:Src/main.c    ****     }
ARM GAS  /tmp/ccUmEqZm.s 			page 30


 582:Src/main.c    ****   }
 583:Src/main.c    ****   */
 584:Src/main.c    **** 
 585:Src/main.c    ****   phase_accumulator[0] += (uint32_t)(440*DDS_SCALE_FACTOR);
 1031              		.loc 1 585 0
 1032 0002 1C4B     		ldr	r3, .L33
 1033 0004 1A68     		ldr	r2, [r3]
 1034 0006 02F51942 		add	r2, r2, #39168
 1035 000a C832     		adds	r2, r2, #200
 1036 000c 1A60     		str	r2, [r3]
 586:Src/main.c    ****   phase_accumulator[1] += (uint32_t)(880*DDS_SCALE_FACTOR);
 1037              		.loc 1 586 0
 1038 000e 5A68     		ldr	r2, [r3, #4]
 1039 0010 02F59932 		add	r2, r2, #78336
 1040 0014 02F29112 		addw	r2, r2, #401
 1041 0018 5A60     		str	r2, [r3, #4]
 587:Src/main.c    ****   output_val = base_sq[(phase_accumulator[0]>>10)%4096] * envelope[0] / (AMPLITUDE)
 1042              		.loc 1 587 0
 1043 001a 1A68     		ldr	r2, [r3]
 1044 001c C2F38B22 		ubfx	r2, r2, #10, #12
 1045 0020 1549     		ldr	r1, .L33+4
 1046 0022 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1047 0024 07EE902A 		vmov	s15, r2	@ int
 1048 0028 144A     		ldr	r2, .L33+8
 1049 002a 92ED007A 		vldr.32	s14, [r2]
 1050 002e F8EEE77A 		vcvt.f32.s32	s15, s15
 1051 0032 67EE877A 		vmul.f32	s15, s15, s14
 1052 0036 DFED126A 		vldr.32	s13, .L33+12
 1053 003a 87EEA67A 		vdiv.f32	s14, s15, s13
 588:Src/main.c    ****     + base_tri[(phase_accumulator[1]>>10)%4096] * envelope[1] / (AMPLITUDE);
 1054              		.loc 1 588 0
 1055 003e 5B68     		ldr	r3, [r3, #4]
 1056 0040 C3F38B23 		ubfx	r3, r3, #10, #12
 1057 0044 0F49     		ldr	r1, .L33+16
 1058 0046 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1059 0048 07EE903A 		vmov	s15, r3	@ int
 1060 004c 92ED016A 		vldr.32	s12, [r2, #4]
 1061 0050 F8EEE77A 		vcvt.f32.s32	s15, s15
 1062 0054 67EE867A 		vmul.f32	s15, s15, s12
 1063 0058 87EEA66A 		vdiv.f32	s12, s15, s13
 1064 005c 77EE067A 		vadd.f32	s15, s14, s12
 587:Src/main.c    ****   output_val = base_sq[(phase_accumulator[0]>>10)%4096] * envelope[0] / (AMPLITUDE)
 1065              		.loc 1 587 0
 1066 0060 FCEEE77A 		vcvt.u32.f32	s15, s15
 1067 0064 CDED017A 		vstr.32	s15, [sp, #4]	@ int
 1068 0068 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 1069 006c 064A     		ldr	r2, .L33+20
 1070 006e 1370     		strb	r3, [r2]
 589:Src/main.c    ****   
 590:Src/main.c    **** }
 1071              		.loc 1 590 0
 1072 0070 02B0     		add	sp, sp, #8
 1073              	.LCFI13:
 1074              		.cfi_def_cfa_offset 0
 1075              		@ sp needed
 1076 0072 7047     		bx	lr
 1077              	.L34:
ARM GAS  /tmp/ccUmEqZm.s 			page 31


 1078              		.align	2
 1079              	.L33:
 1080 0074 00000000 		.word	.LANCHOR3
 1081 0078 00000000 		.word	base_sq
 1082 007c 00000000 		.word	.LANCHOR4
 1083 0080 0000FC42 		.word	1123811328
 1084 0084 00000000 		.word	base_tri
 1085 0088 00000000 		.word	.LANCHOR5
 1086              		.cfi_endproc
 1087              	.LFE138:
 1089              		.section	.text.UpdateEnvelope,"ax",%progbits
 1090              		.align	1
 1091              		.global	UpdateEnvelope
 1092              		.syntax unified
 1093              		.thumb
 1094              		.thumb_func
 1095              		.fpu fpv4-sp-d16
 1097              	UpdateEnvelope:
 1098              	.LFB139:
 591:Src/main.c    **** 
 592:Src/main.c    **** void UpdateEnvelope() {
 1099              		.loc 1 592 0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 0
 1102              		@ frame_needed = 0, uses_anonymous_args = 0
 1103              		@ link register save eliminated.
 1104              	.LVL45:
 1105              	.LBB12:
 593:Src/main.c    ****   for(int i = 0; i < VOICES; i++){
 1106              		.loc 1 593 0
 1107 0000 0023     		movs	r3, #0
 1108 0002 09E0     		b	.L36
 1109              	.LVL46:
 1110              	.L38:
 594:Src/main.c    ****     switch(env_state[i]){
 595:Src/main.c    ****     case NOT_TRIGGERED:
 596:Src/main.c    ****       envelope_index[i] = 0;
 1111              		.loc 1 596 0
 1112 0004 0021     		movs	r1, #0
 1113 0006 464A     		ldr	r2, .L49
 1114 0008 42F82310 		str	r1, [r2, r3, lsl #2]
 597:Src/main.c    ****       envelope[i] = 0;
 1115              		.loc 1 597 0
 1116 000c 454A     		ldr	r2, .L49+4
 1117 000e 02EB8302 		add	r2, r2, r3, lsl #2
 1118 0012 0021     		movs	r1, #0
 1119 0014 1160     		str	r1, [r2]	@ float
 1120              	.L37:
 593:Src/main.c    ****   for(int i = 0; i < VOICES; i++){
 1121              		.loc 1 593 0 discriminator 2
 1122 0016 0133     		adds	r3, r3, #1
 1123              	.LVL47:
 1124              	.L36:
 593:Src/main.c    ****   for(int i = 0; i < VOICES; i++){
 1125              		.loc 1 593 0 is_stmt 0 discriminator 1
 1126 0018 012B     		cmp	r3, #1
 1127 001a 7FDC     		bgt	.L48
ARM GAS  /tmp/ccUmEqZm.s 			page 32


 594:Src/main.c    ****     switch(env_state[i]){
 1128              		.loc 1 594 0 is_stmt 1
 1129 001c 424A     		ldr	r2, .L49+8
 1130 001e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1131 0020 D2B2     		uxtb	r2, r2
 1132 0022 042A     		cmp	r2, #4
 1133 0024 F7D8     		bhi	.L37
 1134 0026 01A1     		adr	r1, .L39
 1135 0028 51F822F0 		ldr	pc, [r1, r2, lsl #2]
 1136              		.p2align 2
 1137              	.L39:
 1138 002c 05000000 		.word	.L38+1
 1139 0030 41000000 		.word	.L40+1
 1140 0034 89000000 		.word	.L41+1
 1141 0038 D1000000 		.word	.L42+1
 1142 003c DD000000 		.word	.L43+1
 1143              		.p2align 1
 1144              	.L40:
 598:Src/main.c    ****       break;
 599:Src/main.c    ****     case ATTACK_MODE:
 600:Src/main.c    ****       //    if((UINT32_MAX - envelope_index) < DDS_SCALE_FACTOR){
 601:Src/main.c    ****       if(envelope_index[i] <= 4200000) {
 1145              		.loc 1 601 0
 1146 0040 374A     		ldr	r2, .L49
 1147 0042 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1148 0046 394A     		ldr	r2, .L49+12
 1149 0048 9142     		cmp	r1, r2
 1150 004a 15D8     		bhi	.L44
 602:Src/main.c    ****         envelope_index[i] += (uint32_t)(DDS_SCALE_FACTOR);
 1151              		.loc 1 602 0
 1152 004c 344A     		ldr	r2, .L49
 1153 004e 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1154 0052 5931     		adds	r1, r1, #89
 1155 0054 42F82310 		str	r1, [r2, r3, lsl #2]
 603:Src/main.c    ****         envelope[i] = base_pos_saw[(envelope_index[i]>>10)%4096];
 1156              		.loc 1 603 0
 1157 0058 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1158 005c C2F38B22 		ubfx	r2, r2, #10, #12
 1159 0060 3349     		ldr	r1, .L49+16
 1160 0062 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1161 0064 07EE902A 		vmov	s15, r2	@ int
 1162 0068 F8EE677A 		vcvt.f32.u32	s15, s15
 1163 006c 2D4A     		ldr	r2, .L49+4
 1164 006e 02EB8302 		add	r2, r2, r3, lsl #2
 1165 0072 C2ED007A 		vstr.32	s15, [r2]
 1166 0076 CEE7     		b	.L37
 1167              	.L44:
 604:Src/main.c    ****       }
 605:Src/main.c    ****       else {
 606:Src/main.c    ****         // env_state++;
 607:Src/main.c    ****         envelope_index[i] = 0;
 1168              		.loc 1 607 0
 1169 0078 0021     		movs	r1, #0
 1170 007a 294A     		ldr	r2, .L49
 1171 007c 42F82310 		str	r1, [r2, r3, lsl #2]
 608:Src/main.c    ****         env_state[i] = DECAY_MODE;
 1172              		.loc 1 608 0
ARM GAS  /tmp/ccUmEqZm.s 			page 33


 1173 0080 0221     		movs	r1, #2
 1174 0082 294A     		ldr	r2, .L49+8
 1175 0084 D154     		strb	r1, [r2, r3]
 1176 0086 C6E7     		b	.L37
 1177              	.L41:
 609:Src/main.c    ****       }
 610:Src/main.c    ****       break;
 611:Src/main.c    ****     case DECAY_MODE:
 612:Src/main.c    ****       //    if(envelope <= base_neg_saw[sustain_level]){
 613:Src/main.c    ****       if(envelope_index[i] <= 4200000) {
 1178              		.loc 1 613 0
 1179 0088 254A     		ldr	r2, .L49
 1180 008a 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1181 008e 274A     		ldr	r2, .L49+12
 1182 0090 9142     		cmp	r1, r2
 1183 0092 15D8     		bhi	.L45
 614:Src/main.c    ****         envelope_index[i] += (uint32_t)(DDS_SCALE_FACTOR);
 1184              		.loc 1 614 0
 1185 0094 224A     		ldr	r2, .L49
 1186 0096 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1187 009a 5931     		adds	r1, r1, #89
 1188 009c 42F82310 		str	r1, [r2, r3, lsl #2]
 615:Src/main.c    ****         envelope[i] = base_neg_saw[(envelope_index[i]>>10)%4096];
 1189              		.loc 1 615 0
 1190 00a0 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1191 00a4 C2F38B22 		ubfx	r2, r2, #10, #12
 1192 00a8 2249     		ldr	r1, .L49+20
 1193 00aa 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1194 00ac 07EE902A 		vmov	s15, r2	@ int
 1195 00b0 F8EE677A 		vcvt.f32.u32	s15, s15
 1196 00b4 1B4A     		ldr	r2, .L49+4
 1197 00b6 02EB8302 		add	r2, r2, r3, lsl #2
 1198 00ba C2ED007A 		vstr.32	s15, [r2]
 1199 00be AAE7     		b	.L37
 1200              	.L45:
 616:Src/main.c    ****       }
 617:Src/main.c    ****       else {
 618:Src/main.c    ****         envelope_index[i] = 0;
 1201              		.loc 1 618 0
 1202 00c0 0021     		movs	r1, #0
 1203 00c2 174A     		ldr	r2, .L49
 1204 00c4 42F82310 		str	r1, [r2, r3, lsl #2]
 619:Src/main.c    ****         //env_state++;
 620:Src/main.c    ****         env_state[i] = ATTACK_MODE;
 1205              		.loc 1 620 0
 1206 00c8 0121     		movs	r1, #1
 1207 00ca 174A     		ldr	r2, .L49+8
 1208 00cc D154     		strb	r1, [r2, r3]
 1209 00ce A2E7     		b	.L37
 1210              	.L42:
 621:Src/main.c    ****       }
 622:Src/main.c    ****       break;
 623:Src/main.c    ****     case SUSTAIN_MODE:
 624:Src/main.c    ****       env_state[i]++;
 1211              		.loc 1 624 0
 1212 00d0 1549     		ldr	r1, .L49+8
 1213 00d2 CA5C     		ldrb	r2, [r1, r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccUmEqZm.s 			page 34


 1214 00d4 0132     		adds	r2, r2, #1
 1215 00d6 D2B2     		uxtb	r2, r2
 1216 00d8 CA54     		strb	r2, [r1, r3]
 625:Src/main.c    ****       break;
 1217              		.loc 1 625 0
 1218 00da 9CE7     		b	.L37
 1219              	.L43:
 626:Src/main.c    ****     case RELEASE_MODE:
 627:Src/main.c    ****       //      if((UINT32_MAX - envelope_index) < DDS_SCALE_FACTOR){
 628:Src/main.c    ****       if(envelope_index[i] <= 4200000){
 1220              		.loc 1 628 0
 1221 00dc 104A     		ldr	r2, .L49
 1222 00de 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1223 00e2 124A     		ldr	r2, .L49+12
 1224 00e4 9142     		cmp	r1, r2
 1225 00e6 15D8     		bhi	.L46
 629:Src/main.c    ****         envelope_index[i] += (uint32_t)(DDS_SCALE_FACTOR);
 1226              		.loc 1 629 0
 1227 00e8 0D4A     		ldr	r2, .L49
 1228 00ea 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1229 00ee 5931     		adds	r1, r1, #89
 1230 00f0 42F82310 		str	r1, [r2, r3, lsl #2]
 630:Src/main.c    ****         envelope[i] = base_neg_saw[(envelope_index[i]>>10)%4096];
 1231              		.loc 1 630 0
 1232 00f4 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1233 00f8 C2F38B22 		ubfx	r2, r2, #10, #12
 1234 00fc 0D49     		ldr	r1, .L49+20
 1235 00fe 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1236 0100 07EE902A 		vmov	s15, r2	@ int
 1237 0104 F8EE677A 		vcvt.f32.u32	s15, s15
 1238 0108 064A     		ldr	r2, .L49+4
 1239 010a 02EB8302 		add	r2, r2, r3, lsl #2
 1240 010e C2ED007A 		vstr.32	s15, [r2]
 1241 0112 80E7     		b	.L37
 1242              	.L46:
 631:Src/main.c    ****       }
 632:Src/main.c    ****       else {
 633:Src/main.c    ****         env_state[i] = NOT_TRIGGERED;
 1243              		.loc 1 633 0
 1244 0114 0021     		movs	r1, #0
 1245 0116 044A     		ldr	r2, .L49+8
 1246 0118 D154     		strb	r1, [r2, r3]
 1247 011a 7CE7     		b	.L37
 1248              	.L48:
 1249              	.LBE12:
 634:Src/main.c    ****       }
 635:Src/main.c    ****       break;
 636:Src/main.c    ****     }
 637:Src/main.c    ****   }
 638:Src/main.c    **** }
 1250              		.loc 1 638 0
 1251 011c 7047     		bx	lr
 1252              	.L50:
 1253 011e 00BF     		.align	2
 1254              	.L49:
 1255 0120 00000000 		.word	.LANCHOR7
 1256 0124 00000000 		.word	.LANCHOR4
ARM GAS  /tmp/ccUmEqZm.s 			page 35


 1257 0128 00000000 		.word	.LANCHOR6
 1258 012c 40164000 		.word	4200000
 1259 0130 00000000 		.word	base_pos_saw
 1260 0134 00000000 		.word	base_neg_saw
 1261              		.cfi_endproc
 1262              	.LFE139:
 1264              		.section	.text.Update_R2R_DAC,"ax",%progbits
 1265              		.align	1
 1266              		.global	Update_R2R_DAC
 1267              		.syntax unified
 1268              		.thumb
 1269              		.thumb_func
 1270              		.fpu fpv4-sp-d16
 1272              	Update_R2R_DAC:
 1273              	.LFB140:
 639:Src/main.c    **** 
 640:Src/main.c    **** void Update_R2R_DAC() {
 1274              		.loc 1 640 0
 1275              		.cfi_startproc
 1276              		@ args = 0, pretend = 0, frame = 0
 1277              		@ frame_needed = 0, uses_anonymous_args = 0
 1278 0000 08B5     		push	{r3, lr}
 1279              	.LCFI14:
 1280              		.cfi_def_cfa_offset 8
 1281              		.cfi_offset 3, -8
 1282              		.cfi_offset 14, -4
 641:Src/main.c    ****   ((output_val>>0)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_7, GPIO_PIN_SET) : HAL_GPIO_Write
 1283              		.loc 1 641 0
 1284 0002 474B     		ldr	r3, .L70
 1285 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1286 0006 13F0010F 		tst	r3, #1
 1287 000a 51D0     		beq	.L52
 1288              		.loc 1 641 0 is_stmt 0 discriminator 1
 1289 000c 0122     		movs	r2, #1
 1290 000e 8021     		movs	r1, #128
 1291 0010 4448     		ldr	r0, .L70+4
 1292 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1293              	.LVL48:
 1294              	.L53:
 642:Src/main.c    ****   ((output_val>>1)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_8, GPIO_PIN_SET) : HAL_GPIO_Write
 1295              		.loc 1 642 0 is_stmt 1
 1296 0016 424B     		ldr	r3, .L70
 1297 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1298 001a 13F0020F 		tst	r3, #2
 1299 001e 4DD0     		beq	.L54
 1300              		.loc 1 642 0 is_stmt 0 discriminator 1
 1301 0020 0122     		movs	r2, #1
 1302 0022 4FF48071 		mov	r1, #256
 1303 0026 3F48     		ldr	r0, .L70+4
 1304 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1305              	.LVL49:
 1306              	.L55:
 643:Src/main.c    ****   ((output_val>>2)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_9, GPIO_PIN_SET) : HAL_GPIO_Write
 1307              		.loc 1 643 0 is_stmt 1
 1308 002c 3C4B     		ldr	r3, .L70
 1309 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1310 0030 13F0040F 		tst	r3, #4
ARM GAS  /tmp/ccUmEqZm.s 			page 36


 1311 0034 49D0     		beq	.L56
 1312              		.loc 1 643 0 is_stmt 0 discriminator 1
 1313 0036 0122     		movs	r2, #1
 1314 0038 4FF40071 		mov	r1, #512
 1315 003c 3948     		ldr	r0, .L70+4
 1316 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1317              	.LVL50:
 1318              	.L57:
 644:Src/main.c    ****   ((output_val>>3)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_10, GPIO_PIN_SET) : HAL_GPIO_Writ
 1319              		.loc 1 644 0 is_stmt 1
 1320 0042 374B     		ldr	r3, .L70
 1321 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1322 0046 13F0080F 		tst	r3, #8
 1323 004a 45D0     		beq	.L58
 1324              		.loc 1 644 0 is_stmt 0 discriminator 1
 1325 004c 0122     		movs	r2, #1
 1326 004e 4FF48061 		mov	r1, #1024
 1327 0052 3448     		ldr	r0, .L70+4
 1328 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1329              	.LVL51:
 1330              	.L59:
 645:Src/main.c    ****   ((output_val>>4)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET) : HAL_GPIO_Writ
 1331              		.loc 1 645 0 is_stmt 1
 1332 0058 314B     		ldr	r3, .L70
 1333 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1334 005c 13F0100F 		tst	r3, #16
 1335 0060 41D0     		beq	.L60
 1336              		.loc 1 645 0 is_stmt 0 discriminator 1
 1337 0062 0122     		movs	r2, #1
 1338 0064 4FF40061 		mov	r1, #2048
 1339 0068 2E48     		ldr	r0, .L70+4
 1340 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1341              	.LVL52:
 1342              	.L61:
 646:Src/main.c    ****   ((output_val>>5)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET) : HAL_GPIO_Writ
 1343              		.loc 1 646 0 is_stmt 1
 1344 006e 2C4B     		ldr	r3, .L70
 1345 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1346 0072 13F0200F 		tst	r3, #32
 1347 0076 3DD0     		beq	.L62
 1348              		.loc 1 646 0 is_stmt 0 discriminator 1
 1349 0078 0122     		movs	r2, #1
 1350 007a 4FF48051 		mov	r1, #4096
 1351 007e 2948     		ldr	r0, .L70+4
 1352 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1353              	.LVL53:
 1354              	.L63:
 647:Src/main.c    ****   ((output_val>>6)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_13, GPIO_PIN_SET) : HAL_GPIO_Writ
 1355              		.loc 1 647 0 is_stmt 1
 1356 0084 264B     		ldr	r3, .L70
 1357 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1358 0088 13F0400F 		tst	r3, #64
 1359 008c 39D0     		beq	.L64
 1360              		.loc 1 647 0 is_stmt 0 discriminator 1
 1361 008e 0122     		movs	r2, #1
 1362 0090 4FF40051 		mov	r1, #8192
 1363 0094 2348     		ldr	r0, .L70+4
ARM GAS  /tmp/ccUmEqZm.s 			page 37


 1364 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1365              	.LVL54:
 1366              	.L65:
 648:Src/main.c    ****   ((output_val>>7)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_14, GPIO_PIN_SET) : HAL_GPIO_Writ
 1367              		.loc 1 648 0 is_stmt 1
 1368 009a 214B     		ldr	r3, .L70
 1369 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1370 009e DB09     		lsrs	r3, r3, #7
 1371 00a0 36D1     		bne	.L69
 1372              		.loc 1 648 0 is_stmt 0 discriminator 2
 1373 00a2 0022     		movs	r2, #0
 1374 00a4 4FF48041 		mov	r1, #16384
 1375 00a8 1E48     		ldr	r0, .L70+4
 1376 00aa FFF7FEFF 		bl	HAL_GPIO_WritePin
 1377              	.LVL55:
 1378 00ae 08BD     		pop	{r3, pc}
 1379              	.L52:
 641:Src/main.c    ****   ((output_val>>1)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_8, GPIO_PIN_SET) : HAL_GPIO_Write
 1380              		.loc 1 641 0 is_stmt 1 discriminator 2
 1381 00b0 0022     		movs	r2, #0
 1382 00b2 8021     		movs	r1, #128
 1383 00b4 1B48     		ldr	r0, .L70+4
 1384 00b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1385              	.LVL56:
 1386 00ba ACE7     		b	.L53
 1387              	.L54:
 642:Src/main.c    ****   ((output_val>>2)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_9, GPIO_PIN_SET) : HAL_GPIO_Write
 1388              		.loc 1 642 0 discriminator 2
 1389 00bc 0022     		movs	r2, #0
 1390 00be 4FF48071 		mov	r1, #256
 1391 00c2 1848     		ldr	r0, .L70+4
 1392 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1393              	.LVL57:
 1394 00c8 B0E7     		b	.L55
 1395              	.L56:
 643:Src/main.c    ****   ((output_val>>3)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_10, GPIO_PIN_SET) : HAL_GPIO_Writ
 1396              		.loc 1 643 0 discriminator 2
 1397 00ca 0022     		movs	r2, #0
 1398 00cc 4FF40071 		mov	r1, #512
 1399 00d0 1448     		ldr	r0, .L70+4
 1400 00d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1401              	.LVL58:
 1402 00d6 B4E7     		b	.L57
 1403              	.L58:
 644:Src/main.c    ****   ((output_val>>4)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET) : HAL_GPIO_Writ
 1404              		.loc 1 644 0 discriminator 2
 1405 00d8 0022     		movs	r2, #0
 1406 00da 4FF48061 		mov	r1, #1024
 1407 00de 1148     		ldr	r0, .L70+4
 1408 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1409              	.LVL59:
 1410 00e4 B8E7     		b	.L59
 1411              	.L60:
 645:Src/main.c    ****   ((output_val>>5)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET) : HAL_GPIO_Writ
 1412              		.loc 1 645 0 discriminator 2
 1413 00e6 0022     		movs	r2, #0
 1414 00e8 4FF40061 		mov	r1, #2048
ARM GAS  /tmp/ccUmEqZm.s 			page 38


 1415 00ec 0D48     		ldr	r0, .L70+4
 1416 00ee FFF7FEFF 		bl	HAL_GPIO_WritePin
 1417              	.LVL60:
 1418 00f2 BCE7     		b	.L61
 1419              	.L62:
 646:Src/main.c    ****   ((output_val>>6)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_13, GPIO_PIN_SET) : HAL_GPIO_Writ
 1420              		.loc 1 646 0 discriminator 2
 1421 00f4 0022     		movs	r2, #0
 1422 00f6 4FF48051 		mov	r1, #4096
 1423 00fa 0A48     		ldr	r0, .L70+4
 1424 00fc FFF7FEFF 		bl	HAL_GPIO_WritePin
 1425              	.LVL61:
 1426 0100 C0E7     		b	.L63
 1427              	.L64:
 647:Src/main.c    ****   ((output_val>>7)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_14, GPIO_PIN_SET) : HAL_GPIO_Writ
 1428              		.loc 1 647 0 discriminator 2
 1429 0102 0022     		movs	r2, #0
 1430 0104 4FF40051 		mov	r1, #8192
 1431 0108 0648     		ldr	r0, .L70+4
 1432 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1433              	.LVL62:
 1434 010e C4E7     		b	.L65
 1435              	.L69:
 1436              		.loc 1 648 0 discriminator 1
 1437 0110 0122     		movs	r2, #1
 1438 0112 4FF48041 		mov	r1, #16384
 1439 0116 0348     		ldr	r0, .L70+4
 1440 0118 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1441              	.LVL63:
 1442 011c 08BD     		pop	{r3, pc}
 1443              	.L71:
 1444 011e 00BF     		.align	2
 1445              	.L70:
 1446 0120 00000000 		.word	.LANCHOR5
 1447 0124 00100240 		.word	1073876992
 1448              		.cfi_endproc
 1449              	.LFE140:
 1451              		.section	.text.main,"ax",%progbits
 1452              		.align	1
 1453              		.global	main
 1454              		.syntax unified
 1455              		.thumb
 1456              		.thumb_func
 1457              		.fpu fpv4-sp-d16
 1459              	main:
 1460              	.LFB130:
  94:Src/main.c    ****   HAL_Init();
 1461              		.loc 1 94 0
 1462              		.cfi_startproc
 1463              		@ Volatile: function does not return.
 1464              		@ args = 0, pretend = 0, frame = 0
 1465              		@ frame_needed = 0, uses_anonymous_args = 0
 1466 0000 08B5     		push	{r3, lr}
 1467              	.LCFI15:
 1468              		.cfi_def_cfa_offset 8
 1469              		.cfi_offset 3, -8
 1470              		.cfi_offset 14, -4
ARM GAS  /tmp/ccUmEqZm.s 			page 39


  95:Src/main.c    ****   SystemClock_Config();
 1471              		.loc 1 95 0
 1472 0002 FFF7FEFF 		bl	HAL_Init
 1473              	.LVL64:
  96:Src/main.c    **** 
 1474              		.loc 1 96 0
 1475 0006 FFF7FEFF 		bl	SystemClock_Config
 1476              	.LVL65:
  99:Src/main.c    ****   MX_SPI5_Init();
 1477              		.loc 1 99 0
 1478 000a FFF7FEFF 		bl	MX_GPIO_Init
 1479              	.LVL66:
 100:Src/main.c    ****   MX_USART1_UART_Init();
 1480              		.loc 1 100 0
 1481 000e FFF7FEFF 		bl	MX_SPI5_Init
 1482              	.LVL67:
 101:Src/main.c    ****   MX_TIM6_Init();
 1483              		.loc 1 101 0
 1484 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 1485              	.LVL68:
 102:Src/main.c    **** 
 1486              		.loc 1 102 0
 1487 0016 FFF7FEFF 		bl	MX_TIM6_Init
 1488              	.LVL69:
 104:Src/main.c    **** 
 1489              		.loc 1 104 0
 1490 001a FFF7FEFF 		bl	init_wavetable
 1491              	.LVL70:
 106:Src/main.c    **** 
 1492              		.loc 1 106 0
 1493 001e 0B48     		ldr	r0, .L76
 1494 0020 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1495              	.LVL71:
 1496 0024 01E0     		b	.L74
 1497              	.L73:
 118:Src/main.c    ****   }
 1498              		.loc 1 118 0
 1499 0026 FFF7FEFF 		bl	Update_R2R_DAC
 1500              	.LVL72:
 1501              	.L74:
 110:Src/main.c    **** 
 1502              		.loc 1 110 0
 1503 002a 0949     		ldr	r1, .L76+4
 1504 002c 0948     		ldr	r0, .L76+8
 1505 002e FFF7FEFF 		bl	Receive_MIDI
 1506              	.LVL73:
 112:Src/main.c    ****       UpdateEnvelope();
 1507              		.loc 1 112 0
 1508 0032 094B     		ldr	r3, .L76+12
 1509 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1510 0036 002B     		cmp	r3, #0
 1511 0038 F5D0     		beq	.L73
 113:Src/main.c    ****       UpdateOutputValue();
 1512              		.loc 1 113 0
 1513 003a FFF7FEFF 		bl	UpdateEnvelope
 1514              	.LVL74:
 114:Src/main.c    ****       update_value_flag = 0;
ARM GAS  /tmp/ccUmEqZm.s 			page 40


 1515              		.loc 1 114 0
 1516 003e FFF7FEFF 		bl	UpdateOutputValue
 1517              	.LVL75:
 115:Src/main.c    ****     }
 1518              		.loc 1 115 0
 1519 0042 0022     		movs	r2, #0
 1520 0044 044B     		ldr	r3, .L76+12
 1521 0046 1A70     		strb	r2, [r3]
 1522 0048 EDE7     		b	.L73
 1523              	.L77:
 1524 004a 00BF     		.align	2
 1525              	.L76:
 1526 004c 00000000 		.word	htim6
 1527 0050 00000000 		.word	spi_rx_buffer
 1528 0054 00000000 		.word	hspi5
 1529 0058 00000000 		.word	.LANCHOR2
 1530              		.cfi_endproc
 1531              	.LFE130:
 1533              		.section	.text.Error_Handler,"ax",%progbits
 1534              		.align	1
 1535              		.global	Error_Handler
 1536              		.syntax unified
 1537              		.thumb
 1538              		.thumb_func
 1539              		.fpu fpv4-sp-d16
 1541              	Error_Handler:
 1542              	.LFB141:
 649:Src/main.c    **** }
 650:Src/main.c    **** /* USER CODE END 4 */
 651:Src/main.c    **** 
 652:Src/main.c    **** /**
 653:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 654:Src/main.c    ****   * @retval None
 655:Src/main.c    ****   */
 656:Src/main.c    **** void Error_Handler(void)
 657:Src/main.c    **** {
 1543              		.loc 1 657 0
 1544              		.cfi_startproc
 1545              		@ args = 0, pretend = 0, frame = 0
 1546              		@ frame_needed = 0, uses_anonymous_args = 0
 1547              		@ link register save eliminated.
 1548 0000 7047     		bx	lr
 1549              		.cfi_endproc
 1550              	.LFE141:
 1552              		.global	update_value_flag
 1553              		.global	note_on
 1554              		.global	env_state
 1555              		.global	envelope
 1556              		.global	envelope_index
 1557              		.global	output_val
 1558              		.global	phase_accumulator
 1559              		.global	current_midi_note_msg
 1560              		.comm	spi_rx_buffer,3,4
 1561              		.global	spi_tx_buffer
 1562              		.comm	huart1,64,4
 1563              		.comm	htim6,64,4
 1564              		.comm	hspi5,88,4
ARM GAS  /tmp/ccUmEqZm.s 			page 41


 1565              		.comm	lfo_sine,256,4
 1566              		.comm	base_sq,4096,4
 1567              		.comm	base_tri,4096,4
 1568              		.comm	base_neg_saw,4096,4
 1569              		.comm	base_pos_saw,4096,4
 1570              		.comm	base_sine,4096,4
 1571              		.section	.bss.current_midi_note_msg,"aw",%nobits
 1572              		.align	2
 1573              		.set	.LANCHOR0,. + 0
 1576              	current_midi_note_msg:
 1577 0000 000000   		.space	3
 1578              		.section	.bss.envelope,"aw",%nobits
 1579              		.align	2
 1580              		.set	.LANCHOR4,. + 0
 1583              	envelope:
 1584 0000 00000000 		.space	8
 1584      00000000 
 1585              		.section	.bss.envelope_index,"aw",%nobits
 1586              		.align	2
 1587              		.set	.LANCHOR7,. + 0
 1590              	envelope_index:
 1591 0000 00000000 		.space	8
 1591      00000000 
 1592              		.section	.bss.note_on,"aw",%nobits
 1593              		.align	2
 1594              		.set	.LANCHOR1,. + 0
 1597              	note_on:
 1598 0000 00000000 		.space	88
 1598      00000000 
 1598      00000000 
 1598      00000000 
 1598      00000000 
 1599              		.section	.bss.output_val,"aw",%nobits
 1600              		.set	.LANCHOR5,. + 0
 1603              	output_val:
 1604 0000 00       		.space	1
 1605              		.section	.bss.phase_accumulator,"aw",%nobits
 1606              		.align	2
 1607              		.set	.LANCHOR3,. + 0
 1610              	phase_accumulator:
 1611 0000 00000000 		.space	8
 1611      00000000 
 1612              		.section	.bss.update_value_flag,"aw",%nobits
 1613              		.set	.LANCHOR2,. + 0
 1616              	update_value_flag:
 1617 0000 00       		.space	1
 1618              		.section	.data.env_state,"aw",%progbits
 1619              		.align	2
 1620              		.set	.LANCHOR6,. + 0
 1623              	env_state:
 1624 0000 01       		.byte	1
 1625 0001 01       		.byte	1
 1626              		.section	.data.spi_tx_buffer,"aw",%progbits
 1627              		.align	2
 1630              	spi_tx_buffer:
 1631 0000 31       		.byte	49
 1632 0001 32       		.byte	50
ARM GAS  /tmp/ccUmEqZm.s 			page 42


 1633 0002 33       		.byte	51
 1634              		.text
 1635              	.Letext0:
 1636              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1637              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1638              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1639              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1640              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 1641              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1642              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1643              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1644              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1645              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1646              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1647              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1648              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1649              		.file 15 "/usr/include/newlib/sys/lock.h"
 1650              		.file 16 "/usr/include/newlib/sys/_types.h"
 1651              		.file 17 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1652              		.file 18 "/usr/include/newlib/sys/reent.h"
 1653              		.file 19 "/usr/include/newlib/stdlib.h"
 1654              		.file 20 "Inc/waves.h"
 1655              		.file 21 "Inc/midi.h"
 1656              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1657              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccUmEqZm.s 			page 43


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccUmEqZm.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccUmEqZm.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccUmEqZm.s:485    .text.MX_GPIO_Init:00000000000002c0 $d
     /tmp/ccUmEqZm.s:496    .text.MX_GPIO_Init:00000000000002e4 $t
     /tmp/ccUmEqZm.s:624    .text.MX_GPIO_Init:00000000000003a0 $d
     /tmp/ccUmEqZm.s:634    .text.MX_SPI5_Init:0000000000000000 $t
     /tmp/ccUmEqZm.s:640    .text.MX_SPI5_Init:0000000000000000 MX_SPI5_Init
     /tmp/ccUmEqZm.s:686    .text.MX_SPI5_Init:000000000000002c $d
                            *COM*:0000000000000058 hspi5
     /tmp/ccUmEqZm.s:692    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccUmEqZm.s:698    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccUmEqZm.s:737    .text.MX_USART1_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart1
     /tmp/ccUmEqZm.s:743    .text.MX_TIM6_Init:0000000000000000 $t
     /tmp/ccUmEqZm.s:749    .text.MX_TIM6_Init:0000000000000000 MX_TIM6_Init
     /tmp/ccUmEqZm.s:803    .text.MX_TIM6_Init:0000000000000030 $d
                            *COM*:0000000000000040 htim6
     /tmp/ccUmEqZm.s:809    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccUmEqZm.s:816    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccUmEqZm.s:925    .text.SystemClock_Config:0000000000000090 $d
     /tmp/ccUmEqZm.s:931    .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/ccUmEqZm.s:938    .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/ccUmEqZm.s:968    .text.HAL_SPI_TxRxCpltCallback:0000000000000020 $d
                            *COM*:0000000000000003 spi_rx_buffer
     /tmp/ccUmEqZm.s:975    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccUmEqZm.s:982    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccUmEqZm.s:1008   .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccUmEqZm.s:1014   .text.UpdateOutputValue:0000000000000000 $t
     /tmp/ccUmEqZm.s:1021   .text.UpdateOutputValue:0000000000000000 UpdateOutputValue
     /tmp/ccUmEqZm.s:1080   .text.UpdateOutputValue:0000000000000074 $d
                            *COM*:0000000000001000 base_sq
                            *COM*:0000000000001000 base_tri
     /tmp/ccUmEqZm.s:1090   .text.UpdateEnvelope:0000000000000000 $t
     /tmp/ccUmEqZm.s:1097   .text.UpdateEnvelope:0000000000000000 UpdateEnvelope
     /tmp/ccUmEqZm.s:1138   .text.UpdateEnvelope:000000000000002c $d
     /tmp/ccUmEqZm.s:1143   .text.UpdateEnvelope:0000000000000040 $t
     /tmp/ccUmEqZm.s:1255   .text.UpdateEnvelope:0000000000000120 $d
                            *COM*:0000000000001000 base_pos_saw
                            *COM*:0000000000001000 base_neg_saw
     /tmp/ccUmEqZm.s:1265   .text.Update_R2R_DAC:0000000000000000 $t
     /tmp/ccUmEqZm.s:1272   .text.Update_R2R_DAC:0000000000000000 Update_R2R_DAC
     /tmp/ccUmEqZm.s:1446   .text.Update_R2R_DAC:0000000000000120 $d
     /tmp/ccUmEqZm.s:1452   .text.main:0000000000000000 $t
     /tmp/ccUmEqZm.s:1459   .text.main:0000000000000000 main
     /tmp/ccUmEqZm.s:1526   .text.main:000000000000004c $d
     /tmp/ccUmEqZm.s:1534   .text.Error_Handler:0000000000000000 $t
     /tmp/ccUmEqZm.s:1541   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccUmEqZm.s:1616   .bss.update_value_flag:0000000000000000 update_value_flag
     /tmp/ccUmEqZm.s:1597   .bss.note_on:0000000000000000 note_on
     /tmp/ccUmEqZm.s:1623   .data.env_state:0000000000000000 env_state
     /tmp/ccUmEqZm.s:1583   .bss.envelope:0000000000000000 envelope
     /tmp/ccUmEqZm.s:1590   .bss.envelope_index:0000000000000000 envelope_index
     /tmp/ccUmEqZm.s:1603   .bss.output_val:0000000000000000 output_val
     /tmp/ccUmEqZm.s:1610   .bss.phase_accumulator:0000000000000000 phase_accumulator
     /tmp/ccUmEqZm.s:1576   .bss.current_midi_note_msg:0000000000000000 current_midi_note_msg
ARM GAS  /tmp/ccUmEqZm.s 			page 44


     /tmp/ccUmEqZm.s:1630   .data.spi_tx_buffer:0000000000000000 spi_tx_buffer
                            *COM*:0000000000000100 lfo_sine
                            *COM*:0000000000001000 base_sine
     /tmp/ccUmEqZm.s:1572   .bss.current_midi_note_msg:0000000000000000 $d
     /tmp/ccUmEqZm.s:1579   .bss.envelope:0000000000000000 $d
     /tmp/ccUmEqZm.s:1586   .bss.envelope_index:0000000000000000 $d
     /tmp/ccUmEqZm.s:1593   .bss.note_on:0000000000000000 $d
     /tmp/ccUmEqZm.s:1604   .bss.output_val:0000000000000000 $d
     /tmp/ccUmEqZm.s:1606   .bss.phase_accumulator:0000000000000000 $d
     /tmp/ccUmEqZm.s:1617   .bss.update_value_flag:0000000000000000 $d
     /tmp/ccUmEqZm.s:1619   .data.env_state:0000000000000000 $d
     /tmp/ccUmEqZm.s:1627   .data.spi_tx_buffer:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Init
HAL_UART_Init
HAL_TIM_Base_Init
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_GPIO_TogglePin
HAL_Init
init_wavetable
HAL_TIM_Base_Start_IT
Receive_MIDI
