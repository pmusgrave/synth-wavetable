ARM GAS  /tmp/cccRwXIK.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB137:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include "midi.h"
  27:Src/main.c    **** #include "waves.h"
  28:Src/main.c    **** /* USER CODE END Includes */
  29:Src/main.c    **** 
  30:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  31:Src/main.c    **** /* USER CODE BEGIN PTD */
  32:Src/main.c    **** 
ARM GAS  /tmp/cccRwXIK.s 			page 2


  33:Src/main.c    **** /* USER CODE END PTD */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PD */
  37:Src/main.c    **** #define DDS_SCALE_FACTOR 89.4745833
  38:Src/main.c    **** #define VOICES 16
  39:Src/main.c    **** #define NOT_TRIGGERED 0
  40:Src/main.c    **** #define ATTACK_MODE 1
  41:Src/main.c    **** #define DECAY_MODE 2
  42:Src/main.c    **** #define SUSTAIN_MODE 3
  43:Src/main.c    **** #define RELEASE_MODE 4
  44:Src/main.c    **** /* USER CODE END PD */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  47:Src/main.c    **** /* USER CODE BEGIN PM */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE END PM */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  52:Src/main.c    **** DAC_HandleTypeDef hdac;
  53:Src/main.c    **** SPI_HandleTypeDef hspi5;
  54:Src/main.c    **** TIM_HandleTypeDef htim6;
  55:Src/main.c    **** TIM_HandleTypeDef htim7;
  56:Src/main.c    **** UART_HandleTypeDef huart1;
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE BEGIN PV */
  59:Src/main.c    **** uint8_t spi_tx_buffer[3] = {49,50,51};
  60:Src/main.c    **** uint8_t spi_rx_buffer[3];
  61:Src/main.c    **** const float inv_voices = 1.0/VOICES;
  62:Src/main.c    **** volatile struct midi_note_msg current_midi_note_msg = {0,0,0};
  63:Src/main.c    **** volatile uint32_t phase_accumulator[VOICES] = {0};
  64:Src/main.c    **** volatile uint8_t output_val = 0;
  65:Src/main.c    **** volatile uint32_t envelope_index[VOICES] = {0};
  66:Src/main.c    **** volatile float envelope[VOICES] = {0};
  67:Src/main.c    **** volatile uint8_t env_state[VOICES];
  68:Src/main.c    **** volatile uint8_t note_on[88] = {0};
  69:Src/main.c    **** volatile uint8_t note_freq[VOICES] = {0};
  70:Src/main.c    **** 
  71:Src/main.c    **** volatile uint8_t update_value_flag = 0;
  72:Src/main.c    **** volatile uint8_t MIDI_flag = 0;
  73:Src/main.c    **** 
  74:Src/main.c    **** uint8_t attack = 30;
  75:Src/main.c    **** uint8_t decay = 30;
  76:Src/main.c    **** uint8_t sustain = 200;
  77:Src/main.c    **** uint8_t release = 2;
  78:Src/main.c    **** /* USER CODE END PV */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  81:Src/main.c    **** void SystemClock_Config(void);
  82:Src/main.c    **** static void MX_GPIO_Init(void);
  83:Src/main.c    **** static void MX_SPI5_Init(void);
  84:Src/main.c    **** static void MX_USART1_UART_Init(void);
  85:Src/main.c    **** static void MX_DAC_Init(void);
  86:Src/main.c    **** static void MX_TIM6_Init(void);
  87:Src/main.c    **** static void MX_TIM7_Init(void);
  88:Src/main.c    **** /* USER CODE BEGIN PFP */
  89:Src/main.c    **** void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi);
ARM GAS  /tmp/cccRwXIK.s 			page 3


  90:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim);
  91:Src/main.c    **** void UpdateOutputValue(void);
  92:Src/main.c    **** void UpdateEnvelope(void);
  93:Src/main.c    **** void Update_R2R_DAC(void);
  94:Src/main.c    **** /* USER CODE END PFP */
  95:Src/main.c    **** 
  96:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  97:Src/main.c    **** /* USER CODE BEGIN 0 */
  98:Src/main.c    **** 
  99:Src/main.c    **** /* USER CODE END 0 */
 100:Src/main.c    **** 
 101:Src/main.c    **** /**
 102:Src/main.c    ****   * @brief  The application entry point.
 103:Src/main.c    ****   * @retval int
 104:Src/main.c    ****   */
 105:Src/main.c    **** int main(void)
 106:Src/main.c    **** {
 107:Src/main.c    ****   /* USER CODE BEGIN 1 */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE END 1 */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 114:Src/main.c    ****   HAL_Init();
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* USER CODE BEGIN Init */
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* USER CODE END Init */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* Configure the system clock */
 121:Src/main.c    ****   SystemClock_Config();
 122:Src/main.c    **** 
 123:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* USER CODE END SysInit */
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* Initialize all configured peripherals */
 128:Src/main.c    ****   MX_GPIO_Init();
 129:Src/main.c    ****   MX_SPI5_Init();
 130:Src/main.c    ****   MX_USART1_UART_Init();
 131:Src/main.c    ****   MX_DAC_Init();
 132:Src/main.c    ****   MX_TIM6_Init();
 133:Src/main.c    ****   MX_TIM7_Init();
 134:Src/main.c    ****   /* USER CODE BEGIN 2 */
 135:Src/main.c    ****   init_wavetable();
 136:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim6);
 137:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim7);
 138:Src/main.c    ****   HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 139:Src/main.c    **** 
 140:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 141:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 142:Src/main.c    ****     note_on[i] = MIDI_NOTE_OFF;
 143:Src/main.c    ****     note_freq[i] = 30;
 144:Src/main.c    ****   }
 145:Src/main.c    **** 
 146:Src/main.c    ****   note_on[0] = MIDI_NOTE_ON;
ARM GAS  /tmp/cccRwXIK.s 			page 4


 147:Src/main.c    ****   note_freq[0] = 50;
 148:Src/main.c    ****   env_state[0] = ATTACK_MODE;
 149:Src/main.c    **** 
 150:Src/main.c    ****   note_on[1] = MIDI_NOTE_ON;
 151:Src/main.c    ****   note_freq[1] = 54;
 152:Src/main.c    ****   env_state[1] = ATTACK_MODE;
 153:Src/main.c    **** 
 154:Src/main.c    ****   note_on[2] = MIDI_NOTE_ON;
 155:Src/main.c    ****   note_freq[2] = 57;
 156:Src/main.c    ****   env_state[2] = ATTACK_MODE;
 157:Src/main.c    **** 
 158:Src/main.c    ****   note_on[3] = MIDI_NOTE_ON;
 159:Src/main.c    ****   note_freq[3] = 62;
 160:Src/main.c    ****   env_state[3] = ATTACK_MODE;
 161:Src/main.c    **** 
 162:Src/main.c    **** 
 163:Src/main.c    ****   /* USER CODE END 2 */
 164:Src/main.c    **** 
 165:Src/main.c    ****   /* Infinite loop */
 166:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 167:Src/main.c    ****   while (1)
 168:Src/main.c    ****   {
 169:Src/main.c    ****     // Receive_MIDI(&hspi5, spi_rx_buffer);
 170:Src/main.c    **** 
 171:Src/main.c    ****     /*
 172:Src/main.c    ****     if(MIDI_flag) {
 173:Src/main.c    ****       MIDI_flag = 0;
 174:Src/main.c    ****       for(int i = 0; i < VOICES; i++) {
 175:Src/main.c    ****          if(note_on[i] == MIDI_NOTE_OFF) {
 176:Src/main.c    ****           note_on[i] = current_midi_note_msg.command;
 177:Src/main.c    ****           note_freq[i] = current_midi_note_msg.note;
 178:Src/main.c    ****           env_state[i] = ATTACK_MODE;
 179:Src/main.c    ****           break;
 180:Src/main.c    ****         }
 181:Src/main.c    ****       }
 182:Src/main.c    ****     }
 183:Src/main.c    ****     */
 184:Src/main.c    **** 
 185:Src/main.c    ****     if(update_value_flag) {
 186:Src/main.c    ****       //      __disable_irq();
 187:Src/main.c    ****       UpdateEnvelope();
 188:Src/main.c    ****       UpdateOutputValue();
 189:Src/main.c    ****       HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_8B_R, output_val);
 190:Src/main.c    ****       update_value_flag = 0;
 191:Src/main.c    ****       //      __enable_irq();
 192:Src/main.c    ****     }
 193:Src/main.c    **** 
 194:Src/main.c    ****     //Update_R2R_DAC();
 195:Src/main.c    **** 
 196:Src/main.c    **** 
 197:Src/main.c    ****     /* USER CODE END WHILE */
 198:Src/main.c    **** 
 199:Src/main.c    ****     /* USER CODE BEGIN 3 */
 200:Src/main.c    ****   }
 201:Src/main.c    ****   /* USER CODE END 3 */
 202:Src/main.c    **** }
 203:Src/main.c    **** 
ARM GAS  /tmp/cccRwXIK.s 			page 5


 204:Src/main.c    **** /**
 205:Src/main.c    ****   * @brief System Clock Configuration
 206:Src/main.c    ****   * @retval None
 207:Src/main.c    ****   */
 208:Src/main.c    **** void SystemClock_Config(void)
 209:Src/main.c    **** {
 210:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 211:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 212:Src/main.c    **** 
 213:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 214:Src/main.c    ****   */
 215:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 216:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 217:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 218:Src/main.c    ****   */
 219:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 220:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 221:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 222:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 223:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 224:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 225:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 100;
 226:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 227:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 228:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 229:Src/main.c    ****   {
 230:Src/main.c    ****     Error_Handler();
 231:Src/main.c    ****   }
 232:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 233:Src/main.c    ****   */
 234:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 235:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 236:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 237:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 238:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 239:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 240:Src/main.c    **** 
 241:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 242:Src/main.c    ****   {
 243:Src/main.c    ****     Error_Handler();
 244:Src/main.c    ****   }
 245:Src/main.c    **** }
 246:Src/main.c    **** 
 247:Src/main.c    **** /**
 248:Src/main.c    ****   * @brief DAC Initialization Function
 249:Src/main.c    ****   * @param None
 250:Src/main.c    ****   * @retval None
 251:Src/main.c    ****   */
 252:Src/main.c    **** static void MX_DAC_Init(void)
 253:Src/main.c    **** {
 254:Src/main.c    **** 
 255:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 0 */
 256:Src/main.c    **** 
 257:Src/main.c    ****   /* USER CODE END DAC_Init 0 */
 258:Src/main.c    **** 
 259:Src/main.c    ****   DAC_ChannelConfTypeDef sConfig = {0};
 260:Src/main.c    **** 
ARM GAS  /tmp/cccRwXIK.s 			page 6


 261:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 1 */
 262:Src/main.c    **** 
 263:Src/main.c    ****   /* USER CODE END DAC_Init 1 */
 264:Src/main.c    ****   /** DAC Initialization 
 265:Src/main.c    ****   */
 266:Src/main.c    ****   hdac.Instance = DAC;
 267:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 268:Src/main.c    ****   {
 269:Src/main.c    ****     Error_Handler();
 270:Src/main.c    ****   }
 271:Src/main.c    ****   /** DAC channel OUT2 config 
 272:Src/main.c    ****   */
 273:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 274:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 275:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 276:Src/main.c    ****   {
 277:Src/main.c    ****     Error_Handler();
 278:Src/main.c    ****   }
 279:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 2 */
 280:Src/main.c    **** 
 281:Src/main.c    ****   /* USER CODE END DAC_Init 2 */
 282:Src/main.c    **** 
 283:Src/main.c    **** }
 284:Src/main.c    **** 
 285:Src/main.c    **** /**
 286:Src/main.c    ****   * @brief SPI5 Initialization Function
 287:Src/main.c    ****   * @param None
 288:Src/main.c    ****   * @retval None
 289:Src/main.c    ****   */
 290:Src/main.c    **** static void MX_SPI5_Init(void)
 291:Src/main.c    **** {
 292:Src/main.c    **** 
 293:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 0 */
 294:Src/main.c    **** 
 295:Src/main.c    ****   /* USER CODE END SPI5_Init 0 */
 296:Src/main.c    **** 
 297:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 1 */
 298:Src/main.c    **** 
 299:Src/main.c    ****   /* USER CODE END SPI5_Init 1 */
 300:Src/main.c    ****   /* SPI5 parameter configuration*/
 301:Src/main.c    ****   hspi5.Instance = SPI5;
 302:Src/main.c    ****   hspi5.Init.Mode = SPI_MODE_SLAVE;
 303:Src/main.c    ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 304:Src/main.c    ****   hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 305:Src/main.c    ****   hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 306:Src/main.c    ****   hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 307:Src/main.c    ****   hspi5.Init.NSS = SPI_NSS_HARD_INPUT;
 308:Src/main.c    ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 309:Src/main.c    ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 310:Src/main.c    ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 311:Src/main.c    ****   hspi5.Init.CRCPolynomial = 10;
 312:Src/main.c    ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 313:Src/main.c    ****   {
 314:Src/main.c    ****     Error_Handler();
 315:Src/main.c    ****   }
 316:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 2 */
 317:Src/main.c    **** 
ARM GAS  /tmp/cccRwXIK.s 			page 7


 318:Src/main.c    ****   /* USER CODE END SPI5_Init 2 */
 319:Src/main.c    **** 
 320:Src/main.c    **** }
 321:Src/main.c    **** 
 322:Src/main.c    **** /**
 323:Src/main.c    ****   * @brief TIM6 Initialization Function
 324:Src/main.c    ****   * @param None
 325:Src/main.c    ****   * @retval None
 326:Src/main.c    ****   */
 327:Src/main.c    **** static void MX_TIM6_Init(void)
 328:Src/main.c    **** {
 329:Src/main.c    **** 
 330:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 0 */
 331:Src/main.c    **** 
 332:Src/main.c    ****   /* USER CODE END TIM6_Init 0 */
 333:Src/main.c    **** 
 334:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 335:Src/main.c    **** 
 336:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 1 */
 337:Src/main.c    **** 
 338:Src/main.c    ****   /* USER CODE END TIM6_Init 1 */
 339:Src/main.c    ****   htim6.Instance = TIM6;
 340:Src/main.c    ****   htim6.Init.Prescaler = 0;
 341:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 342:Src/main.c    ****   htim6.Init.Period = 1290;
 343:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 344:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 345:Src/main.c    ****   {
 346:Src/main.c    ****     Error_Handler();
 347:Src/main.c    ****   }
 348:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 349:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 350:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 351:Src/main.c    ****   {
 352:Src/main.c    ****     Error_Handler();
 353:Src/main.c    ****   }
 354:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 2 */
 355:Src/main.c    **** 
 356:Src/main.c    ****   /* USER CODE END TIM6_Init 2 */
 357:Src/main.c    **** 
 358:Src/main.c    **** }
 359:Src/main.c    **** 
 360:Src/main.c    **** /**
 361:Src/main.c    ****   * @brief TIM7 Initialization Function
 362:Src/main.c    ****   * @param None
 363:Src/main.c    ****   * @retval None
 364:Src/main.c    ****   */
 365:Src/main.c    **** static void MX_TIM7_Init(void)
 366:Src/main.c    **** {
 367:Src/main.c    **** 
 368:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 0 */
 369:Src/main.c    **** 
 370:Src/main.c    ****   /* USER CODE END TIM7_Init 0 */
 371:Src/main.c    **** 
 372:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 373:Src/main.c    **** 
 374:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 1 */
ARM GAS  /tmp/cccRwXIK.s 			page 8


 375:Src/main.c    **** 
 376:Src/main.c    ****   /* USER CODE END TIM7_Init 1 */
 377:Src/main.c    ****   htim7.Instance = TIM7;
 378:Src/main.c    ****   htim7.Init.Prescaler = 1024;
 379:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 380:Src/main.c    ****   htim7.Init.Period = 35000;
 381:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 382:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 383:Src/main.c    ****   {
 384:Src/main.c    ****     Error_Handler();
 385:Src/main.c    ****   }
 386:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 387:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 388:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 389:Src/main.c    ****   {
 390:Src/main.c    ****     Error_Handler();
 391:Src/main.c    ****   }
 392:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 2 */
 393:Src/main.c    **** 
 394:Src/main.c    ****   /* USER CODE END TIM7_Init 2 */
 395:Src/main.c    **** 
 396:Src/main.c    **** }
 397:Src/main.c    **** 
 398:Src/main.c    **** /**
 399:Src/main.c    ****   * @brief USART1 Initialization Function
 400:Src/main.c    ****   * @param None
 401:Src/main.c    ****   * @retval None
 402:Src/main.c    ****   */
 403:Src/main.c    **** static void MX_USART1_UART_Init(void)
 404:Src/main.c    **** {
 405:Src/main.c    **** 
 406:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 407:Src/main.c    **** 
 408:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 409:Src/main.c    **** 
 410:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 411:Src/main.c    **** 
 412:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 413:Src/main.c    ****   huart1.Instance = USART1;
 414:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 415:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 416:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 417:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 418:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 419:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 420:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 421:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 422:Src/main.c    ****   {
 423:Src/main.c    ****     Error_Handler();
 424:Src/main.c    ****   }
 425:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 426:Src/main.c    **** 
 427:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 428:Src/main.c    **** 
 429:Src/main.c    **** }
 430:Src/main.c    **** 
 431:Src/main.c    **** /**
ARM GAS  /tmp/cccRwXIK.s 			page 9


 432:Src/main.c    ****   * @brief GPIO Initialization Function
 433:Src/main.c    ****   * @param None
 434:Src/main.c    ****   * @retval None
 435:Src/main.c    ****   */
 436:Src/main.c    **** static void MX_GPIO_Init(void)
 437:Src/main.c    **** {
  27              		.loc 1 437 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 56
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
  43 0004 8FB0     		sub	sp, sp, #60
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 96
 438:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  46              		.loc 1 438 0
  47 0006 0024     		movs	r4, #0
  48 0008 0994     		str	r4, [sp, #36]
  49 000a 0A94     		str	r4, [sp, #40]
  50 000c 0B94     		str	r4, [sp, #44]
  51 000e 0C94     		str	r4, [sp, #48]
  52 0010 0D94     		str	r4, [sp, #52]
  53              	.LBB2:
 439:Src/main.c    **** 
 440:Src/main.c    ****   /* GPIO Ports Clock Enable */
 441:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  54              		.loc 1 441 0
  55 0012 0194     		str	r4, [sp, #4]
  56 0014 AA4B     		ldr	r3, .L3
  57 0016 1A6B     		ldr	r2, [r3, #48]
  58 0018 42F00402 		orr	r2, r2, #4
  59 001c 1A63     		str	r2, [r3, #48]
  60 001e 1A6B     		ldr	r2, [r3, #48]
  61 0020 02F00402 		and	r2, r2, #4
  62 0024 0192     		str	r2, [sp, #4]
  63 0026 019A     		ldr	r2, [sp, #4]
  64              	.LBE2:
  65              	.LBB3:
 442:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  66              		.loc 1 442 0
  67 0028 0294     		str	r4, [sp, #8]
  68 002a 1A6B     		ldr	r2, [r3, #48]
  69 002c 42F02002 		orr	r2, r2, #32
  70 0030 1A63     		str	r2, [r3, #48]
  71 0032 1A6B     		ldr	r2, [r3, #48]
  72 0034 02F02002 		and	r2, r2, #32
ARM GAS  /tmp/cccRwXIK.s 			page 10


  73 0038 0292     		str	r2, [sp, #8]
  74 003a 029A     		ldr	r2, [sp, #8]
  75              	.LBE3:
  76              	.LBB4:
 443:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  77              		.loc 1 443 0
  78 003c 0394     		str	r4, [sp, #12]
  79 003e 1A6B     		ldr	r2, [r3, #48]
  80 0040 42F08002 		orr	r2, r2, #128
  81 0044 1A63     		str	r2, [r3, #48]
  82 0046 1A6B     		ldr	r2, [r3, #48]
  83 0048 02F08002 		and	r2, r2, #128
  84 004c 0392     		str	r2, [sp, #12]
  85 004e 039A     		ldr	r2, [sp, #12]
  86              	.LBE4:
  87              	.LBB5:
 444:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  88              		.loc 1 444 0
  89 0050 0494     		str	r4, [sp, #16]
  90 0052 1A6B     		ldr	r2, [r3, #48]
  91 0054 42F00102 		orr	r2, r2, #1
  92 0058 1A63     		str	r2, [r3, #48]
  93 005a 1A6B     		ldr	r2, [r3, #48]
  94 005c 02F00102 		and	r2, r2, #1
  95 0060 0492     		str	r2, [sp, #16]
  96 0062 049A     		ldr	r2, [sp, #16]
  97              	.LBE5:
  98              	.LBB6:
 445:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  99              		.loc 1 445 0
 100 0064 0594     		str	r4, [sp, #20]
 101 0066 1A6B     		ldr	r2, [r3, #48]
 102 0068 42F00202 		orr	r2, r2, #2
 103 006c 1A63     		str	r2, [r3, #48]
 104 006e 1A6B     		ldr	r2, [r3, #48]
 105 0070 02F00202 		and	r2, r2, #2
 106 0074 0592     		str	r2, [sp, #20]
 107 0076 059A     		ldr	r2, [sp, #20]
 108              	.LBE6:
 109              	.LBB7:
 446:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 110              		.loc 1 446 0
 111 0078 0694     		str	r4, [sp, #24]
 112 007a 1A6B     		ldr	r2, [r3, #48]
 113 007c 42F04002 		orr	r2, r2, #64
 114 0080 1A63     		str	r2, [r3, #48]
 115 0082 1A6B     		ldr	r2, [r3, #48]
 116 0084 02F04002 		and	r2, r2, #64
 117 0088 0692     		str	r2, [sp, #24]
 118 008a 069A     		ldr	r2, [sp, #24]
 119              	.LBE7:
 120              	.LBB8:
 447:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 121              		.loc 1 447 0
 122 008c 0794     		str	r4, [sp, #28]
 123 008e 1A6B     		ldr	r2, [r3, #48]
 124 0090 42F01002 		orr	r2, r2, #16
ARM GAS  /tmp/cccRwXIK.s 			page 11


 125 0094 1A63     		str	r2, [r3, #48]
 126 0096 1A6B     		ldr	r2, [r3, #48]
 127 0098 02F01002 		and	r2, r2, #16
 128 009c 0792     		str	r2, [sp, #28]
 129 009e 079A     		ldr	r2, [sp, #28]
 130              	.LBE8:
 131              	.LBB9:
 448:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 132              		.loc 1 448 0
 133 00a0 0894     		str	r4, [sp, #32]
 134 00a2 1A6B     		ldr	r2, [r3, #48]
 135 00a4 42F00802 		orr	r2, r2, #8
 136 00a8 1A63     		str	r2, [r3, #48]
 137 00aa 1B6B     		ldr	r3, [r3, #48]
 138 00ac 03F00803 		and	r3, r3, #8
 139 00b0 0893     		str	r3, [sp, #32]
 140 00b2 089B     		ldr	r3, [sp, #32]
 141              	.LBE9:
 449:Src/main.c    **** 
 450:Src/main.c    ****   /*Configure GPIO pin Output Level */
 451:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin, GPIO_PIN_RESET);
 142              		.loc 1 451 0
 143 00b4 2246     		mov	r2, r4
 144 00b6 1621     		movs	r1, #22
 145 00b8 8248     		ldr	r0, .L3+4
 146 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 147              	.LVL0:
 452:Src/main.c    **** 
 453:Src/main.c    ****   /*Configure GPIO pin Output Level */
 454:Src/main.c    ****   HAL_GPIO_WritePin(ACP_RST_GPIO_Port, ACP_RST_Pin, GPIO_PIN_RESET);
 148              		.loc 1 454 0
 149 00be 2246     		mov	r2, r4
 150 00c0 8021     		movs	r1, #128
 151 00c2 8148     		ldr	r0, .L3+8
 152 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 153              	.LVL1:
 455:Src/main.c    **** 
 456:Src/main.c    ****   /*Configure GPIO pin Output Level */
 457:Src/main.c    ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15, GPIO_PIN_RESET);
 154              		.loc 1 457 0
 155 00c8 DFF810A2 		ldr	r10, .L3+28
 156 00cc 2246     		mov	r2, r4
 157 00ce 4FF46041 		mov	r1, #57344
 158 00d2 5046     		mov	r0, r10
 159 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 160              	.LVL2:
 458:Src/main.c    **** 
 459:Src/main.c    ****   /*Configure GPIO pin Output Level */
 460:Src/main.c    ****   HAL_GPIO_WritePin(GPIOG, GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD4_Pin, GPIO_PIN_RESET);
 161              		.loc 1 460 0
 162 00d8 2246     		mov	r2, r4
 163 00da 46F20301 		movw	r1, #24579
 164 00de 7B48     		ldr	r0, .L3+12
 165 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 166              	.LVL3:
 461:Src/main.c    **** 
 462:Src/main.c    ****   /*Configure GPIO pin Output Level */
ARM GAS  /tmp/cccRwXIK.s 			page 12


 463:Src/main.c    ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 167              		.loc 1 463 0
 168 00e4 2246     		mov	r2, r4
 169 00e6 4FF68071 		movw	r1, #65408
 170 00ea 7948     		ldr	r0, .L3+16
 171 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 172              	.LVL4:
 464:Src/main.c    ****                           |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
 465:Src/main.c    ****                           |GPIO_PIN_15, GPIO_PIN_RESET);
 466:Src/main.c    **** 
 467:Src/main.c    ****   /*Configure GPIO pin Output Level */
 468:Src/main.c    ****   HAL_GPIO_WritePin(GPIOD, RDX_Pin|WRX_DCX_Pin, GPIO_PIN_RESET);
 173              		.loc 1 468 0
 174 00f0 2246     		mov	r2, r4
 175 00f2 4FF44051 		mov	r1, #12288
 176 00f6 7748     		ldr	r0, .L3+20
 177 00f8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 178              	.LVL5:
 469:Src/main.c    **** 
 470:Src/main.c    ****   /*Configure GPIO pins : A0_Pin A1_Pin A2_Pin A3_Pin 
 471:Src/main.c    ****                            A4_Pin A5_Pin SDNRAS_Pin A6_Pin */
 472:Src/main.c    ****   GPIO_InitStruct.Pin = A0_Pin|A1_Pin|A2_Pin|A3_Pin 
 179              		.loc 1 472 0
 180 00fc 41F63F03 		movw	r3, #6207
 181 0100 0993     		str	r3, [sp, #36]
 473:Src/main.c    ****                           |A4_Pin|A5_Pin|SDNRAS_Pin|A6_Pin;
 474:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 182              		.loc 1 474 0
 183 0102 0225     		movs	r5, #2
 184 0104 0A95     		str	r5, [sp, #40]
 475:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 185              		.loc 1 475 0
 186 0106 0B94     		str	r4, [sp, #44]
 476:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 187              		.loc 1 476 0
 188 0108 0327     		movs	r7, #3
 189 010a 0C97     		str	r7, [sp, #48]
 477:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 190              		.loc 1 477 0
 191 010c 4FF00C08 		mov	r8, #12
 192 0110 CDF83480 		str	r8, [sp, #52]
 478:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 193              		.loc 1 478 0
 194 0114 09A9     		add	r1, sp, #36
 195 0116 5046     		mov	r0, r10
 196 0118 FFF7FEFF 		bl	HAL_GPIO_Init
 197              	.LVL6:
 479:Src/main.c    **** 
 480:Src/main.c    ****   /*Configure GPIO pin : ENABLE_Pin */
 481:Src/main.c    ****   GPIO_InitStruct.Pin = ENABLE_Pin;
 198              		.loc 1 481 0
 199 011c 4FF48063 		mov	r3, #1024
 200 0120 0993     		str	r3, [sp, #36]
 482:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 201              		.loc 1 482 0
 202 0122 0A95     		str	r5, [sp, #40]
 483:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/cccRwXIK.s 			page 13


 203              		.loc 1 483 0
 204 0124 0B94     		str	r4, [sp, #44]
 484:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 205              		.loc 1 484 0
 206 0126 0C94     		str	r4, [sp, #48]
 485:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 207              		.loc 1 485 0
 208 0128 4FF00E09 		mov	r9, #14
 209 012c CDF83490 		str	r9, [sp, #52]
 486:Src/main.c    ****   HAL_GPIO_Init(ENABLE_GPIO_Port, &GPIO_InitStruct);
 210              		.loc 1 486 0
 211 0130 09A9     		add	r1, sp, #36
 212 0132 5046     		mov	r0, r10
 213 0134 FFF7FEFF 		bl	HAL_GPIO_Init
 214              	.LVL7:
 487:Src/main.c    **** 
 488:Src/main.c    ****   /*Configure GPIO pin : SDNWE_Pin */
 489:Src/main.c    ****   GPIO_InitStruct.Pin = SDNWE_Pin;
 215              		.loc 1 489 0
 216 0138 0126     		movs	r6, #1
 217 013a 0996     		str	r6, [sp, #36]
 490:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 218              		.loc 1 490 0
 219 013c 0A95     		str	r5, [sp, #40]
 491:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 220              		.loc 1 491 0
 221 013e 0B94     		str	r4, [sp, #44]
 492:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 222              		.loc 1 492 0
 223 0140 0C97     		str	r7, [sp, #48]
 493:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 224              		.loc 1 493 0
 225 0142 CDF83480 		str	r8, [sp, #52]
 494:Src/main.c    ****   HAL_GPIO_Init(SDNWE_GPIO_Port, &GPIO_InitStruct);
 226              		.loc 1 494 0
 227 0146 09A9     		add	r1, sp, #36
 228 0148 5E48     		ldr	r0, .L3+4
 229 014a FFF7FEFF 		bl	HAL_GPIO_Init
 230              	.LVL8:
 495:Src/main.c    **** 
 496:Src/main.c    ****   /*Configure GPIO pins : NCS_MEMS_SPI_Pin CSX_Pin OTG_FS_PSO_Pin */
 497:Src/main.c    ****   GPIO_InitStruct.Pin = NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin;
 231              		.loc 1 497 0
 232 014e 1623     		movs	r3, #22
 233 0150 0993     		str	r3, [sp, #36]
 498:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 234              		.loc 1 498 0
 235 0152 0A96     		str	r6, [sp, #40]
 499:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 236              		.loc 1 499 0
 237 0154 0B94     		str	r4, [sp, #44]
 500:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 238              		.loc 1 500 0
 239 0156 0C94     		str	r4, [sp, #48]
 501:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 240              		.loc 1 501 0
 241 0158 09A9     		add	r1, sp, #36
ARM GAS  /tmp/cccRwXIK.s 			page 14


 242 015a 5A48     		ldr	r0, .L3+4
 243 015c FFF7FEFF 		bl	HAL_GPIO_Init
 244              	.LVL9:
 502:Src/main.c    **** 
 503:Src/main.c    ****   /*Configure GPIO pins : B1_Pin MEMS_INT1_Pin MEMS_INT2_Pin TP_INT1_Pin */
 504:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin|MEMS_INT1_Pin|MEMS_INT2_Pin|TP_INT1_Pin;
 245              		.loc 1 504 0
 246 0160 48F20703 		movw	r3, #32775
 247 0164 0993     		str	r3, [sp, #36]
 505:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 248              		.loc 1 505 0
 249 0166 DFF878B1 		ldr	fp, .L3+32
 250 016a CDF828B0 		str	fp, [sp, #40]
 506:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 251              		.loc 1 506 0
 252 016e 0B94     		str	r4, [sp, #44]
 507:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 253              		.loc 1 507 0
 254 0170 09A9     		add	r1, sp, #36
 255 0172 5548     		ldr	r0, .L3+8
 256 0174 FFF7FEFF 		bl	HAL_GPIO_Init
 257              	.LVL10:
 508:Src/main.c    **** 
 509:Src/main.c    ****   /*Configure GPIO pins : B5_Pin VSYNC_Pin G2_Pin R4_Pin 
 510:Src/main.c    ****                            R5_Pin */
 511:Src/main.c    ****   GPIO_InitStruct.Pin = B5_Pin|VSYNC_Pin|G2_Pin|R4_Pin 
 258              		.loc 1 511 0
 259 0178 41F65803 		movw	r3, #6232
 260 017c 0993     		str	r3, [sp, #36]
 512:Src/main.c    ****                           |R5_Pin;
 513:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 261              		.loc 1 513 0
 262 017e 0A95     		str	r5, [sp, #40]
 514:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 263              		.loc 1 514 0
 264 0180 0B94     		str	r4, [sp, #44]
 515:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 265              		.loc 1 515 0
 266 0182 0C94     		str	r4, [sp, #48]
 516:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 267              		.loc 1 516 0
 268 0184 CDF83490 		str	r9, [sp, #52]
 517:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 269              		.loc 1 517 0
 270 0188 09A9     		add	r1, sp, #36
 271 018a 4F48     		ldr	r0, .L3+8
 272 018c FFF7FEFF 		bl	HAL_GPIO_Init
 273              	.LVL11:
 518:Src/main.c    **** 
 519:Src/main.c    ****   /*Configure GPIO pin : ACP_RST_Pin */
 520:Src/main.c    ****   GPIO_InitStruct.Pin = ACP_RST_Pin;
 274              		.loc 1 520 0
 275 0190 8023     		movs	r3, #128
 276 0192 0993     		str	r3, [sp, #36]
 521:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 277              		.loc 1 521 0
 278 0194 0A96     		str	r6, [sp, #40]
ARM GAS  /tmp/cccRwXIK.s 			page 15


 522:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 279              		.loc 1 522 0
 280 0196 0B94     		str	r4, [sp, #44]
 523:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 281              		.loc 1 523 0
 282 0198 0C94     		str	r4, [sp, #48]
 524:Src/main.c    ****   HAL_GPIO_Init(ACP_RST_GPIO_Port, &GPIO_InitStruct);
 283              		.loc 1 524 0
 284 019a 09A9     		add	r1, sp, #36
 285 019c 4A48     		ldr	r0, .L3+8
 286 019e FFF7FEFF 		bl	HAL_GPIO_Init
 287              	.LVL12:
 525:Src/main.c    **** 
 526:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_OC_Pin */
 527:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_OC_Pin;
 288              		.loc 1 527 0
 289 01a2 2023     		movs	r3, #32
 290 01a4 0993     		str	r3, [sp, #36]
 528:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 291              		.loc 1 528 0
 292 01a6 CDF828B0 		str	fp, [sp, #40]
 529:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 293              		.loc 1 529 0
 294 01aa 0B94     		str	r4, [sp, #44]
 530:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_OC_GPIO_Port, &GPIO_InitStruct);
 295              		.loc 1 530 0
 296 01ac 09A9     		add	r1, sp, #36
 297 01ae 4548     		ldr	r0, .L3+4
 298 01b0 FFF7FEFF 		bl	HAL_GPIO_Init
 299              	.LVL13:
 531:Src/main.c    **** 
 532:Src/main.c    ****   /*Configure GPIO pins : R3_Pin R6_Pin */
 533:Src/main.c    ****   GPIO_InitStruct.Pin = R3_Pin|R6_Pin;
 300              		.loc 1 533 0
 301 01b4 0997     		str	r7, [sp, #36]
 534:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 302              		.loc 1 534 0
 303 01b6 0A95     		str	r5, [sp, #40]
 535:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 304              		.loc 1 535 0
 305 01b8 0B94     		str	r4, [sp, #44]
 536:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 306              		.loc 1 536 0
 307 01ba 0C94     		str	r4, [sp, #48]
 537:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 308              		.loc 1 537 0
 309 01bc 0923     		movs	r3, #9
 310 01be 0D93     		str	r3, [sp, #52]
 538:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 311              		.loc 1 538 0
 312 01c0 09A9     		add	r1, sp, #36
 313 01c2 4548     		ldr	r0, .L3+24
 314 01c4 FFF7FEFF 		bl	HAL_GPIO_Init
 315              	.LVL14:
 539:Src/main.c    **** 
 540:Src/main.c    ****   /*Configure GPIO pin : BOOT1_Pin */
 541:Src/main.c    ****   GPIO_InitStruct.Pin = BOOT1_Pin;
ARM GAS  /tmp/cccRwXIK.s 			page 16


 316              		.loc 1 541 0
 317 01c8 4FF0040B 		mov	fp, #4
 318 01cc CDF824B0 		str	fp, [sp, #36]
 542:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 319              		.loc 1 542 0
 320 01d0 0A94     		str	r4, [sp, #40]
 543:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 321              		.loc 1 543 0
 322 01d2 0B94     		str	r4, [sp, #44]
 544:Src/main.c    ****   HAL_GPIO_Init(BOOT1_GPIO_Port, &GPIO_InitStruct);
 323              		.loc 1 544 0
 324 01d4 09A9     		add	r1, sp, #36
 325 01d6 4048     		ldr	r0, .L3+24
 326 01d8 FFF7FEFF 		bl	HAL_GPIO_Init
 327              	.LVL15:
 545:Src/main.c    **** 
 546:Src/main.c    ****   /*Configure GPIO pins : PF13 PF14 PF15 */
 547:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 328              		.loc 1 547 0
 329 01dc 4FF46043 		mov	r3, #57344
 330 01e0 0993     		str	r3, [sp, #36]
 548:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 331              		.loc 1 548 0
 332 01e2 0A96     		str	r6, [sp, #40]
 549:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 333              		.loc 1 549 0
 334 01e4 0B94     		str	r4, [sp, #44]
 550:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 335              		.loc 1 550 0
 336 01e6 0C94     		str	r4, [sp, #48]
 551:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 337              		.loc 1 551 0
 338 01e8 09A9     		add	r1, sp, #36
 339 01ea 5046     		mov	r0, r10
 340 01ec FFF7FEFF 		bl	HAL_GPIO_Init
 341              	.LVL16:
 552:Src/main.c    **** 
 553:Src/main.c    ****   /*Configure GPIO pins : PG0 PG1 LD3_Pin LD4_Pin */
 554:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD4_Pin;
 342              		.loc 1 554 0
 343 01f0 46F20303 		movw	r3, #24579
 344 01f4 0993     		str	r3, [sp, #36]
 555:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 345              		.loc 1 555 0
 346 01f6 0A96     		str	r6, [sp, #40]
 556:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 347              		.loc 1 556 0
 348 01f8 0B94     		str	r4, [sp, #44]
 557:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 349              		.loc 1 557 0
 350 01fa 0C94     		str	r4, [sp, #48]
 558:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 351              		.loc 1 558 0
 352 01fc 09A9     		add	r1, sp, #36
 353 01fe 3348     		ldr	r0, .L3+12
 354 0200 FFF7FEFF 		bl	HAL_GPIO_Init
 355              	.LVL17:
ARM GAS  /tmp/cccRwXIK.s 			page 17


 559:Src/main.c    **** 
 560:Src/main.c    ****   /*Configure GPIO pins : PE7 PE8 PE9 PE10 
 561:Src/main.c    ****                            PE11 PE12 PE13 PE14 
 562:Src/main.c    ****                            PE15 */
 563:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 356              		.loc 1 563 0
 357 0204 4FF68073 		movw	r3, #65408
 358 0208 0993     		str	r3, [sp, #36]
 564:Src/main.c    ****                           |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
 565:Src/main.c    ****                           |GPIO_PIN_15;
 566:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 359              		.loc 1 566 0
 360 020a 0A96     		str	r6, [sp, #40]
 567:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 361              		.loc 1 567 0
 362 020c 0B94     		str	r4, [sp, #44]
 568:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 363              		.loc 1 568 0
 364 020e 0C94     		str	r4, [sp, #48]
 569:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 365              		.loc 1 569 0
 366 0210 09A9     		add	r1, sp, #36
 367 0212 2F48     		ldr	r0, .L3+16
 368 0214 FFF7FEFF 		bl	HAL_GPIO_Init
 369              	.LVL18:
 570:Src/main.c    **** 
 571:Src/main.c    ****   /*Configure GPIO pins : G4_Pin G5_Pin B6_Pin B7_Pin */
 572:Src/main.c    ****   GPIO_InitStruct.Pin = G4_Pin|G5_Pin|B6_Pin|B7_Pin;
 370              		.loc 1 572 0
 371 0218 4FF47063 		mov	r3, #3840
 372 021c 0993     		str	r3, [sp, #36]
 573:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 373              		.loc 1 573 0
 374 021e 0A95     		str	r5, [sp, #40]
 574:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 375              		.loc 1 574 0
 376 0220 0B94     		str	r4, [sp, #44]
 575:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 377              		.loc 1 575 0
 378 0222 0C94     		str	r4, [sp, #48]
 576:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 379              		.loc 1 576 0
 380 0224 CDF83490 		str	r9, [sp, #52]
 577:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 381              		.loc 1 577 0
 382 0228 09A9     		add	r1, sp, #36
 383 022a 2B48     		ldr	r0, .L3+24
 384 022c FFF7FEFF 		bl	HAL_GPIO_Init
 385              	.LVL19:
 578:Src/main.c    **** 
 579:Src/main.c    ****   /*Configure GPIO pins : OTG_HS_ID_Pin OTG_HS_DM_Pin OTG_HS_DP_Pin */
 580:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_HS_ID_Pin|OTG_HS_DM_Pin|OTG_HS_DP_Pin;
 386              		.loc 1 580 0
 387 0230 4FF45043 		mov	r3, #53248
 388 0234 0993     		str	r3, [sp, #36]
 581:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 389              		.loc 1 581 0
ARM GAS  /tmp/cccRwXIK.s 			page 18


 390 0236 0A95     		str	r5, [sp, #40]
 582:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 391              		.loc 1 582 0
 392 0238 0B94     		str	r4, [sp, #44]
 583:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 393              		.loc 1 583 0
 394 023a 0C94     		str	r4, [sp, #48]
 584:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;
 395              		.loc 1 584 0
 396 023c CDF83480 		str	r8, [sp, #52]
 585:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 397              		.loc 1 585 0
 398 0240 09A9     		add	r1, sp, #36
 399 0242 2548     		ldr	r0, .L3+24
 400 0244 FFF7FEFF 		bl	HAL_GPIO_Init
 401              	.LVL20:
 586:Src/main.c    **** 
 587:Src/main.c    ****   /*Configure GPIO pin : VBUS_HS_Pin */
 588:Src/main.c    ****   GPIO_InitStruct.Pin = VBUS_HS_Pin;
 402              		.loc 1 588 0
 403 0248 4FF40053 		mov	r3, #8192
 404 024c 0993     		str	r3, [sp, #36]
 589:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 405              		.loc 1 589 0
 406 024e 0A94     		str	r4, [sp, #40]
 590:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 407              		.loc 1 590 0
 408 0250 0B94     		str	r4, [sp, #44]
 591:Src/main.c    ****   HAL_GPIO_Init(VBUS_HS_GPIO_Port, &GPIO_InitStruct);
 409              		.loc 1 591 0
 410 0252 09A9     		add	r1, sp, #36
 411 0254 2048     		ldr	r0, .L3+24
 412 0256 FFF7FEFF 		bl	HAL_GPIO_Init
 413              	.LVL21:
 592:Src/main.c    **** 
 593:Src/main.c    ****   /*Configure GPIO pins : D13_Pin D14_Pin D15_Pin D0_Pin 
 594:Src/main.c    ****                            D1_Pin D2_Pin D3_Pin */
 595:Src/main.c    ****   GPIO_InitStruct.Pin = D13_Pin|D14_Pin|D15_Pin|D0_Pin 
 414              		.loc 1 595 0
 415 025a 4CF20373 		movw	r3, #50947
 416 025e 0993     		str	r3, [sp, #36]
 596:Src/main.c    ****                           |D1_Pin|D2_Pin|D3_Pin;
 597:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 417              		.loc 1 597 0
 418 0260 0A95     		str	r5, [sp, #40]
 598:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 419              		.loc 1 598 0
 420 0262 0B94     		str	r4, [sp, #44]
 599:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 421              		.loc 1 599 0
 422 0264 0C97     		str	r7, [sp, #48]
 600:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 423              		.loc 1 600 0
 424 0266 CDF83480 		str	r8, [sp, #52]
 601:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 425              		.loc 1 601 0
 426 026a 09A9     		add	r1, sp, #36
ARM GAS  /tmp/cccRwXIK.s 			page 19


 427 026c 1948     		ldr	r0, .L3+20
 428 026e FFF7FEFF 		bl	HAL_GPIO_Init
 429              	.LVL22:
 602:Src/main.c    **** 
 603:Src/main.c    ****   /*Configure GPIO pin : TE_Pin */
 604:Src/main.c    ****   GPIO_InitStruct.Pin = TE_Pin;
 430              		.loc 1 604 0
 431 0272 4FF40063 		mov	r3, #2048
 432 0276 0993     		str	r3, [sp, #36]
 605:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 433              		.loc 1 605 0
 434 0278 0A94     		str	r4, [sp, #40]
 606:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 435              		.loc 1 606 0
 436 027a 0B94     		str	r4, [sp, #44]
 607:Src/main.c    ****   HAL_GPIO_Init(TE_GPIO_Port, &GPIO_InitStruct);
 437              		.loc 1 607 0
 438 027c 09A9     		add	r1, sp, #36
 439 027e 1548     		ldr	r0, .L3+20
 440 0280 FFF7FEFF 		bl	HAL_GPIO_Init
 441              	.LVL23:
 608:Src/main.c    **** 
 609:Src/main.c    ****   /*Configure GPIO pins : RDX_Pin WRX_DCX_Pin */
 610:Src/main.c    ****   GPIO_InitStruct.Pin = RDX_Pin|WRX_DCX_Pin;
 442              		.loc 1 610 0
 443 0284 4FF44053 		mov	r3, #12288
 444 0288 0993     		str	r3, [sp, #36]
 611:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 445              		.loc 1 611 0
 446 028a 0A96     		str	r6, [sp, #40]
 612:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 447              		.loc 1 612 0
 448 028c 0B94     		str	r4, [sp, #44]
 613:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 449              		.loc 1 613 0
 450 028e 0C94     		str	r4, [sp, #48]
 614:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 451              		.loc 1 614 0
 452 0290 09A9     		add	r1, sp, #36
 453 0292 1048     		ldr	r0, .L3+20
 454 0294 FFF7FEFF 		bl	HAL_GPIO_Init
 455              	.LVL24:
 615:Src/main.c    **** 
 616:Src/main.c    ****   /*Configure GPIO pins : BA0_Pin BA1_Pin SDCLK_Pin SDNCAS_Pin */
 617:Src/main.c    ****   GPIO_InitStruct.Pin = BA0_Pin|BA1_Pin|SDCLK_Pin|SDNCAS_Pin;
 456              		.loc 1 617 0
 457 0298 48F23013 		movw	r3, #33072
 458 029c 0993     		str	r3, [sp, #36]
 618:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 459              		.loc 1 618 0
 460 029e 0A95     		str	r5, [sp, #40]
 619:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 461              		.loc 1 619 0
 462 02a0 0B94     		str	r4, [sp, #44]
 620:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 463              		.loc 1 620 0
 464 02a2 0C97     		str	r7, [sp, #48]
ARM GAS  /tmp/cccRwXIK.s 			page 20


 621:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 465              		.loc 1 621 0
 466 02a4 CDF83480 		str	r8, [sp, #52]
 622:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 467              		.loc 1 622 0
 468 02a8 09A9     		add	r1, sp, #36
 469 02aa 0848     		ldr	r0, .L3+12
 470 02ac FFF7FEFF 		bl	HAL_GPIO_Init
 471              	.LVL25:
 623:Src/main.c    **** 
 624:Src/main.c    ****   /*Configure GPIO pins : R7_Pin DOTCLK_Pin B3_Pin */
 625:Src/main.c    ****   GPIO_InitStruct.Pin = R7_Pin|DOTCLK_Pin|B3_Pin;
 472              		.loc 1 625 0
 473 02b0 4FF40C63 		mov	r3, #2240
 474 02b4 0993     		str	r3, [sp, #36]
 626:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 475              		.loc 1 626 0
 476 02b6 0A95     		str	r5, [sp, #40]
 627:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 477              		.loc 1 627 0
 478 02b8 0B94     		str	r4, [sp, #44]
 628:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 479              		.loc 1 628 0
 480 02ba 0C94     		str	r4, [sp, #48]
 481 02bc 12E0     		b	.L4
 482              	.L5:
 483 02be 00BF     		.align	2
 484              	.L3:
 485 02c0 00380240 		.word	1073887232
 486 02c4 00080240 		.word	1073874944
 487 02c8 00000240 		.word	1073872896
 488 02cc 00180240 		.word	1073879040
 489 02d0 00100240 		.word	1073876992
 490 02d4 000C0240 		.word	1073875968
 491 02d8 00040240 		.word	1073873920
 492 02dc 00140240 		.word	1073878016
 493 02e0 00001210 		.word	269615104
 494              	.L4:
 629:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 495              		.loc 1 629 0
 496 02e4 CDF83490 		str	r9, [sp, #52]
 630:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 497              		.loc 1 630 0
 498 02e8 09A9     		add	r1, sp, #36
 499 02ea 2D48     		ldr	r0, .L6
 500 02ec FFF7FEFF 		bl	HAL_GPIO_Init
 501              	.LVL26:
 631:Src/main.c    **** 
 632:Src/main.c    ****   /*Configure GPIO pins : HSYNC_Pin G6_Pin R2_Pin */
 633:Src/main.c    ****   GPIO_InitStruct.Pin = HSYNC_Pin|G6_Pin|R2_Pin;
 502              		.loc 1 633 0
 503 02f0 4FF49863 		mov	r3, #1216
 504 02f4 0993     		str	r3, [sp, #36]
 634:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 505              		.loc 1 634 0
 506 02f6 0A95     		str	r5, [sp, #40]
 635:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/cccRwXIK.s 			page 21


 507              		.loc 1 635 0
 508 02f8 0B94     		str	r4, [sp, #44]
 636:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 509              		.loc 1 636 0
 510 02fa 0C94     		str	r4, [sp, #48]
 637:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 511              		.loc 1 637 0
 512 02fc CDF83490 		str	r9, [sp, #52]
 638:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 513              		.loc 1 638 0
 514 0300 09A9     		add	r1, sp, #36
 515 0302 2848     		ldr	r0, .L6+4
 516 0304 FFF7FEFF 		bl	HAL_GPIO_Init
 517              	.LVL27:
 639:Src/main.c    **** 
 640:Src/main.c    ****   /*Configure GPIO pin : I2C3_SDA_Pin */
 641:Src/main.c    ****   GPIO_InitStruct.Pin = I2C3_SDA_Pin;
 518              		.loc 1 641 0
 519 0308 4FF40073 		mov	r3, #512
 520 030c 0993     		str	r3, [sp, #36]
 642:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 521              		.loc 1 642 0
 522 030e 4FF0120A 		mov	r10, #18
 523 0312 CDF828A0 		str	r10, [sp, #40]
 643:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 524              		.loc 1 643 0
 525 0316 0B96     		str	r6, [sp, #44]
 644:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 526              		.loc 1 644 0
 527 0318 0C94     		str	r4, [sp, #48]
 645:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 528              		.loc 1 645 0
 529 031a CDF834B0 		str	fp, [sp, #52]
 646:Src/main.c    ****   HAL_GPIO_Init(I2C3_SDA_GPIO_Port, &GPIO_InitStruct);
 530              		.loc 1 646 0
 531 031e 09A9     		add	r1, sp, #36
 532 0320 2048     		ldr	r0, .L6+4
 533 0322 FFF7FEFF 		bl	HAL_GPIO_Init
 534              	.LVL28:
 647:Src/main.c    **** 
 648:Src/main.c    ****   /*Configure GPIO pin : I2C3_SCL_Pin */
 649:Src/main.c    ****   GPIO_InitStruct.Pin = I2C3_SCL_Pin;
 535              		.loc 1 649 0
 536 0326 4FF48073 		mov	r3, #256
 537 032a 0993     		str	r3, [sp, #36]
 650:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 538              		.loc 1 650 0
 539 032c CDF828A0 		str	r10, [sp, #40]
 651:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 540              		.loc 1 651 0
 541 0330 0B96     		str	r6, [sp, #44]
 652:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 542              		.loc 1 652 0
 543 0332 0C94     		str	r4, [sp, #48]
 653:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 544              		.loc 1 653 0
 545 0334 CDF834B0 		str	fp, [sp, #52]
ARM GAS  /tmp/cccRwXIK.s 			page 22


 654:Src/main.c    ****   HAL_GPIO_Init(I2C3_SCL_GPIO_Port, &GPIO_InitStruct);
 546              		.loc 1 654 0
 547 0338 09A9     		add	r1, sp, #36
 548 033a 1B48     		ldr	r0, .L6+8
 549 033c FFF7FEFF 		bl	HAL_GPIO_Init
 550              	.LVL29:
 655:Src/main.c    **** 
 656:Src/main.c    ****   /*Configure GPIO pins : G7_Pin B2_Pin */
 657:Src/main.c    ****   GPIO_InitStruct.Pin = G7_Pin|B2_Pin;
 551              		.loc 1 657 0
 552 0340 4823     		movs	r3, #72
 553 0342 0993     		str	r3, [sp, #36]
 658:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 554              		.loc 1 658 0
 555 0344 0A95     		str	r5, [sp, #40]
 659:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 556              		.loc 1 659 0
 557 0346 0B94     		str	r4, [sp, #44]
 660:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 558              		.loc 1 660 0
 559 0348 0C94     		str	r4, [sp, #48]
 661:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 560              		.loc 1 661 0
 561 034a CDF83490 		str	r9, [sp, #52]
 662:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 562              		.loc 1 662 0
 563 034e 09A9     		add	r1, sp, #36
 564 0350 1648     		ldr	r0, .L6+12
 565 0352 FFF7FEFF 		bl	HAL_GPIO_Init
 566              	.LVL30:
 663:Src/main.c    **** 
 664:Src/main.c    ****   /*Configure GPIO pins : G3_Pin B4_Pin */
 665:Src/main.c    ****   GPIO_InitStruct.Pin = G3_Pin|B4_Pin;
 567              		.loc 1 665 0
 568 0356 4FF4A053 		mov	r3, #5120
 569 035a 0993     		str	r3, [sp, #36]
 666:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 570              		.loc 1 666 0
 571 035c 0A95     		str	r5, [sp, #40]
 667:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 572              		.loc 1 667 0
 573 035e 0B94     		str	r4, [sp, #44]
 668:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 574              		.loc 1 668 0
 575 0360 0C94     		str	r4, [sp, #48]
 669:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 576              		.loc 1 669 0
 577 0362 0923     		movs	r3, #9
 578 0364 0D93     		str	r3, [sp, #52]
 670:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 579              		.loc 1 670 0
 580 0366 09A9     		add	r1, sp, #36
 581 0368 0D48     		ldr	r0, .L6
 582 036a FFF7FEFF 		bl	HAL_GPIO_Init
 583              	.LVL31:
 671:Src/main.c    **** 
 672:Src/main.c    ****   /*Configure GPIO pins : SDCKE1_Pin SDNE1_Pin */
ARM GAS  /tmp/cccRwXIK.s 			page 23


 673:Src/main.c    ****   GPIO_InitStruct.Pin = SDCKE1_Pin|SDNE1_Pin;
 584              		.loc 1 673 0
 585 036e 6023     		movs	r3, #96
 586 0370 0993     		str	r3, [sp, #36]
 674:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 587              		.loc 1 674 0
 588 0372 0A95     		str	r5, [sp, #40]
 675:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 589              		.loc 1 675 0
 590 0374 0B94     		str	r4, [sp, #44]
 676:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 591              		.loc 1 676 0
 592 0376 0C97     		str	r7, [sp, #48]
 677:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 593              		.loc 1 677 0
 594 0378 CDF83480 		str	r8, [sp, #52]
 678:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 595              		.loc 1 678 0
 596 037c 09A9     		add	r1, sp, #36
 597 037e 0C48     		ldr	r0, .L6+16
 598 0380 FFF7FEFF 		bl	HAL_GPIO_Init
 599              	.LVL32:
 679:Src/main.c    **** 
 680:Src/main.c    ****   /*Configure GPIO pins : NBL0_Pin NBL1_Pin */
 681:Src/main.c    ****   GPIO_InitStruct.Pin = NBL0_Pin|NBL1_Pin;
 600              		.loc 1 681 0
 601 0384 0997     		str	r7, [sp, #36]
 682:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 602              		.loc 1 682 0
 603 0386 0A95     		str	r5, [sp, #40]
 683:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 604              		.loc 1 683 0
 605 0388 0B94     		str	r4, [sp, #44]
 684:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 606              		.loc 1 684 0
 607 038a 0C97     		str	r7, [sp, #48]
 685:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 608              		.loc 1 685 0
 609 038c CDF83480 		str	r8, [sp, #52]
 686:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 610              		.loc 1 686 0
 611 0390 09A9     		add	r1, sp, #36
 612 0392 0848     		ldr	r0, .L6+20
 613 0394 FFF7FEFF 		bl	HAL_GPIO_Init
 614              	.LVL33:
 687:Src/main.c    **** 
 688:Src/main.c    **** }
 615              		.loc 1 688 0
 616 0398 0FB0     		add	sp, sp, #60
 617              	.LCFI2:
 618              		.cfi_def_cfa_offset 36
 619              		@ sp needed
 620 039a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 621              	.L7:
 622 039e 00BF     		.align	2
 623              	.L6:
 624 03a0 00180240 		.word	1073879040
ARM GAS  /tmp/cccRwXIK.s 			page 24


 625 03a4 00080240 		.word	1073874944
 626 03a8 00000240 		.word	1073872896
 627 03ac 000C0240 		.word	1073875968
 628 03b0 00040240 		.word	1073873920
 629 03b4 00100240 		.word	1073876992
 630              		.cfi_endproc
 631              	.LFE137:
 633              		.section	.text.MX_SPI5_Init,"ax",%progbits
 634              		.align	1
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 638              		.fpu fpv4-sp-d16
 640              	MX_SPI5_Init:
 641              	.LFB133:
 291:Src/main.c    **** 
 642              		.loc 1 291 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646 0000 08B5     		push	{r3, lr}
 647              	.LCFI3:
 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 3, -8
 650              		.cfi_offset 14, -4
 301:Src/main.c    ****   hspi5.Init.Mode = SPI_MODE_SLAVE;
 651              		.loc 1 301 0
 652 0002 0948     		ldr	r0, .L10
 653 0004 094B     		ldr	r3, .L10+4
 654 0006 0360     		str	r3, [r0]
 302:Src/main.c    ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 655              		.loc 1 302 0
 656 0008 0023     		movs	r3, #0
 657 000a 4360     		str	r3, [r0, #4]
 303:Src/main.c    ****   hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 658              		.loc 1 303 0
 659 000c 8360     		str	r3, [r0, #8]
 304:Src/main.c    ****   hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 660              		.loc 1 304 0
 661 000e C360     		str	r3, [r0, #12]
 305:Src/main.c    ****   hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 662              		.loc 1 305 0
 663 0010 0361     		str	r3, [r0, #16]
 306:Src/main.c    ****   hspi5.Init.NSS = SPI_NSS_HARD_INPUT;
 664              		.loc 1 306 0
 665 0012 4361     		str	r3, [r0, #20]
 307:Src/main.c    ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 666              		.loc 1 307 0
 667 0014 8361     		str	r3, [r0, #24]
 308:Src/main.c    ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 668              		.loc 1 308 0
 669 0016 0362     		str	r3, [r0, #32]
 309:Src/main.c    ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 670              		.loc 1 309 0
 671 0018 4362     		str	r3, [r0, #36]
 310:Src/main.c    ****   hspi5.Init.CRCPolynomial = 10;
 672              		.loc 1 310 0
ARM GAS  /tmp/cccRwXIK.s 			page 25


 673 001a 8362     		str	r3, [r0, #40]
 311:Src/main.c    ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 674              		.loc 1 311 0
 675 001c 0A23     		movs	r3, #10
 676 001e C362     		str	r3, [r0, #44]
 312:Src/main.c    ****   {
 677              		.loc 1 312 0
 678 0020 FFF7FEFF 		bl	HAL_SPI_Init
 679              	.LVL34:
 680 0024 08BD     		pop	{r3, pc}
 681              	.L11:
 682 0026 00BF     		.align	2
 683              	.L10:
 684 0028 00000000 		.word	hspi5
 685 002c 00500140 		.word	1073827840
 686              		.cfi_endproc
 687              	.LFE133:
 689              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 690              		.align	1
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 694              		.fpu fpv4-sp-d16
 696              	MX_USART1_UART_Init:
 697              	.LFB136:
 404:Src/main.c    **** 
 698              		.loc 1 404 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 0
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702 0000 08B5     		push	{r3, lr}
 703              	.LCFI4:
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 3, -8
 706              		.cfi_offset 14, -4
 413:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 707              		.loc 1 413 0
 708 0002 0848     		ldr	r0, .L14
 709 0004 084B     		ldr	r3, .L14+4
 710 0006 0360     		str	r3, [r0]
 414:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 711              		.loc 1 414 0
 712 0008 4FF4E133 		mov	r3, #115200
 713 000c 4360     		str	r3, [r0, #4]
 415:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 714              		.loc 1 415 0
 715 000e 0023     		movs	r3, #0
 716 0010 8360     		str	r3, [r0, #8]
 416:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 717              		.loc 1 416 0
 718 0012 C360     		str	r3, [r0, #12]
 417:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 719              		.loc 1 417 0
 720 0014 0361     		str	r3, [r0, #16]
 418:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 721              		.loc 1 418 0
 722 0016 0C22     		movs	r2, #12
ARM GAS  /tmp/cccRwXIK.s 			page 26


 723 0018 4261     		str	r2, [r0, #20]
 419:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 724              		.loc 1 419 0
 725 001a 8361     		str	r3, [r0, #24]
 420:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 726              		.loc 1 420 0
 727 001c C361     		str	r3, [r0, #28]
 421:Src/main.c    ****   {
 728              		.loc 1 421 0
 729 001e FFF7FEFF 		bl	HAL_UART_Init
 730              	.LVL35:
 731 0022 08BD     		pop	{r3, pc}
 732              	.L15:
 733              		.align	2
 734              	.L14:
 735 0024 00000000 		.word	huart1
 736 0028 00100140 		.word	1073811456
 737              		.cfi_endproc
 738              	.LFE136:
 740              		.section	.text.MX_DAC_Init,"ax",%progbits
 741              		.align	1
 742              		.syntax unified
 743              		.thumb
 744              		.thumb_func
 745              		.fpu fpv4-sp-d16
 747              	MX_DAC_Init:
 748              	.LFB132:
 253:Src/main.c    **** 
 749              		.loc 1 253 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 8
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 753 0000 30B5     		push	{r4, r5, lr}
 754              	.LCFI5:
 755              		.cfi_def_cfa_offset 12
 756              		.cfi_offset 4, -12
 757              		.cfi_offset 5, -8
 758              		.cfi_offset 14, -4
 759 0002 83B0     		sub	sp, sp, #12
 760              	.LCFI6:
 761              		.cfi_def_cfa_offset 24
 259:Src/main.c    **** 
 762              		.loc 1 259 0
 763 0004 0024     		movs	r4, #0
 764 0006 0094     		str	r4, [sp]
 765 0008 0194     		str	r4, [sp, #4]
 266:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 766              		.loc 1 266 0
 767 000a 074D     		ldr	r5, .L18
 768 000c 074B     		ldr	r3, .L18+4
 769 000e 2B60     		str	r3, [r5]
 267:Src/main.c    ****   {
 770              		.loc 1 267 0
 771 0010 2846     		mov	r0, r5
 772 0012 FFF7FEFF 		bl	HAL_DAC_Init
 773              	.LVL36:
 273:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
ARM GAS  /tmp/cccRwXIK.s 			page 27


 774              		.loc 1 273 0
 775 0016 0094     		str	r4, [sp]
 274:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 776              		.loc 1 274 0
 777 0018 0194     		str	r4, [sp, #4]
 275:Src/main.c    ****   {
 778              		.loc 1 275 0
 779 001a 1022     		movs	r2, #16
 780 001c 6946     		mov	r1, sp
 781 001e 2846     		mov	r0, r5
 782 0020 FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 783              	.LVL37:
 283:Src/main.c    **** 
 784              		.loc 1 283 0
 785 0024 03B0     		add	sp, sp, #12
 786              	.LCFI7:
 787              		.cfi_def_cfa_offset 12
 788              		@ sp needed
 789 0026 30BD     		pop	{r4, r5, pc}
 790              	.L19:
 791              		.align	2
 792              	.L18:
 793 0028 00000000 		.word	hdac
 794 002c 00740040 		.word	1073771520
 795              		.cfi_endproc
 796              	.LFE132:
 798              		.section	.text.MX_TIM6_Init,"ax",%progbits
 799              		.align	1
 800              		.syntax unified
 801              		.thumb
 802              		.thumb_func
 803              		.fpu fpv4-sp-d16
 805              	MX_TIM6_Init:
 806              	.LFB134:
 328:Src/main.c    **** 
 807              		.loc 1 328 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 8
 810              		@ frame_needed = 0, uses_anonymous_args = 0
 811 0000 30B5     		push	{r4, r5, lr}
 812              	.LCFI8:
 813              		.cfi_def_cfa_offset 12
 814              		.cfi_offset 4, -12
 815              		.cfi_offset 5, -8
 816              		.cfi_offset 14, -4
 817 0002 83B0     		sub	sp, sp, #12
 818              	.LCFI9:
 819              		.cfi_def_cfa_offset 24
 334:Src/main.c    **** 
 820              		.loc 1 334 0
 821 0004 0025     		movs	r5, #0
 822 0006 0095     		str	r5, [sp]
 823 0008 0195     		str	r5, [sp, #4]
 339:Src/main.c    ****   htim6.Init.Prescaler = 0;
 824              		.loc 1 339 0
 825 000a 0A4C     		ldr	r4, .L22
 826 000c 0A4B     		ldr	r3, .L22+4
ARM GAS  /tmp/cccRwXIK.s 			page 28


 827 000e 2360     		str	r3, [r4]
 340:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 828              		.loc 1 340 0
 829 0010 6560     		str	r5, [r4, #4]
 341:Src/main.c    ****   htim6.Init.Period = 1290;
 830              		.loc 1 341 0
 831 0012 A560     		str	r5, [r4, #8]
 342:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 832              		.loc 1 342 0
 833 0014 40F20A53 		movw	r3, #1290
 834 0018 E360     		str	r3, [r4, #12]
 343:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 835              		.loc 1 343 0
 836 001a A561     		str	r5, [r4, #24]
 344:Src/main.c    ****   {
 837              		.loc 1 344 0
 838 001c 2046     		mov	r0, r4
 839 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 840              	.LVL38:
 348:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 841              		.loc 1 348 0
 842 0022 0095     		str	r5, [sp]
 349:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 843              		.loc 1 349 0
 844 0024 0195     		str	r5, [sp, #4]
 350:Src/main.c    ****   {
 845              		.loc 1 350 0
 846 0026 6946     		mov	r1, sp
 847 0028 2046     		mov	r0, r4
 848 002a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 849              	.LVL39:
 358:Src/main.c    **** 
 850              		.loc 1 358 0
 851 002e 03B0     		add	sp, sp, #12
 852              	.LCFI10:
 853              		.cfi_def_cfa_offset 12
 854              		@ sp needed
 855 0030 30BD     		pop	{r4, r5, pc}
 856              	.L23:
 857 0032 00BF     		.align	2
 858              	.L22:
 859 0034 00000000 		.word	htim6
 860 0038 00100040 		.word	1073745920
 861              		.cfi_endproc
 862              	.LFE134:
 864              		.section	.text.MX_TIM7_Init,"ax",%progbits
 865              		.align	1
 866              		.syntax unified
 867              		.thumb
 868              		.thumb_func
 869              		.fpu fpv4-sp-d16
 871              	MX_TIM7_Init:
 872              	.LFB135:
 366:Src/main.c    **** 
 873              		.loc 1 366 0
 874              		.cfi_startproc
 875              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cccRwXIK.s 			page 29


 876              		@ frame_needed = 0, uses_anonymous_args = 0
 877 0000 30B5     		push	{r4, r5, lr}
 878              	.LCFI11:
 879              		.cfi_def_cfa_offset 12
 880              		.cfi_offset 4, -12
 881              		.cfi_offset 5, -8
 882              		.cfi_offset 14, -4
 883 0002 83B0     		sub	sp, sp, #12
 884              	.LCFI12:
 885              		.cfi_def_cfa_offset 24
 372:Src/main.c    **** 
 886              		.loc 1 372 0
 887 0004 0025     		movs	r5, #0
 888 0006 0095     		str	r5, [sp]
 889 0008 0195     		str	r5, [sp, #4]
 377:Src/main.c    ****   htim7.Init.Prescaler = 1024;
 890              		.loc 1 377 0
 891 000a 0B4C     		ldr	r4, .L26
 892 000c 0B4B     		ldr	r3, .L26+4
 893 000e 2360     		str	r3, [r4]
 378:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 894              		.loc 1 378 0
 895 0010 4FF48063 		mov	r3, #1024
 896 0014 6360     		str	r3, [r4, #4]
 379:Src/main.c    ****   htim7.Init.Period = 35000;
 897              		.loc 1 379 0
 898 0016 A560     		str	r5, [r4, #8]
 380:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 899              		.loc 1 380 0
 900 0018 48F6B803 		movw	r3, #35000
 901 001c E360     		str	r3, [r4, #12]
 381:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 902              		.loc 1 381 0
 903 001e A561     		str	r5, [r4, #24]
 382:Src/main.c    ****   {
 904              		.loc 1 382 0
 905 0020 2046     		mov	r0, r4
 906 0022 FFF7FEFF 		bl	HAL_TIM_Base_Init
 907              	.LVL40:
 386:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 908              		.loc 1 386 0
 909 0026 0095     		str	r5, [sp]
 387:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 910              		.loc 1 387 0
 911 0028 0195     		str	r5, [sp, #4]
 388:Src/main.c    ****   {
 912              		.loc 1 388 0
 913 002a 6946     		mov	r1, sp
 914 002c 2046     		mov	r0, r4
 915 002e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 916              	.LVL41:
 396:Src/main.c    **** 
 917              		.loc 1 396 0
 918 0032 03B0     		add	sp, sp, #12
 919              	.LCFI13:
 920              		.cfi_def_cfa_offset 12
 921              		@ sp needed
ARM GAS  /tmp/cccRwXIK.s 			page 30


 922 0034 30BD     		pop	{r4, r5, pc}
 923              	.L27:
 924 0036 00BF     		.align	2
 925              	.L26:
 926 0038 00000000 		.word	htim7
 927 003c 00140040 		.word	1073746944
 928              		.cfi_endproc
 929              	.LFE135:
 931              		.section	.text.SystemClock_Config,"ax",%progbits
 932              		.align	1
 933              		.global	SystemClock_Config
 934              		.syntax unified
 935              		.thumb
 936              		.thumb_func
 937              		.fpu fpv4-sp-d16
 939              	SystemClock_Config:
 940              	.LFB131:
 209:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 941              		.loc 1 209 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 80
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 945 0000 30B5     		push	{r4, r5, lr}
 946              	.LCFI14:
 947              		.cfi_def_cfa_offset 12
 948              		.cfi_offset 4, -12
 949              		.cfi_offset 5, -8
 950              		.cfi_offset 14, -4
 951 0002 95B0     		sub	sp, sp, #84
 952              	.LCFI15:
 953              		.cfi_def_cfa_offset 96
 210:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 954              		.loc 1 210 0
 955 0004 3022     		movs	r2, #48
 956 0006 0021     		movs	r1, #0
 957 0008 08A8     		add	r0, sp, #32
 958 000a FFF7FEFF 		bl	memset
 959              	.LVL42:
 211:Src/main.c    **** 
 960              		.loc 1 211 0
 961 000e 0024     		movs	r4, #0
 962 0010 0394     		str	r4, [sp, #12]
 963 0012 0494     		str	r4, [sp, #16]
 964 0014 0594     		str	r4, [sp, #20]
 965 0016 0694     		str	r4, [sp, #24]
 966 0018 0794     		str	r4, [sp, #28]
 967              	.LBB10:
 215:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 968              		.loc 1 215 0
 969 001a 0194     		str	r4, [sp, #4]
 970 001c 1B4B     		ldr	r3, .L30
 971 001e 1A6C     		ldr	r2, [r3, #64]
 972 0020 42F08052 		orr	r2, r2, #268435456
 973 0024 1A64     		str	r2, [r3, #64]
 974 0026 1B6C     		ldr	r3, [r3, #64]
 975 0028 03F08053 		and	r3, r3, #268435456
 976 002c 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/cccRwXIK.s 			page 31


 977 002e 019B     		ldr	r3, [sp, #4]
 978              	.LBE10:
 979              	.LBB11:
 216:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 980              		.loc 1 216 0
 981 0030 0294     		str	r4, [sp, #8]
 982 0032 174A     		ldr	r2, .L30+4
 983 0034 1368     		ldr	r3, [r2]
 984 0036 23F44043 		bic	r3, r3, #49152
 985 003a 43F48043 		orr	r3, r3, #16384
 986 003e 1360     		str	r3, [r2]
 987 0040 1368     		ldr	r3, [r2]
 988 0042 03F44043 		and	r3, r3, #49152
 989 0046 0293     		str	r3, [sp, #8]
 990 0048 029B     		ldr	r3, [sp, #8]
 991              	.LBE11:
 219:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 992              		.loc 1 219 0
 993 004a 0225     		movs	r5, #2
 994 004c 0895     		str	r5, [sp, #32]
 220:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 995              		.loc 1 220 0
 996 004e 0123     		movs	r3, #1
 997 0050 0B93     		str	r3, [sp, #44]
 221:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 998              		.loc 1 221 0
 999 0052 1023     		movs	r3, #16
 1000 0054 0C93     		str	r3, [sp, #48]
 222:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1001              		.loc 1 222 0
 1002 0056 0E95     		str	r5, [sp, #56]
 223:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1003              		.loc 1 223 0
 1004 0058 0F94     		str	r4, [sp, #60]
 224:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 100;
 1005              		.loc 1 224 0
 1006 005a 0823     		movs	r3, #8
 1007 005c 1093     		str	r3, [sp, #64]
 225:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1008              		.loc 1 225 0
 1009 005e 6423     		movs	r3, #100
 1010 0060 1193     		str	r3, [sp, #68]
 226:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 1011              		.loc 1 226 0
 1012 0062 1295     		str	r5, [sp, #72]
 227:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1013              		.loc 1 227 0
 1014 0064 0723     		movs	r3, #7
 1015 0066 1393     		str	r3, [sp, #76]
 228:Src/main.c    ****   {
 1016              		.loc 1 228 0
 1017 0068 08A8     		add	r0, sp, #32
 1018 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 1019              	.LVL43:
 234:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1020              		.loc 1 234 0
 1021 006e 0F23     		movs	r3, #15
ARM GAS  /tmp/cccRwXIK.s 			page 32


 1022 0070 0393     		str	r3, [sp, #12]
 236:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1023              		.loc 1 236 0
 1024 0072 0495     		str	r5, [sp, #16]
 237:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1025              		.loc 1 237 0
 1026 0074 0594     		str	r4, [sp, #20]
 238:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 1027              		.loc 1 238 0
 1028 0076 4FF4A053 		mov	r3, #5120
 1029 007a 0693     		str	r3, [sp, #24]
 239:Src/main.c    **** 
 1030              		.loc 1 239 0
 1031 007c 0793     		str	r3, [sp, #28]
 241:Src/main.c    ****   {
 1032              		.loc 1 241 0
 1033 007e 0321     		movs	r1, #3
 1034 0080 03A8     		add	r0, sp, #12
 1035 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1036              	.LVL44:
 245:Src/main.c    **** 
 1037              		.loc 1 245 0
 1038 0086 15B0     		add	sp, sp, #84
 1039              	.LCFI16:
 1040              		.cfi_def_cfa_offset 12
 1041              		@ sp needed
 1042 0088 30BD     		pop	{r4, r5, pc}
 1043              	.L31:
 1044 008a 00BF     		.align	2
 1045              	.L30:
 1046 008c 00380240 		.word	1073887232
 1047 0090 00700040 		.word	1073770496
 1048              		.cfi_endproc
 1049              	.LFE131:
 1051              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 1052              		.align	1
 1053              		.global	HAL_SPI_TxRxCpltCallback
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1057              		.fpu fpv4-sp-d16
 1059              	HAL_SPI_TxRxCpltCallback:
 1060              	.LFB138:
 689:Src/main.c    **** 
 690:Src/main.c    **** /* USER CODE BEGIN 4 */
 691:Src/main.c    **** void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi) {
 1061              		.loc 1 691 0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 1065              		@ link register save eliminated.
 1066              	.LVL45:
 692:Src/main.c    ****   //  uint8_t uart_tx_buffer;
 693:Src/main.c    **** 
 694:Src/main.c    ****   current_midi_note_msg.command = spi_rx_buffer[0];
 1067              		.loc 1 694 0
 1068 0000 054A     		ldr	r2, .L33
ARM GAS  /tmp/cccRwXIK.s 			page 33


 1069 0002 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1070 0004 054B     		ldr	r3, .L33+4
 1071 0006 1970     		strb	r1, [r3]
 695:Src/main.c    ****   current_midi_note_msg.note = spi_rx_buffer[1];
 1072              		.loc 1 695 0
 1073 0008 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 1074 000a 5970     		strb	r1, [r3, #1]
 696:Src/main.c    ****   current_midi_note_msg.velocity = spi_rx_buffer[2];
 1075              		.loc 1 696 0
 1076 000c 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 1077 000e 9A70     		strb	r2, [r3, #2]
 697:Src/main.c    **** 
 698:Src/main.c    ****   MIDI_flag = 1;
 1078              		.loc 1 698 0
 1079 0010 0122     		movs	r2, #1
 1080 0012 034B     		ldr	r3, .L33+8
 1081 0014 1A70     		strb	r2, [r3]
 1082 0016 7047     		bx	lr
 1083              	.L34:
 1084              		.align	2
 1085              	.L33:
 1086 0018 00000000 		.word	spi_rx_buffer
 1087 001c 00000000 		.word	.LANCHOR0
 1088 0020 00000000 		.word	.LANCHOR1
 1089              		.cfi_endproc
 1090              	.LFE138:
 1092              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1093              		.align	1
 1094              		.global	HAL_TIM_PeriodElapsedCallback
 1095              		.syntax unified
 1096              		.thumb
 1097              		.thumb_func
 1098              		.fpu fpv4-sp-d16
 1100              	HAL_TIM_PeriodElapsedCallback:
 1101              	.LFB139:
 699:Src/main.c    **** 
 700:Src/main.c    ****   /*
 701:Src/main.c    ****   uart_tx_buffer = spi_rx_buffer[0];
 702:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 703:Src/main.c    ****   uart_tx_buffer = spi_rx_buffer[1];
 704:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 705:Src/main.c    ****   uart_tx_buffer = spi_rx_buffer[2];
 706:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 707:Src/main.c    ****   uart_tx_buffer = '\n';
 708:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 709:Src/main.c    **** 
 710:Src/main.c    ****   if(spi_rx_buffer[0] == MIDI_NOTE_ON){
 711:Src/main.c    ****     uart_tx_buffer = 'n';
 712:Src/main.c    ****     HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 713:Src/main.c    ****   }
 714:Src/main.c    ****   else if (spi_rx_buffer[0] == MIDI_NOTE_OFF){
 715:Src/main.c    ****     uart_tx_buffer = 'f';
 716:Src/main.c    ****     HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 717:Src/main.c    ****   }
 718:Src/main.c    ****   uart_tx_buffer = '\n';
 719:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 720:Src/main.c    ****   */
ARM GAS  /tmp/cccRwXIK.s 			page 34


 721:Src/main.c    **** }
 722:Src/main.c    **** 
 723:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 1102              		.loc 1 723 0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 0
 1105              		@ frame_needed = 0, uses_anonymous_args = 0
 1106              	.LVL46:
 1107 0000 08B5     		push	{r3, lr}
 1108              	.LCFI17:
 1109              		.cfi_def_cfa_offset 8
 1110              		.cfi_offset 3, -8
 1111              		.cfi_offset 14, -4
 724:Src/main.c    ****   if(htim->Instance == TIM6){
 1112              		.loc 1 724 0
 1113 0002 0368     		ldr	r3, [r0]
 1114 0004 124A     		ldr	r2, .L45
 1115 0006 9342     		cmp	r3, r2
 1116 0008 03D0     		beq	.L43
 725:Src/main.c    ****     //  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_1);
 726:Src/main.c    ****     update_value_flag = 1;
 727:Src/main.c    ****   }
 728:Src/main.c    ****   else if(htim->Instance == TIM7){
 1117              		.loc 1 728 0
 1118 000a 124A     		ldr	r2, .L45+4
 1119 000c 9342     		cmp	r3, r2
 1120 000e 04D0     		beq	.L44
 1121              	.LVL47:
 1122              	.L35:
 1123 0010 08BD     		pop	{r3, pc}
 1124              	.LVL48:
 1125              	.L43:
 726:Src/main.c    ****   }
 1126              		.loc 1 726 0
 1127 0012 0122     		movs	r2, #1
 1128 0014 104B     		ldr	r3, .L45+8
 1129 0016 1A70     		strb	r2, [r3]
 1130 0018 08BD     		pop	{r3, pc}
 1131              	.L44:
 729:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_8);
 1132              		.loc 1 729 0
 1133 001a 4FF48071 		mov	r1, #256
 1134 001e 0F48     		ldr	r0, .L45+12
 1135              	.LVL49:
 1136 0020 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1137              	.LVL50:
 1138              	.LBB12:
 730:Src/main.c    ****     for(int i = 0; i < VOICES; i++){
 1139              		.loc 1 730 0
 1140 0024 0023     		movs	r3, #0
 1141 0026 03E0     		b	.L38
 1142              	.LVL51:
 1143              	.L40:
 731:Src/main.c    ****       if(note_on[i] == MIDI_NOTE_ON){
 732:Src/main.c    ****         if(env_state[i] == NOT_TRIGGERED){
 733:Src/main.c    ****           env_state[i] = ATTACK_MODE;
 734:Src/main.c    ****         }
ARM GAS  /tmp/cccRwXIK.s 			page 35


 735:Src/main.c    ****         else{
 736:Src/main.c    ****           env_state[i] = RELEASE_MODE;
 1144              		.loc 1 736 0
 1145 0028 0421     		movs	r1, #4
 1146 002a 0D4A     		ldr	r2, .L45+16
 1147 002c D154     		strb	r1, [r2, r3]
 1148              	.L39:
 730:Src/main.c    ****     for(int i = 0; i < VOICES; i++){
 1149              		.loc 1 730 0 discriminator 2
 1150 002e 0133     		adds	r3, r3, #1
 1151              	.LVL52:
 1152              	.L38:
 730:Src/main.c    ****     for(int i = 0; i < VOICES; i++){
 1153              		.loc 1 730 0 is_stmt 0 discriminator 1
 1154 0030 0F2B     		cmp	r3, #15
 1155 0032 EDDC     		bgt	.L35
 731:Src/main.c    ****       if(note_on[i] == MIDI_NOTE_ON){
 1156              		.loc 1 731 0 is_stmt 1
 1157 0034 0B4A     		ldr	r2, .L45+20
 1158 0036 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1159 0038 D2B2     		uxtb	r2, r2
 1160 003a 902A     		cmp	r2, #144
 1161 003c F7D1     		bne	.L39
 732:Src/main.c    ****           env_state[i] = ATTACK_MODE;
 1162              		.loc 1 732 0
 1163 003e 084A     		ldr	r2, .L45+16
 1164 0040 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1165 0042 002A     		cmp	r2, #0
 1166 0044 F0D1     		bne	.L40
 733:Src/main.c    ****         }
 1167              		.loc 1 733 0
 1168 0046 0121     		movs	r1, #1
 1169 0048 054A     		ldr	r2, .L45+16
 1170 004a D154     		strb	r1, [r2, r3]
 1171 004c EFE7     		b	.L39
 1172              	.L46:
 1173 004e 00BF     		.align	2
 1174              	.L45:
 1175 0050 00100040 		.word	1073745920
 1176 0054 00140040 		.word	1073746944
 1177 0058 00000000 		.word	.LANCHOR2
 1178 005c 00100240 		.word	1073876992
 1179 0060 00000000 		.word	env_state
 1180 0064 00000000 		.word	.LANCHOR3
 1181              	.LBE12:
 1182              		.cfi_endproc
 1183              	.LFE139:
 1185              		.global	__aeabi_f2d
 1186              		.global	__aeabi_dmul
 1187              		.global	__aeabi_d2uiz
 1188              		.section	.text.UpdateOutputValue,"ax",%progbits
 1189              		.align	1
 1190              		.global	UpdateOutputValue
 1191              		.syntax unified
 1192              		.thumb
 1193              		.thumb_func
 1194              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cccRwXIK.s 			page 36


 1196              	UpdateOutputValue:
 1197              	.LFB140:
 737:Src/main.c    ****         }
 738:Src/main.c    ****       }
 739:Src/main.c    ****     }
 740:Src/main.c    ****   }
 741:Src/main.c    **** }
 742:Src/main.c    **** 
 743:Src/main.c    **** void UpdateOutputValue() {
 1198              		.loc 1 743 0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 8
 1201              		@ frame_needed = 0, uses_anonymous_args = 0
 1202 0000 10B5     		push	{r4, lr}
 1203              	.LCFI18:
 1204              		.cfi_def_cfa_offset 8
 1205              		.cfi_offset 4, -8
 1206              		.cfi_offset 14, -4
 1207 0002 2DED028B 		vpush.64	{d8}
 1208              	.LCFI19:
 1209              		.cfi_def_cfa_offset 16
 1210              		.cfi_offset 80, -16
 1211              		.cfi_offset 81, -12
 1212 0006 82B0     		sub	sp, sp, #8
 1213              	.LCFI20:
 1214              		.cfi_def_cfa_offset 24
 1215              	.LVL53:
 744:Src/main.c    ****   //  HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_7);
 745:Src/main.c    ****   float val = 0;
 746:Src/main.c    ****   output_val = 0;
 1216              		.loc 1 746 0
 1217 0008 0024     		movs	r4, #0
 1218 000a 274B     		ldr	r3, .L51+8
 1219 000c 1C70     		strb	r4, [r3]
 1220              	.LVL54:
 745:Src/main.c    ****   output_val = 0;
 1221              		.loc 1 745 0
 1222 000e 9FED278A 		vldr.32	s16, .L51+12
 1223              	.LBB13:
 747:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1224              		.loc 1 747 0
 1225 0012 32E0     		b	.L48
 1226              	.LVL55:
 1227              	.L49:
 748:Src/main.c    ****     phase_accumulator[i] += (uint32_t)(midi_notes[note_freq[i]]*DDS_SCALE_FACTOR);
 1228              		.loc 1 748 0 discriminator 3
 1229 0014 264B     		ldr	r3, .L51+16
 1230 0016 1A5D     		ldrb	r2, [r3, r4]	@ zero_extendqisi2
 1231 0018 264B     		ldr	r3, .L51+20
 1232 001a 03EB8203 		add	r3, r3, r2, lsl #2
 1233 001e 1868     		ldr	r0, [r3]	@ float
 1234 0020 FFF7FEFF 		bl	__aeabi_f2d
 1235              	.LVL56:
 1236 0024 1EA3     		adr	r3, .L51
 1237 0026 D3E90023 		ldrd	r2, [r3]
 1238 002a FFF7FEFF 		bl	__aeabi_dmul
 1239              	.LVL57:
ARM GAS  /tmp/cccRwXIK.s 			page 37


 1240 002e FFF7FEFF 		bl	__aeabi_d2uiz
 1241              	.LVL58:
 1242 0032 214A     		ldr	r2, .L51+24
 1243 0034 52F82430 		ldr	r3, [r2, r4, lsl #2]
 1244 0038 1844     		add	r0, r0, r3
 1245 003a 42F82400 		str	r0, [r2, r4, lsl #2]
 749:Src/main.c    ****     val += ((base_sine[(phase_accumulator[i]>>10)%4096] + base_sine[(phase_accumulator[i]>>10)%4096
 1246              		.loc 1 749 0 discriminator 3
 1247 003e 52F82430 		ldr	r3, [r2, r4, lsl #2]
 1248 0042 C3F38B23 		ubfx	r3, r3, #10, #12
 1249 0046 1D49     		ldr	r1, .L51+28
 1250 0048 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1251 004a 52F82420 		ldr	r2, [r2, r4, lsl #2]
 1252 004e C2F38B22 		ubfx	r2, r2, #10, #12
 1253 0052 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1254 0054 1344     		add	r3, r3, r2
 1255 0056 07EE903A 		vmov	s15, r3	@ int
 1256 005a 194B     		ldr	r3, .L51+32
 1257 005c 03EB8403 		add	r3, r3, r4, lsl #2
 1258 0060 93ED007A 		vldr.32	s14, [r3]
 1259 0064 F8EEE77A 		vcvt.f32.s32	s15, s15
 1260 0068 67EE877A 		vmul.f32	s15, s15, s14
 1261 006c DFED156A 		vldr.32	s13, .L51+36
 1262 0070 87EEA67A 		vdiv.f32	s14, s15, s13
 1263 0074 38EE078A 		vadd.f32	s16, s16, s14
 1264              	.LVL59:
 747:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1265              		.loc 1 747 0 discriminator 3
 1266 0078 0134     		adds	r4, r4, #1
 1267              	.LVL60:
 1268              	.L48:
 747:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1269              		.loc 1 747 0 is_stmt 0 discriminator 1
 1270 007a 0F2C     		cmp	r4, #15
 1271 007c CADD     		ble	.L49
 1272              	.LBE13:
 750:Src/main.c    ****   }
 751:Src/main.c    **** 
 752:Src/main.c    ****   output_val = (uint8_t) (val / VOICES);
 1273              		.loc 1 752 0 is_stmt 1
 1274 007e DFED127A 		vldr.32	s15, .L51+40
 1275 0082 28EE278A 		vmul.f32	s16, s16, s15
 1276              	.LVL61:
 1277 0086 FCEEC87A 		vcvt.u32.f32	s15, s16
 1278 008a CDED017A 		vstr.32	s15, [sp, #4]	@ int
 1279 008e 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 1280 0092 054A     		ldr	r2, .L51+8
 1281 0094 1370     		strb	r3, [r2]
 753:Src/main.c    **** }
 1282              		.loc 1 753 0
 1283 0096 02B0     		add	sp, sp, #8
 1284              	.LCFI21:
 1285              		.cfi_def_cfa_offset 16
 1286              		@ sp needed
 1287 0098 BDEC028B 		vldm	sp!, {d8}
 1288              	.LCFI22:
 1289              		.cfi_restore 80
ARM GAS  /tmp/cccRwXIK.s 			page 38


 1290              		.cfi_restore 81
 1291              		.cfi_def_cfa_offset 8
 1292 009c 10BD     		pop	{r4, pc}
 1293              	.LVL62:
 1294              	.L52:
 1295 009e 00BF     		.align	3
 1296              	.L51:
 1297 00a0 942EA292 		.word	2460102292
 1298 00a4 5F5E5640 		.word	1079402079
 1299 00a8 00000000 		.word	.LANCHOR4
 1300 00ac 00000000 		.word	0
 1301 00b0 00000000 		.word	.LANCHOR5
 1302 00b4 00000000 		.word	midi_notes
 1303 00b8 00000000 		.word	.LANCHOR6
 1304 00bc 00000000 		.word	base_sine
 1305 00c0 00000000 		.word	.LANCHOR7
 1306 00c4 0000FF43 		.word	1140785152
 1307 00c8 0000803D 		.word	1031798784
 1308              		.cfi_endproc
 1309              	.LFE140:
 1311              		.global	__aeabi_i2d
 1312              		.section	.text.UpdateEnvelope,"ax",%progbits
 1313              		.align	1
 1314              		.global	UpdateEnvelope
 1315              		.syntax unified
 1316              		.thumb
 1317              		.thumb_func
 1318              		.fpu fpv4-sp-d16
 1320              	UpdateEnvelope:
 1321              	.LFB141:
 754:Src/main.c    **** 
 755:Src/main.c    **** void UpdateEnvelope() {
 1322              		.loc 1 755 0
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 0
 1325              		@ frame_needed = 0, uses_anonymous_args = 0
 1326 0000 70B5     		push	{r4, r5, r6, lr}
 1327              	.LCFI23:
 1328              		.cfi_def_cfa_offset 16
 1329              		.cfi_offset 4, -16
 1330              		.cfi_offset 5, -12
 1331              		.cfi_offset 6, -8
 1332              		.cfi_offset 14, -4
 1333              	.LVL63:
 1334              	.LBB14:
 756:Src/main.c    ****   for(int i = 0; i < VOICES; i++){
 1335              		.loc 1 756 0
 1336 0002 0024     		movs	r4, #0
 1337 0004 09E0     		b	.L54
 1338              	.LVL64:
 1339              	.L56:
 757:Src/main.c    ****     //if(note_on[i] == MIDI_NOTE_OFF){
 758:Src/main.c    ****     //  env_state[i] = RELEASE_MODE;
 759:Src/main.c    ****     //}
 760:Src/main.c    **** 
 761:Src/main.c    ****     switch(env_state[i]){
 762:Src/main.c    ****     case NOT_TRIGGERED:
ARM GAS  /tmp/cccRwXIK.s 			page 39


 763:Src/main.c    ****       envelope_index[i] = 0;
 1340              		.loc 1 763 0
 1341 0006 0022     		movs	r2, #0
 1342 0008 594B     		ldr	r3, .L67+8
 1343 000a 43F82420 		str	r2, [r3, r4, lsl #2]
 764:Src/main.c    ****       envelope[i] = 0;
 1344              		.loc 1 764 0
 1345 000e 594B     		ldr	r3, .L67+12
 1346 0010 03EB8403 		add	r3, r3, r4, lsl #2
 1347 0014 0022     		movs	r2, #0
 1348 0016 1A60     		str	r2, [r3]	@ float
 1349              	.L55:
 756:Src/main.c    ****   for(int i = 0; i < VOICES; i++){
 1350              		.loc 1 756 0 discriminator 2
 1351 0018 0134     		adds	r4, r4, #1
 1352              	.LVL65:
 1353              	.L54:
 756:Src/main.c    ****   for(int i = 0; i < VOICES; i++){
 1354              		.loc 1 756 0 is_stmt 0 discriminator 1
 1355 001a 0F2C     		cmp	r4, #15
 1356 001c 00F3A380 		bgt	.L66
 761:Src/main.c    ****     case NOT_TRIGGERED:
 1357              		.loc 1 761 0 is_stmt 1
 1358 0020 554B     		ldr	r3, .L67+16
 1359 0022 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1360 0024 DBB2     		uxtb	r3, r3
 1361 0026 042B     		cmp	r3, #4
 1362 0028 F6D8     		bhi	.L55
 1363 002a 01A2     		adr	r2, .L57
 1364 002c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1365              		.p2align 2
 1366              	.L57:
 1367 0030 07000000 		.word	.L56+1
 1368 0034 45000000 		.word	.L58+1
 1369 0038 A3000000 		.word	.L59+1
 1370 003c 19000000 		.word	.L55+1
 1371 0040 07010000 		.word	.L60+1
 1372              		.p2align 1
 1373              	.L58:
 765:Src/main.c    ****       break;
 766:Src/main.c    ****     case ATTACK_MODE:
 767:Src/main.c    ****       //    if((UINT32_MAX - envelope_index) < DDS_SCALE_FACTOR){
 768:Src/main.c    ****       if(envelope_index[i] <= 4200000) {
 1374              		.loc 1 768 0
 1375 0044 4A4B     		ldr	r3, .L67+8
 1376 0046 53F82420 		ldr	r2, [r3, r4, lsl #2]
 1377 004a 4C4B     		ldr	r3, .L67+20
 1378 004c 9A42     		cmp	r2, r3
 1379 004e 20D8     		bhi	.L61
 769:Src/main.c    ****         envelope_index[i] += (uint32_t)(attack * DDS_SCALE_FACTOR);
 1380              		.loc 1 769 0
 1381 0050 474D     		ldr	r5, .L67+8
 1382 0052 55F82460 		ldr	r6, [r5, r4, lsl #2]
 1383 0056 4A4B     		ldr	r3, .L67+24
 1384 0058 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1385 005a FFF7FEFF 		bl	__aeabi_i2d
 1386              	.LVL66:
ARM GAS  /tmp/cccRwXIK.s 			page 40


 1387 005e 42A3     		adr	r3, .L67
 1388 0060 D3E90023 		ldrd	r2, [r3]
 1389 0064 FFF7FEFF 		bl	__aeabi_dmul
 1390              	.LVL67:
 1391 0068 FFF7FEFF 		bl	__aeabi_d2uiz
 1392              	.LVL68:
 1393 006c 3044     		add	r0, r0, r6
 1394 006e 45F82400 		str	r0, [r5, r4, lsl #2]
 770:Src/main.c    ****         envelope[i] = base_pos_saw[(envelope_index[i]>>10)%4096];
 1395              		.loc 1 770 0
 1396 0072 55F82430 		ldr	r3, [r5, r4, lsl #2]
 1397 0076 C3F38B23 		ubfx	r3, r3, #10, #12
 1398 007a 424A     		ldr	r2, .L67+28
 1399 007c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1400 007e 07EE903A 		vmov	s15, r3	@ int
 1401 0082 F8EE677A 		vcvt.f32.u32	s15, s15
 1402 0086 3B4B     		ldr	r3, .L67+12
 1403 0088 03EB8403 		add	r3, r3, r4, lsl #2
 1404 008c C3ED007A 		vstr.32	s15, [r3]
 1405 0090 C2E7     		b	.L55
 1406              	.L61:
 771:Src/main.c    ****       }
 772:Src/main.c    ****       else {
 773:Src/main.c    ****         // env_state++;
 774:Src/main.c    ****         envelope_index[i] = 0;
 1407              		.loc 1 774 0
 1408 0092 0022     		movs	r2, #0
 1409 0094 364B     		ldr	r3, .L67+8
 1410 0096 43F82420 		str	r2, [r3, r4, lsl #2]
 775:Src/main.c    ****         env_state[i] = DECAY_MODE;
 1411              		.loc 1 775 0
 1412 009a 0222     		movs	r2, #2
 1413 009c 364B     		ldr	r3, .L67+16
 1414 009e 1A55     		strb	r2, [r3, r4]
 1415 00a0 BAE7     		b	.L55
 1416              	.L59:
 776:Src/main.c    ****       }
 777:Src/main.c    ****       break;
 778:Src/main.c    ****     case DECAY_MODE:
 779:Src/main.c    ****       if(base_neg_saw[(envelope_index[i]>>10)%4096] >= sustain){
 1417              		.loc 1 779 0
 1418 00a2 334B     		ldr	r3, .L67+8
 1419 00a4 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1420 00a8 C3F38B23 		ubfx	r3, r3, #10, #12
 1421 00ac 364A     		ldr	r2, .L67+32
 1422 00ae D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1423 00b0 364B     		ldr	r3, .L67+36
 1424 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1425 00b4 9A42     		cmp	r2, r3
 1426 00b6 20D3     		bcc	.L62
 780:Src/main.c    ****         envelope_index[i] += (uint32_t)(decay * DDS_SCALE_FACTOR);
 1427              		.loc 1 780 0
 1428 00b8 2D4D     		ldr	r5, .L67+8
 1429 00ba 55F82460 		ldr	r6, [r5, r4, lsl #2]
 1430 00be 344B     		ldr	r3, .L67+40
 1431 00c0 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1432 00c2 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  /tmp/cccRwXIK.s 			page 41


 1433              	.LVL69:
 1434 00c6 28A3     		adr	r3, .L67
 1435 00c8 D3E90023 		ldrd	r2, [r3]
 1436 00cc FFF7FEFF 		bl	__aeabi_dmul
 1437              	.LVL70:
 1438 00d0 FFF7FEFF 		bl	__aeabi_d2uiz
 1439              	.LVL71:
 1440 00d4 3044     		add	r0, r0, r6
 1441 00d6 45F82400 		str	r0, [r5, r4, lsl #2]
 781:Src/main.c    ****         envelope[i] = base_neg_saw[(envelope_index[i]>>10)%4096];
 1442              		.loc 1 781 0
 1443 00da 55F82430 		ldr	r3, [r5, r4, lsl #2]
 1444 00de C3F38B23 		ubfx	r3, r3, #10, #12
 1445 00e2 294A     		ldr	r2, .L67+32
 1446 00e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1447 00e6 07EE903A 		vmov	s15, r3	@ int
 1448 00ea F8EE677A 		vcvt.f32.u32	s15, s15
 1449 00ee 214B     		ldr	r3, .L67+12
 1450 00f0 03EB8403 		add	r3, r3, r4, lsl #2
 1451 00f4 C3ED007A 		vstr.32	s15, [r3]
 1452 00f8 8EE7     		b	.L55
 1453              	.L62:
 782:Src/main.c    ****       }
 783:Src/main.c    ****       else {
 784:Src/main.c    ****         //envelope_index[i] = 0;
 785:Src/main.c    ****         env_state[i]++;
 1454              		.loc 1 785 0
 1455 00fa 1F4A     		ldr	r2, .L67+16
 1456 00fc 135D     		ldrb	r3, [r2, r4]	@ zero_extendqisi2
 1457 00fe 0133     		adds	r3, r3, #1
 1458 0100 DBB2     		uxtb	r3, r3
 1459 0102 1355     		strb	r3, [r2, r4]
 1460 0104 88E7     		b	.L55
 1461              	.L60:
 786:Src/main.c    ****         //env_state[i] = RELEASE_MODE;
 787:Src/main.c    ****       }
 788:Src/main.c    ****       break;
 789:Src/main.c    ****     case SUSTAIN_MODE:
 790:Src/main.c    ****       //env_state[i]++;
 791:Src/main.c    ****       break;
 792:Src/main.c    ****     case RELEASE_MODE:
 793:Src/main.c    ****       //      if((UINT32_MAX - envelope_index) < DDS_SCALE_FACTOR){
 794:Src/main.c    ****       if(envelope_index[i] <= 4200000){
 1462              		.loc 1 794 0
 1463 0106 1A4B     		ldr	r3, .L67+8
 1464 0108 53F82420 		ldr	r2, [r3, r4, lsl #2]
 1465 010c 1B4B     		ldr	r3, .L67+20
 1466 010e 9A42     		cmp	r2, r3
 1467 0110 20D8     		bhi	.L63
 795:Src/main.c    ****         envelope_index[i] += (uint32_t)(release * DDS_SCALE_FACTOR);
 1468              		.loc 1 795 0
 1469 0112 174D     		ldr	r5, .L67+8
 1470 0114 55F82460 		ldr	r6, [r5, r4, lsl #2]
 1471 0118 1E4B     		ldr	r3, .L67+44
 1472 011a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1473 011c FFF7FEFF 		bl	__aeabi_i2d
 1474              	.LVL72:
ARM GAS  /tmp/cccRwXIK.s 			page 42


 1475 0120 11A3     		adr	r3, .L67
 1476 0122 D3E90023 		ldrd	r2, [r3]
 1477 0126 FFF7FEFF 		bl	__aeabi_dmul
 1478              	.LVL73:
 1479 012a FFF7FEFF 		bl	__aeabi_d2uiz
 1480              	.LVL74:
 1481 012e 3044     		add	r0, r0, r6
 1482 0130 45F82400 		str	r0, [r5, r4, lsl #2]
 796:Src/main.c    ****         envelope[i] = base_neg_saw[(envelope_index[i]>>10)%4096];
 1483              		.loc 1 796 0
 1484 0134 55F82430 		ldr	r3, [r5, r4, lsl #2]
 1485 0138 C3F38B23 		ubfx	r3, r3, #10, #12
 1486 013c 124A     		ldr	r2, .L67+32
 1487 013e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1488 0140 07EE903A 		vmov	s15, r3	@ int
 1489 0144 F8EE677A 		vcvt.f32.u32	s15, s15
 1490 0148 0A4B     		ldr	r3, .L67+12
 1491 014a 03EB8403 		add	r3, r3, r4, lsl #2
 1492 014e C3ED007A 		vstr.32	s15, [r3]
 1493 0152 61E7     		b	.L55
 1494              	.L63:
 797:Src/main.c    ****       }
 798:Src/main.c    ****       else {
 799:Src/main.c    ****         env_state[i] = NOT_TRIGGERED;
 1495              		.loc 1 799 0
 1496 0154 0022     		movs	r2, #0
 1497 0156 084B     		ldr	r3, .L67+16
 1498 0158 1A55     		strb	r2, [r3, r4]
 800:Src/main.c    ****         //note_on[i] = MIDI_NOTE_OFF;
 801:Src/main.c    ****         envelope[i] = 0;
 1499              		.loc 1 801 0
 1500 015a 064B     		ldr	r3, .L67+12
 1501 015c 03EB8403 		add	r3, r3, r4, lsl #2
 1502 0160 0022     		movs	r2, #0
 1503 0162 1A60     		str	r2, [r3]	@ float
 1504 0164 58E7     		b	.L55
 1505              	.L66:
 1506              	.LBE14:
 802:Src/main.c    ****       }
 803:Src/main.c    ****       break;
 804:Src/main.c    ****     }
 805:Src/main.c    ****   }
 806:Src/main.c    **** }
 1507              		.loc 1 806 0
 1508 0166 70BD     		pop	{r4, r5, r6, pc}
 1509              	.LVL75:
 1510              	.L68:
 1511              		.align	3
 1512              	.L67:
 1513 0168 942EA292 		.word	2460102292
 1514 016c 5F5E5640 		.word	1079402079
 1515 0170 00000000 		.word	.LANCHOR8
 1516 0174 00000000 		.word	.LANCHOR7
 1517 0178 00000000 		.word	env_state
 1518 017c 40164000 		.word	4200000
 1519 0180 00000000 		.word	.LANCHOR9
 1520 0184 00000000 		.word	base_pos_saw
ARM GAS  /tmp/cccRwXIK.s 			page 43


 1521 0188 00000000 		.word	base_neg_saw
 1522 018c 00000000 		.word	.LANCHOR10
 1523 0190 00000000 		.word	.LANCHOR11
 1524 0194 00000000 		.word	.LANCHOR12
 1525              		.cfi_endproc
 1526              	.LFE141:
 1528              		.section	.text.main,"ax",%progbits
 1529              		.align	1
 1530              		.global	main
 1531              		.syntax unified
 1532              		.thumb
 1533              		.thumb_func
 1534              		.fpu fpv4-sp-d16
 1536              	main:
 1537              	.LFB130:
 106:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1538              		.loc 1 106 0
 1539              		.cfi_startproc
 1540              		@ args = 0, pretend = 0, frame = 0
 1541              		@ frame_needed = 0, uses_anonymous_args = 0
 1542 0000 38B5     		push	{r3, r4, r5, lr}
 1543              	.LCFI24:
 1544              		.cfi_def_cfa_offset 16
 1545              		.cfi_offset 3, -16
 1546              		.cfi_offset 4, -12
 1547              		.cfi_offset 5, -8
 1548              		.cfi_offset 14, -4
 114:Src/main.c    **** 
 1549              		.loc 1 114 0
 1550 0002 FFF7FEFF 		bl	HAL_Init
 1551              	.LVL76:
 121:Src/main.c    **** 
 1552              		.loc 1 121 0
 1553 0006 FFF7FEFF 		bl	SystemClock_Config
 1554              	.LVL77:
 128:Src/main.c    ****   MX_SPI5_Init();
 1555              		.loc 1 128 0
 1556 000a FFF7FEFF 		bl	MX_GPIO_Init
 1557              	.LVL78:
 129:Src/main.c    ****   MX_USART1_UART_Init();
 1558              		.loc 1 129 0
 1559 000e FFF7FEFF 		bl	MX_SPI5_Init
 1560              	.LVL79:
 130:Src/main.c    ****   MX_DAC_Init();
 1561              		.loc 1 130 0
 1562 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 1563              	.LVL80:
 131:Src/main.c    ****   MX_TIM6_Init();
 1564              		.loc 1 131 0
 1565 0016 FFF7FEFF 		bl	MX_DAC_Init
 1566              	.LVL81:
 132:Src/main.c    ****   MX_TIM7_Init();
 1567              		.loc 1 132 0
 1568 001a FFF7FEFF 		bl	MX_TIM6_Init
 1569              	.LVL82:
 133:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1570              		.loc 1 133 0
ARM GAS  /tmp/cccRwXIK.s 			page 44


 1571 001e FFF7FEFF 		bl	MX_TIM7_Init
 1572              	.LVL83:
 135:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim6);
 1573              		.loc 1 135 0
 1574 0022 FFF7FEFF 		bl	init_wavetable
 1575              	.LVL84:
 136:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim7);
 1576              		.loc 1 136 0
 1577 0026 2048     		ldr	r0, .L76
 1578 0028 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1579              	.LVL85:
 137:Src/main.c    ****   HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 1580              		.loc 1 137 0
 1581 002c 1F48     		ldr	r0, .L76+4
 1582 002e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1583              	.LVL86:
 138:Src/main.c    **** 
 1584              		.loc 1 138 0
 1585 0032 1021     		movs	r1, #16
 1586 0034 1E48     		ldr	r0, .L76+8
 1587 0036 FFF7FEFF 		bl	HAL_DAC_Start
 1588              	.LVL87:
 1589              	.LBB15:
 140:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 1590              		.loc 1 140 0
 1591 003a 0023     		movs	r3, #0
 1592              	.LVL88:
 1593              	.L70:
 140:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 1594              		.loc 1 140 0 is_stmt 0 discriminator 1
 1595 003c 0F2B     		cmp	r3, #15
 1596 003e 0ADC     		bgt	.L75
 141:Src/main.c    ****     note_on[i] = MIDI_NOTE_OFF;
 1597              		.loc 1 141 0 is_stmt 1 discriminator 3
 1598 0040 0021     		movs	r1, #0
 1599 0042 1C4A     		ldr	r2, .L76+12
 1600 0044 D154     		strb	r1, [r2, r3]
 142:Src/main.c    ****     note_freq[i] = 30;
 1601              		.loc 1 142 0 discriminator 3
 1602 0046 8021     		movs	r1, #128
 1603 0048 1B4A     		ldr	r2, .L76+16
 1604 004a D154     		strb	r1, [r2, r3]
 143:Src/main.c    ****   }
 1605              		.loc 1 143 0 discriminator 3
 1606 004c 1E21     		movs	r1, #30
 1607 004e 1B4A     		ldr	r2, .L76+20
 1608 0050 D154     		strb	r1, [r2, r3]
 140:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 1609              		.loc 1 140 0 discriminator 3
 1610 0052 0133     		adds	r3, r3, #1
 1611              	.LVL89:
 1612 0054 F2E7     		b	.L70
 1613              	.L75:
 1614              	.LBE15:
 146:Src/main.c    ****   note_freq[0] = 50;
 1615              		.loc 1 146 0
 1616 0056 1848     		ldr	r0, .L76+16
ARM GAS  /tmp/cccRwXIK.s 			page 45


 1617 0058 9024     		movs	r4, #144
 1618 005a 0470     		strb	r4, [r0]
 147:Src/main.c    ****   env_state[0] = ATTACK_MODE;
 1619              		.loc 1 147 0
 1620 005c 1749     		ldr	r1, .L76+20
 1621 005e 3223     		movs	r3, #50
 1622              	.LVL90:
 1623 0060 0B70     		strb	r3, [r1]
 148:Src/main.c    **** 
 1624              		.loc 1 148 0
 1625 0062 144B     		ldr	r3, .L76+12
 1626 0064 0122     		movs	r2, #1
 1627 0066 1A70     		strb	r2, [r3]
 150:Src/main.c    ****   note_freq[1] = 54;
 1628              		.loc 1 150 0
 1629 0068 4470     		strb	r4, [r0, #1]
 151:Src/main.c    ****   env_state[1] = ATTACK_MODE;
 1630              		.loc 1 151 0
 1631 006a 3625     		movs	r5, #54
 1632 006c 4D70     		strb	r5, [r1, #1]
 152:Src/main.c    **** 
 1633              		.loc 1 152 0
 1634 006e 5A70     		strb	r2, [r3, #1]
 154:Src/main.c    ****   note_freq[2] = 57;
 1635              		.loc 1 154 0
 1636 0070 8470     		strb	r4, [r0, #2]
 155:Src/main.c    ****   env_state[2] = ATTACK_MODE;
 1637              		.loc 1 155 0
 1638 0072 3925     		movs	r5, #57
 1639 0074 8D70     		strb	r5, [r1, #2]
 156:Src/main.c    **** 
 1640              		.loc 1 156 0
 1641 0076 9A70     		strb	r2, [r3, #2]
 158:Src/main.c    ****   note_freq[3] = 62;
 1642              		.loc 1 158 0
 1643 0078 C470     		strb	r4, [r0, #3]
 159:Src/main.c    ****   env_state[3] = ATTACK_MODE;
 1644              		.loc 1 159 0
 1645 007a 3E20     		movs	r0, #62
 1646 007c C870     		strb	r0, [r1, #3]
 160:Src/main.c    **** 
 1647              		.loc 1 160 0
 1648 007e DA70     		strb	r2, [r3, #3]
 1649              	.L72:
 185:Src/main.c    ****       //      __disable_irq();
 1650              		.loc 1 185 0
 1651 0080 0F4B     		ldr	r3, .L76+24
 1652 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1653 0084 002B     		cmp	r3, #0
 1654 0086 FBD0     		beq	.L72
 187:Src/main.c    ****       UpdateOutputValue();
 1655              		.loc 1 187 0
 1656 0088 FFF7FEFF 		bl	UpdateEnvelope
 1657              	.LVL91:
 188:Src/main.c    ****       HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_8B_R, output_val);
 1658              		.loc 1 188 0
 1659 008c FFF7FEFF 		bl	UpdateOutputValue
ARM GAS  /tmp/cccRwXIK.s 			page 46


 1660              	.LVL92:
 189:Src/main.c    ****       update_value_flag = 0;
 1661              		.loc 1 189 0
 1662 0090 0C4B     		ldr	r3, .L76+28
 1663 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1664 0094 0822     		movs	r2, #8
 1665 0096 1021     		movs	r1, #16
 1666 0098 0548     		ldr	r0, .L76+8
 1667 009a FFF7FEFF 		bl	HAL_DAC_SetValue
 1668              	.LVL93:
 190:Src/main.c    ****       //      __enable_irq();
 1669              		.loc 1 190 0
 1670 009e 0022     		movs	r2, #0
 1671 00a0 074B     		ldr	r3, .L76+24
 1672 00a2 1A70     		strb	r2, [r3]
 1673 00a4 ECE7     		b	.L72
 1674              	.L77:
 1675 00a6 00BF     		.align	2
 1676              	.L76:
 1677 00a8 00000000 		.word	htim6
 1678 00ac 00000000 		.word	htim7
 1679 00b0 00000000 		.word	hdac
 1680 00b4 00000000 		.word	env_state
 1681 00b8 00000000 		.word	.LANCHOR3
 1682 00bc 00000000 		.word	.LANCHOR5
 1683 00c0 00000000 		.word	.LANCHOR2
 1684 00c4 00000000 		.word	.LANCHOR4
 1685              		.cfi_endproc
 1686              	.LFE130:
 1688              		.section	.text.Update_R2R_DAC,"ax",%progbits
 1689              		.align	1
 1690              		.global	Update_R2R_DAC
 1691              		.syntax unified
 1692              		.thumb
 1693              		.thumb_func
 1694              		.fpu fpv4-sp-d16
 1696              	Update_R2R_DAC:
 1697              	.LFB142:
 807:Src/main.c    **** 
 808:Src/main.c    **** void Update_R2R_DAC() {
 1698              		.loc 1 808 0
 1699              		.cfi_startproc
 1700              		@ args = 0, pretend = 0, frame = 0
 1701              		@ frame_needed = 0, uses_anonymous_args = 0
 1702 0000 08B5     		push	{r3, lr}
 1703              	.LCFI25:
 1704              		.cfi_def_cfa_offset 8
 1705              		.cfi_offset 3, -8
 1706              		.cfi_offset 14, -4
 809:Src/main.c    ****   ((output_val>>0)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_7, GPIO_PIN_SET) : HAL_GPIO_Write
 1707              		.loc 1 809 0
 1708 0002 474B     		ldr	r3, .L97
 1709 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1710 0006 13F0010F 		tst	r3, #1
 1711 000a 51D0     		beq	.L79
 1712              		.loc 1 809 0 is_stmt 0 discriminator 1
 1713 000c 0122     		movs	r2, #1
ARM GAS  /tmp/cccRwXIK.s 			page 47


 1714 000e 8021     		movs	r1, #128
 1715 0010 4448     		ldr	r0, .L97+4
 1716 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1717              	.LVL94:
 1718              	.L80:
 810:Src/main.c    ****   ((output_val>>1)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_8, GPIO_PIN_SET) : HAL_GPIO_Write
 1719              		.loc 1 810 0 is_stmt 1
 1720 0016 424B     		ldr	r3, .L97
 1721 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1722 001a 13F0020F 		tst	r3, #2
 1723 001e 4DD0     		beq	.L81
 1724              		.loc 1 810 0 is_stmt 0 discriminator 1
 1725 0020 0122     		movs	r2, #1
 1726 0022 4FF48071 		mov	r1, #256
 1727 0026 3F48     		ldr	r0, .L97+4
 1728 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1729              	.LVL95:
 1730              	.L82:
 811:Src/main.c    ****   ((output_val>>2)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_9, GPIO_PIN_SET) : HAL_GPIO_Write
 1731              		.loc 1 811 0 is_stmt 1
 1732 002c 3C4B     		ldr	r3, .L97
 1733 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1734 0030 13F0040F 		tst	r3, #4
 1735 0034 49D0     		beq	.L83
 1736              		.loc 1 811 0 is_stmt 0 discriminator 1
 1737 0036 0122     		movs	r2, #1
 1738 0038 4FF40071 		mov	r1, #512
 1739 003c 3948     		ldr	r0, .L97+4
 1740 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1741              	.LVL96:
 1742              	.L84:
 812:Src/main.c    ****   ((output_val>>3)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_10, GPIO_PIN_SET) : HAL_GPIO_Writ
 1743              		.loc 1 812 0 is_stmt 1
 1744 0042 374B     		ldr	r3, .L97
 1745 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1746 0046 13F0080F 		tst	r3, #8
 1747 004a 45D0     		beq	.L85
 1748              		.loc 1 812 0 is_stmt 0 discriminator 1
 1749 004c 0122     		movs	r2, #1
 1750 004e 4FF48061 		mov	r1, #1024
 1751 0052 3448     		ldr	r0, .L97+4
 1752 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1753              	.LVL97:
 1754              	.L86:
 813:Src/main.c    ****   ((output_val>>4)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET) : HAL_GPIO_Writ
 1755              		.loc 1 813 0 is_stmt 1
 1756 0058 314B     		ldr	r3, .L97
 1757 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1758 005c 13F0100F 		tst	r3, #16
 1759 0060 41D0     		beq	.L87
 1760              		.loc 1 813 0 is_stmt 0 discriminator 1
 1761 0062 0122     		movs	r2, #1
 1762 0064 4FF40061 		mov	r1, #2048
 1763 0068 2E48     		ldr	r0, .L97+4
 1764 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1765              	.LVL98:
 1766              	.L88:
ARM GAS  /tmp/cccRwXIK.s 			page 48


 814:Src/main.c    ****   ((output_val>>5)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET) : HAL_GPIO_Writ
 1767              		.loc 1 814 0 is_stmt 1
 1768 006e 2C4B     		ldr	r3, .L97
 1769 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1770 0072 13F0200F 		tst	r3, #32
 1771 0076 3DD0     		beq	.L89
 1772              		.loc 1 814 0 is_stmt 0 discriminator 1
 1773 0078 0122     		movs	r2, #1
 1774 007a 4FF48051 		mov	r1, #4096
 1775 007e 2948     		ldr	r0, .L97+4
 1776 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1777              	.LVL99:
 1778              	.L90:
 815:Src/main.c    ****   ((output_val>>6)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_13, GPIO_PIN_SET) : HAL_GPIO_Writ
 1779              		.loc 1 815 0 is_stmt 1
 1780 0084 264B     		ldr	r3, .L97
 1781 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1782 0088 13F0400F 		tst	r3, #64
 1783 008c 39D0     		beq	.L91
 1784              		.loc 1 815 0 is_stmt 0 discriminator 1
 1785 008e 0122     		movs	r2, #1
 1786 0090 4FF40051 		mov	r1, #8192
 1787 0094 2348     		ldr	r0, .L97+4
 1788 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1789              	.LVL100:
 1790              	.L92:
 816:Src/main.c    ****   ((output_val>>7)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_14, GPIO_PIN_SET) : HAL_GPIO_Writ
 1791              		.loc 1 816 0 is_stmt 1
 1792 009a 214B     		ldr	r3, .L97
 1793 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1794 009e DB09     		lsrs	r3, r3, #7
 1795 00a0 36D1     		bne	.L96
 1796              		.loc 1 816 0 is_stmt 0 discriminator 2
 1797 00a2 0022     		movs	r2, #0
 1798 00a4 4FF48041 		mov	r1, #16384
 1799 00a8 1E48     		ldr	r0, .L97+4
 1800 00aa FFF7FEFF 		bl	HAL_GPIO_WritePin
 1801              	.LVL101:
 1802 00ae 08BD     		pop	{r3, pc}
 1803              	.L79:
 809:Src/main.c    ****   ((output_val>>1)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_8, GPIO_PIN_SET) : HAL_GPIO_Write
 1804              		.loc 1 809 0 is_stmt 1 discriminator 2
 1805 00b0 0022     		movs	r2, #0
 1806 00b2 8021     		movs	r1, #128
 1807 00b4 1B48     		ldr	r0, .L97+4
 1808 00b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1809              	.LVL102:
 1810 00ba ACE7     		b	.L80
 1811              	.L81:
 810:Src/main.c    ****   ((output_val>>2)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_9, GPIO_PIN_SET) : HAL_GPIO_Write
 1812              		.loc 1 810 0 discriminator 2
 1813 00bc 0022     		movs	r2, #0
 1814 00be 4FF48071 		mov	r1, #256
 1815 00c2 1848     		ldr	r0, .L97+4
 1816 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1817              	.LVL103:
 1818 00c8 B0E7     		b	.L82
ARM GAS  /tmp/cccRwXIK.s 			page 49


 1819              	.L83:
 811:Src/main.c    ****   ((output_val>>3)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_10, GPIO_PIN_SET) : HAL_GPIO_Writ
 1820              		.loc 1 811 0 discriminator 2
 1821 00ca 0022     		movs	r2, #0
 1822 00cc 4FF40071 		mov	r1, #512
 1823 00d0 1448     		ldr	r0, .L97+4
 1824 00d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1825              	.LVL104:
 1826 00d6 B4E7     		b	.L84
 1827              	.L85:
 812:Src/main.c    ****   ((output_val>>4)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET) : HAL_GPIO_Writ
 1828              		.loc 1 812 0 discriminator 2
 1829 00d8 0022     		movs	r2, #0
 1830 00da 4FF48061 		mov	r1, #1024
 1831 00de 1148     		ldr	r0, .L97+4
 1832 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1833              	.LVL105:
 1834 00e4 B8E7     		b	.L86
 1835              	.L87:
 813:Src/main.c    ****   ((output_val>>5)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET) : HAL_GPIO_Writ
 1836              		.loc 1 813 0 discriminator 2
 1837 00e6 0022     		movs	r2, #0
 1838 00e8 4FF40061 		mov	r1, #2048
 1839 00ec 0D48     		ldr	r0, .L97+4
 1840 00ee FFF7FEFF 		bl	HAL_GPIO_WritePin
 1841              	.LVL106:
 1842 00f2 BCE7     		b	.L88
 1843              	.L89:
 814:Src/main.c    ****   ((output_val>>6)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_13, GPIO_PIN_SET) : HAL_GPIO_Writ
 1844              		.loc 1 814 0 discriminator 2
 1845 00f4 0022     		movs	r2, #0
 1846 00f6 4FF48051 		mov	r1, #4096
 1847 00fa 0A48     		ldr	r0, .L97+4
 1848 00fc FFF7FEFF 		bl	HAL_GPIO_WritePin
 1849              	.LVL107:
 1850 0100 C0E7     		b	.L90
 1851              	.L91:
 815:Src/main.c    ****   ((output_val>>7)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_14, GPIO_PIN_SET) : HAL_GPIO_Writ
 1852              		.loc 1 815 0 discriminator 2
 1853 0102 0022     		movs	r2, #0
 1854 0104 4FF40051 		mov	r1, #8192
 1855 0108 0648     		ldr	r0, .L97+4
 1856 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1857              	.LVL108:
 1858 010e C4E7     		b	.L92
 1859              	.L96:
 1860              		.loc 1 816 0 discriminator 1
 1861 0110 0122     		movs	r2, #1
 1862 0112 4FF48041 		mov	r1, #16384
 1863 0116 0348     		ldr	r0, .L97+4
 1864 0118 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1865              	.LVL109:
 1866 011c 08BD     		pop	{r3, pc}
 1867              	.L98:
 1868 011e 00BF     		.align	2
 1869              	.L97:
 1870 0120 00000000 		.word	.LANCHOR4
ARM GAS  /tmp/cccRwXIK.s 			page 50


 1871 0124 00100240 		.word	1073876992
 1872              		.cfi_endproc
 1873              	.LFE142:
 1875              		.section	.text.Error_Handler,"ax",%progbits
 1876              		.align	1
 1877              		.global	Error_Handler
 1878              		.syntax unified
 1879              		.thumb
 1880              		.thumb_func
 1881              		.fpu fpv4-sp-d16
 1883              	Error_Handler:
 1884              	.LFB143:
 817:Src/main.c    **** }
 818:Src/main.c    **** /* USER CODE END 4 */
 819:Src/main.c    **** 
 820:Src/main.c    **** /**
 821:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 822:Src/main.c    ****   * @retval None
 823:Src/main.c    ****   */
 824:Src/main.c    **** void Error_Handler(void)
 825:Src/main.c    **** {
 1885              		.loc 1 825 0
 1886              		.cfi_startproc
 1887              		@ args = 0, pretend = 0, frame = 0
 1888              		@ frame_needed = 0, uses_anonymous_args = 0
 1889              		@ link register save eliminated.
 1890 0000 7047     		bx	lr
 1891              		.cfi_endproc
 1892              	.LFE143:
 1894              		.global	release
 1895              		.global	sustain
 1896              		.global	decay
 1897              		.global	attack
 1898              		.global	MIDI_flag
 1899              		.global	update_value_flag
 1900              		.global	note_freq
 1901              		.global	note_on
 1902              		.comm	env_state,16,4
 1903              		.global	envelope
 1904              		.global	envelope_index
 1905              		.global	output_val
 1906              		.global	phase_accumulator
 1907              		.global	current_midi_note_msg
 1908              		.global	inv_voices
 1909              		.comm	spi_rx_buffer,3,4
 1910              		.global	spi_tx_buffer
 1911              		.comm	huart1,64,4
 1912              		.comm	htim7,64,4
 1913              		.comm	htim6,64,4
 1914              		.comm	hspi5,88,4
 1915              		.comm	hdac,20,4
 1916              		.comm	lfo_sine,256,4
 1917              		.comm	base_sq,4096,4
 1918              		.comm	base_tri,4096,4
 1919              		.comm	base_neg_saw,4096,4
 1920              		.comm	base_pos_saw,4096,4
 1921              		.comm	base_sine,4096,4
ARM GAS  /tmp/cccRwXIK.s 			page 51


 1922              		.section	.bss.MIDI_flag,"aw",%nobits
 1923              		.set	.LANCHOR1,. + 0
 1926              	MIDI_flag:
 1927 0000 00       		.space	1
 1928              		.section	.bss.current_midi_note_msg,"aw",%nobits
 1929              		.align	2
 1930              		.set	.LANCHOR0,. + 0
 1933              	current_midi_note_msg:
 1934 0000 000000   		.space	3
 1935              		.section	.bss.envelope,"aw",%nobits
 1936              		.align	2
 1937              		.set	.LANCHOR7,. + 0
 1940              	envelope:
 1941 0000 00000000 		.space	64
 1941      00000000 
 1941      00000000 
 1941      00000000 
 1941      00000000 
 1942              		.section	.bss.envelope_index,"aw",%nobits
 1943              		.align	2
 1944              		.set	.LANCHOR8,. + 0
 1947              	envelope_index:
 1948 0000 00000000 		.space	64
 1948      00000000 
 1948      00000000 
 1948      00000000 
 1948      00000000 
 1949              		.section	.bss.note_freq,"aw",%nobits
 1950              		.align	2
 1951              		.set	.LANCHOR5,. + 0
 1954              	note_freq:
 1955 0000 00000000 		.space	16
 1955      00000000 
 1955      00000000 
 1955      00000000 
 1956              		.section	.bss.note_on,"aw",%nobits
 1957              		.align	2
 1958              		.set	.LANCHOR3,. + 0
 1961              	note_on:
 1962 0000 00000000 		.space	88
 1962      00000000 
 1962      00000000 
 1962      00000000 
 1962      00000000 
 1963              		.section	.bss.output_val,"aw",%nobits
 1964              		.set	.LANCHOR4,. + 0
 1967              	output_val:
 1968 0000 00       		.space	1
 1969              		.section	.bss.phase_accumulator,"aw",%nobits
 1970              		.align	2
 1971              		.set	.LANCHOR6,. + 0
 1974              	phase_accumulator:
 1975 0000 00000000 		.space	64
 1975      00000000 
 1975      00000000 
 1975      00000000 
 1975      00000000 
ARM GAS  /tmp/cccRwXIK.s 			page 52


 1976              		.section	.bss.update_value_flag,"aw",%nobits
 1977              		.set	.LANCHOR2,. + 0
 1980              	update_value_flag:
 1981 0000 00       		.space	1
 1982              		.section	.data.attack,"aw",%progbits
 1983              		.set	.LANCHOR9,. + 0
 1986              	attack:
 1987 0000 1E       		.byte	30
 1988              		.section	.data.decay,"aw",%progbits
 1989              		.set	.LANCHOR11,. + 0
 1992              	decay:
 1993 0000 1E       		.byte	30
 1994              		.section	.data.release,"aw",%progbits
 1995              		.set	.LANCHOR12,. + 0
 1998              	release:
 1999 0000 02       		.byte	2
 2000              		.section	.data.spi_tx_buffer,"aw",%progbits
 2001              		.align	2
 2004              	spi_tx_buffer:
 2005 0000 31       		.byte	49
 2006 0001 32       		.byte	50
 2007 0002 33       		.byte	51
 2008              		.section	.data.sustain,"aw",%progbits
 2009              		.set	.LANCHOR10,. + 0
 2012              	sustain:
 2013 0000 C8       		.byte	-56
 2014              		.section	.rodata.inv_voices,"a",%progbits
 2015              		.align	2
 2018              	inv_voices:
 2019 0000 0000803D 		.word	1031798784
 2020              		.text
 2021              	.Letext0:
 2022              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2023              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2024              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2025              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2026              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 2027              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2028              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2029              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2030              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2031              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2032              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dac.h"
 2033              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 2034              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2035              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2036              		.file 16 "Inc/midi.h"
 2037              		.file 17 "/usr/include/newlib/sys/lock.h"
 2038              		.file 18 "/usr/include/newlib/sys/_types.h"
 2039              		.file 19 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 2040              		.file 20 "/usr/include/newlib/sys/reent.h"
 2041              		.file 21 "/usr/include/newlib/stdlib.h"
 2042              		.file 22 "Inc/waves.h"
 2043              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 2044              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/cccRwXIK.s 			page 53


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cccRwXIK.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cccRwXIK.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cccRwXIK.s:485    .text.MX_GPIO_Init:00000000000002c0 $d
     /tmp/cccRwXIK.s:496    .text.MX_GPIO_Init:00000000000002e4 $t
     /tmp/cccRwXIK.s:624    .text.MX_GPIO_Init:00000000000003a0 $d
     /tmp/cccRwXIK.s:634    .text.MX_SPI5_Init:0000000000000000 $t
     /tmp/cccRwXIK.s:640    .text.MX_SPI5_Init:0000000000000000 MX_SPI5_Init
     /tmp/cccRwXIK.s:684    .text.MX_SPI5_Init:0000000000000028 $d
                            *COM*:0000000000000058 hspi5
     /tmp/cccRwXIK.s:690    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/cccRwXIK.s:696    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/cccRwXIK.s:735    .text.MX_USART1_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart1
     /tmp/cccRwXIK.s:741    .text.MX_DAC_Init:0000000000000000 $t
     /tmp/cccRwXIK.s:747    .text.MX_DAC_Init:0000000000000000 MX_DAC_Init
     /tmp/cccRwXIK.s:793    .text.MX_DAC_Init:0000000000000028 $d
                            *COM*:0000000000000014 hdac
     /tmp/cccRwXIK.s:799    .text.MX_TIM6_Init:0000000000000000 $t
     /tmp/cccRwXIK.s:805    .text.MX_TIM6_Init:0000000000000000 MX_TIM6_Init
     /tmp/cccRwXIK.s:859    .text.MX_TIM6_Init:0000000000000034 $d
                            *COM*:0000000000000040 htim6
     /tmp/cccRwXIK.s:865    .text.MX_TIM7_Init:0000000000000000 $t
     /tmp/cccRwXIK.s:871    .text.MX_TIM7_Init:0000000000000000 MX_TIM7_Init
     /tmp/cccRwXIK.s:926    .text.MX_TIM7_Init:0000000000000038 $d
                            *COM*:0000000000000040 htim7
     /tmp/cccRwXIK.s:932    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cccRwXIK.s:939    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cccRwXIK.s:1046   .text.SystemClock_Config:000000000000008c $d
     /tmp/cccRwXIK.s:1052   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/cccRwXIK.s:1059   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/cccRwXIK.s:1086   .text.HAL_SPI_TxRxCpltCallback:0000000000000018 $d
                            *COM*:0000000000000003 spi_rx_buffer
     /tmp/cccRwXIK.s:1093   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cccRwXIK.s:1100   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cccRwXIK.s:1175   .text.HAL_TIM_PeriodElapsedCallback:0000000000000050 $d
                            *COM*:0000000000000010 env_state
     /tmp/cccRwXIK.s:1189   .text.UpdateOutputValue:0000000000000000 $t
     /tmp/cccRwXIK.s:1196   .text.UpdateOutputValue:0000000000000000 UpdateOutputValue
     /tmp/cccRwXIK.s:1297   .text.UpdateOutputValue:00000000000000a0 $d
                            *COM*:0000000000001000 base_sine
     /tmp/cccRwXIK.s:1313   .text.UpdateEnvelope:0000000000000000 $t
     /tmp/cccRwXIK.s:1320   .text.UpdateEnvelope:0000000000000000 UpdateEnvelope
     /tmp/cccRwXIK.s:1367   .text.UpdateEnvelope:0000000000000030 $d
     /tmp/cccRwXIK.s:1372   .text.UpdateEnvelope:0000000000000044 $t
     /tmp/cccRwXIK.s:1513   .text.UpdateEnvelope:0000000000000168 $d
                            *COM*:0000000000001000 base_pos_saw
                            *COM*:0000000000001000 base_neg_saw
     /tmp/cccRwXIK.s:1529   .text.main:0000000000000000 $t
     /tmp/cccRwXIK.s:1536   .text.main:0000000000000000 main
     /tmp/cccRwXIK.s:1677   .text.main:00000000000000a8 $d
     /tmp/cccRwXIK.s:1689   .text.Update_R2R_DAC:0000000000000000 $t
     /tmp/cccRwXIK.s:1696   .text.Update_R2R_DAC:0000000000000000 Update_R2R_DAC
     /tmp/cccRwXIK.s:1870   .text.Update_R2R_DAC:0000000000000120 $d
     /tmp/cccRwXIK.s:1876   .text.Error_Handler:0000000000000000 $t
     /tmp/cccRwXIK.s:1883   .text.Error_Handler:0000000000000000 Error_Handler
ARM GAS  /tmp/cccRwXIK.s 			page 54


     /tmp/cccRwXIK.s:1998   .data.release:0000000000000000 release
     /tmp/cccRwXIK.s:2012   .data.sustain:0000000000000000 sustain
     /tmp/cccRwXIK.s:1992   .data.decay:0000000000000000 decay
     /tmp/cccRwXIK.s:1986   .data.attack:0000000000000000 attack
     /tmp/cccRwXIK.s:1926   .bss.MIDI_flag:0000000000000000 MIDI_flag
     /tmp/cccRwXIK.s:1980   .bss.update_value_flag:0000000000000000 update_value_flag
     /tmp/cccRwXIK.s:1954   .bss.note_freq:0000000000000000 note_freq
     /tmp/cccRwXIK.s:1961   .bss.note_on:0000000000000000 note_on
     /tmp/cccRwXIK.s:1940   .bss.envelope:0000000000000000 envelope
     /tmp/cccRwXIK.s:1947   .bss.envelope_index:0000000000000000 envelope_index
     /tmp/cccRwXIK.s:1967   .bss.output_val:0000000000000000 output_val
     /tmp/cccRwXIK.s:1974   .bss.phase_accumulator:0000000000000000 phase_accumulator
     /tmp/cccRwXIK.s:1933   .bss.current_midi_note_msg:0000000000000000 current_midi_note_msg
     /tmp/cccRwXIK.s:2018   .rodata.inv_voices:0000000000000000 inv_voices
     /tmp/cccRwXIK.s:2004   .data.spi_tx_buffer:0000000000000000 spi_tx_buffer
                            *COM*:0000000000000100 lfo_sine
                            *COM*:0000000000001000 base_sq
                            *COM*:0000000000001000 base_tri
     /tmp/cccRwXIK.s:1927   .bss.MIDI_flag:0000000000000000 $d
     /tmp/cccRwXIK.s:1929   .bss.current_midi_note_msg:0000000000000000 $d
     /tmp/cccRwXIK.s:1936   .bss.envelope:0000000000000000 $d
     /tmp/cccRwXIK.s:1943   .bss.envelope_index:0000000000000000 $d
     /tmp/cccRwXIK.s:1950   .bss.note_freq:0000000000000000 $d
     /tmp/cccRwXIK.s:1957   .bss.note_on:0000000000000000 $d
     /tmp/cccRwXIK.s:1968   .bss.output_val:0000000000000000 $d
     /tmp/cccRwXIK.s:1970   .bss.phase_accumulator:0000000000000000 $d
     /tmp/cccRwXIK.s:1981   .bss.update_value_flag:0000000000000000 $d
     /tmp/cccRwXIK.s:2001   .data.spi_tx_buffer:0000000000000000 $d
     /tmp/cccRwXIK.s:2015   .rodata.inv_voices:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Init
HAL_UART_Init
HAL_DAC_Init
HAL_DAC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_GPIO_TogglePin
__aeabi_f2d
__aeabi_dmul
__aeabi_d2uiz
midi_notes
__aeabi_i2d
HAL_Init
init_wavetable
HAL_TIM_Base_Start_IT
HAL_DAC_Start
HAL_DAC_SetValue
