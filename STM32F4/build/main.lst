ARM GAS  /tmp/ccagqd8Q.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB136:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include "midi.h"
  27:Src/main.c    **** #include "waves.h"
  28:Src/main.c    **** /* USER CODE END Includes */
  29:Src/main.c    **** 
  30:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  31:Src/main.c    **** /* USER CODE BEGIN PTD */
  32:Src/main.c    **** 
ARM GAS  /tmp/ccagqd8Q.s 			page 2


  33:Src/main.c    **** /* USER CODE END PTD */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PD */
  37:Src/main.c    **** #define DDS_SCALE_FACTOR 894.745833
  38:Src/main.c    **** #define VOICES 16
  39:Src/main.c    **** #define NOT_TRIGGERED 0
  40:Src/main.c    **** #define ATTACK_MODE 1
  41:Src/main.c    **** #define DECAY_MODE 2
  42:Src/main.c    **** #define SUSTAIN_MODE 3
  43:Src/main.c    **** #define RELEASE_MODE 4
  44:Src/main.c    **** /* USER CODE END PD */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  47:Src/main.c    **** /* USER CODE BEGIN PM */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE END PM */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  52:Src/main.c    **** DAC_HandleTypeDef hdac;
  53:Src/main.c    **** 
  54:Src/main.c    **** SPI_HandleTypeDef hspi5;
  55:Src/main.c    **** 
  56:Src/main.c    **** TIM_HandleTypeDef htim6;
  57:Src/main.c    **** 
  58:Src/main.c    **** UART_HandleTypeDef huart1;
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE BEGIN PV */
  61:Src/main.c    **** uint8_t spi_tx_buffer[3] = {49,50,51};
  62:Src/main.c    **** uint8_t spi_rx_buffer[3];
  63:Src/main.c    **** const float inv_voices = 1.0/VOICES;
  64:Src/main.c    **** volatile struct midi_note_msg current_midi_note_msg = {0,0,0};
  65:Src/main.c    **** volatile uint32_t phase_accumulator[VOICES] = {0};
  66:Src/main.c    **** volatile uint8_t output_val = 0;
  67:Src/main.c    **** volatile uint32_t envelope_index[VOICES] = {0};
  68:Src/main.c    **** volatile float envelope[VOICES] = {0};
  69:Src/main.c    **** volatile uint8_t env_state[VOICES];
  70:Src/main.c    **** volatile uint8_t note_on[88] = {0};
  71:Src/main.c    **** volatile uint8_t note_freq[VOICES] = {0};
  72:Src/main.c    **** 
  73:Src/main.c    **** volatile uint8_t update_value_flag = 0;
  74:Src/main.c    **** volatile uint8_t MIDI_flag = 0;
  75:Src/main.c    **** /* USER CODE END PV */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  78:Src/main.c    **** void SystemClock_Config(void);
  79:Src/main.c    **** static void MX_GPIO_Init(void);
  80:Src/main.c    **** static void MX_SPI5_Init(void);
  81:Src/main.c    **** static void MX_USART1_UART_Init(void);
  82:Src/main.c    **** static void MX_DAC_Init(void);
  83:Src/main.c    **** static void MX_TIM6_Init(void);
  84:Src/main.c    **** /* USER CODE BEGIN PFP */
  85:Src/main.c    **** void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi);
  86:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim);
  87:Src/main.c    **** void UpdateOutputValue(void);
  88:Src/main.c    **** void UpdateEnvelope(void);
  89:Src/main.c    **** void Update_R2R_DAC(void);
ARM GAS  /tmp/ccagqd8Q.s 			page 3


  90:Src/main.c    **** /* USER CODE END PFP */
  91:Src/main.c    **** 
  92:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  93:Src/main.c    **** /* USER CODE BEGIN 0 */
  94:Src/main.c    **** 
  95:Src/main.c    **** /* USER CODE END 0 */
  96:Src/main.c    **** 
  97:Src/main.c    **** /**
  98:Src/main.c    ****   * @brief  The application entry point.
  99:Src/main.c    ****   * @retval int
 100:Src/main.c    ****   */
 101:Src/main.c    **** int main(void)
 102:Src/main.c    **** {
 103:Src/main.c    ****   /* USER CODE BEGIN 1 */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE END 1 */
 106:Src/main.c    ****   
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 111:Src/main.c    ****   HAL_Init();
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE BEGIN Init */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* USER CODE END Init */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* Configure the system clock */
 118:Src/main.c    ****   SystemClock_Config();
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* USER CODE END SysInit */
 123:Src/main.c    **** 
 124:Src/main.c    ****   /* Initialize all configured peripherals */
 125:Src/main.c    ****   MX_GPIO_Init();
 126:Src/main.c    ****   MX_SPI5_Init();
 127:Src/main.c    ****   MX_USART1_UART_Init();
 128:Src/main.c    ****   MX_DAC_Init();
 129:Src/main.c    ****   MX_TIM6_Init();
 130:Src/main.c    ****   /* USER CODE BEGIN 2 */
 131:Src/main.c    ****   init_wavetable();
 132:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim6);
 133:Src/main.c    ****   HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 134:Src/main.c    **** 
 135:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 136:Src/main.c    ****     env_state[i] = ATTACK_MODE;
 137:Src/main.c    ****     note_on[i] = MIDI_NOTE_OFF;
 138:Src/main.c    ****     note_freq[i] = 30;
 139:Src/main.c    ****   }
 140:Src/main.c    **** 
 141:Src/main.c    ****   /*
 142:Src/main.c    ****   note_on[0] = MIDI_NOTE_ON;
 143:Src/main.c    ****   note_freq[0] = 30;
 144:Src/main.c    ****   env_state[0] = ATTACK_MODE;
 145:Src/main.c    **** 
 146:Src/main.c    ****   note_on[1] = MIDI_NOTE_ON;
ARM GAS  /tmp/ccagqd8Q.s 			page 4


 147:Src/main.c    ****   note_freq[1] = 30;
 148:Src/main.c    ****   env_state[1] = ATTACK_MODE;
 149:Src/main.c    **** 
 150:Src/main.c    ****   note_on[2] = MIDI_NOTE_ON;
 151:Src/main.c    ****   note_freq[2] = 30;
 152:Src/main.c    ****   env_state[2] = ATTACK_MODE;
 153:Src/main.c    **** 
 154:Src/main.c    ****   note_on[3] = MIDI_NOTE_ON;
 155:Src/main.c    ****   note_freq[3] = 30;
 156:Src/main.c    ****   env_state[3] = ATTACK_MODE;
 157:Src/main.c    ****   */
 158:Src/main.c    **** 
 159:Src/main.c    ****   /* USER CODE END 2 */
 160:Src/main.c    **** 
 161:Src/main.c    ****   /* Infinite loop */
 162:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 163:Src/main.c    ****   while (1)
 164:Src/main.c    ****   {
 165:Src/main.c    ****     // Receive_MIDI(&hspi5, spi_rx_buffer);
 166:Src/main.c    **** 
 167:Src/main.c    ****     /*
 168:Src/main.c    ****     if(MIDI_flag) {
 169:Src/main.c    ****       MIDI_flag = 0;
 170:Src/main.c    ****       for(int i = 0; i < VOICES; i++) {
 171:Src/main.c    ****          if(note_on[i] == MIDI_NOTE_OFF) {
 172:Src/main.c    ****           note_on[i] = current_midi_note_msg.command;
 173:Src/main.c    ****           note_freq[i] = current_midi_note_msg.note;
 174:Src/main.c    ****           env_state[i] = ATTACK_MODE;
 175:Src/main.c    ****           break;
 176:Src/main.c    ****         }
 177:Src/main.c    ****       }
 178:Src/main.c    ****     }
 179:Src/main.c    ****     */
 180:Src/main.c    **** 
 181:Src/main.c    ****     if(update_value_flag) {
 182:Src/main.c    ****       //      __disable_irq();
 183:Src/main.c    ****       UpdateEnvelope();
 184:Src/main.c    ****       UpdateOutputValue();
 185:Src/main.c    ****       HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_8B_R, output_val);
 186:Src/main.c    ****       update_value_flag = 0;
 187:Src/main.c    ****       //      __enable_irq();
 188:Src/main.c    ****     }
 189:Src/main.c    **** 
 190:Src/main.c    ****     //Update_R2R_DAC();
 191:Src/main.c    **** 
 192:Src/main.c    **** 
 193:Src/main.c    ****     /* USER CODE END WHILE */
 194:Src/main.c    **** 
 195:Src/main.c    ****     /* USER CODE BEGIN 3 */
 196:Src/main.c    ****   }
 197:Src/main.c    ****   /* USER CODE END 3 */
 198:Src/main.c    **** }
 199:Src/main.c    **** 
 200:Src/main.c    **** /**
 201:Src/main.c    ****   * @brief System Clock Configuration
 202:Src/main.c    ****   * @retval None
 203:Src/main.c    ****   */
ARM GAS  /tmp/ccagqd8Q.s 			page 5


 204:Src/main.c    **** void SystemClock_Config(void)
 205:Src/main.c    **** {
 206:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 207:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 208:Src/main.c    **** 
 209:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 210:Src/main.c    ****   */
 211:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 212:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 213:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 214:Src/main.c    ****   */
 215:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 216:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 217:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 218:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 219:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 220:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 221:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 100;
 222:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 223:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 224:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 225:Src/main.c    ****   {
 226:Src/main.c    ****     Error_Handler();
 227:Src/main.c    ****   }
 228:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 229:Src/main.c    ****   */
 230:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 231:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 232:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 233:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 234:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 235:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 236:Src/main.c    **** 
 237:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 238:Src/main.c    ****   {
 239:Src/main.c    ****     Error_Handler();
 240:Src/main.c    ****   }
 241:Src/main.c    **** }
 242:Src/main.c    **** 
 243:Src/main.c    **** /**
 244:Src/main.c    ****   * @brief DAC Initialization Function
 245:Src/main.c    ****   * @param None
 246:Src/main.c    ****   * @retval None
 247:Src/main.c    ****   */
 248:Src/main.c    **** static void MX_DAC_Init(void)
 249:Src/main.c    **** {
 250:Src/main.c    **** 
 251:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 0 */
 252:Src/main.c    **** 
 253:Src/main.c    ****   /* USER CODE END DAC_Init 0 */
 254:Src/main.c    **** 
 255:Src/main.c    ****   DAC_ChannelConfTypeDef sConfig = {0};
 256:Src/main.c    **** 
 257:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 1 */
 258:Src/main.c    **** 
 259:Src/main.c    ****   /* USER CODE END DAC_Init 1 */
 260:Src/main.c    ****   /** DAC Initialization 
ARM GAS  /tmp/ccagqd8Q.s 			page 6


 261:Src/main.c    ****   */
 262:Src/main.c    ****   hdac.Instance = DAC;
 263:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 264:Src/main.c    ****   {
 265:Src/main.c    ****     Error_Handler();
 266:Src/main.c    ****   }
 267:Src/main.c    ****   /** DAC channel OUT2 config 
 268:Src/main.c    ****   */
 269:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 270:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 271:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 272:Src/main.c    ****   {
 273:Src/main.c    ****     Error_Handler();
 274:Src/main.c    ****   }
 275:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 2 */
 276:Src/main.c    **** 
 277:Src/main.c    ****   /* USER CODE END DAC_Init 2 */
 278:Src/main.c    **** 
 279:Src/main.c    **** }
 280:Src/main.c    **** 
 281:Src/main.c    **** /**
 282:Src/main.c    ****   * @brief SPI5 Initialization Function
 283:Src/main.c    ****   * @param None
 284:Src/main.c    ****   * @retval None
 285:Src/main.c    ****   */
 286:Src/main.c    **** static void MX_SPI5_Init(void)
 287:Src/main.c    **** {
 288:Src/main.c    **** 
 289:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 0 */
 290:Src/main.c    **** 
 291:Src/main.c    ****   /* USER CODE END SPI5_Init 0 */
 292:Src/main.c    **** 
 293:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 1 */
 294:Src/main.c    **** 
 295:Src/main.c    ****   /* USER CODE END SPI5_Init 1 */
 296:Src/main.c    ****   /* SPI5 parameter configuration*/
 297:Src/main.c    ****   hspi5.Instance = SPI5;
 298:Src/main.c    ****   hspi5.Init.Mode = SPI_MODE_SLAVE;
 299:Src/main.c    ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 300:Src/main.c    ****   hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 301:Src/main.c    ****   hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 302:Src/main.c    ****   hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 303:Src/main.c    ****   hspi5.Init.NSS = SPI_NSS_HARD_INPUT;
 304:Src/main.c    ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 305:Src/main.c    ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 306:Src/main.c    ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 307:Src/main.c    ****   hspi5.Init.CRCPolynomial = 10;
 308:Src/main.c    ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 309:Src/main.c    ****   {
 310:Src/main.c    ****     Error_Handler();
 311:Src/main.c    ****   }
 312:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 2 */
 313:Src/main.c    **** 
 314:Src/main.c    ****   /* USER CODE END SPI5_Init 2 */
 315:Src/main.c    **** 
 316:Src/main.c    **** }
 317:Src/main.c    **** 
ARM GAS  /tmp/ccagqd8Q.s 			page 7


 318:Src/main.c    **** /**
 319:Src/main.c    ****   * @brief TIM6 Initialization Function
 320:Src/main.c    ****   * @param None
 321:Src/main.c    ****   * @retval None
 322:Src/main.c    ****   */
 323:Src/main.c    **** static void MX_TIM6_Init(void)
 324:Src/main.c    **** {
 325:Src/main.c    **** 
 326:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 0 */
 327:Src/main.c    **** 
 328:Src/main.c    ****   /* USER CODE END TIM6_Init 0 */
 329:Src/main.c    **** 
 330:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 331:Src/main.c    **** 
 332:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 1 */
 333:Src/main.c    **** 
 334:Src/main.c    ****   /* USER CODE END TIM6_Init 1 */
 335:Src/main.c    ****   htim6.Instance = TIM6;
 336:Src/main.c    ****   htim6.Init.Prescaler = 0;
 337:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 338:Src/main.c    ****   htim6.Init.Period = 1041;
 339:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 340:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 341:Src/main.c    ****   {
 342:Src/main.c    ****     Error_Handler();
 343:Src/main.c    ****   }
 344:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 345:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 346:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 347:Src/main.c    ****   {
 348:Src/main.c    ****     Error_Handler();
 349:Src/main.c    ****   }
 350:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 2 */
 351:Src/main.c    **** 
 352:Src/main.c    ****   /* USER CODE END TIM6_Init 2 */
 353:Src/main.c    **** 
 354:Src/main.c    **** }
 355:Src/main.c    **** 
 356:Src/main.c    **** /**
 357:Src/main.c    ****   * @brief USART1 Initialization Function
 358:Src/main.c    ****   * @param None
 359:Src/main.c    ****   * @retval None
 360:Src/main.c    ****   */
 361:Src/main.c    **** static void MX_USART1_UART_Init(void)
 362:Src/main.c    **** {
 363:Src/main.c    **** 
 364:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 365:Src/main.c    **** 
 366:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 367:Src/main.c    **** 
 368:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 369:Src/main.c    **** 
 370:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 371:Src/main.c    ****   huart1.Instance = USART1;
 372:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 373:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 374:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
ARM GAS  /tmp/ccagqd8Q.s 			page 8


 375:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 376:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 377:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 378:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 379:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 380:Src/main.c    ****   {
 381:Src/main.c    ****     Error_Handler();
 382:Src/main.c    ****   }
 383:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 384:Src/main.c    **** 
 385:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 386:Src/main.c    **** 
 387:Src/main.c    **** }
 388:Src/main.c    **** 
 389:Src/main.c    **** /**
 390:Src/main.c    ****   * @brief GPIO Initialization Function
 391:Src/main.c    ****   * @param None
 392:Src/main.c    ****   * @retval None
 393:Src/main.c    ****   */
 394:Src/main.c    **** static void MX_GPIO_Init(void)
 395:Src/main.c    **** {
  27              		.loc 1 395 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 56
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
  43 0004 8FB0     		sub	sp, sp, #60
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 96
 396:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  46              		.loc 1 396 0
  47 0006 0024     		movs	r4, #0
  48 0008 0994     		str	r4, [sp, #36]
  49 000a 0A94     		str	r4, [sp, #40]
  50 000c 0B94     		str	r4, [sp, #44]
  51 000e 0C94     		str	r4, [sp, #48]
  52 0010 0D94     		str	r4, [sp, #52]
  53              	.LBB2:
 397:Src/main.c    **** 
 398:Src/main.c    ****   /* GPIO Ports Clock Enable */
 399:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  54              		.loc 1 399 0
  55 0012 0194     		str	r4, [sp, #4]
  56 0014 AA4B     		ldr	r3, .L3
  57 0016 1A6B     		ldr	r2, [r3, #48]
  58 0018 42F00402 		orr	r2, r2, #4
ARM GAS  /tmp/ccagqd8Q.s 			page 9


  59 001c 1A63     		str	r2, [r3, #48]
  60 001e 1A6B     		ldr	r2, [r3, #48]
  61 0020 02F00402 		and	r2, r2, #4
  62 0024 0192     		str	r2, [sp, #4]
  63 0026 019A     		ldr	r2, [sp, #4]
  64              	.LBE2:
  65              	.LBB3:
 400:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  66              		.loc 1 400 0
  67 0028 0294     		str	r4, [sp, #8]
  68 002a 1A6B     		ldr	r2, [r3, #48]
  69 002c 42F02002 		orr	r2, r2, #32
  70 0030 1A63     		str	r2, [r3, #48]
  71 0032 1A6B     		ldr	r2, [r3, #48]
  72 0034 02F02002 		and	r2, r2, #32
  73 0038 0292     		str	r2, [sp, #8]
  74 003a 029A     		ldr	r2, [sp, #8]
  75              	.LBE3:
  76              	.LBB4:
 401:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  77              		.loc 1 401 0
  78 003c 0394     		str	r4, [sp, #12]
  79 003e 1A6B     		ldr	r2, [r3, #48]
  80 0040 42F08002 		orr	r2, r2, #128
  81 0044 1A63     		str	r2, [r3, #48]
  82 0046 1A6B     		ldr	r2, [r3, #48]
  83 0048 02F08002 		and	r2, r2, #128
  84 004c 0392     		str	r2, [sp, #12]
  85 004e 039A     		ldr	r2, [sp, #12]
  86              	.LBE4:
  87              	.LBB5:
 402:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  88              		.loc 1 402 0
  89 0050 0494     		str	r4, [sp, #16]
  90 0052 1A6B     		ldr	r2, [r3, #48]
  91 0054 42F00102 		orr	r2, r2, #1
  92 0058 1A63     		str	r2, [r3, #48]
  93 005a 1A6B     		ldr	r2, [r3, #48]
  94 005c 02F00102 		and	r2, r2, #1
  95 0060 0492     		str	r2, [sp, #16]
  96 0062 049A     		ldr	r2, [sp, #16]
  97              	.LBE5:
  98              	.LBB6:
 403:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  99              		.loc 1 403 0
 100 0064 0594     		str	r4, [sp, #20]
 101 0066 1A6B     		ldr	r2, [r3, #48]
 102 0068 42F00202 		orr	r2, r2, #2
 103 006c 1A63     		str	r2, [r3, #48]
 104 006e 1A6B     		ldr	r2, [r3, #48]
 105 0070 02F00202 		and	r2, r2, #2
 106 0074 0592     		str	r2, [sp, #20]
 107 0076 059A     		ldr	r2, [sp, #20]
 108              	.LBE6:
 109              	.LBB7:
 404:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 110              		.loc 1 404 0
ARM GAS  /tmp/ccagqd8Q.s 			page 10


 111 0078 0694     		str	r4, [sp, #24]
 112 007a 1A6B     		ldr	r2, [r3, #48]
 113 007c 42F04002 		orr	r2, r2, #64
 114 0080 1A63     		str	r2, [r3, #48]
 115 0082 1A6B     		ldr	r2, [r3, #48]
 116 0084 02F04002 		and	r2, r2, #64
 117 0088 0692     		str	r2, [sp, #24]
 118 008a 069A     		ldr	r2, [sp, #24]
 119              	.LBE7:
 120              	.LBB8:
 405:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 121              		.loc 1 405 0
 122 008c 0794     		str	r4, [sp, #28]
 123 008e 1A6B     		ldr	r2, [r3, #48]
 124 0090 42F01002 		orr	r2, r2, #16
 125 0094 1A63     		str	r2, [r3, #48]
 126 0096 1A6B     		ldr	r2, [r3, #48]
 127 0098 02F01002 		and	r2, r2, #16
 128 009c 0792     		str	r2, [sp, #28]
 129 009e 079A     		ldr	r2, [sp, #28]
 130              	.LBE8:
 131              	.LBB9:
 406:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 132              		.loc 1 406 0
 133 00a0 0894     		str	r4, [sp, #32]
 134 00a2 1A6B     		ldr	r2, [r3, #48]
 135 00a4 42F00802 		orr	r2, r2, #8
 136 00a8 1A63     		str	r2, [r3, #48]
 137 00aa 1B6B     		ldr	r3, [r3, #48]
 138 00ac 03F00803 		and	r3, r3, #8
 139 00b0 0893     		str	r3, [sp, #32]
 140 00b2 089B     		ldr	r3, [sp, #32]
 141              	.LBE9:
 407:Src/main.c    **** 
 408:Src/main.c    ****   /*Configure GPIO pin Output Level */
 409:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin, GPIO_PIN_RESET);
 142              		.loc 1 409 0
 143 00b4 2246     		mov	r2, r4
 144 00b6 1621     		movs	r1, #22
 145 00b8 8248     		ldr	r0, .L3+4
 146 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 147              	.LVL0:
 410:Src/main.c    **** 
 411:Src/main.c    ****   /*Configure GPIO pin Output Level */
 412:Src/main.c    ****   HAL_GPIO_WritePin(ACP_RST_GPIO_Port, ACP_RST_Pin, GPIO_PIN_RESET);
 148              		.loc 1 412 0
 149 00be 2246     		mov	r2, r4
 150 00c0 8021     		movs	r1, #128
 151 00c2 8148     		ldr	r0, .L3+8
 152 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 153              	.LVL1:
 413:Src/main.c    **** 
 414:Src/main.c    ****   /*Configure GPIO pin Output Level */
 415:Src/main.c    ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15, GPIO_PIN_RESET);
 154              		.loc 1 415 0
 155 00c8 DFF810A2 		ldr	r10, .L3+28
 156 00cc 2246     		mov	r2, r4
ARM GAS  /tmp/ccagqd8Q.s 			page 11


 157 00ce 4FF46041 		mov	r1, #57344
 158 00d2 5046     		mov	r0, r10
 159 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 160              	.LVL2:
 416:Src/main.c    **** 
 417:Src/main.c    ****   /*Configure GPIO pin Output Level */
 418:Src/main.c    ****   HAL_GPIO_WritePin(GPIOG, GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD4_Pin, GPIO_PIN_RESET);
 161              		.loc 1 418 0
 162 00d8 2246     		mov	r2, r4
 163 00da 46F20301 		movw	r1, #24579
 164 00de 7B48     		ldr	r0, .L3+12
 165 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 166              	.LVL3:
 419:Src/main.c    **** 
 420:Src/main.c    ****   /*Configure GPIO pin Output Level */
 421:Src/main.c    ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 167              		.loc 1 421 0
 168 00e4 2246     		mov	r2, r4
 169 00e6 4FF68071 		movw	r1, #65408
 170 00ea 7948     		ldr	r0, .L3+16
 171 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 172              	.LVL4:
 422:Src/main.c    ****                           |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
 423:Src/main.c    ****                           |GPIO_PIN_15, GPIO_PIN_RESET);
 424:Src/main.c    **** 
 425:Src/main.c    ****   /*Configure GPIO pin Output Level */
 426:Src/main.c    ****   HAL_GPIO_WritePin(GPIOD, RDX_Pin|WRX_DCX_Pin, GPIO_PIN_RESET);
 173              		.loc 1 426 0
 174 00f0 2246     		mov	r2, r4
 175 00f2 4FF44051 		mov	r1, #12288
 176 00f6 7748     		ldr	r0, .L3+20
 177 00f8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 178              	.LVL5:
 427:Src/main.c    **** 
 428:Src/main.c    ****   /*Configure GPIO pins : A0_Pin A1_Pin A2_Pin A3_Pin 
 429:Src/main.c    ****                            A4_Pin A5_Pin SDNRAS_Pin A6_Pin */
 430:Src/main.c    ****   GPIO_InitStruct.Pin = A0_Pin|A1_Pin|A2_Pin|A3_Pin 
 179              		.loc 1 430 0
 180 00fc 41F63F03 		movw	r3, #6207
 181 0100 0993     		str	r3, [sp, #36]
 431:Src/main.c    ****                           |A4_Pin|A5_Pin|SDNRAS_Pin|A6_Pin;
 432:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 182              		.loc 1 432 0
 183 0102 0225     		movs	r5, #2
 184 0104 0A95     		str	r5, [sp, #40]
 433:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 185              		.loc 1 433 0
 186 0106 0B94     		str	r4, [sp, #44]
 434:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 187              		.loc 1 434 0
 188 0108 0327     		movs	r7, #3
 189 010a 0C97     		str	r7, [sp, #48]
 435:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 190              		.loc 1 435 0
 191 010c 4FF00C08 		mov	r8, #12
 192 0110 CDF83480 		str	r8, [sp, #52]
 436:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
ARM GAS  /tmp/ccagqd8Q.s 			page 12


 193              		.loc 1 436 0
 194 0114 09A9     		add	r1, sp, #36
 195 0116 5046     		mov	r0, r10
 196 0118 FFF7FEFF 		bl	HAL_GPIO_Init
 197              	.LVL6:
 437:Src/main.c    **** 
 438:Src/main.c    ****   /*Configure GPIO pin : ENABLE_Pin */
 439:Src/main.c    ****   GPIO_InitStruct.Pin = ENABLE_Pin;
 198              		.loc 1 439 0
 199 011c 4FF48063 		mov	r3, #1024
 200 0120 0993     		str	r3, [sp, #36]
 440:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 201              		.loc 1 440 0
 202 0122 0A95     		str	r5, [sp, #40]
 441:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 203              		.loc 1 441 0
 204 0124 0B94     		str	r4, [sp, #44]
 442:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 205              		.loc 1 442 0
 206 0126 0C94     		str	r4, [sp, #48]
 443:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 207              		.loc 1 443 0
 208 0128 4FF00E09 		mov	r9, #14
 209 012c CDF83490 		str	r9, [sp, #52]
 444:Src/main.c    ****   HAL_GPIO_Init(ENABLE_GPIO_Port, &GPIO_InitStruct);
 210              		.loc 1 444 0
 211 0130 09A9     		add	r1, sp, #36
 212 0132 5046     		mov	r0, r10
 213 0134 FFF7FEFF 		bl	HAL_GPIO_Init
 214              	.LVL7:
 445:Src/main.c    **** 
 446:Src/main.c    ****   /*Configure GPIO pin : SDNWE_Pin */
 447:Src/main.c    ****   GPIO_InitStruct.Pin = SDNWE_Pin;
 215              		.loc 1 447 0
 216 0138 0126     		movs	r6, #1
 217 013a 0996     		str	r6, [sp, #36]
 448:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 218              		.loc 1 448 0
 219 013c 0A95     		str	r5, [sp, #40]
 449:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 220              		.loc 1 449 0
 221 013e 0B94     		str	r4, [sp, #44]
 450:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 222              		.loc 1 450 0
 223 0140 0C97     		str	r7, [sp, #48]
 451:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 224              		.loc 1 451 0
 225 0142 CDF83480 		str	r8, [sp, #52]
 452:Src/main.c    ****   HAL_GPIO_Init(SDNWE_GPIO_Port, &GPIO_InitStruct);
 226              		.loc 1 452 0
 227 0146 09A9     		add	r1, sp, #36
 228 0148 5E48     		ldr	r0, .L3+4
 229 014a FFF7FEFF 		bl	HAL_GPIO_Init
 230              	.LVL8:
 453:Src/main.c    **** 
 454:Src/main.c    ****   /*Configure GPIO pins : NCS_MEMS_SPI_Pin CSX_Pin OTG_FS_PSO_Pin */
 455:Src/main.c    ****   GPIO_InitStruct.Pin = NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin;
ARM GAS  /tmp/ccagqd8Q.s 			page 13


 231              		.loc 1 455 0
 232 014e 1623     		movs	r3, #22
 233 0150 0993     		str	r3, [sp, #36]
 456:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 234              		.loc 1 456 0
 235 0152 0A96     		str	r6, [sp, #40]
 457:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 236              		.loc 1 457 0
 237 0154 0B94     		str	r4, [sp, #44]
 458:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 238              		.loc 1 458 0
 239 0156 0C94     		str	r4, [sp, #48]
 459:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 240              		.loc 1 459 0
 241 0158 09A9     		add	r1, sp, #36
 242 015a 5A48     		ldr	r0, .L3+4
 243 015c FFF7FEFF 		bl	HAL_GPIO_Init
 244              	.LVL9:
 460:Src/main.c    **** 
 461:Src/main.c    ****   /*Configure GPIO pins : B1_Pin MEMS_INT1_Pin MEMS_INT2_Pin TP_INT1_Pin */
 462:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin|MEMS_INT1_Pin|MEMS_INT2_Pin|TP_INT1_Pin;
 245              		.loc 1 462 0
 246 0160 48F20703 		movw	r3, #32775
 247 0164 0993     		str	r3, [sp, #36]
 463:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 248              		.loc 1 463 0
 249 0166 DFF878B1 		ldr	fp, .L3+32
 250 016a CDF828B0 		str	fp, [sp, #40]
 464:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 251              		.loc 1 464 0
 252 016e 0B94     		str	r4, [sp, #44]
 465:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 253              		.loc 1 465 0
 254 0170 09A9     		add	r1, sp, #36
 255 0172 5548     		ldr	r0, .L3+8
 256 0174 FFF7FEFF 		bl	HAL_GPIO_Init
 257              	.LVL10:
 466:Src/main.c    **** 
 467:Src/main.c    ****   /*Configure GPIO pins : B5_Pin VSYNC_Pin G2_Pin R4_Pin 
 468:Src/main.c    ****                            R5_Pin */
 469:Src/main.c    ****   GPIO_InitStruct.Pin = B5_Pin|VSYNC_Pin|G2_Pin|R4_Pin 
 258              		.loc 1 469 0
 259 0178 41F65803 		movw	r3, #6232
 260 017c 0993     		str	r3, [sp, #36]
 470:Src/main.c    ****                           |R5_Pin;
 471:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 261              		.loc 1 471 0
 262 017e 0A95     		str	r5, [sp, #40]
 472:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 263              		.loc 1 472 0
 264 0180 0B94     		str	r4, [sp, #44]
 473:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 265              		.loc 1 473 0
 266 0182 0C94     		str	r4, [sp, #48]
 474:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 267              		.loc 1 474 0
 268 0184 CDF83490 		str	r9, [sp, #52]
ARM GAS  /tmp/ccagqd8Q.s 			page 14


 475:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 269              		.loc 1 475 0
 270 0188 09A9     		add	r1, sp, #36
 271 018a 4F48     		ldr	r0, .L3+8
 272 018c FFF7FEFF 		bl	HAL_GPIO_Init
 273              	.LVL11:
 476:Src/main.c    **** 
 477:Src/main.c    ****   /*Configure GPIO pin : ACP_RST_Pin */
 478:Src/main.c    ****   GPIO_InitStruct.Pin = ACP_RST_Pin;
 274              		.loc 1 478 0
 275 0190 8023     		movs	r3, #128
 276 0192 0993     		str	r3, [sp, #36]
 479:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 277              		.loc 1 479 0
 278 0194 0A96     		str	r6, [sp, #40]
 480:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 279              		.loc 1 480 0
 280 0196 0B94     		str	r4, [sp, #44]
 481:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 281              		.loc 1 481 0
 282 0198 0C94     		str	r4, [sp, #48]
 482:Src/main.c    ****   HAL_GPIO_Init(ACP_RST_GPIO_Port, &GPIO_InitStruct);
 283              		.loc 1 482 0
 284 019a 09A9     		add	r1, sp, #36
 285 019c 4A48     		ldr	r0, .L3+8
 286 019e FFF7FEFF 		bl	HAL_GPIO_Init
 287              	.LVL12:
 483:Src/main.c    **** 
 484:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_OC_Pin */
 485:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_OC_Pin;
 288              		.loc 1 485 0
 289 01a2 2023     		movs	r3, #32
 290 01a4 0993     		str	r3, [sp, #36]
 486:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 291              		.loc 1 486 0
 292 01a6 CDF828B0 		str	fp, [sp, #40]
 487:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 293              		.loc 1 487 0
 294 01aa 0B94     		str	r4, [sp, #44]
 488:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_OC_GPIO_Port, &GPIO_InitStruct);
 295              		.loc 1 488 0
 296 01ac 09A9     		add	r1, sp, #36
 297 01ae 4548     		ldr	r0, .L3+4
 298 01b0 FFF7FEFF 		bl	HAL_GPIO_Init
 299              	.LVL13:
 489:Src/main.c    **** 
 490:Src/main.c    ****   /*Configure GPIO pins : R3_Pin R6_Pin */
 491:Src/main.c    ****   GPIO_InitStruct.Pin = R3_Pin|R6_Pin;
 300              		.loc 1 491 0
 301 01b4 0997     		str	r7, [sp, #36]
 492:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 302              		.loc 1 492 0
 303 01b6 0A95     		str	r5, [sp, #40]
 493:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 304              		.loc 1 493 0
 305 01b8 0B94     		str	r4, [sp, #44]
 494:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  /tmp/ccagqd8Q.s 			page 15


 306              		.loc 1 494 0
 307 01ba 0C94     		str	r4, [sp, #48]
 495:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 308              		.loc 1 495 0
 309 01bc 0923     		movs	r3, #9
 310 01be 0D93     		str	r3, [sp, #52]
 496:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 311              		.loc 1 496 0
 312 01c0 09A9     		add	r1, sp, #36
 313 01c2 4548     		ldr	r0, .L3+24
 314 01c4 FFF7FEFF 		bl	HAL_GPIO_Init
 315              	.LVL14:
 497:Src/main.c    **** 
 498:Src/main.c    ****   /*Configure GPIO pin : BOOT1_Pin */
 499:Src/main.c    ****   GPIO_InitStruct.Pin = BOOT1_Pin;
 316              		.loc 1 499 0
 317 01c8 4FF0040B 		mov	fp, #4
 318 01cc CDF824B0 		str	fp, [sp, #36]
 500:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 319              		.loc 1 500 0
 320 01d0 0A94     		str	r4, [sp, #40]
 501:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 321              		.loc 1 501 0
 322 01d2 0B94     		str	r4, [sp, #44]
 502:Src/main.c    ****   HAL_GPIO_Init(BOOT1_GPIO_Port, &GPIO_InitStruct);
 323              		.loc 1 502 0
 324 01d4 09A9     		add	r1, sp, #36
 325 01d6 4048     		ldr	r0, .L3+24
 326 01d8 FFF7FEFF 		bl	HAL_GPIO_Init
 327              	.LVL15:
 503:Src/main.c    **** 
 504:Src/main.c    ****   /*Configure GPIO pins : PF13 PF14 PF15 */
 505:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 328              		.loc 1 505 0
 329 01dc 4FF46043 		mov	r3, #57344
 330 01e0 0993     		str	r3, [sp, #36]
 506:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 331              		.loc 1 506 0
 332 01e2 0A96     		str	r6, [sp, #40]
 507:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 333              		.loc 1 507 0
 334 01e4 0B94     		str	r4, [sp, #44]
 508:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 335              		.loc 1 508 0
 336 01e6 0C94     		str	r4, [sp, #48]
 509:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 337              		.loc 1 509 0
 338 01e8 09A9     		add	r1, sp, #36
 339 01ea 5046     		mov	r0, r10
 340 01ec FFF7FEFF 		bl	HAL_GPIO_Init
 341              	.LVL16:
 510:Src/main.c    **** 
 511:Src/main.c    ****   /*Configure GPIO pins : PG0 PG1 LD3_Pin LD4_Pin */
 512:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD4_Pin;
 342              		.loc 1 512 0
 343 01f0 46F20303 		movw	r3, #24579
 344 01f4 0993     		str	r3, [sp, #36]
ARM GAS  /tmp/ccagqd8Q.s 			page 16


 513:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 345              		.loc 1 513 0
 346 01f6 0A96     		str	r6, [sp, #40]
 514:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 347              		.loc 1 514 0
 348 01f8 0B94     		str	r4, [sp, #44]
 515:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 349              		.loc 1 515 0
 350 01fa 0C94     		str	r4, [sp, #48]
 516:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 351              		.loc 1 516 0
 352 01fc 09A9     		add	r1, sp, #36
 353 01fe 3348     		ldr	r0, .L3+12
 354 0200 FFF7FEFF 		bl	HAL_GPIO_Init
 355              	.LVL17:
 517:Src/main.c    **** 
 518:Src/main.c    ****   /*Configure GPIO pins : PE7 PE8 PE9 PE10 
 519:Src/main.c    ****                            PE11 PE12 PE13 PE14 
 520:Src/main.c    ****                            PE15 */
 521:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 356              		.loc 1 521 0
 357 0204 4FF68073 		movw	r3, #65408
 358 0208 0993     		str	r3, [sp, #36]
 522:Src/main.c    ****                           |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
 523:Src/main.c    ****                           |GPIO_PIN_15;
 524:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 359              		.loc 1 524 0
 360 020a 0A96     		str	r6, [sp, #40]
 525:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 361              		.loc 1 525 0
 362 020c 0B94     		str	r4, [sp, #44]
 526:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 363              		.loc 1 526 0
 364 020e 0C94     		str	r4, [sp, #48]
 527:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 365              		.loc 1 527 0
 366 0210 09A9     		add	r1, sp, #36
 367 0212 2F48     		ldr	r0, .L3+16
 368 0214 FFF7FEFF 		bl	HAL_GPIO_Init
 369              	.LVL18:
 528:Src/main.c    **** 
 529:Src/main.c    ****   /*Configure GPIO pins : G4_Pin G5_Pin B6_Pin B7_Pin */
 530:Src/main.c    ****   GPIO_InitStruct.Pin = G4_Pin|G5_Pin|B6_Pin|B7_Pin;
 370              		.loc 1 530 0
 371 0218 4FF47063 		mov	r3, #3840
 372 021c 0993     		str	r3, [sp, #36]
 531:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 373              		.loc 1 531 0
 374 021e 0A95     		str	r5, [sp, #40]
 532:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 375              		.loc 1 532 0
 376 0220 0B94     		str	r4, [sp, #44]
 533:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 377              		.loc 1 533 0
 378 0222 0C94     		str	r4, [sp, #48]
 534:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 379              		.loc 1 534 0
ARM GAS  /tmp/ccagqd8Q.s 			page 17


 380 0224 CDF83490 		str	r9, [sp, #52]
 535:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 381              		.loc 1 535 0
 382 0228 09A9     		add	r1, sp, #36
 383 022a 2B48     		ldr	r0, .L3+24
 384 022c FFF7FEFF 		bl	HAL_GPIO_Init
 385              	.LVL19:
 536:Src/main.c    **** 
 537:Src/main.c    ****   /*Configure GPIO pins : OTG_HS_ID_Pin OTG_HS_DM_Pin OTG_HS_DP_Pin */
 538:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_HS_ID_Pin|OTG_HS_DM_Pin|OTG_HS_DP_Pin;
 386              		.loc 1 538 0
 387 0230 4FF45043 		mov	r3, #53248
 388 0234 0993     		str	r3, [sp, #36]
 539:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 389              		.loc 1 539 0
 390 0236 0A95     		str	r5, [sp, #40]
 540:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 391              		.loc 1 540 0
 392 0238 0B94     		str	r4, [sp, #44]
 541:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 393              		.loc 1 541 0
 394 023a 0C94     		str	r4, [sp, #48]
 542:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;
 395              		.loc 1 542 0
 396 023c CDF83480 		str	r8, [sp, #52]
 543:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 397              		.loc 1 543 0
 398 0240 09A9     		add	r1, sp, #36
 399 0242 2548     		ldr	r0, .L3+24
 400 0244 FFF7FEFF 		bl	HAL_GPIO_Init
 401              	.LVL20:
 544:Src/main.c    **** 
 545:Src/main.c    ****   /*Configure GPIO pin : VBUS_HS_Pin */
 546:Src/main.c    **** 
 547:Src/main.c    ****   GPIO_InitStruct.Pin = VBUS_HS_Pin;
 402              		.loc 1 547 0
 403 0248 4FF40053 		mov	r3, #8192
 404 024c 0993     		str	r3, [sp, #36]
 548:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 405              		.loc 1 548 0
 406 024e 0A94     		str	r4, [sp, #40]
 549:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 407              		.loc 1 549 0
 408 0250 0B94     		str	r4, [sp, #44]
 550:Src/main.c    ****   HAL_GPIO_Init(VBUS_HS_GPIO_Port, &GPIO_InitStruct);
 409              		.loc 1 550 0
 410 0252 09A9     		add	r1, sp, #36
 411 0254 2048     		ldr	r0, .L3+24
 412 0256 FFF7FEFF 		bl	HAL_GPIO_Init
 413              	.LVL21:
 551:Src/main.c    **** 
 552:Src/main.c    ****   /*Configure GPIO pins : D13_Pin D14_Pin D15_Pin D0_Pin 
 553:Src/main.c    ****                            D1_Pin D2_Pin D3_Pin */
 554:Src/main.c    ****   GPIO_InitStruct.Pin = D13_Pin|D14_Pin|D15_Pin|D0_Pin 
 414              		.loc 1 554 0
 415 025a 4CF20373 		movw	r3, #50947
 416 025e 0993     		str	r3, [sp, #36]
ARM GAS  /tmp/ccagqd8Q.s 			page 18


 555:Src/main.c    ****                           |D1_Pin|D2_Pin|D3_Pin;
 556:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 417              		.loc 1 556 0
 418 0260 0A95     		str	r5, [sp, #40]
 557:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 419              		.loc 1 557 0
 420 0262 0B94     		str	r4, [sp, #44]
 558:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 421              		.loc 1 558 0
 422 0264 0C97     		str	r7, [sp, #48]
 559:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 423              		.loc 1 559 0
 424 0266 CDF83480 		str	r8, [sp, #52]
 560:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 425              		.loc 1 560 0
 426 026a 09A9     		add	r1, sp, #36
 427 026c 1948     		ldr	r0, .L3+20
 428 026e FFF7FEFF 		bl	HAL_GPIO_Init
 429              	.LVL22:
 561:Src/main.c    **** 
 562:Src/main.c    ****   /*Configure GPIO pin : TE_Pin */
 563:Src/main.c    ****   GPIO_InitStruct.Pin = TE_Pin;
 430              		.loc 1 563 0
 431 0272 4FF40063 		mov	r3, #2048
 432 0276 0993     		str	r3, [sp, #36]
 564:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 433              		.loc 1 564 0
 434 0278 0A94     		str	r4, [sp, #40]
 565:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 435              		.loc 1 565 0
 436 027a 0B94     		str	r4, [sp, #44]
 566:Src/main.c    ****   HAL_GPIO_Init(TE_GPIO_Port, &GPIO_InitStruct);
 437              		.loc 1 566 0
 438 027c 09A9     		add	r1, sp, #36
 439 027e 1548     		ldr	r0, .L3+20
 440 0280 FFF7FEFF 		bl	HAL_GPIO_Init
 441              	.LVL23:
 567:Src/main.c    **** 
 568:Src/main.c    ****   /*Configure GPIO pins : RDX_Pin WRX_DCX_Pin */
 569:Src/main.c    ****   GPIO_InitStruct.Pin = RDX_Pin|WRX_DCX_Pin;
 442              		.loc 1 569 0
 443 0284 4FF44053 		mov	r3, #12288
 444 0288 0993     		str	r3, [sp, #36]
 570:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 445              		.loc 1 570 0
 446 028a 0A96     		str	r6, [sp, #40]
 571:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 447              		.loc 1 571 0
 448 028c 0B94     		str	r4, [sp, #44]
 572:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 449              		.loc 1 572 0
 450 028e 0C94     		str	r4, [sp, #48]
 573:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 451              		.loc 1 573 0
 452 0290 09A9     		add	r1, sp, #36
 453 0292 1048     		ldr	r0, .L3+20
 454 0294 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/ccagqd8Q.s 			page 19


 455              	.LVL24:
 574:Src/main.c    **** 
 575:Src/main.c    ****   /*Configure GPIO pins : BA0_Pin BA1_Pin SDCLK_Pin SDNCAS_Pin */
 576:Src/main.c    ****   GPIO_InitStruct.Pin = BA0_Pin|BA1_Pin|SDCLK_Pin|SDNCAS_Pin;
 456              		.loc 1 576 0
 457 0298 48F23013 		movw	r3, #33072
 458 029c 0993     		str	r3, [sp, #36]
 577:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 459              		.loc 1 577 0
 460 029e 0A95     		str	r5, [sp, #40]
 578:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 461              		.loc 1 578 0
 462 02a0 0B94     		str	r4, [sp, #44]
 579:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 463              		.loc 1 579 0
 464 02a2 0C97     		str	r7, [sp, #48]
 580:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 465              		.loc 1 580 0
 466 02a4 CDF83480 		str	r8, [sp, #52]
 581:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 467              		.loc 1 581 0
 468 02a8 09A9     		add	r1, sp, #36
 469 02aa 0848     		ldr	r0, .L3+12
 470 02ac FFF7FEFF 		bl	HAL_GPIO_Init
 471              	.LVL25:
 582:Src/main.c    **** 
 583:Src/main.c    ****   /*Configure GPIO pins : R7_Pin DOTCLK_Pin B3_Pin */
 584:Src/main.c    ****   GPIO_InitStruct.Pin = R7_Pin|DOTCLK_Pin|B3_Pin;
 472              		.loc 1 584 0
 473 02b0 4FF40C63 		mov	r3, #2240
 474 02b4 0993     		str	r3, [sp, #36]
 585:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 475              		.loc 1 585 0
 476 02b6 0A95     		str	r5, [sp, #40]
 586:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 477              		.loc 1 586 0
 478 02b8 0B94     		str	r4, [sp, #44]
 587:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 479              		.loc 1 587 0
 480 02ba 0C94     		str	r4, [sp, #48]
 481 02bc 12E0     		b	.L4
 482              	.L5:
 483 02be 00BF     		.align	2
 484              	.L3:
 485 02c0 00380240 		.word	1073887232
 486 02c4 00080240 		.word	1073874944
 487 02c8 00000240 		.word	1073872896
 488 02cc 00180240 		.word	1073879040
 489 02d0 00100240 		.word	1073876992
 490 02d4 000C0240 		.word	1073875968
 491 02d8 00040240 		.word	1073873920
 492 02dc 00140240 		.word	1073878016
 493 02e0 00001210 		.word	269615104
 494              	.L4:
 588:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 495              		.loc 1 588 0
 496 02e4 CDF83490 		str	r9, [sp, #52]
ARM GAS  /tmp/ccagqd8Q.s 			page 20


 589:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 497              		.loc 1 589 0
 498 02e8 09A9     		add	r1, sp, #36
 499 02ea 2D48     		ldr	r0, .L6
 500 02ec FFF7FEFF 		bl	HAL_GPIO_Init
 501              	.LVL26:
 590:Src/main.c    **** 
 591:Src/main.c    ****   /*Configure GPIO pins : HSYNC_Pin G6_Pin R2_Pin */
 592:Src/main.c    ****   GPIO_InitStruct.Pin = HSYNC_Pin|G6_Pin|R2_Pin;
 502              		.loc 1 592 0
 503 02f0 4FF49863 		mov	r3, #1216
 504 02f4 0993     		str	r3, [sp, #36]
 593:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 505              		.loc 1 593 0
 506 02f6 0A95     		str	r5, [sp, #40]
 594:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 507              		.loc 1 594 0
 508 02f8 0B94     		str	r4, [sp, #44]
 595:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 509              		.loc 1 595 0
 510 02fa 0C94     		str	r4, [sp, #48]
 596:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 511              		.loc 1 596 0
 512 02fc CDF83490 		str	r9, [sp, #52]
 597:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 513              		.loc 1 597 0
 514 0300 09A9     		add	r1, sp, #36
 515 0302 2848     		ldr	r0, .L6+4
 516 0304 FFF7FEFF 		bl	HAL_GPIO_Init
 517              	.LVL27:
 598:Src/main.c    **** 
 599:Src/main.c    ****   /*Configure GPIO pin : I2C3_SDA_Pin */
 600:Src/main.c    ****   GPIO_InitStruct.Pin = I2C3_SDA_Pin;
 518              		.loc 1 600 0
 519 0308 4FF40073 		mov	r3, #512
 520 030c 0993     		str	r3, [sp, #36]
 601:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 521              		.loc 1 601 0
 522 030e 4FF0120A 		mov	r10, #18
 523 0312 CDF828A0 		str	r10, [sp, #40]
 602:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 524              		.loc 1 602 0
 525 0316 0B96     		str	r6, [sp, #44]
 603:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 526              		.loc 1 603 0
 527 0318 0C94     		str	r4, [sp, #48]
 604:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 528              		.loc 1 604 0
 529 031a CDF834B0 		str	fp, [sp, #52]
 605:Src/main.c    ****   HAL_GPIO_Init(I2C3_SDA_GPIO_Port, &GPIO_InitStruct);
 530              		.loc 1 605 0
 531 031e 09A9     		add	r1, sp, #36
 532 0320 2048     		ldr	r0, .L6+4
 533 0322 FFF7FEFF 		bl	HAL_GPIO_Init
 534              	.LVL28:
 606:Src/main.c    **** 
 607:Src/main.c    ****   /*Configure GPIO pin : I2C3_SCL_Pin */
ARM GAS  /tmp/ccagqd8Q.s 			page 21


 608:Src/main.c    ****   GPIO_InitStruct.Pin = I2C3_SCL_Pin;
 535              		.loc 1 608 0
 536 0326 4FF48073 		mov	r3, #256
 537 032a 0993     		str	r3, [sp, #36]
 609:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 538              		.loc 1 609 0
 539 032c CDF828A0 		str	r10, [sp, #40]
 610:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 540              		.loc 1 610 0
 541 0330 0B96     		str	r6, [sp, #44]
 611:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 542              		.loc 1 611 0
 543 0332 0C94     		str	r4, [sp, #48]
 612:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 544              		.loc 1 612 0
 545 0334 CDF834B0 		str	fp, [sp, #52]
 613:Src/main.c    ****   HAL_GPIO_Init(I2C3_SCL_GPIO_Port, &GPIO_InitStruct);
 546              		.loc 1 613 0
 547 0338 09A9     		add	r1, sp, #36
 548 033a 1B48     		ldr	r0, .L6+8
 549 033c FFF7FEFF 		bl	HAL_GPIO_Init
 550              	.LVL29:
 614:Src/main.c    **** 
 615:Src/main.c    ****   /*Configure GPIO pins : G7_Pin B2_Pin */
 616:Src/main.c    ****   GPIO_InitStruct.Pin = G7_Pin|B2_Pin;
 551              		.loc 1 616 0
 552 0340 4823     		movs	r3, #72
 553 0342 0993     		str	r3, [sp, #36]
 617:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 554              		.loc 1 617 0
 555 0344 0A95     		str	r5, [sp, #40]
 618:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 556              		.loc 1 618 0
 557 0346 0B94     		str	r4, [sp, #44]
 619:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 558              		.loc 1 619 0
 559 0348 0C94     		str	r4, [sp, #48]
 620:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 560              		.loc 1 620 0
 561 034a CDF83490 		str	r9, [sp, #52]
 621:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 562              		.loc 1 621 0
 563 034e 09A9     		add	r1, sp, #36
 564 0350 1648     		ldr	r0, .L6+12
 565 0352 FFF7FEFF 		bl	HAL_GPIO_Init
 566              	.LVL30:
 622:Src/main.c    **** 
 623:Src/main.c    ****   /*Configure GPIO pins : G3_Pin B4_Pin */
 624:Src/main.c    ****   GPIO_InitStruct.Pin = G3_Pin|B4_Pin;
 567              		.loc 1 624 0
 568 0356 4FF4A053 		mov	r3, #5120
 569 035a 0993     		str	r3, [sp, #36]
 625:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 570              		.loc 1 625 0
 571 035c 0A95     		str	r5, [sp, #40]
 626:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 572              		.loc 1 626 0
ARM GAS  /tmp/ccagqd8Q.s 			page 22


 573 035e 0B94     		str	r4, [sp, #44]
 627:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 574              		.loc 1 627 0
 575 0360 0C94     		str	r4, [sp, #48]
 628:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 576              		.loc 1 628 0
 577 0362 0923     		movs	r3, #9
 578 0364 0D93     		str	r3, [sp, #52]
 629:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 579              		.loc 1 629 0
 580 0366 09A9     		add	r1, sp, #36
 581 0368 0D48     		ldr	r0, .L6
 582 036a FFF7FEFF 		bl	HAL_GPIO_Init
 583              	.LVL31:
 630:Src/main.c    **** 
 631:Src/main.c    ****   /*Configure GPIO pins : SDCKE1_Pin SDNE1_Pin */
 632:Src/main.c    ****   GPIO_InitStruct.Pin = SDCKE1_Pin|SDNE1_Pin;
 584              		.loc 1 632 0
 585 036e 6023     		movs	r3, #96
 586 0370 0993     		str	r3, [sp, #36]
 633:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 587              		.loc 1 633 0
 588 0372 0A95     		str	r5, [sp, #40]
 634:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 589              		.loc 1 634 0
 590 0374 0B94     		str	r4, [sp, #44]
 635:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 591              		.loc 1 635 0
 592 0376 0C97     		str	r7, [sp, #48]
 636:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 593              		.loc 1 636 0
 594 0378 CDF83480 		str	r8, [sp, #52]
 637:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 595              		.loc 1 637 0
 596 037c 09A9     		add	r1, sp, #36
 597 037e 0C48     		ldr	r0, .L6+16
 598 0380 FFF7FEFF 		bl	HAL_GPIO_Init
 599              	.LVL32:
 638:Src/main.c    **** 
 639:Src/main.c    ****   /*Configure GPIO pins : NBL0_Pin NBL1_Pin */
 640:Src/main.c    ****   GPIO_InitStruct.Pin = NBL0_Pin|NBL1_Pin;
 600              		.loc 1 640 0
 601 0384 0997     		str	r7, [sp, #36]
 641:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 602              		.loc 1 641 0
 603 0386 0A95     		str	r5, [sp, #40]
 642:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 604              		.loc 1 642 0
 605 0388 0B94     		str	r4, [sp, #44]
 643:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 606              		.loc 1 643 0
 607 038a 0C97     		str	r7, [sp, #48]
 644:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 608              		.loc 1 644 0
 609 038c CDF83480 		str	r8, [sp, #52]
 645:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 610              		.loc 1 645 0
ARM GAS  /tmp/ccagqd8Q.s 			page 23


 611 0390 09A9     		add	r1, sp, #36
 612 0392 0848     		ldr	r0, .L6+20
 613 0394 FFF7FEFF 		bl	HAL_GPIO_Init
 614              	.LVL33:
 646:Src/main.c    **** 
 647:Src/main.c    **** }
 615              		.loc 1 647 0
 616 0398 0FB0     		add	sp, sp, #60
 617              	.LCFI2:
 618              		.cfi_def_cfa_offset 36
 619              		@ sp needed
 620 039a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 621              	.L7:
 622 039e 00BF     		.align	2
 623              	.L6:
 624 03a0 00180240 		.word	1073879040
 625 03a4 00080240 		.word	1073874944
 626 03a8 00000240 		.word	1073872896
 627 03ac 000C0240 		.word	1073875968
 628 03b0 00040240 		.word	1073873920
 629 03b4 00100240 		.word	1073876992
 630              		.cfi_endproc
 631              	.LFE136:
 633              		.section	.text.MX_SPI5_Init,"ax",%progbits
 634              		.align	1
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 638              		.fpu fpv4-sp-d16
 640              	MX_SPI5_Init:
 641              	.LFB133:
 287:Src/main.c    **** {
 642              		.loc 1 287 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646 0000 08B5     		push	{r3, lr}
 647              	.LCFI3:
 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 3, -8
 650              		.cfi_offset 14, -4
 297:Src/main.c    ****   hspi5.Instance = SPI5;
 651              		.loc 1 297 0
 652 0002 0948     		ldr	r0, .L10
 653 0004 094B     		ldr	r3, .L10+4
 654 0006 0360     		str	r3, [r0]
 298:Src/main.c    ****   hspi5.Init.Mode = SPI_MODE_SLAVE;
 655              		.loc 1 298 0
 656 0008 0023     		movs	r3, #0
 657 000a 4360     		str	r3, [r0, #4]
 299:Src/main.c    ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 658              		.loc 1 299 0
 659 000c 8360     		str	r3, [r0, #8]
 300:Src/main.c    ****   hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 660              		.loc 1 300 0
 661 000e C360     		str	r3, [r0, #12]
 301:Src/main.c    ****   hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
ARM GAS  /tmp/ccagqd8Q.s 			page 24


 662              		.loc 1 301 0
 663 0010 0361     		str	r3, [r0, #16]
 302:Src/main.c    ****   hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 664              		.loc 1 302 0
 665 0012 4361     		str	r3, [r0, #20]
 303:Src/main.c    ****   hspi5.Init.NSS = SPI_NSS_HARD_INPUT;
 666              		.loc 1 303 0
 667 0014 8361     		str	r3, [r0, #24]
 304:Src/main.c    ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 668              		.loc 1 304 0
 669 0016 0362     		str	r3, [r0, #32]
 305:Src/main.c    ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 670              		.loc 1 305 0
 671 0018 4362     		str	r3, [r0, #36]
 306:Src/main.c    ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 672              		.loc 1 306 0
 673 001a 8362     		str	r3, [r0, #40]
 307:Src/main.c    ****   hspi5.Init.CRCPolynomial = 10;
 674              		.loc 1 307 0
 675 001c 0A23     		movs	r3, #10
 676 001e C362     		str	r3, [r0, #44]
 308:Src/main.c    ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 677              		.loc 1 308 0
 678 0020 FFF7FEFF 		bl	HAL_SPI_Init
 679              	.LVL34:
 680 0024 08BD     		pop	{r3, pc}
 681              	.L11:
 682 0026 00BF     		.align	2
 683              	.L10:
 684 0028 00000000 		.word	hspi5
 685 002c 00500140 		.word	1073827840
 686              		.cfi_endproc
 687              	.LFE133:
 689              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 690              		.align	1
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 694              		.fpu fpv4-sp-d16
 696              	MX_USART1_UART_Init:
 697              	.LFB135:
 362:Src/main.c    **** {
 698              		.loc 1 362 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 0
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702 0000 08B5     		push	{r3, lr}
 703              	.LCFI4:
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 3, -8
 706              		.cfi_offset 14, -4
 371:Src/main.c    ****   huart1.Instance = USART1;
 707              		.loc 1 371 0
 708 0002 0848     		ldr	r0, .L14
 709 0004 084B     		ldr	r3, .L14+4
 710 0006 0360     		str	r3, [r0]
 372:Src/main.c    ****   huart1.Init.BaudRate = 115200;
ARM GAS  /tmp/ccagqd8Q.s 			page 25


 711              		.loc 1 372 0
 712 0008 4FF4E133 		mov	r3, #115200
 713 000c 4360     		str	r3, [r0, #4]
 373:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 714              		.loc 1 373 0
 715 000e 0023     		movs	r3, #0
 716 0010 8360     		str	r3, [r0, #8]
 374:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 717              		.loc 1 374 0
 718 0012 C360     		str	r3, [r0, #12]
 375:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 719              		.loc 1 375 0
 720 0014 0361     		str	r3, [r0, #16]
 376:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 721              		.loc 1 376 0
 722 0016 0C22     		movs	r2, #12
 723 0018 4261     		str	r2, [r0, #20]
 377:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 724              		.loc 1 377 0
 725 001a 8361     		str	r3, [r0, #24]
 378:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 726              		.loc 1 378 0
 727 001c C361     		str	r3, [r0, #28]
 379:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 728              		.loc 1 379 0
 729 001e FFF7FEFF 		bl	HAL_UART_Init
 730              	.LVL35:
 731 0022 08BD     		pop	{r3, pc}
 732              	.L15:
 733              		.align	2
 734              	.L14:
 735 0024 00000000 		.word	huart1
 736 0028 00100140 		.word	1073811456
 737              		.cfi_endproc
 738              	.LFE135:
 740              		.section	.text.MX_DAC_Init,"ax",%progbits
 741              		.align	1
 742              		.syntax unified
 743              		.thumb
 744              		.thumb_func
 745              		.fpu fpv4-sp-d16
 747              	MX_DAC_Init:
 748              	.LFB132:
 249:Src/main.c    **** {
 749              		.loc 1 249 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 8
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 753 0000 30B5     		push	{r4, r5, lr}
 754              	.LCFI5:
 755              		.cfi_def_cfa_offset 12
 756              		.cfi_offset 4, -12
 757              		.cfi_offset 5, -8
 758              		.cfi_offset 14, -4
 759 0002 83B0     		sub	sp, sp, #12
 760              	.LCFI6:
 761              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccagqd8Q.s 			page 26


 255:Src/main.c    ****   DAC_ChannelConfTypeDef sConfig = {0};
 762              		.loc 1 255 0
 763 0004 0024     		movs	r4, #0
 764 0006 0094     		str	r4, [sp]
 765 0008 0194     		str	r4, [sp, #4]
 262:Src/main.c    ****   hdac.Instance = DAC;
 766              		.loc 1 262 0
 767 000a 074D     		ldr	r5, .L18
 768 000c 074B     		ldr	r3, .L18+4
 769 000e 2B60     		str	r3, [r5]
 263:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 770              		.loc 1 263 0
 771 0010 2846     		mov	r0, r5
 772 0012 FFF7FEFF 		bl	HAL_DAC_Init
 773              	.LVL36:
 269:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 774              		.loc 1 269 0
 775 0016 0094     		str	r4, [sp]
 270:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 776              		.loc 1 270 0
 777 0018 0194     		str	r4, [sp, #4]
 271:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 778              		.loc 1 271 0
 779 001a 1022     		movs	r2, #16
 780 001c 6946     		mov	r1, sp
 781 001e 2846     		mov	r0, r5
 782 0020 FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 783              	.LVL37:
 279:Src/main.c    **** }
 784              		.loc 1 279 0
 785 0024 03B0     		add	sp, sp, #12
 786              	.LCFI7:
 787              		.cfi_def_cfa_offset 12
 788              		@ sp needed
 789 0026 30BD     		pop	{r4, r5, pc}
 790              	.L19:
 791              		.align	2
 792              	.L18:
 793 0028 00000000 		.word	hdac
 794 002c 00740040 		.word	1073771520
 795              		.cfi_endproc
 796              	.LFE132:
 798              		.section	.text.MX_TIM6_Init,"ax",%progbits
 799              		.align	1
 800              		.syntax unified
 801              		.thumb
 802              		.thumb_func
 803              		.fpu fpv4-sp-d16
 805              	MX_TIM6_Init:
 806              	.LFB134:
 324:Src/main.c    **** {
 807              		.loc 1 324 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 8
 810              		@ frame_needed = 0, uses_anonymous_args = 0
 811 0000 30B5     		push	{r4, r5, lr}
 812              	.LCFI8:
ARM GAS  /tmp/ccagqd8Q.s 			page 27


 813              		.cfi_def_cfa_offset 12
 814              		.cfi_offset 4, -12
 815              		.cfi_offset 5, -8
 816              		.cfi_offset 14, -4
 817 0002 83B0     		sub	sp, sp, #12
 818              	.LCFI9:
 819              		.cfi_def_cfa_offset 24
 330:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 820              		.loc 1 330 0
 821 0004 0025     		movs	r5, #0
 822 0006 0095     		str	r5, [sp]
 823 0008 0195     		str	r5, [sp, #4]
 335:Src/main.c    ****   htim6.Instance = TIM6;
 824              		.loc 1 335 0
 825 000a 0A4C     		ldr	r4, .L22
 826 000c 0A4B     		ldr	r3, .L22+4
 827 000e 2360     		str	r3, [r4]
 336:Src/main.c    ****   htim6.Init.Prescaler = 0;
 828              		.loc 1 336 0
 829 0010 6560     		str	r5, [r4, #4]
 337:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 830              		.loc 1 337 0
 831 0012 A560     		str	r5, [r4, #8]
 338:Src/main.c    ****   htim6.Init.Period = 1041;
 832              		.loc 1 338 0
 833 0014 40F21143 		movw	r3, #1041
 834 0018 E360     		str	r3, [r4, #12]
 339:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 835              		.loc 1 339 0
 836 001a A561     		str	r5, [r4, #24]
 340:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 837              		.loc 1 340 0
 838 001c 2046     		mov	r0, r4
 839 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 840              	.LVL38:
 344:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 841              		.loc 1 344 0
 842 0022 0095     		str	r5, [sp]
 345:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 843              		.loc 1 345 0
 844 0024 0195     		str	r5, [sp, #4]
 346:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 845              		.loc 1 346 0
 846 0026 6946     		mov	r1, sp
 847 0028 2046     		mov	r0, r4
 848 002a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 849              	.LVL39:
 354:Src/main.c    **** }
 850              		.loc 1 354 0
 851 002e 03B0     		add	sp, sp, #12
 852              	.LCFI10:
 853              		.cfi_def_cfa_offset 12
 854              		@ sp needed
 855 0030 30BD     		pop	{r4, r5, pc}
 856              	.L23:
 857 0032 00BF     		.align	2
 858              	.L22:
ARM GAS  /tmp/ccagqd8Q.s 			page 28


 859 0034 00000000 		.word	htim6
 860 0038 00100040 		.word	1073745920
 861              		.cfi_endproc
 862              	.LFE134:
 864              		.section	.text.SystemClock_Config,"ax",%progbits
 865              		.align	1
 866              		.global	SystemClock_Config
 867              		.syntax unified
 868              		.thumb
 869              		.thumb_func
 870              		.fpu fpv4-sp-d16
 872              	SystemClock_Config:
 873              	.LFB131:
 205:Src/main.c    **** {
 874              		.loc 1 205 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 80
 877              		@ frame_needed = 0, uses_anonymous_args = 0
 878 0000 30B5     		push	{r4, r5, lr}
 879              	.LCFI11:
 880              		.cfi_def_cfa_offset 12
 881              		.cfi_offset 4, -12
 882              		.cfi_offset 5, -8
 883              		.cfi_offset 14, -4
 884 0002 95B0     		sub	sp, sp, #84
 885              	.LCFI12:
 886              		.cfi_def_cfa_offset 96
 206:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 887              		.loc 1 206 0
 888 0004 3022     		movs	r2, #48
 889 0006 0021     		movs	r1, #0
 890 0008 08A8     		add	r0, sp, #32
 891 000a FFF7FEFF 		bl	memset
 892              	.LVL40:
 207:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 893              		.loc 1 207 0
 894 000e 0024     		movs	r4, #0
 895 0010 0394     		str	r4, [sp, #12]
 896 0012 0494     		str	r4, [sp, #16]
 897 0014 0594     		str	r4, [sp, #20]
 898 0016 0694     		str	r4, [sp, #24]
 899 0018 0794     		str	r4, [sp, #28]
 900              	.LBB10:
 211:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 901              		.loc 1 211 0
 902 001a 0194     		str	r4, [sp, #4]
 903 001c 1B4B     		ldr	r3, .L26
 904 001e 1A6C     		ldr	r2, [r3, #64]
 905 0020 42F08052 		orr	r2, r2, #268435456
 906 0024 1A64     		str	r2, [r3, #64]
 907 0026 1B6C     		ldr	r3, [r3, #64]
 908 0028 03F08053 		and	r3, r3, #268435456
 909 002c 0193     		str	r3, [sp, #4]
 910 002e 019B     		ldr	r3, [sp, #4]
 911              	.LBE10:
 912              	.LBB11:
 212:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
ARM GAS  /tmp/ccagqd8Q.s 			page 29


 913              		.loc 1 212 0
 914 0030 0294     		str	r4, [sp, #8]
 915 0032 174A     		ldr	r2, .L26+4
 916 0034 1368     		ldr	r3, [r2]
 917 0036 23F44043 		bic	r3, r3, #49152
 918 003a 43F48043 		orr	r3, r3, #16384
 919 003e 1360     		str	r3, [r2]
 920 0040 1368     		ldr	r3, [r2]
 921 0042 03F44043 		and	r3, r3, #49152
 922 0046 0293     		str	r3, [sp, #8]
 923 0048 029B     		ldr	r3, [sp, #8]
 924              	.LBE11:
 215:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 925              		.loc 1 215 0
 926 004a 0225     		movs	r5, #2
 927 004c 0895     		str	r5, [sp, #32]
 216:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 928              		.loc 1 216 0
 929 004e 0123     		movs	r3, #1
 930 0050 0B93     		str	r3, [sp, #44]
 217:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 931              		.loc 1 217 0
 932 0052 1023     		movs	r3, #16
 933 0054 0C93     		str	r3, [sp, #48]
 218:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 934              		.loc 1 218 0
 935 0056 0E95     		str	r5, [sp, #56]
 219:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 936              		.loc 1 219 0
 937 0058 0F94     		str	r4, [sp, #60]
 220:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 938              		.loc 1 220 0
 939 005a 0823     		movs	r3, #8
 940 005c 1093     		str	r3, [sp, #64]
 221:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 100;
 941              		.loc 1 221 0
 942 005e 6423     		movs	r3, #100
 943 0060 1193     		str	r3, [sp, #68]
 222:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 944              		.loc 1 222 0
 945 0062 1295     		str	r5, [sp, #72]
 223:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 946              		.loc 1 223 0
 947 0064 0723     		movs	r3, #7
 948 0066 1393     		str	r3, [sp, #76]
 224:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 949              		.loc 1 224 0
 950 0068 08A8     		add	r0, sp, #32
 951 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 952              	.LVL41:
 230:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 953              		.loc 1 230 0
 954 006e 0F23     		movs	r3, #15
 955 0070 0393     		str	r3, [sp, #12]
 232:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 956              		.loc 1 232 0
 957 0072 0495     		str	r5, [sp, #16]
ARM GAS  /tmp/ccagqd8Q.s 			page 30


 233:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 958              		.loc 1 233 0
 959 0074 0594     		str	r4, [sp, #20]
 234:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 960              		.loc 1 234 0
 961 0076 4FF4A053 		mov	r3, #5120
 962 007a 0693     		str	r3, [sp, #24]
 235:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 963              		.loc 1 235 0
 964 007c 0793     		str	r3, [sp, #28]
 237:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 965              		.loc 1 237 0
 966 007e 0321     		movs	r1, #3
 967 0080 03A8     		add	r0, sp, #12
 968 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 969              	.LVL42:
 241:Src/main.c    **** }
 970              		.loc 1 241 0
 971 0086 15B0     		add	sp, sp, #84
 972              	.LCFI13:
 973              		.cfi_def_cfa_offset 12
 974              		@ sp needed
 975 0088 30BD     		pop	{r4, r5, pc}
 976              	.L27:
 977 008a 00BF     		.align	2
 978              	.L26:
 979 008c 00380240 		.word	1073887232
 980 0090 00700040 		.word	1073770496
 981              		.cfi_endproc
 982              	.LFE131:
 984              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 985              		.align	1
 986              		.global	HAL_SPI_TxRxCpltCallback
 987              		.syntax unified
 988              		.thumb
 989              		.thumb_func
 990              		.fpu fpv4-sp-d16
 992              	HAL_SPI_TxRxCpltCallback:
 993              	.LFB137:
 648:Src/main.c    **** 
 649:Src/main.c    **** /* USER CODE BEGIN 4 */
 650:Src/main.c    **** void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi) {
 994              		.loc 1 650 0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 0
 997              		@ frame_needed = 0, uses_anonymous_args = 0
 998              		@ link register save eliminated.
 999              	.LVL43:
 651:Src/main.c    ****   //  uint8_t uart_tx_buffer;
 652:Src/main.c    **** 
 653:Src/main.c    ****   current_midi_note_msg.command = spi_rx_buffer[0];
 1000              		.loc 1 653 0
 1001 0000 054A     		ldr	r2, .L29
 1002 0002 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1003 0004 054B     		ldr	r3, .L29+4
 1004 0006 1970     		strb	r1, [r3]
 654:Src/main.c    ****   current_midi_note_msg.note = spi_rx_buffer[1];
ARM GAS  /tmp/ccagqd8Q.s 			page 31


 1005              		.loc 1 654 0
 1006 0008 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 1007 000a 5970     		strb	r1, [r3, #1]
 655:Src/main.c    ****   current_midi_note_msg.velocity = spi_rx_buffer[2];
 1008              		.loc 1 655 0
 1009 000c 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 1010 000e 9A70     		strb	r2, [r3, #2]
 656:Src/main.c    **** 
 657:Src/main.c    ****   MIDI_flag = 1;
 1011              		.loc 1 657 0
 1012 0010 0122     		movs	r2, #1
 1013 0012 034B     		ldr	r3, .L29+8
 1014 0014 1A70     		strb	r2, [r3]
 1015 0016 7047     		bx	lr
 1016              	.L30:
 1017              		.align	2
 1018              	.L29:
 1019 0018 00000000 		.word	spi_rx_buffer
 1020 001c 00000000 		.word	.LANCHOR0
 1021 0020 00000000 		.word	.LANCHOR1
 1022              		.cfi_endproc
 1023              	.LFE137:
 1025              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1026              		.align	1
 1027              		.global	HAL_TIM_PeriodElapsedCallback
 1028              		.syntax unified
 1029              		.thumb
 1030              		.thumb_func
 1031              		.fpu fpv4-sp-d16
 1033              	HAL_TIM_PeriodElapsedCallback:
 1034              	.LFB138:
 658:Src/main.c    **** 
 659:Src/main.c    ****   /*
 660:Src/main.c    ****   uart_tx_buffer = spi_rx_buffer[0];
 661:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 662:Src/main.c    ****   uart_tx_buffer = spi_rx_buffer[1];
 663:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 664:Src/main.c    ****   uart_tx_buffer = spi_rx_buffer[2];
 665:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 666:Src/main.c    ****   uart_tx_buffer = '\n';
 667:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 668:Src/main.c    **** 
 669:Src/main.c    ****   if(spi_rx_buffer[0] == MIDI_NOTE_ON){
 670:Src/main.c    ****     uart_tx_buffer = 'n';
 671:Src/main.c    ****     HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 672:Src/main.c    ****   }
 673:Src/main.c    ****   else if (spi_rx_buffer[0] == MIDI_NOTE_OFF){
 674:Src/main.c    ****     uart_tx_buffer = 'f';
 675:Src/main.c    ****     HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 676:Src/main.c    ****   }
 677:Src/main.c    ****   uart_tx_buffer = '\n';
 678:Src/main.c    ****   HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 679:Src/main.c    ****   */
 680:Src/main.c    **** }
 681:Src/main.c    **** 
 682:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 1035              		.loc 1 682 0
ARM GAS  /tmp/ccagqd8Q.s 			page 32


 1036              		.cfi_startproc
 1037              		@ args = 0, pretend = 0, frame = 0
 1038              		@ frame_needed = 0, uses_anonymous_args = 0
 1039              		@ link register save eliminated.
 1040              	.LVL44:
 683:Src/main.c    ****   //  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_1);
 684:Src/main.c    ****   //  HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_8);
 685:Src/main.c    ****   update_value_flag = 1;
 1041              		.loc 1 685 0
 1042 0000 0122     		movs	r2, #1
 1043 0002 014B     		ldr	r3, .L32
 1044 0004 1A70     		strb	r2, [r3]
 1045 0006 7047     		bx	lr
 1046              	.L33:
 1047              		.align	2
 1048              	.L32:
 1049 0008 00000000 		.word	.LANCHOR2
 1050              		.cfi_endproc
 1051              	.LFE138:
 1053              		.global	__aeabi_f2d
 1054              		.global	__aeabi_dmul
 1055              		.global	__aeabi_d2uiz
 1056              		.section	.text.UpdateOutputValue,"ax",%progbits
 1057              		.align	1
 1058              		.global	UpdateOutputValue
 1059              		.syntax unified
 1060              		.thumb
 1061              		.thumb_func
 1062              		.fpu fpv4-sp-d16
 1064              	UpdateOutputValue:
 1065              	.LFB139:
 686:Src/main.c    **** }
 687:Src/main.c    **** 
 688:Src/main.c    **** void UpdateOutputValue() {
 1066              		.loc 1 688 0
 1067              		.cfi_startproc
 1068              		@ args = 0, pretend = 0, frame = 8
 1069              		@ frame_needed = 0, uses_anonymous_args = 0
 1070 0000 10B5     		push	{r4, lr}
 1071              	.LCFI14:
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 4, -8
 1074              		.cfi_offset 14, -4
 1075 0002 2DED028B 		vpush.64	{d8}
 1076              	.LCFI15:
 1077              		.cfi_def_cfa_offset 16
 1078              		.cfi_offset 80, -16
 1079              		.cfi_offset 81, -12
 1080 0006 82B0     		sub	sp, sp, #8
 1081              	.LCFI16:
 1082              		.cfi_def_cfa_offset 24
 1083              	.LVL45:
 689:Src/main.c    ****   //  HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_7);
 690:Src/main.c    ****   float val = 0;
 691:Src/main.c    ****   output_val = 0;
 1084              		.loc 1 691 0
 1085 0008 0024     		movs	r4, #0
ARM GAS  /tmp/ccagqd8Q.s 			page 33


 1086 000a 274B     		ldr	r3, .L38+8
 1087 000c 1C70     		strb	r4, [r3]
 1088              	.LVL46:
 690:Src/main.c    ****   output_val = 0;
 1089              		.loc 1 690 0
 1090 000e 9FED278A 		vldr.32	s16, .L38+12
 1091              	.LBB12:
 692:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1092              		.loc 1 692 0
 1093 0012 33E0     		b	.L35
 1094              	.LVL47:
 1095              	.L36:
 693:Src/main.c    ****     phase_accumulator[i] += (uint32_t)(midi_notes[note_freq[i]]*DDS_SCALE_FACTOR);
 1096              		.loc 1 693 0 discriminator 3
 1097 0014 264B     		ldr	r3, .L38+16
 1098 0016 1A5D     		ldrb	r2, [r3, r4]	@ zero_extendqisi2
 1099 0018 264B     		ldr	r3, .L38+20
 1100 001a 03EB8203 		add	r3, r3, r2, lsl #2
 1101 001e 1868     		ldr	r0, [r3]	@ float
 1102 0020 FFF7FEFF 		bl	__aeabi_f2d
 1103              	.LVL48:
 1104 0024 1EA3     		adr	r3, .L38
 1105 0026 D3E90023 		ldrd	r2, [r3]
 1106 002a FFF7FEFF 		bl	__aeabi_dmul
 1107              	.LVL49:
 1108 002e FFF7FEFF 		bl	__aeabi_d2uiz
 1109              	.LVL50:
 1110 0032 214A     		ldr	r2, .L38+24
 1111 0034 52F82430 		ldr	r3, [r2, r4, lsl #2]
 1112 0038 1844     		add	r0, r0, r3
 1113 003a 42F82400 		str	r0, [r2, r4, lsl #2]
 694:Src/main.c    ****     val += ((base_sine[(phase_accumulator[i]>>10)%4096] + base_neg_saw[(phase_accumulator[i]>>10)%4
 1114              		.loc 1 694 0 discriminator 3
 1115 003e 52F82430 		ldr	r3, [r2, r4, lsl #2]
 1116 0042 C3F38B23 		ubfx	r3, r3, #10, #12
 1117 0046 1D49     		ldr	r1, .L38+28
 1118 0048 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1119 004a 52F82420 		ldr	r2, [r2, r4, lsl #2]
 1120 004e C2F38B22 		ubfx	r2, r2, #10, #12
 1121 0052 1B49     		ldr	r1, .L38+32
 1122 0054 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1123 0056 1344     		add	r3, r3, r2
 1124 0058 07EE903A 		vmov	s15, r3	@ int
 1125 005c 194B     		ldr	r3, .L38+36
 1126 005e 03EB8403 		add	r3, r3, r4, lsl #2
 1127 0062 93ED007A 		vldr.32	s14, [r3]
 1128 0066 F8EEE77A 		vcvt.f32.s32	s15, s15
 1129 006a 67EE877A 		vmul.f32	s15, s15, s14
 1130 006e DFED166A 		vldr.32	s13, .L38+40
 1131 0072 87EEA67A 		vdiv.f32	s14, s15, s13
 1132 0076 38EE078A 		vadd.f32	s16, s16, s14
 1133              	.LVL51:
 692:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1134              		.loc 1 692 0 discriminator 3
 1135 007a 0134     		adds	r4, r4, #1
 1136              	.LVL52:
 1137              	.L35:
ARM GAS  /tmp/ccagqd8Q.s 			page 34


 692:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1138              		.loc 1 692 0 is_stmt 0 discriminator 1
 1139 007c 0F2C     		cmp	r4, #15
 1140 007e C9DD     		ble	.L36
 1141              	.LBE12:
 695:Src/main.c    ****   }
 696:Src/main.c    **** 
 697:Src/main.c    ****   output_val = (uint8_t) (val / VOICES);
 1142              		.loc 1 697 0 is_stmt 1
 1143 0080 DFED127A 		vldr.32	s15, .L38+44
 1144 0084 28EE278A 		vmul.f32	s16, s16, s15
 1145              	.LVL53:
 1146 0088 FCEEC87A 		vcvt.u32.f32	s15, s16
 1147 008c CDED017A 		vstr.32	s15, [sp, #4]	@ int
 1148 0090 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 1149 0094 044A     		ldr	r2, .L38+8
 1150 0096 1370     		strb	r3, [r2]
 698:Src/main.c    **** }
 1151              		.loc 1 698 0
 1152 0098 02B0     		add	sp, sp, #8
 1153              	.LCFI17:
 1154              		.cfi_def_cfa_offset 16
 1155              		@ sp needed
 1156 009a BDEC028B 		vldm	sp!, {d8}
 1157              	.LCFI18:
 1158              		.cfi_restore 80
 1159              		.cfi_restore 81
 1160              		.cfi_def_cfa_offset 8
 1161 009e 10BD     		pop	{r4, pc}
 1162              	.LVL54:
 1163              	.L39:
 1164              		.align	3
 1165              	.L38:
 1166 00a0 38BA4A77 		.word	2001386040
 1167 00a4 F7F58B40 		.word	1082914295
 1168 00a8 00000000 		.word	.LANCHOR3
 1169 00ac 00000000 		.word	0
 1170 00b0 00000000 		.word	.LANCHOR4
 1171 00b4 00000000 		.word	midi_notes
 1172 00b8 00000000 		.word	.LANCHOR5
 1173 00bc 00000000 		.word	base_sine
 1174 00c0 00000000 		.word	base_neg_saw
 1175 00c4 00000000 		.word	.LANCHOR6
 1176 00c8 0000FF43 		.word	1140785152
 1177 00cc 0000803D 		.word	1031798784
 1178              		.cfi_endproc
 1179              	.LFE139:
 1181              		.section	.text.UpdateEnvelope,"ax",%progbits
 1182              		.align	1
 1183              		.global	UpdateEnvelope
 1184              		.syntax unified
 1185              		.thumb
 1186              		.thumb_func
 1187              		.fpu fpv4-sp-d16
 1189              	UpdateEnvelope:
 1190              	.LFB140:
 699:Src/main.c    **** 
ARM GAS  /tmp/ccagqd8Q.s 			page 35


 700:Src/main.c    **** void UpdateEnvelope() {
 1191              		.loc 1 700 0
 1192              		.cfi_startproc
 1193              		@ args = 0, pretend = 0, frame = 0
 1194              		@ frame_needed = 0, uses_anonymous_args = 0
 1195              		@ link register save eliminated.
 1196              	.LVL55:
 1197              	.LBB13:
 701:Src/main.c    ****   for(int i = 0; i < VOICES; i++){
 1198              		.loc 1 701 0
 1199 0000 0023     		movs	r3, #0
 1200 0002 09E0     		b	.L41
 1201              	.LVL56:
 1202              	.L43:
 702:Src/main.c    ****     //if(note_on[i] == MIDI_NOTE_OFF){
 703:Src/main.c    ****     //  env_state[i] = RELEASE_MODE;
 704:Src/main.c    ****     //}
 705:Src/main.c    **** 
 706:Src/main.c    ****     switch(env_state[i]){
 707:Src/main.c    ****     case NOT_TRIGGERED:
 708:Src/main.c    ****       envelope_index[i] = 0;
 1203              		.loc 1 708 0
 1204 0004 0021     		movs	r1, #0
 1205 0006 4C4A     		ldr	r2, .L54
 1206 0008 42F82310 		str	r1, [r2, r3, lsl #2]
 709:Src/main.c    ****       envelope[i] = 0;
 1207              		.loc 1 709 0
 1208 000c 4B4A     		ldr	r2, .L54+4
 1209 000e 02EB8302 		add	r2, r2, r3, lsl #2
 1210 0012 0021     		movs	r1, #0
 1211 0014 1160     		str	r1, [r2]	@ float
 1212              	.L42:
 701:Src/main.c    ****   for(int i = 0; i < VOICES; i++){
 1213              		.loc 1 701 0 discriminator 2
 1214 0016 0133     		adds	r3, r3, #1
 1215              	.LVL57:
 1216              	.L41:
 701:Src/main.c    ****   for(int i = 0; i < VOICES; i++){
 1217              		.loc 1 701 0 is_stmt 0 discriminator 1
 1218 0018 0F2B     		cmp	r3, #15
 1219 001a 00F38C80 		bgt	.L53
 706:Src/main.c    ****     case NOT_TRIGGERED:
 1220              		.loc 1 706 0 is_stmt 1
 1221 001e 484A     		ldr	r2, .L54+8
 1222 0020 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1223 0022 D2B2     		uxtb	r2, r2
 1224 0024 042A     		cmp	r2, #4
 1225 0026 F6D8     		bhi	.L42
 1226 0028 01A1     		adr	r1, .L44
 1227 002a 51F822F0 		ldr	pc, [r1, r2, lsl #2]
 1228 002e 00BF     		.p2align 2
 1229              	.L44:
 1230 0030 05000000 		.word	.L43+1
 1231 0034 45000000 		.word	.L45+1
 1232 0038 8F000000 		.word	.L46+1
 1233 003c D9000000 		.word	.L47+1
 1234 0040 E5000000 		.word	.L48+1
ARM GAS  /tmp/ccagqd8Q.s 			page 36


 1235              		.p2align 1
 1236              	.L45:
 710:Src/main.c    ****       break;
 711:Src/main.c    ****     case ATTACK_MODE:
 712:Src/main.c    ****       //    if((UINT32_MAX - envelope_index) < DDS_SCALE_FACTOR){
 713:Src/main.c    ****       if(envelope_index[i] <= 4200000) {
 1237              		.loc 1 713 0
 1238 0044 3C4A     		ldr	r2, .L54
 1239 0046 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1240 004a 3E4A     		ldr	r2, .L54+12
 1241 004c 9142     		cmp	r1, r2
 1242 004e 16D8     		bhi	.L49
 714:Src/main.c    ****         envelope_index[i] += (uint32_t)(DDS_SCALE_FACTOR);
 1243              		.loc 1 714 0
 1244 0050 394A     		ldr	r2, .L54
 1245 0052 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1246 0056 01F27E31 		addw	r1, r1, #894
 1247 005a 42F82310 		str	r1, [r2, r3, lsl #2]
 715:Src/main.c    ****         envelope[i] = base_pos_saw[(envelope_index[i]>>10)%4096];
 1248              		.loc 1 715 0
 1249 005e 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1250 0062 C2F38B22 		ubfx	r2, r2, #10, #12
 1251 0066 3849     		ldr	r1, .L54+16
 1252 0068 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1253 006a 07EE902A 		vmov	s15, r2	@ int
 1254 006e F8EE677A 		vcvt.f32.u32	s15, s15
 1255 0072 324A     		ldr	r2, .L54+4
 1256 0074 02EB8302 		add	r2, r2, r3, lsl #2
 1257 0078 C2ED007A 		vstr.32	s15, [r2]
 1258 007c CBE7     		b	.L42
 1259              	.L49:
 716:Src/main.c    ****       }
 717:Src/main.c    ****       else {
 718:Src/main.c    ****         // env_state++;
 719:Src/main.c    ****         envelope_index[i] = 0;
 1260              		.loc 1 719 0
 1261 007e 0021     		movs	r1, #0
 1262 0080 2D4A     		ldr	r2, .L54
 1263 0082 42F82310 		str	r1, [r2, r3, lsl #2]
 720:Src/main.c    ****         env_state[i] = DECAY_MODE;
 1264              		.loc 1 720 0
 1265 0086 0221     		movs	r1, #2
 1266 0088 2D4A     		ldr	r2, .L54+8
 1267 008a D154     		strb	r1, [r2, r3]
 1268 008c C3E7     		b	.L42
 1269              	.L46:
 721:Src/main.c    ****       }
 722:Src/main.c    ****       break;
 723:Src/main.c    ****     case DECAY_MODE:
 724:Src/main.c    ****       //    if(envelope <= base_neg_saw[sustain_level]){
 725:Src/main.c    ****       if(envelope_index[i] <= 4200000) {
 1270              		.loc 1 725 0
 1271 008e 2A4A     		ldr	r2, .L54
 1272 0090 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1273 0094 2B4A     		ldr	r2, .L54+12
 1274 0096 9142     		cmp	r1, r2
 1275 0098 16D8     		bhi	.L50
ARM GAS  /tmp/ccagqd8Q.s 			page 37


 726:Src/main.c    ****         envelope_index[i] += (uint32_t)(DDS_SCALE_FACTOR);
 1276              		.loc 1 726 0
 1277 009a 274A     		ldr	r2, .L54
 1278 009c 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1279 00a0 01F27E31 		addw	r1, r1, #894
 1280 00a4 42F82310 		str	r1, [r2, r3, lsl #2]
 727:Src/main.c    ****         envelope[i] = base_neg_saw[(envelope_index[i]>>10)%4096];
 1281              		.loc 1 727 0
 1282 00a8 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1283 00ac C2F38B22 		ubfx	r2, r2, #10, #12
 1284 00b0 2649     		ldr	r1, .L54+20
 1285 00b2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1286 00b4 07EE902A 		vmov	s15, r2	@ int
 1287 00b8 F8EE677A 		vcvt.f32.u32	s15, s15
 1288 00bc 1F4A     		ldr	r2, .L54+4
 1289 00be 02EB8302 		add	r2, r2, r3, lsl #2
 1290 00c2 C2ED007A 		vstr.32	s15, [r2]
 1291 00c6 A6E7     		b	.L42
 1292              	.L50:
 728:Src/main.c    ****       }
 729:Src/main.c    ****       else {
 730:Src/main.c    ****         envelope_index[i] = 0;
 1293              		.loc 1 730 0
 1294 00c8 0021     		movs	r1, #0
 1295 00ca 1B4A     		ldr	r2, .L54
 1296 00cc 42F82310 		str	r1, [r2, r3, lsl #2]
 731:Src/main.c    ****         //env_state++;
 732:Src/main.c    ****         env_state[i] = ATTACK_MODE;
 1297              		.loc 1 732 0
 1298 00d0 0121     		movs	r1, #1
 1299 00d2 1B4A     		ldr	r2, .L54+8
 1300 00d4 D154     		strb	r1, [r2, r3]
 1301 00d6 9EE7     		b	.L42
 1302              	.L47:
 733:Src/main.c    ****       }
 734:Src/main.c    ****       break;
 735:Src/main.c    ****     case SUSTAIN_MODE:
 736:Src/main.c    ****       env_state[i]++;
 1303              		.loc 1 736 0
 1304 00d8 1949     		ldr	r1, .L54+8
 1305 00da CA5C     		ldrb	r2, [r1, r3]	@ zero_extendqisi2
 1306 00dc 0132     		adds	r2, r2, #1
 1307 00de D2B2     		uxtb	r2, r2
 1308 00e0 CA54     		strb	r2, [r1, r3]
 737:Src/main.c    ****       break;
 1309              		.loc 1 737 0
 1310 00e2 98E7     		b	.L42
 1311              	.L48:
 738:Src/main.c    ****     case RELEASE_MODE:
 739:Src/main.c    ****       //      if((UINT32_MAX - envelope_index) < DDS_SCALE_FACTOR){
 740:Src/main.c    ****       if(envelope_index[i] <= 4200000){
 1312              		.loc 1 740 0
 1313 00e4 144A     		ldr	r2, .L54
 1314 00e6 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1315 00ea 164A     		ldr	r2, .L54+12
 1316 00ec 9142     		cmp	r1, r2
 1317 00ee 16D8     		bhi	.L51
ARM GAS  /tmp/ccagqd8Q.s 			page 38


 741:Src/main.c    ****         envelope_index[i] += (uint32_t)(DDS_SCALE_FACTOR);
 1318              		.loc 1 741 0
 1319 00f0 114A     		ldr	r2, .L54
 1320 00f2 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1321 00f6 01F27E31 		addw	r1, r1, #894
 1322 00fa 42F82310 		str	r1, [r2, r3, lsl #2]
 742:Src/main.c    ****         envelope[i] = base_neg_saw[(envelope_index[i]>>10)%4096];
 1323              		.loc 1 742 0
 1324 00fe 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1325 0102 C2F38B22 		ubfx	r2, r2, #10, #12
 1326 0106 1149     		ldr	r1, .L54+20
 1327 0108 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1328 010a 07EE902A 		vmov	s15, r2	@ int
 1329 010e F8EE677A 		vcvt.f32.u32	s15, s15
 1330 0112 0A4A     		ldr	r2, .L54+4
 1331 0114 02EB8302 		add	r2, r2, r3, lsl #2
 1332 0118 C2ED007A 		vstr.32	s15, [r2]
 1333 011c 7BE7     		b	.L42
 1334              	.L51:
 743:Src/main.c    ****       }
 744:Src/main.c    ****       else {
 745:Src/main.c    ****         env_state[i] = NOT_TRIGGERED;
 1335              		.loc 1 745 0
 1336 011e 0021     		movs	r1, #0
 1337 0120 074A     		ldr	r2, .L54+8
 1338 0122 D154     		strb	r1, [r2, r3]
 746:Src/main.c    ****         note_on[i] = MIDI_NOTE_OFF;
 1339              		.loc 1 746 0
 1340 0124 8021     		movs	r1, #128
 1341 0126 0A4A     		ldr	r2, .L54+24
 1342 0128 D154     		strb	r1, [r2, r3]
 747:Src/main.c    ****         envelope[i] = 0;
 1343              		.loc 1 747 0
 1344 012a 044A     		ldr	r2, .L54+4
 1345 012c 02EB8302 		add	r2, r2, r3, lsl #2
 1346 0130 0021     		movs	r1, #0
 1347 0132 1160     		str	r1, [r2]	@ float
 1348 0134 6FE7     		b	.L42
 1349              	.L53:
 1350              	.LBE13:
 748:Src/main.c    ****       }
 749:Src/main.c    ****       break;
 750:Src/main.c    ****     }
 751:Src/main.c    ****   }
 752:Src/main.c    **** }
 1351              		.loc 1 752 0
 1352 0136 7047     		bx	lr
 1353              	.L55:
 1354              		.align	2
 1355              	.L54:
 1356 0138 00000000 		.word	.LANCHOR7
 1357 013c 00000000 		.word	.LANCHOR6
 1358 0140 00000000 		.word	env_state
 1359 0144 40164000 		.word	4200000
 1360 0148 00000000 		.word	base_pos_saw
 1361 014c 00000000 		.word	base_neg_saw
 1362 0150 00000000 		.word	.LANCHOR8
ARM GAS  /tmp/ccagqd8Q.s 			page 39


 1363              		.cfi_endproc
 1364              	.LFE140:
 1366              		.section	.text.main,"ax",%progbits
 1367              		.align	1
 1368              		.global	main
 1369              		.syntax unified
 1370              		.thumb
 1371              		.thumb_func
 1372              		.fpu fpv4-sp-d16
 1374              	main:
 1375              	.LFB130:
 102:Src/main.c    **** {
 1376              		.loc 1 102 0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 0
 1379              		@ frame_needed = 0, uses_anonymous_args = 0
 1380 0000 08B5     		push	{r3, lr}
 1381              	.LCFI19:
 1382              		.cfi_def_cfa_offset 8
 1383              		.cfi_offset 3, -8
 1384              		.cfi_offset 14, -4
 111:Src/main.c    ****   HAL_Init();
 1385              		.loc 1 111 0
 1386 0002 FFF7FEFF 		bl	HAL_Init
 1387              	.LVL58:
 118:Src/main.c    ****   SystemClock_Config();
 1388              		.loc 1 118 0
 1389 0006 FFF7FEFF 		bl	SystemClock_Config
 1390              	.LVL59:
 125:Src/main.c    ****   MX_GPIO_Init();
 1391              		.loc 1 125 0
 1392 000a FFF7FEFF 		bl	MX_GPIO_Init
 1393              	.LVL60:
 126:Src/main.c    ****   MX_SPI5_Init();
 1394              		.loc 1 126 0
 1395 000e FFF7FEFF 		bl	MX_SPI5_Init
 1396              	.LVL61:
 127:Src/main.c    ****   MX_USART1_UART_Init();
 1397              		.loc 1 127 0
 1398 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 1399              	.LVL62:
 128:Src/main.c    ****   MX_DAC_Init();
 1400              		.loc 1 128 0
 1401 0016 FFF7FEFF 		bl	MX_DAC_Init
 1402              	.LVL63:
 129:Src/main.c    ****   MX_TIM6_Init();
 1403              		.loc 1 129 0
 1404 001a FFF7FEFF 		bl	MX_TIM6_Init
 1405              	.LVL64:
 131:Src/main.c    ****   init_wavetable();
 1406              		.loc 1 131 0
 1407 001e FFF7FEFF 		bl	init_wavetable
 1408              	.LVL65:
 132:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim6);
 1409              		.loc 1 132 0
 1410 0022 1448     		ldr	r0, .L62
 1411 0024 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
ARM GAS  /tmp/ccagqd8Q.s 			page 40


 1412              	.LVL66:
 133:Src/main.c    ****   HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 1413              		.loc 1 133 0
 1414 0028 1021     		movs	r1, #16
 1415 002a 1348     		ldr	r0, .L62+4
 1416 002c FFF7FEFF 		bl	HAL_DAC_Start
 1417              	.LVL67:
 1418              	.LBB14:
 135:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1419              		.loc 1 135 0
 1420 0030 0023     		movs	r3, #0
 1421              	.LVL68:
 1422              	.L57:
 135:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1423              		.loc 1 135 0 is_stmt 0 discriminator 1
 1424 0032 0F2B     		cmp	r3, #15
 1425 0034 0ADC     		bgt	.L59
 136:Src/main.c    ****     env_state[i] = ATTACK_MODE;
 1426              		.loc 1 136 0 is_stmt 1 discriminator 3
 1427 0036 0121     		movs	r1, #1
 1428 0038 104A     		ldr	r2, .L62+8
 1429 003a D154     		strb	r1, [r2, r3]
 137:Src/main.c    ****     note_on[i] = MIDI_NOTE_OFF;
 1430              		.loc 1 137 0 discriminator 3
 1431 003c 8021     		movs	r1, #128
 1432 003e 104A     		ldr	r2, .L62+12
 1433 0040 D154     		strb	r1, [r2, r3]
 138:Src/main.c    ****     note_freq[i] = 30;
 1434              		.loc 1 138 0 discriminator 3
 1435 0042 1E21     		movs	r1, #30
 1436 0044 0F4A     		ldr	r2, .L62+16
 1437 0046 D154     		strb	r1, [r2, r3]
 135:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1438              		.loc 1 135 0 discriminator 3
 1439 0048 0133     		adds	r3, r3, #1
 1440              	.LVL69:
 1441 004a F2E7     		b	.L57
 1442              	.LVL70:
 1443              	.L59:
 1444              	.LBE14:
 181:Src/main.c    ****     if(update_value_flag) {
 1445              		.loc 1 181 0
 1446 004c 0E4B     		ldr	r3, .L62+20
 1447 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1448 0050 002B     		cmp	r3, #0
 1449 0052 FBD0     		beq	.L59
 183:Src/main.c    ****       UpdateEnvelope();
 1450              		.loc 1 183 0
 1451 0054 FFF7FEFF 		bl	UpdateEnvelope
 1452              	.LVL71:
 184:Src/main.c    ****       UpdateOutputValue();
 1453              		.loc 1 184 0
 1454 0058 FFF7FEFF 		bl	UpdateOutputValue
 1455              	.LVL72:
 185:Src/main.c    ****       HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_8B_R, output_val);
 1456              		.loc 1 185 0
 1457 005c 0B4B     		ldr	r3, .L62+24
ARM GAS  /tmp/ccagqd8Q.s 			page 41


 1458 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1459 0060 0822     		movs	r2, #8
 1460 0062 1021     		movs	r1, #16
 1461 0064 0448     		ldr	r0, .L62+4
 1462 0066 FFF7FEFF 		bl	HAL_DAC_SetValue
 1463              	.LVL73:
 186:Src/main.c    ****       update_value_flag = 0;
 1464              		.loc 1 186 0
 1465 006a 0022     		movs	r2, #0
 1466 006c 064B     		ldr	r3, .L62+20
 1467 006e 1A70     		strb	r2, [r3]
 1468 0070 ECE7     		b	.L59
 1469              	.L63:
 1470 0072 00BF     		.align	2
 1471              	.L62:
 1472 0074 00000000 		.word	htim6
 1473 0078 00000000 		.word	hdac
 1474 007c 00000000 		.word	env_state
 1475 0080 00000000 		.word	.LANCHOR8
 1476 0084 00000000 		.word	.LANCHOR4
 1477 0088 00000000 		.word	.LANCHOR2
 1478 008c 00000000 		.word	.LANCHOR3
 1479              		.cfi_endproc
 1480              	.LFE130:
 1482              		.section	.text.Update_R2R_DAC,"ax",%progbits
 1483              		.align	1
 1484              		.global	Update_R2R_DAC
 1485              		.syntax unified
 1486              		.thumb
 1487              		.thumb_func
 1488              		.fpu fpv4-sp-d16
 1490              	Update_R2R_DAC:
 1491              	.LFB141:
 753:Src/main.c    **** 
 754:Src/main.c    **** void Update_R2R_DAC() {
 1492              		.loc 1 754 0
 1493              		.cfi_startproc
 1494              		@ args = 0, pretend = 0, frame = 0
 1495              		@ frame_needed = 0, uses_anonymous_args = 0
 1496 0000 08B5     		push	{r3, lr}
 1497              	.LCFI20:
 1498              		.cfi_def_cfa_offset 8
 1499              		.cfi_offset 3, -8
 1500              		.cfi_offset 14, -4
 755:Src/main.c    ****   ((output_val>>0)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_7, GPIO_PIN_SET) : HAL_GPIO_Write
 1501              		.loc 1 755 0
 1502 0002 474B     		ldr	r3, .L83
 1503 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1504 0006 13F0010F 		tst	r3, #1
 1505 000a 51D0     		beq	.L65
 1506              		.loc 1 755 0 is_stmt 0 discriminator 1
 1507 000c 0122     		movs	r2, #1
 1508 000e 8021     		movs	r1, #128
 1509 0010 4448     		ldr	r0, .L83+4
 1510 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1511              	.LVL74:
 1512              	.L66:
ARM GAS  /tmp/ccagqd8Q.s 			page 42


 756:Src/main.c    ****   ((output_val>>1)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_8, GPIO_PIN_SET) : HAL_GPIO_Write
 1513              		.loc 1 756 0 is_stmt 1
 1514 0016 424B     		ldr	r3, .L83
 1515 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1516 001a 13F0020F 		tst	r3, #2
 1517 001e 4DD0     		beq	.L67
 1518              		.loc 1 756 0 is_stmt 0 discriminator 1
 1519 0020 0122     		movs	r2, #1
 1520 0022 4FF48071 		mov	r1, #256
 1521 0026 3F48     		ldr	r0, .L83+4
 1522 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1523              	.LVL75:
 1524              	.L68:
 757:Src/main.c    ****   ((output_val>>2)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_9, GPIO_PIN_SET) : HAL_GPIO_Write
 1525              		.loc 1 757 0 is_stmt 1
 1526 002c 3C4B     		ldr	r3, .L83
 1527 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1528 0030 13F0040F 		tst	r3, #4
 1529 0034 49D0     		beq	.L69
 1530              		.loc 1 757 0 is_stmt 0 discriminator 1
 1531 0036 0122     		movs	r2, #1
 1532 0038 4FF40071 		mov	r1, #512
 1533 003c 3948     		ldr	r0, .L83+4
 1534 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1535              	.LVL76:
 1536              	.L70:
 758:Src/main.c    ****   ((output_val>>3)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_10, GPIO_PIN_SET) : HAL_GPIO_Writ
 1537              		.loc 1 758 0 is_stmt 1
 1538 0042 374B     		ldr	r3, .L83
 1539 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1540 0046 13F0080F 		tst	r3, #8
 1541 004a 45D0     		beq	.L71
 1542              		.loc 1 758 0 is_stmt 0 discriminator 1
 1543 004c 0122     		movs	r2, #1
 1544 004e 4FF48061 		mov	r1, #1024
 1545 0052 3448     		ldr	r0, .L83+4
 1546 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1547              	.LVL77:
 1548              	.L72:
 759:Src/main.c    ****   ((output_val>>4)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET) : HAL_GPIO_Writ
 1549              		.loc 1 759 0 is_stmt 1
 1550 0058 314B     		ldr	r3, .L83
 1551 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1552 005c 13F0100F 		tst	r3, #16
 1553 0060 41D0     		beq	.L73
 1554              		.loc 1 759 0 is_stmt 0 discriminator 1
 1555 0062 0122     		movs	r2, #1
 1556 0064 4FF40061 		mov	r1, #2048
 1557 0068 2E48     		ldr	r0, .L83+4
 1558 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1559              	.LVL78:
 1560              	.L74:
 760:Src/main.c    ****   ((output_val>>5)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET) : HAL_GPIO_Writ
 1561              		.loc 1 760 0 is_stmt 1
 1562 006e 2C4B     		ldr	r3, .L83
 1563 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1564 0072 13F0200F 		tst	r3, #32
ARM GAS  /tmp/ccagqd8Q.s 			page 43


 1565 0076 3DD0     		beq	.L75
 1566              		.loc 1 760 0 is_stmt 0 discriminator 1
 1567 0078 0122     		movs	r2, #1
 1568 007a 4FF48051 		mov	r1, #4096
 1569 007e 2948     		ldr	r0, .L83+4
 1570 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1571              	.LVL79:
 1572              	.L76:
 761:Src/main.c    ****   ((output_val>>6)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_13, GPIO_PIN_SET) : HAL_GPIO_Writ
 1573              		.loc 1 761 0 is_stmt 1
 1574 0084 264B     		ldr	r3, .L83
 1575 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1576 0088 13F0400F 		tst	r3, #64
 1577 008c 39D0     		beq	.L77
 1578              		.loc 1 761 0 is_stmt 0 discriminator 1
 1579 008e 0122     		movs	r2, #1
 1580 0090 4FF40051 		mov	r1, #8192
 1581 0094 2348     		ldr	r0, .L83+4
 1582 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1583              	.LVL80:
 1584              	.L78:
 762:Src/main.c    ****   ((output_val>>7)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_14, GPIO_PIN_SET) : HAL_GPIO_Writ
 1585              		.loc 1 762 0 is_stmt 1
 1586 009a 214B     		ldr	r3, .L83
 1587 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1588 009e DB09     		lsrs	r3, r3, #7
 1589 00a0 36D1     		bne	.L82
 1590              		.loc 1 762 0 is_stmt 0 discriminator 2
 1591 00a2 0022     		movs	r2, #0
 1592 00a4 4FF48041 		mov	r1, #16384
 1593 00a8 1E48     		ldr	r0, .L83+4
 1594 00aa FFF7FEFF 		bl	HAL_GPIO_WritePin
 1595              	.LVL81:
 1596 00ae 08BD     		pop	{r3, pc}
 1597              	.L65:
 755:Src/main.c    ****   ((output_val>>1)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_8, GPIO_PIN_SET) : HAL_GPIO_Write
 1598              		.loc 1 755 0 is_stmt 1 discriminator 2
 1599 00b0 0022     		movs	r2, #0
 1600 00b2 8021     		movs	r1, #128
 1601 00b4 1B48     		ldr	r0, .L83+4
 1602 00b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1603              	.LVL82:
 1604 00ba ACE7     		b	.L66
 1605              	.L67:
 756:Src/main.c    ****   ((output_val>>2)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_9, GPIO_PIN_SET) : HAL_GPIO_Write
 1606              		.loc 1 756 0 discriminator 2
 1607 00bc 0022     		movs	r2, #0
 1608 00be 4FF48071 		mov	r1, #256
 1609 00c2 1848     		ldr	r0, .L83+4
 1610 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1611              	.LVL83:
 1612 00c8 B0E7     		b	.L68
 1613              	.L69:
 757:Src/main.c    ****   ((output_val>>3)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_10, GPIO_PIN_SET) : HAL_GPIO_Writ
 1614              		.loc 1 757 0 discriminator 2
 1615 00ca 0022     		movs	r2, #0
 1616 00cc 4FF40071 		mov	r1, #512
ARM GAS  /tmp/ccagqd8Q.s 			page 44


 1617 00d0 1448     		ldr	r0, .L83+4
 1618 00d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1619              	.LVL84:
 1620 00d6 B4E7     		b	.L70
 1621              	.L71:
 758:Src/main.c    ****   ((output_val>>4)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET) : HAL_GPIO_Writ
 1622              		.loc 1 758 0 discriminator 2
 1623 00d8 0022     		movs	r2, #0
 1624 00da 4FF48061 		mov	r1, #1024
 1625 00de 1148     		ldr	r0, .L83+4
 1626 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1627              	.LVL85:
 1628 00e4 B8E7     		b	.L72
 1629              	.L73:
 759:Src/main.c    ****   ((output_val>>5)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET) : HAL_GPIO_Writ
 1630              		.loc 1 759 0 discriminator 2
 1631 00e6 0022     		movs	r2, #0
 1632 00e8 4FF40061 		mov	r1, #2048
 1633 00ec 0D48     		ldr	r0, .L83+4
 1634 00ee FFF7FEFF 		bl	HAL_GPIO_WritePin
 1635              	.LVL86:
 1636 00f2 BCE7     		b	.L74
 1637              	.L75:
 760:Src/main.c    ****   ((output_val>>6)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_13, GPIO_PIN_SET) : HAL_GPIO_Writ
 1638              		.loc 1 760 0 discriminator 2
 1639 00f4 0022     		movs	r2, #0
 1640 00f6 4FF48051 		mov	r1, #4096
 1641 00fa 0A48     		ldr	r0, .L83+4
 1642 00fc FFF7FEFF 		bl	HAL_GPIO_WritePin
 1643              	.LVL87:
 1644 0100 C0E7     		b	.L76
 1645              	.L77:
 761:Src/main.c    ****   ((output_val>>7)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_14, GPIO_PIN_SET) : HAL_GPIO_Writ
 1646              		.loc 1 761 0 discriminator 2
 1647 0102 0022     		movs	r2, #0
 1648 0104 4FF40051 		mov	r1, #8192
 1649 0108 0648     		ldr	r0, .L83+4
 1650 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1651              	.LVL88:
 1652 010e C4E7     		b	.L78
 1653              	.L82:
 1654              		.loc 1 762 0 discriminator 1
 1655 0110 0122     		movs	r2, #1
 1656 0112 4FF48041 		mov	r1, #16384
 1657 0116 0348     		ldr	r0, .L83+4
 1658 0118 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1659              	.LVL89:
 1660 011c 08BD     		pop	{r3, pc}
 1661              	.L84:
 1662 011e 00BF     		.align	2
 1663              	.L83:
 1664 0120 00000000 		.word	.LANCHOR3
 1665 0124 00100240 		.word	1073876992
 1666              		.cfi_endproc
 1667              	.LFE141:
 1669              		.section	.text.Error_Handler,"ax",%progbits
 1670              		.align	1
ARM GAS  /tmp/ccagqd8Q.s 			page 45


 1671              		.global	Error_Handler
 1672              		.syntax unified
 1673              		.thumb
 1674              		.thumb_func
 1675              		.fpu fpv4-sp-d16
 1677              	Error_Handler:
 1678              	.LFB142:
 763:Src/main.c    **** }
 764:Src/main.c    **** /* USER CODE END 4 */
 765:Src/main.c    **** 
 766:Src/main.c    **** /**
 767:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 768:Src/main.c    ****   * @retval None
 769:Src/main.c    ****   */
 770:Src/main.c    **** void Error_Handler(void)
 771:Src/main.c    **** {
 1679              		.loc 1 771 0
 1680              		.cfi_startproc
 1681              		@ args = 0, pretend = 0, frame = 0
 1682              		@ frame_needed = 0, uses_anonymous_args = 0
 1683              		@ link register save eliminated.
 1684 0000 7047     		bx	lr
 1685              		.cfi_endproc
 1686              	.LFE142:
 1688              		.global	MIDI_flag
 1689              		.global	update_value_flag
 1690              		.global	note_freq
 1691              		.global	note_on
 1692              		.comm	env_state,16,4
 1693              		.global	envelope
 1694              		.global	envelope_index
 1695              		.global	output_val
 1696              		.global	phase_accumulator
 1697              		.global	current_midi_note_msg
 1698              		.global	inv_voices
 1699              		.comm	spi_rx_buffer,3,4
 1700              		.global	spi_tx_buffer
 1701              		.comm	huart1,64,4
 1702              		.comm	htim6,64,4
 1703              		.comm	hspi5,88,4
 1704              		.comm	hdac,20,4
 1705              		.comm	lfo_sine,256,4
 1706              		.comm	base_sq,4096,4
 1707              		.comm	base_tri,4096,4
 1708              		.comm	base_neg_saw,4096,4
 1709              		.comm	base_pos_saw,4096,4
 1710              		.comm	base_sine,4096,4
 1711              		.section	.bss.MIDI_flag,"aw",%nobits
 1712              		.set	.LANCHOR1,. + 0
 1715              	MIDI_flag:
 1716 0000 00       		.space	1
 1717              		.section	.bss.current_midi_note_msg,"aw",%nobits
 1718              		.align	2
 1719              		.set	.LANCHOR0,. + 0
 1722              	current_midi_note_msg:
 1723 0000 000000   		.space	3
 1724              		.section	.bss.envelope,"aw",%nobits
ARM GAS  /tmp/ccagqd8Q.s 			page 46


 1725              		.align	2
 1726              		.set	.LANCHOR6,. + 0
 1729              	envelope:
 1730 0000 00000000 		.space	64
 1730      00000000 
 1730      00000000 
 1730      00000000 
 1730      00000000 
 1731              		.section	.bss.envelope_index,"aw",%nobits
 1732              		.align	2
 1733              		.set	.LANCHOR7,. + 0
 1736              	envelope_index:
 1737 0000 00000000 		.space	64
 1737      00000000 
 1737      00000000 
 1737      00000000 
 1737      00000000 
 1738              		.section	.bss.note_freq,"aw",%nobits
 1739              		.align	2
 1740              		.set	.LANCHOR4,. + 0
 1743              	note_freq:
 1744 0000 00000000 		.space	16
 1744      00000000 
 1744      00000000 
 1744      00000000 
 1745              		.section	.bss.note_on,"aw",%nobits
 1746              		.align	2
 1747              		.set	.LANCHOR8,. + 0
 1750              	note_on:
 1751 0000 00000000 		.space	88
 1751      00000000 
 1751      00000000 
 1751      00000000 
 1751      00000000 
 1752              		.section	.bss.output_val,"aw",%nobits
 1753              		.set	.LANCHOR3,. + 0
 1756              	output_val:
 1757 0000 00       		.space	1
 1758              		.section	.bss.phase_accumulator,"aw",%nobits
 1759              		.align	2
 1760              		.set	.LANCHOR5,. + 0
 1763              	phase_accumulator:
 1764 0000 00000000 		.space	64
 1764      00000000 
 1764      00000000 
 1764      00000000 
 1764      00000000 
 1765              		.section	.bss.update_value_flag,"aw",%nobits
 1766              		.set	.LANCHOR2,. + 0
 1769              	update_value_flag:
 1770 0000 00       		.space	1
 1771              		.section	.data.spi_tx_buffer,"aw",%progbits
 1772              		.align	2
 1775              	spi_tx_buffer:
 1776 0000 31       		.byte	49
 1777 0001 32       		.byte	50
 1778 0002 33       		.byte	51
ARM GAS  /tmp/ccagqd8Q.s 			page 47


 1779              		.section	.rodata.inv_voices,"a",%progbits
 1780              		.align	2
 1783              	inv_voices:
 1784 0000 0000803D 		.word	1031798784
 1785              		.text
 1786              	.Letext0:
 1787              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1788              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1789              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1790              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1791              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 1792              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1793              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1794              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1795              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1796              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1797              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dac.h"
 1798              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1799              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1800              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1801              		.file 16 "Inc/midi.h"
 1802              		.file 17 "/usr/include/newlib/sys/lock.h"
 1803              		.file 18 "/usr/include/newlib/sys/_types.h"
 1804              		.file 19 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1805              		.file 20 "/usr/include/newlib/sys/reent.h"
 1806              		.file 21 "/usr/include/newlib/stdlib.h"
 1807              		.file 22 "Inc/waves.h"
 1808              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1809              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccagqd8Q.s 			page 48


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccagqd8Q.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccagqd8Q.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccagqd8Q.s:485    .text.MX_GPIO_Init:00000000000002c0 $d
     /tmp/ccagqd8Q.s:496    .text.MX_GPIO_Init:00000000000002e4 $t
     /tmp/ccagqd8Q.s:624    .text.MX_GPIO_Init:00000000000003a0 $d
     /tmp/ccagqd8Q.s:634    .text.MX_SPI5_Init:0000000000000000 $t
     /tmp/ccagqd8Q.s:640    .text.MX_SPI5_Init:0000000000000000 MX_SPI5_Init
     /tmp/ccagqd8Q.s:684    .text.MX_SPI5_Init:0000000000000028 $d
                            *COM*:0000000000000058 hspi5
     /tmp/ccagqd8Q.s:690    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccagqd8Q.s:696    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccagqd8Q.s:735    .text.MX_USART1_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart1
     /tmp/ccagqd8Q.s:741    .text.MX_DAC_Init:0000000000000000 $t
     /tmp/ccagqd8Q.s:747    .text.MX_DAC_Init:0000000000000000 MX_DAC_Init
     /tmp/ccagqd8Q.s:793    .text.MX_DAC_Init:0000000000000028 $d
                            *COM*:0000000000000014 hdac
     /tmp/ccagqd8Q.s:799    .text.MX_TIM6_Init:0000000000000000 $t
     /tmp/ccagqd8Q.s:805    .text.MX_TIM6_Init:0000000000000000 MX_TIM6_Init
     /tmp/ccagqd8Q.s:859    .text.MX_TIM6_Init:0000000000000034 $d
                            *COM*:0000000000000040 htim6
     /tmp/ccagqd8Q.s:865    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccagqd8Q.s:872    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccagqd8Q.s:979    .text.SystemClock_Config:000000000000008c $d
     /tmp/ccagqd8Q.s:985    .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/ccagqd8Q.s:992    .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/ccagqd8Q.s:1019   .text.HAL_SPI_TxRxCpltCallback:0000000000000018 $d
                            *COM*:0000000000000003 spi_rx_buffer
     /tmp/ccagqd8Q.s:1026   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccagqd8Q.s:1033   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccagqd8Q.s:1049   .text.HAL_TIM_PeriodElapsedCallback:0000000000000008 $d
     /tmp/ccagqd8Q.s:1057   .text.UpdateOutputValue:0000000000000000 $t
     /tmp/ccagqd8Q.s:1064   .text.UpdateOutputValue:0000000000000000 UpdateOutputValue
     /tmp/ccagqd8Q.s:1166   .text.UpdateOutputValue:00000000000000a0 $d
                            *COM*:0000000000001000 base_sine
                            *COM*:0000000000001000 base_neg_saw
     /tmp/ccagqd8Q.s:1182   .text.UpdateEnvelope:0000000000000000 $t
     /tmp/ccagqd8Q.s:1189   .text.UpdateEnvelope:0000000000000000 UpdateEnvelope
     /tmp/ccagqd8Q.s:1230   .text.UpdateEnvelope:0000000000000030 $d
     /tmp/ccagqd8Q.s:1235   .text.UpdateEnvelope:0000000000000044 $t
     /tmp/ccagqd8Q.s:1356   .text.UpdateEnvelope:0000000000000138 $d
                            *COM*:0000000000000010 env_state
                            *COM*:0000000000001000 base_pos_saw
     /tmp/ccagqd8Q.s:1367   .text.main:0000000000000000 $t
     /tmp/ccagqd8Q.s:1374   .text.main:0000000000000000 main
     /tmp/ccagqd8Q.s:1472   .text.main:0000000000000074 $d
     /tmp/ccagqd8Q.s:1483   .text.Update_R2R_DAC:0000000000000000 $t
     /tmp/ccagqd8Q.s:1490   .text.Update_R2R_DAC:0000000000000000 Update_R2R_DAC
     /tmp/ccagqd8Q.s:1664   .text.Update_R2R_DAC:0000000000000120 $d
     /tmp/ccagqd8Q.s:1670   .text.Error_Handler:0000000000000000 $t
     /tmp/ccagqd8Q.s:1677   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccagqd8Q.s:1715   .bss.MIDI_flag:0000000000000000 MIDI_flag
     /tmp/ccagqd8Q.s:1769   .bss.update_value_flag:0000000000000000 update_value_flag
     /tmp/ccagqd8Q.s:1743   .bss.note_freq:0000000000000000 note_freq
     /tmp/ccagqd8Q.s:1750   .bss.note_on:0000000000000000 note_on
ARM GAS  /tmp/ccagqd8Q.s 			page 49


     /tmp/ccagqd8Q.s:1729   .bss.envelope:0000000000000000 envelope
     /tmp/ccagqd8Q.s:1736   .bss.envelope_index:0000000000000000 envelope_index
     /tmp/ccagqd8Q.s:1756   .bss.output_val:0000000000000000 output_val
     /tmp/ccagqd8Q.s:1763   .bss.phase_accumulator:0000000000000000 phase_accumulator
     /tmp/ccagqd8Q.s:1722   .bss.current_midi_note_msg:0000000000000000 current_midi_note_msg
     /tmp/ccagqd8Q.s:1783   .rodata.inv_voices:0000000000000000 inv_voices
     /tmp/ccagqd8Q.s:1775   .data.spi_tx_buffer:0000000000000000 spi_tx_buffer
                            *COM*:0000000000000100 lfo_sine
                            *COM*:0000000000001000 base_sq
                            *COM*:0000000000001000 base_tri
     /tmp/ccagqd8Q.s:1716   .bss.MIDI_flag:0000000000000000 $d
     /tmp/ccagqd8Q.s:1718   .bss.current_midi_note_msg:0000000000000000 $d
     /tmp/ccagqd8Q.s:1725   .bss.envelope:0000000000000000 $d
     /tmp/ccagqd8Q.s:1732   .bss.envelope_index:0000000000000000 $d
     /tmp/ccagqd8Q.s:1739   .bss.note_freq:0000000000000000 $d
     /tmp/ccagqd8Q.s:1746   .bss.note_on:0000000000000000 $d
     /tmp/ccagqd8Q.s:1757   .bss.output_val:0000000000000000 $d
     /tmp/ccagqd8Q.s:1759   .bss.phase_accumulator:0000000000000000 $d
     /tmp/ccagqd8Q.s:1770   .bss.update_value_flag:0000000000000000 $d
     /tmp/ccagqd8Q.s:1772   .data.spi_tx_buffer:0000000000000000 $d
     /tmp/ccagqd8Q.s:1780   .rodata.inv_voices:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Init
HAL_UART_Init
HAL_DAC_Init
HAL_DAC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_f2d
__aeabi_dmul
__aeabi_d2uiz
midi_notes
HAL_Init
init_wavetable
HAL_TIM_Base_Start_IT
HAL_DAC_Start
HAL_DAC_SetValue
