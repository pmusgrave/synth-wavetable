ARM GAS  /tmp/ccWz8BwV.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB137:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include "midi.h"
  27:Src/main.c    **** #include "waves.h"
  28:Src/main.c    **** #include <math.h>
  29:Src/main.c    **** /* USER CODE END Includes */
  30:Src/main.c    **** 
  31:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  32:Src/main.c    **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/ccWz8BwV.s 			page 2


  33:Src/main.c    **** 
  34:Src/main.c    **** /* USER CODE END PTD */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  37:Src/main.c    **** /* USER CODE BEGIN PD */
  38:Src/main.c    **** #define DDS_SCALE_FACTOR 89.4745833
  39:Src/main.c    **** #define VOICES 16
  40:Src/main.c    **** #define NOT_TRIGGERED 0
  41:Src/main.c    **** #define ATTACK_MODE 1
  42:Src/main.c    **** #define DECAY_MODE 2
  43:Src/main.c    **** #define SUSTAIN_MODE 3
  44:Src/main.c    **** #define RELEASE_MODE 4
  45:Src/main.c    **** /* USER CODE END PD */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  48:Src/main.c    **** /* USER CODE BEGIN PM */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END PM */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** DAC_HandleTypeDef hdac;
  54:Src/main.c    **** 
  55:Src/main.c    **** SPI_HandleTypeDef hspi5;
  56:Src/main.c    **** 
  57:Src/main.c    **** TIM_HandleTypeDef htim6;
  58:Src/main.c    **** TIM_HandleTypeDef htim7;
  59:Src/main.c    **** 
  60:Src/main.c    **** UART_HandleTypeDef huart1;
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN PV */
  63:Src/main.c    **** uint8_t spi_tx_buffer[3];
  64:Src/main.c    **** uint8_t spi_rx_buffer[3];
  65:Src/main.c    **** const float inv_voices = 1.0/VOICES;
  66:Src/main.c    **** volatile uint8_t note_on_flag = 0;
  67:Src/main.c    **** volatile uint8_t note_off_flag = 0;
  68:Src/main.c    **** volatile struct midi_note_msg current_midi_note_msg = {0,0,0};
  69:Src/main.c    **** volatile uint32_t phase_accumulator[VOICES] = {0};
  70:Src/main.c    **** volatile uint8_t output_val = 0;
  71:Src/main.c    **** volatile uint32_t envelope_index[VOICES] = {0};
  72:Src/main.c    **** volatile float envelope[VOICES] = {0};
  73:Src/main.c    **** volatile uint8_t env_state[VOICES];
  74:Src/main.c    **** volatile uint8_t note_on[88] = {0};
  75:Src/main.c    **** volatile uint8_t note_freq[VOICES] = {0};
  76:Src/main.c    **** 
  77:Src/main.c    **** volatile uint32_t lfo_phase_accumulator[VOICES] = {0};
  78:Src/main.c    **** volatile uint16_t lfo_freq[VOICES] = {0};
  79:Src/main.c    **** volatile uint8_t lfo[VOICES] = {0};
  80:Src/main.c    **** 
  81:Src/main.c    **** volatile uint8_t update_value_flag = 0;
  82:Src/main.c    **** volatile uint8_t MIDI_flag = 0;
  83:Src/main.c    **** 
  84:Src/main.c    **** #define MAX_QUEUE_SIZE 255
  85:Src/main.c    **** struct msg_queue {
  86:Src/main.c    ****   uint8_t head;
  87:Src/main.c    ****   uint8_t tail;
  88:Src/main.c    ****   struct midi_note_msg queue[MAX_QUEUE_SIZE];
  89:Src/main.c    **** } midi_msg_queue;
ARM GAS  /tmp/ccWz8BwV.s 			page 3


  90:Src/main.c    **** void enqueue(struct midi_note_msg midi_msg);
  91:Src/main.c    **** struct midi_note_msg dequeue(void);
  92:Src/main.c    **** 
  93:Src/main.c    **** uint8_t attack = 255;
  94:Src/main.c    **** uint8_t decay = 255;
  95:Src/main.c    **** uint8_t sustain = 200;
  96:Src/main.c    **** uint8_t release = 255;
  97:Src/main.c    **** /* USER CODE END PV */
  98:Src/main.c    **** 
  99:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 100:Src/main.c    **** void SystemClock_Config(void);
 101:Src/main.c    **** static void MX_GPIO_Init(void);
 102:Src/main.c    **** static void MX_SPI5_Init(void);
 103:Src/main.c    **** static void MX_USART1_UART_Init(void);
 104:Src/main.c    **** static void MX_DAC_Init(void);
 105:Src/main.c    **** static void MX_TIM6_Init(void);
 106:Src/main.c    **** static void MX_TIM7_Init(void);
 107:Src/main.c    **** /* USER CODE BEGIN PFP */
 108:Src/main.c    **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin);
 109:Src/main.c    **** void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi);
 110:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim);
 111:Src/main.c    **** void UpdateOutputValue(void);
 112:Src/main.c    **** void UpdateLFOs(void);
 113:Src/main.c    **** void UpdateEnvelope(void);
 114:Src/main.c    **** void Update_R2R_DAC(void);
 115:Src/main.c    **** /* USER CODE END PFP */
 116:Src/main.c    **** 
 117:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 118:Src/main.c    **** /* USER CODE BEGIN 0 */
 119:Src/main.c    **** 
 120:Src/main.c    **** /* USER CODE END 0 */
 121:Src/main.c    **** 
 122:Src/main.c    **** /**
 123:Src/main.c    ****   * @brief  The application entry point.
 124:Src/main.c    ****   * @retval int
 125:Src/main.c    ****   */
 126:Src/main.c    **** int main(void)
 127:Src/main.c    **** {
 128:Src/main.c    ****   /* USER CODE BEGIN 1 */
 129:Src/main.c    **** 
 130:Src/main.c    ****   /* USER CODE END 1 */
 131:Src/main.c    ****   
 132:Src/main.c    **** 
 133:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 134:Src/main.c    **** 
 135:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 136:Src/main.c    ****   HAL_Init();
 137:Src/main.c    **** 
 138:Src/main.c    ****   /* USER CODE BEGIN Init */
 139:Src/main.c    **** 
 140:Src/main.c    ****   /* USER CODE END Init */
 141:Src/main.c    **** 
 142:Src/main.c    ****   /* Configure the system clock */
 143:Src/main.c    ****   SystemClock_Config();
 144:Src/main.c    **** 
 145:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 146:Src/main.c    **** 
ARM GAS  /tmp/ccWz8BwV.s 			page 4


 147:Src/main.c    ****   /* USER CODE END SysInit */
 148:Src/main.c    **** 
 149:Src/main.c    ****   /* Initialize all configured peripherals */
 150:Src/main.c    ****   MX_GPIO_Init();
 151:Src/main.c    ****   MX_SPI5_Init();
 152:Src/main.c    ****   MX_USART1_UART_Init();
 153:Src/main.c    ****   //  MX_DAC_Init();
 154:Src/main.c    ****   //  MX_TIM6_Init();
 155:Src/main.c    ****   //  MX_TIM7_Init();
 156:Src/main.c    ****   /* USER CODE BEGIN 2 */
 157:Src/main.c    ****   init_wavetable();
 158:Src/main.c    ****   //  HAL_TIM_Base_Start_IT(&htim6);
 159:Src/main.c    ****   //  HAL_TIM_Base_Start_IT(&htim7);
 160:Src/main.c    ****   //  HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 161:Src/main.c    **** 
 162:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 163:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 164:Src/main.c    ****     note_on[i] = MIDI_NOTE_OFF;
 165:Src/main.c    ****     note_freq[i] = 0;
 166:Src/main.c    ****     lfo_freq[i] = 20;
 167:Src/main.c    ****   }
 168:Src/main.c    **** 
 169:Src/main.c    ****   /*
 170:Src/main.c    ****   note_on[0] = MIDI_NOTE_ON;
 171:Src/main.c    ****   note_freq[0] = 50;
 172:Src/main.c    ****   env_state[0] = ATTACK_MODE;
 173:Src/main.c    **** 
 174:Src/main.c    ****   note_on[1] = MIDI_NOTE_ON;
 175:Src/main.c    ****   note_freq[1] = 54;
 176:Src/main.c    ****   env_state[1] = ATTACK_MODE;
 177:Src/main.c    **** 
 178:Src/main.c    ****   note_on[2] = MIDI_NOTE_ON;
 179:Src/main.c    ****   note_freq[2] = 57;
 180:Src/main.c    ****   env_state[2] = ATTACK_MODE;
 181:Src/main.c    **** 
 182:Src/main.c    ****   note_on[3] = MIDI_NOTE_ON;
 183:Src/main.c    ****   note_freq[3] = 62;
 184:Src/main.c    ****   env_state[3] = ATTACK_MODE;
 185:Src/main.c    ****   */
 186:Src/main.c    **** 
 187:Src/main.c    ****   uint8_t uart_tx_buffer;
 188:Src/main.c    ****   uint8_t init_msg[20] = {"\nSTM32F429!\n"};
 189:Src/main.c    ****   HAL_UART_Transmit(&huart1, init_msg, 20, 50);
 190:Src/main.c    **** 
 191:Src/main.c    ****   //HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, GPIO_PIN_SET);
 192:Src/main.c    **** 
 193:Src/main.c    ****   /* USER CODE END 2 */
 194:Src/main.c    **** 
 195:Src/main.c    ****   /* Infinite loop */
 196:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 197:Src/main.c    ****   while (1)
 198:Src/main.c    ****   {
 199:Src/main.c    ****     //HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, GPIO_PIN_RESET);
 200:Src/main.c    ****     Receive_MIDI(&hspi5, spi_rx_buffer);
 201:Src/main.c    **** 
 202:Src/main.c    ****     if(midi_msg_queue.head != midi_msg_queue.tail) {
 203:Src/main.c    ****       current_midi_note_msg = dequeue();
ARM GAS  /tmp/ccWz8BwV.s 			page 5


 204:Src/main.c    **** 
 205:Src/main.c    ****       uart_tx_buffer = current_midi_note_msg.command;
 206:Src/main.c    ****       HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 207:Src/main.c    ****       uart_tx_buffer = current_midi_note_msg.note;
 208:Src/main.c    ****       HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 209:Src/main.c    ****       uart_tx_buffer = current_midi_note_msg.velocity;
 210:Src/main.c    ****       HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 211:Src/main.c    ****       uart_tx_buffer = '\n';
 212:Src/main.c    ****       HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 213:Src/main.c    **** 
 214:Src/main.c    ****       if(current_midi_note_msg.command == MIDI_NOTE_ON){
 215:Src/main.c    ****         uart_tx_buffer = 'n';
 216:Src/main.c    ****         HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 217:Src/main.c    ****       }
 218:Src/main.c    ****       else if (current_midi_note_msg.command == MIDI_NOTE_OFF){
 219:Src/main.c    ****         uart_tx_buffer = 'f';
 220:Src/main.c    ****         HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 221:Src/main.c    ****       }
 222:Src/main.c    ****       else {
 223:Src/main.c    ****         uart_tx_buffer = 'z';
 224:Src/main.c    ****         HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 225:Src/main.c    ****       }
 226:Src/main.c    **** 
 227:Src/main.c    ****       uart_tx_buffer = '\n';
 228:Src/main.c    ****       HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 229:Src/main.c    **** 
 230:Src/main.c    ****     }
 231:Src/main.c    **** 
 232:Src/main.c    **** 
 233:Src/main.c    ****     if(MIDI_flag) {
 234:Src/main.c    ****       //      HAL_UART_Transmit(&huart1, &spi_rx_buffer[0],1,50);
 235:Src/main.c    ****       MIDI_flag = 0;
 236:Src/main.c    **** 
 237:Src/main.c    ****       switch(spi_rx_buffer[0]) {
 238:Src/main.c    ****       case MIDI_NOTE_ON:
 239:Src/main.c    ****         note_on_flag = 1;
 240:Src/main.c    ****         break;
 241:Src/main.c    ****       case MIDI_NOTE_OFF:
 242:Src/main.c    ****         note_off_flag = 1;
 243:Src/main.c    ****         break;
 244:Src/main.c    ****       default:
 245:Src/main.c    ****         break;
 246:Src/main.c    ****       }
 247:Src/main.c    ****     }
 248:Src/main.c    **** 
 249:Src/main.c    ****     /*
 250:Src/main.c    ****     if(MIDI_flag) {
 251:Src/main.c    ****       MIDI_flag = 0;
 252:Src/main.c    ****       switch(current_midi_note_msg.command) {
 253:Src/main.c    ****       case MIDI_NOTE_ON:
 254:Src/main.c    ****         for (int i = 0; i < VOICES; i++) {
 255:Src/main.c    ****           if(note_on[i] == MIDI_NOTE_OFF){
 256:Src/main.c    ****             note_on[i] = MIDI_NOTE_ON;
 257:Src/main.c    ****             note_freq[i] = current_midi_note_msg.note;
 258:Src/main.c    ****             env_state[i] = ATTACK_MODE;
 259:Src/main.c    ****             break;
 260:Src/main.c    ****           }
ARM GAS  /tmp/ccWz8BwV.s 			page 6


 261:Src/main.c    ****         }
 262:Src/main.c    ****         break;
 263:Src/main.c    ****       case MIDI_NOTE_OFF:
 264:Src/main.c    ****         for (int i = 0; i < VOICES; i++) {
 265:Src/main.c    ****           if (note_on[i] == MIDI_NOTE_ON && note_freq[i] == current_midi_note_msg.note){
 266:Src/main.c    ****             //note_on[i] = MIDI_NOTE_OFF;
 267:Src/main.c    ****             env_state[i] = RELEASE_MODE;
 268:Src/main.c    ****           }
 269:Src/main.c    ****         }
 270:Src/main.c    ****         break;
 271:Src/main.c    ****       }
 272:Src/main.c    **** 
 273:Src/main.c    ****     }
 274:Src/main.c    **** 
 275:Src/main.c    ****     if(update_value_flag) {
 276:Src/main.c    ****       //      __disable_irq();
 277:Src/main.c    ****       UpdateEnvelope();
 278:Src/main.c    ****       UpdateLFOs();
 279:Src/main.c    ****       UpdateOutputValue();
 280:Src/main.c    ****       HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_8B_R, output_val);
 281:Src/main.c    ****       update_value_flag = 0;
 282:Src/main.c    ****       //      __enable_irq();
 283:Src/main.c    ****     }
 284:Src/main.c    **** 
 285:Src/main.c    ****     //Update_R2R_DAC();
 286:Src/main.c    **** 
 287:Src/main.c    ****     */
 288:Src/main.c    **** 
 289:Src/main.c    ****     /* USER CODE END WHILE */
 290:Src/main.c    **** 
 291:Src/main.c    ****     /* USER CODE BEGIN 3 */
 292:Src/main.c    ****   }
 293:Src/main.c    ****   /* USER CODE END 3 */
 294:Src/main.c    **** }
 295:Src/main.c    **** 
 296:Src/main.c    **** /**
 297:Src/main.c    ****   * @brief System Clock Configuration
 298:Src/main.c    ****   * @retval None
 299:Src/main.c    ****   */
 300:Src/main.c    **** void SystemClock_Config(void)
 301:Src/main.c    **** {
 302:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 303:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 304:Src/main.c    **** 
 305:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 306:Src/main.c    ****   */
 307:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 308:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 309:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 310:Src/main.c    ****   */
 311:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 312:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 313:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 314:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 315:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 316:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 317:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 100;
ARM GAS  /tmp/ccWz8BwV.s 			page 7


 318:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 319:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 320:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 321:Src/main.c    ****   {
 322:Src/main.c    ****     Error_Handler();
 323:Src/main.c    ****   }
 324:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 325:Src/main.c    ****   */
 326:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 327:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 328:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 329:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 330:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 331:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 332:Src/main.c    **** 
 333:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 334:Src/main.c    ****   {
 335:Src/main.c    ****     Error_Handler();
 336:Src/main.c    ****   }
 337:Src/main.c    **** }
 338:Src/main.c    **** 
 339:Src/main.c    **** /**
 340:Src/main.c    ****   * @brief DAC Initialization Function
 341:Src/main.c    ****   * @param None
 342:Src/main.c    ****   * @retval None
 343:Src/main.c    ****   */
 344:Src/main.c    **** static void MX_DAC_Init(void)
 345:Src/main.c    **** {
 346:Src/main.c    **** 
 347:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 0 */
 348:Src/main.c    **** 
 349:Src/main.c    ****   /* USER CODE END DAC_Init 0 */
 350:Src/main.c    **** 
 351:Src/main.c    ****   DAC_ChannelConfTypeDef sConfig = {0};
 352:Src/main.c    **** 
 353:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 1 */
 354:Src/main.c    **** 
 355:Src/main.c    ****   /* USER CODE END DAC_Init 1 */
 356:Src/main.c    ****   /** DAC Initialization 
 357:Src/main.c    ****   */
 358:Src/main.c    ****   hdac.Instance = DAC;
 359:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 360:Src/main.c    ****   {
 361:Src/main.c    ****     Error_Handler();
 362:Src/main.c    ****   }
 363:Src/main.c    ****   /** DAC channel OUT2 config 
 364:Src/main.c    ****   */
 365:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 366:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 367:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 368:Src/main.c    ****   {
 369:Src/main.c    ****     Error_Handler();
 370:Src/main.c    ****   }
 371:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 2 */
 372:Src/main.c    **** 
 373:Src/main.c    ****   /* USER CODE END DAC_Init 2 */
 374:Src/main.c    **** 
ARM GAS  /tmp/ccWz8BwV.s 			page 8


 375:Src/main.c    **** }
 376:Src/main.c    **** 
 377:Src/main.c    **** /**
 378:Src/main.c    ****   * @brief SPI5 Initialization Function
 379:Src/main.c    ****   * @param None
 380:Src/main.c    ****   * @retval None
 381:Src/main.c    ****   */
 382:Src/main.c    **** static void MX_SPI5_Init(void)
 383:Src/main.c    **** {
 384:Src/main.c    **** 
 385:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 0 */
 386:Src/main.c    **** 
 387:Src/main.c    ****   /* USER CODE END SPI5_Init 0 */
 388:Src/main.c    **** 
 389:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 1 */
 390:Src/main.c    **** 
 391:Src/main.c    ****   /* USER CODE END SPI5_Init 1 */
 392:Src/main.c    ****   /* SPI5 parameter configuration*/
 393:Src/main.c    ****   hspi5.Instance = SPI5;
 394:Src/main.c    ****   hspi5.Init.Mode = SPI_MODE_SLAVE;
 395:Src/main.c    ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 396:Src/main.c    ****   hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 397:Src/main.c    ****   hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 398:Src/main.c    ****   hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 399:Src/main.c    ****   hspi5.Init.NSS = SPI_NSS_HARD_INPUT;
 400:Src/main.c    ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 401:Src/main.c    ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 402:Src/main.c    ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 403:Src/main.c    ****   hspi5.Init.CRCPolynomial = 10;
 404:Src/main.c    ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 405:Src/main.c    ****   {
 406:Src/main.c    ****     Error_Handler();
 407:Src/main.c    ****   }
 408:Src/main.c    ****   /* USER CODE BEGIN SPI5_Init 2 */
 409:Src/main.c    **** 
 410:Src/main.c    ****   /* USER CODE END SPI5_Init 2 */
 411:Src/main.c    **** 
 412:Src/main.c    **** }
 413:Src/main.c    **** 
 414:Src/main.c    **** /**
 415:Src/main.c    ****   * @brief TIM6 Initialization Function
 416:Src/main.c    ****   * @param None
 417:Src/main.c    ****   * @retval None
 418:Src/main.c    ****   */
 419:Src/main.c    **** static void MX_TIM6_Init(void)
 420:Src/main.c    **** {
 421:Src/main.c    **** 
 422:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 0 */
 423:Src/main.c    **** 
 424:Src/main.c    ****   /* USER CODE END TIM6_Init 0 */
 425:Src/main.c    **** 
 426:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 427:Src/main.c    **** 
 428:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 1 */
 429:Src/main.c    **** 
 430:Src/main.c    ****   /* USER CODE END TIM6_Init 1 */
 431:Src/main.c    ****   htim6.Instance = TIM6;
ARM GAS  /tmp/ccWz8BwV.s 			page 9


 432:Src/main.c    ****   htim6.Init.Prescaler = 0;
 433:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 434:Src/main.c    ****   htim6.Init.Period = 1290;
 435:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 436:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 437:Src/main.c    ****   {
 438:Src/main.c    ****     Error_Handler();
 439:Src/main.c    ****   }
 440:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 441:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 442:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 443:Src/main.c    ****   {
 444:Src/main.c    ****     Error_Handler();
 445:Src/main.c    ****   }
 446:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 2 */
 447:Src/main.c    **** 
 448:Src/main.c    ****   /* USER CODE END TIM6_Init 2 */
 449:Src/main.c    **** 
 450:Src/main.c    **** }
 451:Src/main.c    **** 
 452:Src/main.c    **** /**
 453:Src/main.c    ****   * @brief TIM7 Initialization Function
 454:Src/main.c    ****   * @param None
 455:Src/main.c    ****   * @retval None
 456:Src/main.c    ****   */
 457:Src/main.c    **** static void MX_TIM7_Init(void)
 458:Src/main.c    **** {
 459:Src/main.c    **** 
 460:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 0 */
 461:Src/main.c    **** 
 462:Src/main.c    ****   /* USER CODE END TIM7_Init 0 */
 463:Src/main.c    **** 
 464:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 465:Src/main.c    **** 
 466:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 1 */
 467:Src/main.c    **** 
 468:Src/main.c    ****   /* USER CODE END TIM7_Init 1 */
 469:Src/main.c    ****   htim7.Instance = TIM7;
 470:Src/main.c    ****   htim7.Init.Prescaler = 0;
 471:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 472:Src/main.c    ****   htim7.Init.Period = 10000;
 473:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 474:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 475:Src/main.c    ****   {
 476:Src/main.c    ****     Error_Handler();
 477:Src/main.c    ****   }
 478:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 479:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 480:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 481:Src/main.c    ****   {
 482:Src/main.c    ****     Error_Handler();
 483:Src/main.c    ****   }
 484:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 2 */
 485:Src/main.c    **** 
 486:Src/main.c    ****   /* USER CODE END TIM7_Init 2 */
 487:Src/main.c    **** 
 488:Src/main.c    **** }
ARM GAS  /tmp/ccWz8BwV.s 			page 10


 489:Src/main.c    **** 
 490:Src/main.c    **** /**
 491:Src/main.c    ****   * @brief USART1 Initialization Function
 492:Src/main.c    ****   * @param None
 493:Src/main.c    ****   * @retval None
 494:Src/main.c    ****   */
 495:Src/main.c    **** static void MX_USART1_UART_Init(void)
 496:Src/main.c    **** {
 497:Src/main.c    **** 
 498:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 499:Src/main.c    **** 
 500:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 501:Src/main.c    **** 
 502:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 503:Src/main.c    **** 
 504:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 505:Src/main.c    ****   huart1.Instance = USART1;
 506:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 507:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 508:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 509:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 510:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 511:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 512:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 513:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 514:Src/main.c    ****   {
 515:Src/main.c    ****     Error_Handler();
 516:Src/main.c    ****   }
 517:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 518:Src/main.c    **** 
 519:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 520:Src/main.c    **** 
 521:Src/main.c    **** }
 522:Src/main.c    **** 
 523:Src/main.c    **** /**
 524:Src/main.c    ****   * @brief GPIO Initialization Function
 525:Src/main.c    ****   * @param None
 526:Src/main.c    ****   * @retval None
 527:Src/main.c    ****   */
 528:Src/main.c    **** static void MX_GPIO_Init(void)
 529:Src/main.c    **** {
  27              		.loc 1 529 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 56
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
ARM GAS  /tmp/ccWz8BwV.s 			page 11


  43 0004 8FB0     		sub	sp, sp, #60
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 96
 530:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  46              		.loc 1 530 0
  47 0006 0024     		movs	r4, #0
  48 0008 0994     		str	r4, [sp, #36]
  49 000a 0A94     		str	r4, [sp, #40]
  50 000c 0B94     		str	r4, [sp, #44]
  51 000e 0C94     		str	r4, [sp, #48]
  52 0010 0D94     		str	r4, [sp, #52]
  53              	.LBB2:
 531:Src/main.c    **** 
 532:Src/main.c    ****   /* GPIO Ports Clock Enable */
 533:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  54              		.loc 1 533 0
  55 0012 0194     		str	r4, [sp, #4]
  56 0014 AA4B     		ldr	r3, .L3
  57 0016 1A6B     		ldr	r2, [r3, #48]
  58 0018 42F00402 		orr	r2, r2, #4
  59 001c 1A63     		str	r2, [r3, #48]
  60 001e 1A6B     		ldr	r2, [r3, #48]
  61 0020 02F00402 		and	r2, r2, #4
  62 0024 0192     		str	r2, [sp, #4]
  63 0026 019A     		ldr	r2, [sp, #4]
  64              	.LBE2:
  65              	.LBB3:
 534:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  66              		.loc 1 534 0
  67 0028 0294     		str	r4, [sp, #8]
  68 002a 1A6B     		ldr	r2, [r3, #48]
  69 002c 42F02002 		orr	r2, r2, #32
  70 0030 1A63     		str	r2, [r3, #48]
  71 0032 1A6B     		ldr	r2, [r3, #48]
  72 0034 02F02002 		and	r2, r2, #32
  73 0038 0292     		str	r2, [sp, #8]
  74 003a 029A     		ldr	r2, [sp, #8]
  75              	.LBE3:
  76              	.LBB4:
 535:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  77              		.loc 1 535 0
  78 003c 0394     		str	r4, [sp, #12]
  79 003e 1A6B     		ldr	r2, [r3, #48]
  80 0040 42F08002 		orr	r2, r2, #128
  81 0044 1A63     		str	r2, [r3, #48]
  82 0046 1A6B     		ldr	r2, [r3, #48]
  83 0048 02F08002 		and	r2, r2, #128
  84 004c 0392     		str	r2, [sp, #12]
  85 004e 039A     		ldr	r2, [sp, #12]
  86              	.LBE4:
  87              	.LBB5:
 536:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  88              		.loc 1 536 0
  89 0050 0494     		str	r4, [sp, #16]
  90 0052 1A6B     		ldr	r2, [r3, #48]
  91 0054 42F00102 		orr	r2, r2, #1
  92 0058 1A63     		str	r2, [r3, #48]
ARM GAS  /tmp/ccWz8BwV.s 			page 12


  93 005a 1A6B     		ldr	r2, [r3, #48]
  94 005c 02F00102 		and	r2, r2, #1
  95 0060 0492     		str	r2, [sp, #16]
  96 0062 049A     		ldr	r2, [sp, #16]
  97              	.LBE5:
  98              	.LBB6:
 537:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  99              		.loc 1 537 0
 100 0064 0594     		str	r4, [sp, #20]
 101 0066 1A6B     		ldr	r2, [r3, #48]
 102 0068 42F00202 		orr	r2, r2, #2
 103 006c 1A63     		str	r2, [r3, #48]
 104 006e 1A6B     		ldr	r2, [r3, #48]
 105 0070 02F00202 		and	r2, r2, #2
 106 0074 0592     		str	r2, [sp, #20]
 107 0076 059A     		ldr	r2, [sp, #20]
 108              	.LBE6:
 109              	.LBB7:
 538:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 110              		.loc 1 538 0
 111 0078 0694     		str	r4, [sp, #24]
 112 007a 1A6B     		ldr	r2, [r3, #48]
 113 007c 42F04002 		orr	r2, r2, #64
 114 0080 1A63     		str	r2, [r3, #48]
 115 0082 1A6B     		ldr	r2, [r3, #48]
 116 0084 02F04002 		and	r2, r2, #64
 117 0088 0692     		str	r2, [sp, #24]
 118 008a 069A     		ldr	r2, [sp, #24]
 119              	.LBE7:
 120              	.LBB8:
 539:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 121              		.loc 1 539 0
 122 008c 0794     		str	r4, [sp, #28]
 123 008e 1A6B     		ldr	r2, [r3, #48]
 124 0090 42F01002 		orr	r2, r2, #16
 125 0094 1A63     		str	r2, [r3, #48]
 126 0096 1A6B     		ldr	r2, [r3, #48]
 127 0098 02F01002 		and	r2, r2, #16
 128 009c 0792     		str	r2, [sp, #28]
 129 009e 079A     		ldr	r2, [sp, #28]
 130              	.LBE8:
 131              	.LBB9:
 540:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 132              		.loc 1 540 0
 133 00a0 0894     		str	r4, [sp, #32]
 134 00a2 1A6B     		ldr	r2, [r3, #48]
 135 00a4 42F00802 		orr	r2, r2, #8
 136 00a8 1A63     		str	r2, [r3, #48]
 137 00aa 1B6B     		ldr	r3, [r3, #48]
 138 00ac 03F00803 		and	r3, r3, #8
 139 00b0 0893     		str	r3, [sp, #32]
 140 00b2 089B     		ldr	r3, [sp, #32]
 141              	.LBE9:
 541:Src/main.c    **** 
 542:Src/main.c    ****   /*Configure GPIO pin Output Level */
 543:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin, GPIO_PIN_RESET);
 142              		.loc 1 543 0
ARM GAS  /tmp/ccWz8BwV.s 			page 13


 143 00b4 2246     		mov	r2, r4
 144 00b6 1621     		movs	r1, #22
 145 00b8 8248     		ldr	r0, .L3+4
 146 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 147              	.LVL0:
 544:Src/main.c    **** 
 545:Src/main.c    ****   /*Configure GPIO pin Output Level */
 546:Src/main.c    ****   HAL_GPIO_WritePin(ACP_RST_GPIO_Port, ACP_RST_Pin, GPIO_PIN_RESET);
 148              		.loc 1 546 0
 149 00be 2246     		mov	r2, r4
 150 00c0 8021     		movs	r1, #128
 151 00c2 8148     		ldr	r0, .L3+8
 152 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 153              	.LVL1:
 547:Src/main.c    **** 
 548:Src/main.c    ****   /*Configure GPIO pin Output Level */
 549:Src/main.c    ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15, GPIO_PIN_RESET);
 154              		.loc 1 549 0
 155 00c8 DFF810A2 		ldr	r10, .L3+28
 156 00cc 2246     		mov	r2, r4
 157 00ce 4FF46041 		mov	r1, #57344
 158 00d2 5046     		mov	r0, r10
 159 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 160              	.LVL2:
 550:Src/main.c    **** 
 551:Src/main.c    ****   /*Configure GPIO pin Output Level */
 552:Src/main.c    ****   HAL_GPIO_WritePin(GPIOG, GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD4_Pin, GPIO_PIN_RESET);
 161              		.loc 1 552 0
 162 00d8 2246     		mov	r2, r4
 163 00da 46F20301 		movw	r1, #24579
 164 00de 7B48     		ldr	r0, .L3+12
 165 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 166              	.LVL3:
 553:Src/main.c    **** 
 554:Src/main.c    ****   /*Configure GPIO pin Output Level */
 555:Src/main.c    ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 167              		.loc 1 555 0
 168 00e4 2246     		mov	r2, r4
 169 00e6 4FF68071 		movw	r1, #65408
 170 00ea 7948     		ldr	r0, .L3+16
 171 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 172              	.LVL4:
 556:Src/main.c    ****                           |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
 557:Src/main.c    ****                           |GPIO_PIN_15, GPIO_PIN_RESET);
 558:Src/main.c    **** 
 559:Src/main.c    ****   /*Configure GPIO pin Output Level */
 560:Src/main.c    ****   HAL_GPIO_WritePin(GPIOD, RDX_Pin|WRX_DCX_Pin, GPIO_PIN_RESET);
 173              		.loc 1 560 0
 174 00f0 2246     		mov	r2, r4
 175 00f2 4FF44051 		mov	r1, #12288
 176 00f6 7748     		ldr	r0, .L3+20
 177 00f8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 178              	.LVL5:
 561:Src/main.c    **** 
 562:Src/main.c    ****   /*Configure GPIO pins : A0_Pin A1_Pin A2_Pin A3_Pin 
 563:Src/main.c    ****                            A4_Pin A5_Pin SDNRAS_Pin A6_Pin */
 564:Src/main.c    ****   GPIO_InitStruct.Pin = A0_Pin|A1_Pin|A2_Pin|A3_Pin 
ARM GAS  /tmp/ccWz8BwV.s 			page 14


 179              		.loc 1 564 0
 180 00fc 41F63F03 		movw	r3, #6207
 181 0100 0993     		str	r3, [sp, #36]
 565:Src/main.c    ****                           |A4_Pin|A5_Pin|SDNRAS_Pin|A6_Pin;
 566:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 182              		.loc 1 566 0
 183 0102 0225     		movs	r5, #2
 184 0104 0A95     		str	r5, [sp, #40]
 567:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 185              		.loc 1 567 0
 186 0106 0B94     		str	r4, [sp, #44]
 568:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 187              		.loc 1 568 0
 188 0108 0327     		movs	r7, #3
 189 010a 0C97     		str	r7, [sp, #48]
 569:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 190              		.loc 1 569 0
 191 010c 4FF00C08 		mov	r8, #12
 192 0110 CDF83480 		str	r8, [sp, #52]
 570:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 193              		.loc 1 570 0
 194 0114 09A9     		add	r1, sp, #36
 195 0116 5046     		mov	r0, r10
 196 0118 FFF7FEFF 		bl	HAL_GPIO_Init
 197              	.LVL6:
 571:Src/main.c    **** 
 572:Src/main.c    ****   /*Configure GPIO pin : ENABLE_Pin */
 573:Src/main.c    ****   GPIO_InitStruct.Pin = ENABLE_Pin;
 198              		.loc 1 573 0
 199 011c 4FF48063 		mov	r3, #1024
 200 0120 0993     		str	r3, [sp, #36]
 574:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 201              		.loc 1 574 0
 202 0122 0A95     		str	r5, [sp, #40]
 575:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 203              		.loc 1 575 0
 204 0124 0B94     		str	r4, [sp, #44]
 576:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 205              		.loc 1 576 0
 206 0126 0C94     		str	r4, [sp, #48]
 577:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 207              		.loc 1 577 0
 208 0128 4FF00E09 		mov	r9, #14
 209 012c CDF83490 		str	r9, [sp, #52]
 578:Src/main.c    ****   HAL_GPIO_Init(ENABLE_GPIO_Port, &GPIO_InitStruct);
 210              		.loc 1 578 0
 211 0130 09A9     		add	r1, sp, #36
 212 0132 5046     		mov	r0, r10
 213 0134 FFF7FEFF 		bl	HAL_GPIO_Init
 214              	.LVL7:
 579:Src/main.c    **** 
 580:Src/main.c    ****   /*Configure GPIO pin : SDNWE_Pin */
 581:Src/main.c    ****   GPIO_InitStruct.Pin = SDNWE_Pin;
 215              		.loc 1 581 0
 216 0138 0126     		movs	r6, #1
 217 013a 0996     		str	r6, [sp, #36]
 582:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  /tmp/ccWz8BwV.s 			page 15


 218              		.loc 1 582 0
 219 013c 0A95     		str	r5, [sp, #40]
 583:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 220              		.loc 1 583 0
 221 013e 0B94     		str	r4, [sp, #44]
 584:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 222              		.loc 1 584 0
 223 0140 0C97     		str	r7, [sp, #48]
 585:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 224              		.loc 1 585 0
 225 0142 CDF83480 		str	r8, [sp, #52]
 586:Src/main.c    ****   HAL_GPIO_Init(SDNWE_GPIO_Port, &GPIO_InitStruct);
 226              		.loc 1 586 0
 227 0146 09A9     		add	r1, sp, #36
 228 0148 5E48     		ldr	r0, .L3+4
 229 014a FFF7FEFF 		bl	HAL_GPIO_Init
 230              	.LVL8:
 587:Src/main.c    **** 
 588:Src/main.c    ****   /*Configure GPIO pins : NCS_MEMS_SPI_Pin CSX_Pin OTG_FS_PSO_Pin */
 589:Src/main.c    ****   GPIO_InitStruct.Pin = NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin;
 231              		.loc 1 589 0
 232 014e 1623     		movs	r3, #22
 233 0150 0993     		str	r3, [sp, #36]
 590:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 234              		.loc 1 590 0
 235 0152 0A96     		str	r6, [sp, #40]
 591:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 236              		.loc 1 591 0
 237 0154 0B94     		str	r4, [sp, #44]
 592:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 238              		.loc 1 592 0
 239 0156 0C94     		str	r4, [sp, #48]
 593:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 240              		.loc 1 593 0
 241 0158 09A9     		add	r1, sp, #36
 242 015a 5A48     		ldr	r0, .L3+4
 243 015c FFF7FEFF 		bl	HAL_GPIO_Init
 244              	.LVL9:
 594:Src/main.c    **** 
 595:Src/main.c    ****   /*Configure GPIO pins : B1_Pin MEMS_INT1_Pin MEMS_INT2_Pin TP_INT1_Pin */
 596:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin|MEMS_INT1_Pin|MEMS_INT2_Pin|TP_INT1_Pin;
 245              		.loc 1 596 0
 246 0160 48F20703 		movw	r3, #32775
 247 0164 0993     		str	r3, [sp, #36]
 597:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 248              		.loc 1 597 0
 249 0166 DFF878B1 		ldr	fp, .L3+32
 250 016a CDF828B0 		str	fp, [sp, #40]
 598:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 251              		.loc 1 598 0
 252 016e 0B94     		str	r4, [sp, #44]
 599:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 253              		.loc 1 599 0
 254 0170 09A9     		add	r1, sp, #36
 255 0172 5548     		ldr	r0, .L3+8
 256 0174 FFF7FEFF 		bl	HAL_GPIO_Init
 257              	.LVL10:
ARM GAS  /tmp/ccWz8BwV.s 			page 16


 600:Src/main.c    **** 
 601:Src/main.c    ****   /*Configure GPIO pins : B5_Pin VSYNC_Pin G2_Pin R4_Pin 
 602:Src/main.c    ****                            R5_Pin */
 603:Src/main.c    ****   GPIO_InitStruct.Pin = B5_Pin|VSYNC_Pin|G2_Pin|R4_Pin 
 258              		.loc 1 603 0
 259 0178 41F65803 		movw	r3, #6232
 260 017c 0993     		str	r3, [sp, #36]
 604:Src/main.c    ****                           |R5_Pin;
 605:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 261              		.loc 1 605 0
 262 017e 0A95     		str	r5, [sp, #40]
 606:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 263              		.loc 1 606 0
 264 0180 0B94     		str	r4, [sp, #44]
 607:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 265              		.loc 1 607 0
 266 0182 0C94     		str	r4, [sp, #48]
 608:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 267              		.loc 1 608 0
 268 0184 CDF83490 		str	r9, [sp, #52]
 609:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 269              		.loc 1 609 0
 270 0188 09A9     		add	r1, sp, #36
 271 018a 4F48     		ldr	r0, .L3+8
 272 018c FFF7FEFF 		bl	HAL_GPIO_Init
 273              	.LVL11:
 610:Src/main.c    **** 
 611:Src/main.c    ****   /*Configure GPIO pin : ACP_RST_Pin */
 612:Src/main.c    ****   GPIO_InitStruct.Pin = ACP_RST_Pin;
 274              		.loc 1 612 0
 275 0190 8023     		movs	r3, #128
 276 0192 0993     		str	r3, [sp, #36]
 613:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 277              		.loc 1 613 0
 278 0194 0A96     		str	r6, [sp, #40]
 614:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 279              		.loc 1 614 0
 280 0196 0B94     		str	r4, [sp, #44]
 615:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 281              		.loc 1 615 0
 282 0198 0C94     		str	r4, [sp, #48]
 616:Src/main.c    ****   HAL_GPIO_Init(ACP_RST_GPIO_Port, &GPIO_InitStruct);
 283              		.loc 1 616 0
 284 019a 09A9     		add	r1, sp, #36
 285 019c 4A48     		ldr	r0, .L3+8
 286 019e FFF7FEFF 		bl	HAL_GPIO_Init
 287              	.LVL12:
 617:Src/main.c    **** 
 618:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_OC_Pin */
 619:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_OC_Pin;
 288              		.loc 1 619 0
 289 01a2 2023     		movs	r3, #32
 290 01a4 0993     		str	r3, [sp, #36]
 620:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 291              		.loc 1 620 0
 292 01a6 CDF828B0 		str	fp, [sp, #40]
 621:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccWz8BwV.s 			page 17


 293              		.loc 1 621 0
 294 01aa 0B94     		str	r4, [sp, #44]
 622:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_OC_GPIO_Port, &GPIO_InitStruct);
 295              		.loc 1 622 0
 296 01ac 09A9     		add	r1, sp, #36
 297 01ae 4548     		ldr	r0, .L3+4
 298 01b0 FFF7FEFF 		bl	HAL_GPIO_Init
 299              	.LVL13:
 623:Src/main.c    **** 
 624:Src/main.c    ****   /*Configure GPIO pins : R3_Pin R6_Pin */
 625:Src/main.c    ****   GPIO_InitStruct.Pin = R3_Pin|R6_Pin;
 300              		.loc 1 625 0
 301 01b4 0997     		str	r7, [sp, #36]
 626:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 302              		.loc 1 626 0
 303 01b6 0A95     		str	r5, [sp, #40]
 627:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 304              		.loc 1 627 0
 305 01b8 0B94     		str	r4, [sp, #44]
 628:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 306              		.loc 1 628 0
 307 01ba 0C94     		str	r4, [sp, #48]
 629:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 308              		.loc 1 629 0
 309 01bc 0923     		movs	r3, #9
 310 01be 0D93     		str	r3, [sp, #52]
 630:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 311              		.loc 1 630 0
 312 01c0 09A9     		add	r1, sp, #36
 313 01c2 4548     		ldr	r0, .L3+24
 314 01c4 FFF7FEFF 		bl	HAL_GPIO_Init
 315              	.LVL14:
 631:Src/main.c    **** 
 632:Src/main.c    ****   /*Configure GPIO pin : BOOT1_Pin */
 633:Src/main.c    ****   GPIO_InitStruct.Pin = BOOT1_Pin;
 316              		.loc 1 633 0
 317 01c8 4FF0040B 		mov	fp, #4
 318 01cc CDF824B0 		str	fp, [sp, #36]
 634:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 319              		.loc 1 634 0
 320 01d0 0A94     		str	r4, [sp, #40]
 635:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 321              		.loc 1 635 0
 322 01d2 0B94     		str	r4, [sp, #44]
 636:Src/main.c    ****   HAL_GPIO_Init(BOOT1_GPIO_Port, &GPIO_InitStruct);
 323              		.loc 1 636 0
 324 01d4 09A9     		add	r1, sp, #36
 325 01d6 4048     		ldr	r0, .L3+24
 326 01d8 FFF7FEFF 		bl	HAL_GPIO_Init
 327              	.LVL15:
 637:Src/main.c    **** 
 638:Src/main.c    ****   /*Configure GPIO pins : PF13 PF14 PF15 */
 639:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 328              		.loc 1 639 0
 329 01dc 4FF46043 		mov	r3, #57344
 330 01e0 0993     		str	r3, [sp, #36]
 640:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  /tmp/ccWz8BwV.s 			page 18


 331              		.loc 1 640 0
 332 01e2 0A96     		str	r6, [sp, #40]
 641:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 333              		.loc 1 641 0
 334 01e4 0B94     		str	r4, [sp, #44]
 642:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 335              		.loc 1 642 0
 336 01e6 0C94     		str	r4, [sp, #48]
 643:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 337              		.loc 1 643 0
 338 01e8 09A9     		add	r1, sp, #36
 339 01ea 5046     		mov	r0, r10
 340 01ec FFF7FEFF 		bl	HAL_GPIO_Init
 341              	.LVL16:
 644:Src/main.c    **** 
 645:Src/main.c    ****   /*Configure GPIO pins : PG0 PG1 LD3_Pin LD4_Pin */
 646:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|LD3_Pin|LD4_Pin;
 342              		.loc 1 646 0
 343 01f0 46F20303 		movw	r3, #24579
 344 01f4 0993     		str	r3, [sp, #36]
 647:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 345              		.loc 1 647 0
 346 01f6 0A96     		str	r6, [sp, #40]
 648:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 347              		.loc 1 648 0
 348 01f8 0B94     		str	r4, [sp, #44]
 649:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 349              		.loc 1 649 0
 350 01fa 0C94     		str	r4, [sp, #48]
 650:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 351              		.loc 1 650 0
 352 01fc 09A9     		add	r1, sp, #36
 353 01fe 3348     		ldr	r0, .L3+12
 354 0200 FFF7FEFF 		bl	HAL_GPIO_Init
 355              	.LVL17:
 651:Src/main.c    **** 
 652:Src/main.c    ****   /*Configure GPIO pins : PE7 PE8 PE9 PE10 
 653:Src/main.c    ****                            PE11 PE12 PE13 PE14 
 654:Src/main.c    ****                            PE15 */
 655:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 356              		.loc 1 655 0
 357 0204 4FF68073 		movw	r3, #65408
 358 0208 0993     		str	r3, [sp, #36]
 656:Src/main.c    ****                           |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
 657:Src/main.c    ****                           |GPIO_PIN_15;
 658:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 359              		.loc 1 658 0
 360 020a 0A96     		str	r6, [sp, #40]
 659:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 361              		.loc 1 659 0
 362 020c 0B94     		str	r4, [sp, #44]
 660:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 363              		.loc 1 660 0
 364 020e 0C94     		str	r4, [sp, #48]
 661:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 365              		.loc 1 661 0
 366 0210 09A9     		add	r1, sp, #36
ARM GAS  /tmp/ccWz8BwV.s 			page 19


 367 0212 2F48     		ldr	r0, .L3+16
 368 0214 FFF7FEFF 		bl	HAL_GPIO_Init
 369              	.LVL18:
 662:Src/main.c    **** 
 663:Src/main.c    ****   /*Configure GPIO pins : G4_Pin G5_Pin B6_Pin B7_Pin */
 664:Src/main.c    ****   GPIO_InitStruct.Pin = G4_Pin|G5_Pin|B6_Pin|B7_Pin;
 370              		.loc 1 664 0
 371 0218 4FF47063 		mov	r3, #3840
 372 021c 0993     		str	r3, [sp, #36]
 665:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 373              		.loc 1 665 0
 374 021e 0A95     		str	r5, [sp, #40]
 666:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 375              		.loc 1 666 0
 376 0220 0B94     		str	r4, [sp, #44]
 667:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 377              		.loc 1 667 0
 378 0222 0C94     		str	r4, [sp, #48]
 668:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 379              		.loc 1 668 0
 380 0224 CDF83490 		str	r9, [sp, #52]
 669:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 381              		.loc 1 669 0
 382 0228 09A9     		add	r1, sp, #36
 383 022a 2B48     		ldr	r0, .L3+24
 384 022c FFF7FEFF 		bl	HAL_GPIO_Init
 385              	.LVL19:
 670:Src/main.c    **** 
 671:Src/main.c    ****   /*Configure GPIO pins : OTG_HS_ID_Pin OTG_HS_DM_Pin OTG_HS_DP_Pin */
 672:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_HS_ID_Pin|OTG_HS_DM_Pin|OTG_HS_DP_Pin;
 386              		.loc 1 672 0
 387 0230 4FF45043 		mov	r3, #53248
 388 0234 0993     		str	r3, [sp, #36]
 673:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 389              		.loc 1 673 0
 390 0236 0A95     		str	r5, [sp, #40]
 674:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 391              		.loc 1 674 0
 392 0238 0B94     		str	r4, [sp, #44]
 675:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 393              		.loc 1 675 0
 394 023a 0C94     		str	r4, [sp, #48]
 676:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;
 395              		.loc 1 676 0
 396 023c CDF83480 		str	r8, [sp, #52]
 677:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 397              		.loc 1 677 0
 398 0240 09A9     		add	r1, sp, #36
 399 0242 2548     		ldr	r0, .L3+24
 400 0244 FFF7FEFF 		bl	HAL_GPIO_Init
 401              	.LVL20:
 678:Src/main.c    **** 
 679:Src/main.c    ****   /*Configure GPIO pin : VBUS_HS_Pin */
 680:Src/main.c    ****   GPIO_InitStruct.Pin = VBUS_HS_Pin;
 402              		.loc 1 680 0
 403 0248 4FF40053 		mov	r3, #8192
 404 024c 0993     		str	r3, [sp, #36]
ARM GAS  /tmp/ccWz8BwV.s 			page 20


 681:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 405              		.loc 1 681 0
 406 024e 0A94     		str	r4, [sp, #40]
 682:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 407              		.loc 1 682 0
 408 0250 0B94     		str	r4, [sp, #44]
 683:Src/main.c    ****   HAL_GPIO_Init(VBUS_HS_GPIO_Port, &GPIO_InitStruct);
 409              		.loc 1 683 0
 410 0252 09A9     		add	r1, sp, #36
 411 0254 2048     		ldr	r0, .L3+24
 412 0256 FFF7FEFF 		bl	HAL_GPIO_Init
 413              	.LVL21:
 684:Src/main.c    **** 
 685:Src/main.c    ****   /*Configure GPIO pins : D13_Pin D14_Pin D15_Pin D0_Pin 
 686:Src/main.c    ****                            D1_Pin D2_Pin D3_Pin */
 687:Src/main.c    ****   GPIO_InitStruct.Pin = D13_Pin|D14_Pin|D15_Pin|D0_Pin 
 414              		.loc 1 687 0
 415 025a 4CF20373 		movw	r3, #50947
 416 025e 0993     		str	r3, [sp, #36]
 688:Src/main.c    ****                           |D1_Pin|D2_Pin|D3_Pin;
 689:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 417              		.loc 1 689 0
 418 0260 0A95     		str	r5, [sp, #40]
 690:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 419              		.loc 1 690 0
 420 0262 0B94     		str	r4, [sp, #44]
 691:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 421              		.loc 1 691 0
 422 0264 0C97     		str	r7, [sp, #48]
 692:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 423              		.loc 1 692 0
 424 0266 CDF83480 		str	r8, [sp, #52]
 693:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 425              		.loc 1 693 0
 426 026a 09A9     		add	r1, sp, #36
 427 026c 1948     		ldr	r0, .L3+20
 428 026e FFF7FEFF 		bl	HAL_GPIO_Init
 429              	.LVL22:
 694:Src/main.c    **** 
 695:Src/main.c    ****   /*Configure GPIO pin : TE_Pin */
 696:Src/main.c    ****   GPIO_InitStruct.Pin = TE_Pin;
 430              		.loc 1 696 0
 431 0272 4FF40063 		mov	r3, #2048
 432 0276 0993     		str	r3, [sp, #36]
 697:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 433              		.loc 1 697 0
 434 0278 0A94     		str	r4, [sp, #40]
 698:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 435              		.loc 1 698 0
 436 027a 0B94     		str	r4, [sp, #44]
 699:Src/main.c    ****   HAL_GPIO_Init(TE_GPIO_Port, &GPIO_InitStruct);
 437              		.loc 1 699 0
 438 027c 09A9     		add	r1, sp, #36
 439 027e 1548     		ldr	r0, .L3+20
 440 0280 FFF7FEFF 		bl	HAL_GPIO_Init
 441              	.LVL23:
 700:Src/main.c    **** 
ARM GAS  /tmp/ccWz8BwV.s 			page 21


 701:Src/main.c    ****   /*Configure GPIO pins : RDX_Pin WRX_DCX_Pin */
 702:Src/main.c    ****   GPIO_InitStruct.Pin = RDX_Pin|WRX_DCX_Pin;
 442              		.loc 1 702 0
 443 0284 4FF44053 		mov	r3, #12288
 444 0288 0993     		str	r3, [sp, #36]
 703:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 445              		.loc 1 703 0
 446 028a 0A96     		str	r6, [sp, #40]
 704:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 447              		.loc 1 704 0
 448 028c 0B94     		str	r4, [sp, #44]
 705:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 449              		.loc 1 705 0
 450 028e 0C94     		str	r4, [sp, #48]
 706:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 451              		.loc 1 706 0
 452 0290 09A9     		add	r1, sp, #36
 453 0292 1048     		ldr	r0, .L3+20
 454 0294 FFF7FEFF 		bl	HAL_GPIO_Init
 455              	.LVL24:
 707:Src/main.c    **** 
 708:Src/main.c    ****   /*Configure GPIO pins : BA0_Pin BA1_Pin SDCLK_Pin SDNCAS_Pin */
 709:Src/main.c    ****   GPIO_InitStruct.Pin = BA0_Pin|BA1_Pin|SDCLK_Pin|SDNCAS_Pin;
 456              		.loc 1 709 0
 457 0298 48F23013 		movw	r3, #33072
 458 029c 0993     		str	r3, [sp, #36]
 710:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 459              		.loc 1 710 0
 460 029e 0A95     		str	r5, [sp, #40]
 711:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 461              		.loc 1 711 0
 462 02a0 0B94     		str	r4, [sp, #44]
 712:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 463              		.loc 1 712 0
 464 02a2 0C97     		str	r7, [sp, #48]
 713:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 465              		.loc 1 713 0
 466 02a4 CDF83480 		str	r8, [sp, #52]
 714:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 467              		.loc 1 714 0
 468 02a8 09A9     		add	r1, sp, #36
 469 02aa 0848     		ldr	r0, .L3+12
 470 02ac FFF7FEFF 		bl	HAL_GPIO_Init
 471              	.LVL25:
 715:Src/main.c    **** 
 716:Src/main.c    ****   /*Configure GPIO pins : R7_Pin DOTCLK_Pin B3_Pin */
 717:Src/main.c    ****   GPIO_InitStruct.Pin = R7_Pin|DOTCLK_Pin|B3_Pin;
 472              		.loc 1 717 0
 473 02b0 4FF40C63 		mov	r3, #2240
 474 02b4 0993     		str	r3, [sp, #36]
 718:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 475              		.loc 1 718 0
 476 02b6 0A95     		str	r5, [sp, #40]
 719:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 477              		.loc 1 719 0
 478 02b8 0B94     		str	r4, [sp, #44]
 720:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  /tmp/ccWz8BwV.s 			page 22


 479              		.loc 1 720 0
 480 02ba 0C94     		str	r4, [sp, #48]
 481 02bc 12E0     		b	.L4
 482              	.L5:
 483 02be 00BF     		.align	2
 484              	.L3:
 485 02c0 00380240 		.word	1073887232
 486 02c4 00080240 		.word	1073874944
 487 02c8 00000240 		.word	1073872896
 488 02cc 00180240 		.word	1073879040
 489 02d0 00100240 		.word	1073876992
 490 02d4 000C0240 		.word	1073875968
 491 02d8 00040240 		.word	1073873920
 492 02dc 00140240 		.word	1073878016
 493 02e0 00001210 		.word	269615104
 494              	.L4:
 721:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 495              		.loc 1 721 0
 496 02e4 CDF83490 		str	r9, [sp, #52]
 722:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 497              		.loc 1 722 0
 498 02e8 09A9     		add	r1, sp, #36
 499 02ea 2D48     		ldr	r0, .L6
 500 02ec FFF7FEFF 		bl	HAL_GPIO_Init
 501              	.LVL26:
 723:Src/main.c    **** 
 724:Src/main.c    ****   /*Configure GPIO pins : HSYNC_Pin G6_Pin R2_Pin */
 725:Src/main.c    ****   GPIO_InitStruct.Pin = HSYNC_Pin|G6_Pin|R2_Pin;
 502              		.loc 1 725 0
 503 02f0 4FF49863 		mov	r3, #1216
 504 02f4 0993     		str	r3, [sp, #36]
 726:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 505              		.loc 1 726 0
 506 02f6 0A95     		str	r5, [sp, #40]
 727:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 507              		.loc 1 727 0
 508 02f8 0B94     		str	r4, [sp, #44]
 728:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 509              		.loc 1 728 0
 510 02fa 0C94     		str	r4, [sp, #48]
 729:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 511              		.loc 1 729 0
 512 02fc CDF83490 		str	r9, [sp, #52]
 730:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 513              		.loc 1 730 0
 514 0300 09A9     		add	r1, sp, #36
 515 0302 2848     		ldr	r0, .L6+4
 516 0304 FFF7FEFF 		bl	HAL_GPIO_Init
 517              	.LVL27:
 731:Src/main.c    **** 
 732:Src/main.c    ****   /*Configure GPIO pin : I2C3_SDA_Pin */
 733:Src/main.c    ****   GPIO_InitStruct.Pin = I2C3_SDA_Pin;
 518              		.loc 1 733 0
 519 0308 4FF40073 		mov	r3, #512
 520 030c 0993     		str	r3, [sp, #36]
 734:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 521              		.loc 1 734 0
ARM GAS  /tmp/ccWz8BwV.s 			page 23


 522 030e 4FF0120A 		mov	r10, #18
 523 0312 CDF828A0 		str	r10, [sp, #40]
 735:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 524              		.loc 1 735 0
 525 0316 0B96     		str	r6, [sp, #44]
 736:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 526              		.loc 1 736 0
 527 0318 0C94     		str	r4, [sp, #48]
 737:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 528              		.loc 1 737 0
 529 031a CDF834B0 		str	fp, [sp, #52]
 738:Src/main.c    ****   HAL_GPIO_Init(I2C3_SDA_GPIO_Port, &GPIO_InitStruct);
 530              		.loc 1 738 0
 531 031e 09A9     		add	r1, sp, #36
 532 0320 2048     		ldr	r0, .L6+4
 533 0322 FFF7FEFF 		bl	HAL_GPIO_Init
 534              	.LVL28:
 739:Src/main.c    **** 
 740:Src/main.c    ****   /*Configure GPIO pin : I2C3_SCL_Pin */
 741:Src/main.c    ****   GPIO_InitStruct.Pin = I2C3_SCL_Pin;
 535              		.loc 1 741 0
 536 0326 4FF48073 		mov	r3, #256
 537 032a 0993     		str	r3, [sp, #36]
 742:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 538              		.loc 1 742 0
 539 032c CDF828A0 		str	r10, [sp, #40]
 743:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 540              		.loc 1 743 0
 541 0330 0B96     		str	r6, [sp, #44]
 744:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 542              		.loc 1 744 0
 543 0332 0C94     		str	r4, [sp, #48]
 745:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 544              		.loc 1 745 0
 545 0334 CDF834B0 		str	fp, [sp, #52]
 746:Src/main.c    ****   HAL_GPIO_Init(I2C3_SCL_GPIO_Port, &GPIO_InitStruct);
 546              		.loc 1 746 0
 547 0338 09A9     		add	r1, sp, #36
 548 033a 1B48     		ldr	r0, .L6+8
 549 033c FFF7FEFF 		bl	HAL_GPIO_Init
 550              	.LVL29:
 747:Src/main.c    **** 
 748:Src/main.c    ****   /*Configure GPIO pins : G7_Pin B2_Pin */
 749:Src/main.c    ****   GPIO_InitStruct.Pin = G7_Pin|B2_Pin;
 551              		.loc 1 749 0
 552 0340 4823     		movs	r3, #72
 553 0342 0993     		str	r3, [sp, #36]
 750:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 554              		.loc 1 750 0
 555 0344 0A95     		str	r5, [sp, #40]
 751:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 556              		.loc 1 751 0
 557 0346 0B94     		str	r4, [sp, #44]
 752:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 558              		.loc 1 752 0
 559 0348 0C94     		str	r4, [sp, #48]
 753:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
ARM GAS  /tmp/ccWz8BwV.s 			page 24


 560              		.loc 1 753 0
 561 034a CDF83490 		str	r9, [sp, #52]
 754:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 562              		.loc 1 754 0
 563 034e 09A9     		add	r1, sp, #36
 564 0350 1648     		ldr	r0, .L6+12
 565 0352 FFF7FEFF 		bl	HAL_GPIO_Init
 566              	.LVL30:
 755:Src/main.c    **** 
 756:Src/main.c    ****   /*Configure GPIO pins : G3_Pin B4_Pin */
 757:Src/main.c    ****   GPIO_InitStruct.Pin = G3_Pin|B4_Pin;
 567              		.loc 1 757 0
 568 0356 4FF4A053 		mov	r3, #5120
 569 035a 0993     		str	r3, [sp, #36]
 758:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 570              		.loc 1 758 0
 571 035c 0A95     		str	r5, [sp, #40]
 759:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 572              		.loc 1 759 0
 573 035e 0B94     		str	r4, [sp, #44]
 760:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 574              		.loc 1 760 0
 575 0360 0C94     		str	r4, [sp, #48]
 761:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 576              		.loc 1 761 0
 577 0362 0923     		movs	r3, #9
 578 0364 0D93     		str	r3, [sp, #52]
 762:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 579              		.loc 1 762 0
 580 0366 09A9     		add	r1, sp, #36
 581 0368 0D48     		ldr	r0, .L6
 582 036a FFF7FEFF 		bl	HAL_GPIO_Init
 583              	.LVL31:
 763:Src/main.c    **** 
 764:Src/main.c    ****   /*Configure GPIO pins : SDCKE1_Pin SDNE1_Pin */
 765:Src/main.c    ****   GPIO_InitStruct.Pin = SDCKE1_Pin|SDNE1_Pin;
 584              		.loc 1 765 0
 585 036e 6023     		movs	r3, #96
 586 0370 0993     		str	r3, [sp, #36]
 766:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 587              		.loc 1 766 0
 588 0372 0A95     		str	r5, [sp, #40]
 767:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 589              		.loc 1 767 0
 590 0374 0B94     		str	r4, [sp, #44]
 768:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 591              		.loc 1 768 0
 592 0376 0C97     		str	r7, [sp, #48]
 769:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 593              		.loc 1 769 0
 594 0378 CDF83480 		str	r8, [sp, #52]
 770:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 595              		.loc 1 770 0
 596 037c 09A9     		add	r1, sp, #36
 597 037e 0C48     		ldr	r0, .L6+16
 598 0380 FFF7FEFF 		bl	HAL_GPIO_Init
 599              	.LVL32:
ARM GAS  /tmp/ccWz8BwV.s 			page 25


 771:Src/main.c    **** 
 772:Src/main.c    ****   /*Configure GPIO pins : NBL0_Pin NBL1_Pin */
 773:Src/main.c    ****   GPIO_InitStruct.Pin = NBL0_Pin|NBL1_Pin;
 600              		.loc 1 773 0
 601 0384 0997     		str	r7, [sp, #36]
 774:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 602              		.loc 1 774 0
 603 0386 0A95     		str	r5, [sp, #40]
 775:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 604              		.loc 1 775 0
 605 0388 0B94     		str	r4, [sp, #44]
 776:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 606              		.loc 1 776 0
 607 038a 0C97     		str	r7, [sp, #48]
 777:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 608              		.loc 1 777 0
 609 038c CDF83480 		str	r8, [sp, #52]
 778:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 610              		.loc 1 778 0
 611 0390 09A9     		add	r1, sp, #36
 612 0392 0848     		ldr	r0, .L6+20
 613 0394 FFF7FEFF 		bl	HAL_GPIO_Init
 614              	.LVL33:
 779:Src/main.c    **** 
 780:Src/main.c    **** }
 615              		.loc 1 780 0
 616 0398 0FB0     		add	sp, sp, #60
 617              	.LCFI2:
 618              		.cfi_def_cfa_offset 36
 619              		@ sp needed
 620 039a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 621              	.L7:
 622 039e 00BF     		.align	2
 623              	.L6:
 624 03a0 00180240 		.word	1073879040
 625 03a4 00080240 		.word	1073874944
 626 03a8 00000240 		.word	1073872896
 627 03ac 000C0240 		.word	1073875968
 628 03b0 00040240 		.word	1073873920
 629 03b4 00100240 		.word	1073876992
 630              		.cfi_endproc
 631              	.LFE137:
 633              		.section	.text.MX_SPI5_Init,"ax",%progbits
 634              		.align	1
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 638              		.fpu fpv4-sp-d16
 640              	MX_SPI5_Init:
 641              	.LFB133:
 383:Src/main.c    **** 
 642              		.loc 1 383 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646 0000 08B5     		push	{r3, lr}
 647              	.LCFI3:
ARM GAS  /tmp/ccWz8BwV.s 			page 26


 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 3, -8
 650              		.cfi_offset 14, -4
 393:Src/main.c    ****   hspi5.Init.Mode = SPI_MODE_SLAVE;
 651              		.loc 1 393 0
 652 0002 0948     		ldr	r0, .L10
 653 0004 094B     		ldr	r3, .L10+4
 654 0006 0360     		str	r3, [r0]
 394:Src/main.c    ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 655              		.loc 1 394 0
 656 0008 0023     		movs	r3, #0
 657 000a 4360     		str	r3, [r0, #4]
 395:Src/main.c    ****   hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 658              		.loc 1 395 0
 659 000c 8360     		str	r3, [r0, #8]
 396:Src/main.c    ****   hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 660              		.loc 1 396 0
 661 000e C360     		str	r3, [r0, #12]
 397:Src/main.c    ****   hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 662              		.loc 1 397 0
 663 0010 0361     		str	r3, [r0, #16]
 398:Src/main.c    ****   hspi5.Init.NSS = SPI_NSS_HARD_INPUT;
 664              		.loc 1 398 0
 665 0012 4361     		str	r3, [r0, #20]
 399:Src/main.c    ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 666              		.loc 1 399 0
 667 0014 8361     		str	r3, [r0, #24]
 400:Src/main.c    ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 668              		.loc 1 400 0
 669 0016 0362     		str	r3, [r0, #32]
 401:Src/main.c    ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 670              		.loc 1 401 0
 671 0018 4362     		str	r3, [r0, #36]
 402:Src/main.c    ****   hspi5.Init.CRCPolynomial = 10;
 672              		.loc 1 402 0
 673 001a 8362     		str	r3, [r0, #40]
 403:Src/main.c    ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 674              		.loc 1 403 0
 675 001c 0A23     		movs	r3, #10
 676 001e C362     		str	r3, [r0, #44]
 404:Src/main.c    ****   {
 677              		.loc 1 404 0
 678 0020 FFF7FEFF 		bl	HAL_SPI_Init
 679              	.LVL34:
 680 0024 08BD     		pop	{r3, pc}
 681              	.L11:
 682 0026 00BF     		.align	2
 683              	.L10:
 684 0028 00000000 		.word	hspi5
 685 002c 00500140 		.word	1073827840
 686              		.cfi_endproc
 687              	.LFE133:
 689              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 690              		.align	1
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
ARM GAS  /tmp/ccWz8BwV.s 			page 27


 694              		.fpu fpv4-sp-d16
 696              	MX_USART1_UART_Init:
 697              	.LFB136:
 496:Src/main.c    **** 
 698              		.loc 1 496 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 0
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702 0000 08B5     		push	{r3, lr}
 703              	.LCFI4:
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 3, -8
 706              		.cfi_offset 14, -4
 505:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 707              		.loc 1 505 0
 708 0002 0848     		ldr	r0, .L14
 709 0004 084B     		ldr	r3, .L14+4
 710 0006 0360     		str	r3, [r0]
 506:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 711              		.loc 1 506 0
 712 0008 4FF4E133 		mov	r3, #115200
 713 000c 4360     		str	r3, [r0, #4]
 507:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 714              		.loc 1 507 0
 715 000e 0023     		movs	r3, #0
 716 0010 8360     		str	r3, [r0, #8]
 508:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 717              		.loc 1 508 0
 718 0012 C360     		str	r3, [r0, #12]
 509:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 719              		.loc 1 509 0
 720 0014 0361     		str	r3, [r0, #16]
 510:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 721              		.loc 1 510 0
 722 0016 0C22     		movs	r2, #12
 723 0018 4261     		str	r2, [r0, #20]
 511:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 724              		.loc 1 511 0
 725 001a 8361     		str	r3, [r0, #24]
 512:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 726              		.loc 1 512 0
 727 001c C361     		str	r3, [r0, #28]
 513:Src/main.c    ****   {
 728              		.loc 1 513 0
 729 001e FFF7FEFF 		bl	HAL_UART_Init
 730              	.LVL35:
 731 0022 08BD     		pop	{r3, pc}
 732              	.L15:
 733              		.align	2
 734              	.L14:
 735 0024 00000000 		.word	huart1
 736 0028 00100140 		.word	1073811456
 737              		.cfi_endproc
 738              	.LFE136:
 740              		.section	.text.SystemClock_Config,"ax",%progbits
 741              		.align	1
 742              		.global	SystemClock_Config
ARM GAS  /tmp/ccWz8BwV.s 			page 28


 743              		.syntax unified
 744              		.thumb
 745              		.thumb_func
 746              		.fpu fpv4-sp-d16
 748              	SystemClock_Config:
 749              	.LFB131:
 301:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 750              		.loc 1 301 0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 80
 753              		@ frame_needed = 0, uses_anonymous_args = 0
 754 0000 30B5     		push	{r4, r5, lr}
 755              	.LCFI5:
 756              		.cfi_def_cfa_offset 12
 757              		.cfi_offset 4, -12
 758              		.cfi_offset 5, -8
 759              		.cfi_offset 14, -4
 760 0002 95B0     		sub	sp, sp, #84
 761              	.LCFI6:
 762              		.cfi_def_cfa_offset 96
 302:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 763              		.loc 1 302 0
 764 0004 3022     		movs	r2, #48
 765 0006 0021     		movs	r1, #0
 766 0008 08A8     		add	r0, sp, #32
 767 000a FFF7FEFF 		bl	memset
 768              	.LVL36:
 303:Src/main.c    **** 
 769              		.loc 1 303 0
 770 000e 0024     		movs	r4, #0
 771 0010 0394     		str	r4, [sp, #12]
 772 0012 0494     		str	r4, [sp, #16]
 773 0014 0594     		str	r4, [sp, #20]
 774 0016 0694     		str	r4, [sp, #24]
 775 0018 0794     		str	r4, [sp, #28]
 776              	.LBB10:
 307:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 777              		.loc 1 307 0
 778 001a 0194     		str	r4, [sp, #4]
 779 001c 1C4B     		ldr	r3, .L18
 780 001e 1A6C     		ldr	r2, [r3, #64]
 781 0020 42F08052 		orr	r2, r2, #268435456
 782 0024 1A64     		str	r2, [r3, #64]
 783 0026 1B6C     		ldr	r3, [r3, #64]
 784 0028 03F08053 		and	r3, r3, #268435456
 785 002c 0193     		str	r3, [sp, #4]
 786 002e 019B     		ldr	r3, [sp, #4]
 787              	.LBE10:
 788              	.LBB11:
 308:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 789              		.loc 1 308 0
 790 0030 0294     		str	r4, [sp, #8]
 791 0032 184A     		ldr	r2, .L18+4
 792 0034 1368     		ldr	r3, [r2]
 793 0036 23F44043 		bic	r3, r3, #49152
 794 003a 43F48043 		orr	r3, r3, #16384
 795 003e 1360     		str	r3, [r2]
ARM GAS  /tmp/ccWz8BwV.s 			page 29


 796 0040 1368     		ldr	r3, [r2]
 797 0042 03F44043 		and	r3, r3, #49152
 798 0046 0293     		str	r3, [sp, #8]
 799 0048 029B     		ldr	r3, [sp, #8]
 800              	.LBE11:
 311:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 801              		.loc 1 311 0
 802 004a 0225     		movs	r5, #2
 803 004c 0895     		str	r5, [sp, #32]
 312:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 804              		.loc 1 312 0
 805 004e 0123     		movs	r3, #1
 806 0050 0B93     		str	r3, [sp, #44]
 313:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 807              		.loc 1 313 0
 808 0052 1023     		movs	r3, #16
 809 0054 0C93     		str	r3, [sp, #48]
 314:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 810              		.loc 1 314 0
 811 0056 0E95     		str	r5, [sp, #56]
 315:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 812              		.loc 1 315 0
 813 0058 0F94     		str	r4, [sp, #60]
 316:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 100;
 814              		.loc 1 316 0
 815 005a 0823     		movs	r3, #8
 816 005c 1093     		str	r3, [sp, #64]
 317:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 817              		.loc 1 317 0
 818 005e 6423     		movs	r3, #100
 819 0060 1193     		str	r3, [sp, #68]
 318:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 820              		.loc 1 318 0
 821 0062 1295     		str	r5, [sp, #72]
 319:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 822              		.loc 1 319 0
 823 0064 0723     		movs	r3, #7
 824 0066 1393     		str	r3, [sp, #76]
 320:Src/main.c    ****   {
 825              		.loc 1 320 0
 826 0068 08A8     		add	r0, sp, #32
 827 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 828              	.LVL37:
 326:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 829              		.loc 1 326 0
 830 006e 0F23     		movs	r3, #15
 831 0070 0393     		str	r3, [sp, #12]
 328:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 832              		.loc 1 328 0
 833 0072 0495     		str	r5, [sp, #16]
 329:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 834              		.loc 1 329 0
 835 0074 0594     		str	r4, [sp, #20]
 330:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 836              		.loc 1 330 0
 837 0076 4FF4A053 		mov	r3, #5120
 838 007a 0693     		str	r3, [sp, #24]
ARM GAS  /tmp/ccWz8BwV.s 			page 30


 331:Src/main.c    **** 
 839              		.loc 1 331 0
 840 007c 4FF48053 		mov	r3, #4096
 841 0080 0793     		str	r3, [sp, #28]
 333:Src/main.c    ****   {
 842              		.loc 1 333 0
 843 0082 0321     		movs	r1, #3
 844 0084 03A8     		add	r0, sp, #12
 845 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 846              	.LVL38:
 337:Src/main.c    **** 
 847              		.loc 1 337 0
 848 008a 15B0     		add	sp, sp, #84
 849              	.LCFI7:
 850              		.cfi_def_cfa_offset 12
 851              		@ sp needed
 852 008c 30BD     		pop	{r4, r5, pc}
 853              	.L19:
 854 008e 00BF     		.align	2
 855              	.L18:
 856 0090 00380240 		.word	1073887232
 857 0094 00700040 		.word	1073770496
 858              		.cfi_endproc
 859              	.LFE131:
 861              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 862              		.align	1
 863              		.global	HAL_GPIO_EXTI_Callback
 864              		.syntax unified
 865              		.thumb
 866              		.thumb_func
 867              		.fpu fpv4-sp-d16
 869              	HAL_GPIO_EXTI_Callback:
 870              	.LFB138:
 781:Src/main.c    **** 
 782:Src/main.c    **** /* USER CODE BEGIN 4 */
 783:Src/main.c    **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 871              		.loc 1 783 0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 0
 874              		@ frame_needed = 0, uses_anonymous_args = 0
 875              		@ link register save eliminated.
 876              	.LVL39:
 877 0000 7047     		bx	lr
 878              		.cfi_endproc
 879              	.LFE138:
 881              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 882              		.align	1
 883              		.global	HAL_TIM_PeriodElapsedCallback
 884              		.syntax unified
 885              		.thumb
 886              		.thumb_func
 887              		.fpu fpv4-sp-d16
 889              	HAL_TIM_PeriodElapsedCallback:
 890              	.LFB140:
 784:Src/main.c    ****   //Receive_MIDI(&hspi5, spi_rx_buffer);
 785:Src/main.c    **** }
 786:Src/main.c    **** 
ARM GAS  /tmp/ccWz8BwV.s 			page 31


 787:Src/main.c    **** void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi) {
 788:Src/main.c    ****   //  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, GPIO_PIN_SET);
 789:Src/main.c    **** 
 790:Src/main.c    ****   /*
 791:Src/main.c    ****   struct midi_note_msg new_midi_note_msg = {
 792:Src/main.c    ****     spi_rx_buffer[0],
 793:Src/main.c    ****     spi_rx_buffer[1],
 794:Src/main.c    ****     spi_rx_buffer[2]
 795:Src/main.c    ****   };
 796:Src/main.c    **** 
 797:Src/main.c    ****   enqueue(new_midi_note_msg);
 798:Src/main.c    ****   */
 799:Src/main.c    ****   MIDI_flag = 1;
 800:Src/main.c    **** 
 801:Src/main.c    ****   if(note_on_flag){
 802:Src/main.c    ****     struct midi_note_msg new_midi_note_msg = {
 803:Src/main.c    ****                                               MIDI_NOTE_ON,
 804:Src/main.c    ****                                               spi_rx_buffer[0],
 805:Src/main.c    ****                                               127
 806:Src/main.c    ****     };
 807:Src/main.c    ****     enqueue(new_midi_note_msg);
 808:Src/main.c    ****     note_on_flag = 0;
 809:Src/main.c    ****   }
 810:Src/main.c    ****   else if(note_off_flag){
 811:Src/main.c    ****     struct midi_note_msg new_midi_note_msg = {
 812:Src/main.c    ****                                               MIDI_NOTE_OFF,
 813:Src/main.c    ****                                               spi_rx_buffer[0],
 814:Src/main.c    ****                                               0
 815:Src/main.c    ****     };
 816:Src/main.c    ****     enqueue(new_midi_note_msg);
 817:Src/main.c    ****     note_off_flag = 0;
 818:Src/main.c    ****   }
 819:Src/main.c    **** }
 820:Src/main.c    **** 
 821:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 891              		.loc 1 821 0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 0, uses_anonymous_args = 0
 895              		@ link register save eliminated.
 896              	.LVL40:
 822:Src/main.c    ****   if(htim->Instance == TIM6){
 897              		.loc 1 822 0
 898 0000 0268     		ldr	r2, [r0]
 899 0002 044B     		ldr	r3, .L24
 900 0004 9A42     		cmp	r2, r3
 901 0006 00D0     		beq	.L23
 902              	.L21:
 903 0008 7047     		bx	lr
 904              	.L23:
 823:Src/main.c    ****     //  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_1);
 824:Src/main.c    ****     update_value_flag = 1;
 905              		.loc 1 824 0
 906 000a 0122     		movs	r2, #1
 907 000c 024B     		ldr	r3, .L24+4
 908 000e 1A70     		strb	r2, [r3]
 825:Src/main.c    ****   }
ARM GAS  /tmp/ccWz8BwV.s 			page 32


 826:Src/main.c    ****   /*
 827:Src/main.c    ****   else if(htim->Instance == TIM7){
 828:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_8);
 829:Src/main.c    ****     for(int i = 0; i < VOICES; i++){
 830:Src/main.c    ****       if(note_on[i] == MIDI_NOTE_ON){
 831:Src/main.c    ****         if(env_state[i] == NOT_TRIGGERED){
 832:Src/main.c    ****           env_state[i] = ATTACK_MODE;
 833:Src/main.c    ****         }
 834:Src/main.c    ****         else{
 835:Src/main.c    ****           env_state[i] = RELEASE_MODE;
 836:Src/main.c    ****         }
 837:Src/main.c    ****       }
 838:Src/main.c    ****     }
 839:Src/main.c    ****   }
 840:Src/main.c    ****   */
 841:Src/main.c    **** }
 909              		.loc 1 841 0
 910 0010 FAE7     		b	.L21
 911              	.L25:
 912 0012 00BF     		.align	2
 913              	.L24:
 914 0014 00100040 		.word	1073745920
 915 0018 00000000 		.word	.LANCHOR0
 916              		.cfi_endproc
 917              	.LFE140:
 919              		.global	__aeabi_f2d
 920              		.global	__aeabi_dmul
 921              		.global	__aeabi_d2uiz
 922              		.section	.text.UpdateOutputValue,"ax",%progbits
 923              		.align	1
 924              		.global	UpdateOutputValue
 925              		.syntax unified
 926              		.thumb
 927              		.thumb_func
 928              		.fpu fpv4-sp-d16
 930              	UpdateOutputValue:
 931              	.LFB141:
 842:Src/main.c    **** 
 843:Src/main.c    **** void UpdateOutputValue() {
 932              		.loc 1 843 0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 8
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936 0000 10B5     		push	{r4, lr}
 937              	.LCFI8:
 938              		.cfi_def_cfa_offset 8
 939              		.cfi_offset 4, -8
 940              		.cfi_offset 14, -4
 941 0002 2DED028B 		vpush.64	{d8}
 942              	.LCFI9:
 943              		.cfi_def_cfa_offset 16
 944              		.cfi_offset 80, -16
 945              		.cfi_offset 81, -12
 946 0006 82B0     		sub	sp, sp, #8
 947              	.LCFI10:
 948              		.cfi_def_cfa_offset 24
 949              	.LVL41:
ARM GAS  /tmp/ccWz8BwV.s 			page 33


 844:Src/main.c    ****   //  HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_7);
 845:Src/main.c    ****   float val = 0;
 846:Src/main.c    ****   output_val = 0;
 950              		.loc 1 846 0
 951 0008 0024     		movs	r4, #0
 952 000a 2D4B     		ldr	r3, .L30+8
 953 000c 1C70     		strb	r4, [r3]
 954              	.LVL42:
 845:Src/main.c    ****   output_val = 0;
 955              		.loc 1 845 0
 956 000e 9FED2D8A 		vldr.32	s16, .L30+12
 957              	.LBB12:
 847:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 958              		.loc 1 847 0
 959 0012 3CE0     		b	.L27
 960              	.LVL43:
 961              	.L28:
 848:Src/main.c    ****     phase_accumulator[i] += (uint32_t)(midi_notes[note_freq[i]]*DDS_SCALE_FACTOR);
 962              		.loc 1 848 0 discriminator 3
 963 0014 2C4B     		ldr	r3, .L30+16
 964 0016 1A5D     		ldrb	r2, [r3, r4]	@ zero_extendqisi2
 965 0018 2C4B     		ldr	r3, .L30+20
 966 001a 03EB8203 		add	r3, r3, r2, lsl #2
 967 001e 1868     		ldr	r0, [r3]	@ float
 968 0020 FFF7FEFF 		bl	__aeabi_f2d
 969              	.LVL44:
 970 0024 24A3     		adr	r3, .L30
 971 0026 D3E90023 		ldrd	r2, [r3]
 972 002a FFF7FEFF 		bl	__aeabi_dmul
 973              	.LVL45:
 974 002e FFF7FEFF 		bl	__aeabi_d2uiz
 975              	.LVL46:
 976 0032 274A     		ldr	r2, .L30+24
 977 0034 52F82430 		ldr	r3, [r2, r4, lsl #2]
 978 0038 1844     		add	r0, r0, r3
 979 003a 42F82400 		str	r0, [r2, r4, lsl #2]
 849:Src/main.c    ****     val += ((base_sine[(phase_accumulator[i]>>10)%4096] + base_pos_saw[(phase_accumulator[i]>>10)%4
 980              		.loc 1 849 0 discriminator 3
 981 003e 52F82430 		ldr	r3, [r2, r4, lsl #2]
 982 0042 C3F38B23 		ubfx	r3, r3, #10, #12
 983 0046 2349     		ldr	r1, .L30+28
 984 0048 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 985 004a 52F82420 		ldr	r2, [r2, r4, lsl #2]
 986 004e C2F38B22 		ubfx	r2, r2, #10, #12
 987 0052 2149     		ldr	r1, .L30+32
 988 0054 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 989 0056 1344     		add	r3, r3, r2
 990 0058 07EE903A 		vmov	s15, r3	@ int
 991 005c 1F4B     		ldr	r3, .L30+36
 992 005e 03EB8403 		add	r3, r3, r4, lsl #2
 993 0062 93ED007A 		vldr.32	s14, [r3]
 994 0066 F8EEE77A 		vcvt.f32.s32	s15, s15
 995 006a 27EE877A 		vmul.f32	s14, s15, s14
 996 006e 1C4B     		ldr	r3, .L30+40
 997 0070 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 998 0072 DBB2     		uxtb	r3, r3
 999 0074 07EE903A 		vmov	s15, r3	@ int
ARM GAS  /tmp/ccWz8BwV.s 			page 34


 1000 0078 F8EEE77A 		vcvt.f32.s32	s15, s15
 1001 007c 67EE877A 		vmul.f32	s15, s15, s14
 1002 0080 DFED186A 		vldr.32	s13, .L30+44
 1003 0084 87EEA67A 		vdiv.f32	s14, s15, s13
 1004 0088 38EE078A 		vadd.f32	s16, s16, s14
 1005              	.LVL47:
 847:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1006              		.loc 1 847 0 discriminator 3
 1007 008c 0134     		adds	r4, r4, #1
 1008              	.LVL48:
 1009              	.L27:
 847:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1010              		.loc 1 847 0 is_stmt 0 discriminator 1
 1011 008e 0F2C     		cmp	r4, #15
 1012 0090 C0DD     		ble	.L28
 1013              	.LBE12:
 850:Src/main.c    ****   }
 851:Src/main.c    **** 
 852:Src/main.c    ****   output_val = (uint8_t) (val / VOICES);
 1014              		.loc 1 852 0 is_stmt 1
 1015 0092 DFED157A 		vldr.32	s15, .L30+48
 1016 0096 28EE278A 		vmul.f32	s16, s16, s15
 1017              	.LVL49:
 1018 009a FCEEC87A 		vcvt.u32.f32	s15, s16
 1019 009e CDED017A 		vstr.32	s15, [sp, #4]	@ int
 1020 00a2 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 1021 00a6 064A     		ldr	r2, .L30+8
 1022 00a8 1370     		strb	r3, [r2]
 853:Src/main.c    **** }
 1023              		.loc 1 853 0
 1024 00aa 02B0     		add	sp, sp, #8
 1025              	.LCFI11:
 1026              		.cfi_def_cfa_offset 16
 1027              		@ sp needed
 1028 00ac BDEC028B 		vldm	sp!, {d8}
 1029              	.LCFI12:
 1030              		.cfi_restore 80
 1031              		.cfi_restore 81
 1032              		.cfi_def_cfa_offset 8
 1033 00b0 10BD     		pop	{r4, pc}
 1034              	.LVL50:
 1035              	.L31:
 1036 00b2 00BFAFF3 		.align	3
 1036      0080
 1037              	.L30:
 1038 00b8 942EA292 		.word	2460102292
 1039 00bc 5F5E5640 		.word	1079402079
 1040 00c0 00000000 		.word	.LANCHOR1
 1041 00c4 00000000 		.word	0
 1042 00c8 00000000 		.word	.LANCHOR2
 1043 00cc 00000000 		.word	midi_notes
 1044 00d0 00000000 		.word	.LANCHOR3
 1045 00d4 00000000 		.word	base_sine
 1046 00d8 00000000 		.word	base_pos_saw
 1047 00dc 00000000 		.word	.LANCHOR4
 1048 00e0 00000000 		.word	.LANCHOR5
 1049 00e4 0001FE47 		.word	1207828736
ARM GAS  /tmp/ccWz8BwV.s 			page 35


 1050 00e8 0000803D 		.word	1031798784
 1051              		.cfi_endproc
 1052              	.LFE141:
 1054              		.global	__aeabi_i2d
 1055              		.section	.text.UpdateLFOs,"ax",%progbits
 1056              		.align	1
 1057              		.global	UpdateLFOs
 1058              		.syntax unified
 1059              		.thumb
 1060              		.thumb_func
 1061              		.fpu fpv4-sp-d16
 1063              	UpdateLFOs:
 1064              	.LFB142:
 854:Src/main.c    **** 
 855:Src/main.c    **** void UpdateLFOs() {
 1065              		.loc 1 855 0
 1066              		.cfi_startproc
 1067              		@ args = 0, pretend = 0, frame = 0
 1068              		@ frame_needed = 0, uses_anonymous_args = 0
 1069 0000 10B5     		push	{r4, lr}
 1070              	.LCFI13:
 1071              		.cfi_def_cfa_offset 8
 1072              		.cfi_offset 4, -8
 1073              		.cfi_offset 14, -4
 1074              	.LVL51:
 1075              	.LBB13:
 856:Src/main.c    ****   for(int i = 0; i < VOICES; i++) {
 1076              		.loc 1 856 0
 1077 0002 0024     		movs	r4, #0
 1078 0004 16E0     		b	.L33
 1079              	.LVL52:
 1080              	.L34:
 857:Src/main.c    ****     lfo_phase_accumulator[i] += (uint32_t)(lfo_freq[i] * (DDS_SCALE_FACTOR/10));
 1081              		.loc 1 857 0 discriminator 3
 1082 0006 104B     		ldr	r3, .L36+8
 1083 0008 33F81400 		ldrh	r0, [r3, r4, lsl #1]
 1084 000c 80B2     		uxth	r0, r0
 1085 000e FFF7FEFF 		bl	__aeabi_i2d
 1086              	.LVL53:
 1087 0012 0BA3     		adr	r3, .L36
 1088 0014 D3E90023 		ldrd	r2, [r3]
 1089 0018 FFF7FEFF 		bl	__aeabi_dmul
 1090              	.LVL54:
 1091 001c FFF7FEFF 		bl	__aeabi_d2uiz
 1092              	.LVL55:
 1093 0020 0A4A     		ldr	r2, .L36+12
 1094 0022 52F82430 		ldr	r3, [r2, r4, lsl #2]
 1095 0026 1844     		add	r0, r0, r3
 1096 0028 42F82400 		str	r0, [r2, r4, lsl #2]
 858:Src/main.c    ****     //lfo[i] = base_tri[(lfo_phase_accumulator[i]>>10)%4096];
 859:Src/main.c    ****     lfo[i] = 255;
 1097              		.loc 1 859 0 discriminator 3
 1098 002c FF22     		movs	r2, #255
 1099 002e 084B     		ldr	r3, .L36+16
 1100 0030 1A55     		strb	r2, [r3, r4]
 856:Src/main.c    ****     lfo_phase_accumulator[i] += (uint32_t)(lfo_freq[i] * (DDS_SCALE_FACTOR/10));
 1101              		.loc 1 856 0 discriminator 3
ARM GAS  /tmp/ccWz8BwV.s 			page 36


 1102 0032 0134     		adds	r4, r4, #1
 1103              	.LVL56:
 1104              	.L33:
 856:Src/main.c    ****     lfo_phase_accumulator[i] += (uint32_t)(lfo_freq[i] * (DDS_SCALE_FACTOR/10));
 1105              		.loc 1 856 0 is_stmt 0 discriminator 1
 1106 0034 0F2C     		cmp	r4, #15
 1107 0036 E6DD     		ble	.L34
 1108              	.LBE13:
 860:Src/main.c    ****   }
 861:Src/main.c    **** }
 1109              		.loc 1 861 0 is_stmt 1
 1110 0038 10BD     		pop	{r4, pc}
 1111              	.LVL57:
 1112              	.L37:
 1113 003a 00BFAFF3 		.align	3
 1113      0080
 1114              	.L36:
 1115 0040 76581B42 		.word	1109088374
 1116 0044 19E52140 		.word	1075963161
 1117 0048 00000000 		.word	.LANCHOR6
 1118 004c 00000000 		.word	.LANCHOR7
 1119 0050 00000000 		.word	.LANCHOR5
 1120              		.cfi_endproc
 1121              	.LFE142:
 1123              		.section	.text.UpdateEnvelope,"ax",%progbits
 1124              		.align	1
 1125              		.global	UpdateEnvelope
 1126              		.syntax unified
 1127              		.thumb
 1128              		.thumb_func
 1129              		.fpu fpv4-sp-d16
 1131              	UpdateEnvelope:
 1132              	.LFB143:
 862:Src/main.c    **** 
 863:Src/main.c    **** void UpdateEnvelope() {
 1133              		.loc 1 863 0
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 0
 1136              		@ frame_needed = 0, uses_anonymous_args = 0
 1137 0000 70B5     		push	{r4, r5, r6, lr}
 1138              	.LCFI14:
 1139              		.cfi_def_cfa_offset 16
 1140              		.cfi_offset 4, -16
 1141              		.cfi_offset 5, -12
 1142              		.cfi_offset 6, -8
 1143              		.cfi_offset 14, -4
 1144              	.LVL58:
 1145              	.LBB14:
 864:Src/main.c    ****   for(int i = 0; i < VOICES; i++){
 1146              		.loc 1 864 0
 1147 0002 0024     		movs	r4, #0
 1148 0004 09E0     		b	.L39
 1149              	.LVL59:
 1150              	.L41:
 865:Src/main.c    ****     //if(note_on[i] == MIDI_NOTE_OFF){
 866:Src/main.c    ****     //  env_state[i] = RELEASE_MODE;
 867:Src/main.c    ****     //}
ARM GAS  /tmp/ccWz8BwV.s 			page 37


 868:Src/main.c    **** 
 869:Src/main.c    ****     switch(env_state[i]){
 870:Src/main.c    ****     case NOT_TRIGGERED:
 871:Src/main.c    ****       envelope_index[i] = 0;
 1151              		.loc 1 871 0
 1152 0006 0022     		movs	r2, #0
 1153 0008 5F4B     		ldr	r3, .L52+8
 1154 000a 43F82420 		str	r2, [r3, r4, lsl #2]
 872:Src/main.c    ****       envelope[i] = 0;
 1155              		.loc 1 872 0
 1156 000e 5F4B     		ldr	r3, .L52+12
 1157 0010 03EB8403 		add	r3, r3, r4, lsl #2
 1158 0014 0022     		movs	r2, #0
 1159 0016 1A60     		str	r2, [r3]	@ float
 1160              	.L40:
 864:Src/main.c    ****   for(int i = 0; i < VOICES; i++){
 1161              		.loc 1 864 0 discriminator 2
 1162 0018 0134     		adds	r4, r4, #1
 1163              	.LVL60:
 1164              	.L39:
 864:Src/main.c    ****   for(int i = 0; i < VOICES; i++){
 1165              		.loc 1 864 0 is_stmt 0 discriminator 1
 1166 001a 0F2C     		cmp	r4, #15
 1167 001c 00F3AE80 		bgt	.L51
 869:Src/main.c    ****     case NOT_TRIGGERED:
 1168              		.loc 1 869 0 is_stmt 1
 1169 0020 5B4B     		ldr	r3, .L52+16
 1170 0022 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1171 0024 DBB2     		uxtb	r3, r3
 1172 0026 042B     		cmp	r3, #4
 1173 0028 F6D8     		bhi	.L40
 1174 002a 01A2     		adr	r2, .L42
 1175 002c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1176              		.p2align 2
 1177              	.L42:
 1178 0030 07000000 		.word	.L41+1
 1179 0034 45000000 		.word	.L43+1
 1180 0038 A3000000 		.word	.L44+1
 1181 003c 19000000 		.word	.L40+1
 1182 0040 07010000 		.word	.L45+1
 1183              		.p2align 1
 1184              	.L43:
 873:Src/main.c    ****       break;
 874:Src/main.c    ****     case ATTACK_MODE:
 875:Src/main.c    ****       //    if((UINT32_MAX - envelope_index) < DDS_SCALE_FACTOR){
 876:Src/main.c    ****       if(envelope_index[i] <= 4200000) {
 1185              		.loc 1 876 0
 1186 0044 504B     		ldr	r3, .L52+8
 1187 0046 53F82420 		ldr	r2, [r3, r4, lsl #2]
 1188 004a 524B     		ldr	r3, .L52+20
 1189 004c 9A42     		cmp	r2, r3
 1190 004e 20D8     		bhi	.L46
 877:Src/main.c    ****         envelope_index[i] += (uint32_t)(attack * DDS_SCALE_FACTOR);
 1191              		.loc 1 877 0
 1192 0050 4D4D     		ldr	r5, .L52+8
 1193 0052 55F82460 		ldr	r6, [r5, r4, lsl #2]
 1194 0056 504B     		ldr	r3, .L52+24
ARM GAS  /tmp/ccWz8BwV.s 			page 38


 1195 0058 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1196 005a FFF7FEFF 		bl	__aeabi_i2d
 1197              	.LVL61:
 1198 005e 48A3     		adr	r3, .L52
 1199 0060 D3E90023 		ldrd	r2, [r3]
 1200 0064 FFF7FEFF 		bl	__aeabi_dmul
 1201              	.LVL62:
 1202 0068 FFF7FEFF 		bl	__aeabi_d2uiz
 1203              	.LVL63:
 1204 006c 3044     		add	r0, r0, r6
 1205 006e 45F82400 		str	r0, [r5, r4, lsl #2]
 878:Src/main.c    ****         envelope[i] = base_pos_saw[(envelope_index[i]>>10)%4096];
 1206              		.loc 1 878 0
 1207 0072 55F82430 		ldr	r3, [r5, r4, lsl #2]
 1208 0076 C3F38B23 		ubfx	r3, r3, #10, #12
 1209 007a 484A     		ldr	r2, .L52+28
 1210 007c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1211 007e 07EE903A 		vmov	s15, r3	@ int
 1212 0082 F8EE677A 		vcvt.f32.u32	s15, s15
 1213 0086 414B     		ldr	r3, .L52+12
 1214 0088 03EB8403 		add	r3, r3, r4, lsl #2
 1215 008c C3ED007A 		vstr.32	s15, [r3]
 1216 0090 C2E7     		b	.L40
 1217              	.L46:
 879:Src/main.c    ****       }
 880:Src/main.c    ****       else {
 881:Src/main.c    ****         // env_state++;
 882:Src/main.c    ****         envelope_index[i] = 0;
 1218              		.loc 1 882 0
 1219 0092 0022     		movs	r2, #0
 1220 0094 3C4B     		ldr	r3, .L52+8
 1221 0096 43F82420 		str	r2, [r3, r4, lsl #2]
 883:Src/main.c    ****         env_state[i] = DECAY_MODE;
 1222              		.loc 1 883 0
 1223 009a 0222     		movs	r2, #2
 1224 009c 3C4B     		ldr	r3, .L52+16
 1225 009e 1A55     		strb	r2, [r3, r4]
 1226 00a0 BAE7     		b	.L40
 1227              	.L44:
 884:Src/main.c    ****       }
 885:Src/main.c    ****       break;
 886:Src/main.c    ****     case DECAY_MODE:
 887:Src/main.c    ****       if(base_neg_saw[(envelope_index[i]>>10)%4096] >= sustain){
 1228              		.loc 1 887 0
 1229 00a2 394B     		ldr	r3, .L52+8
 1230 00a4 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1231 00a8 C3F38B23 		ubfx	r3, r3, #10, #12
 1232 00ac 3C4A     		ldr	r2, .L52+32
 1233 00ae D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1234 00b0 3C4B     		ldr	r3, .L52+36
 1235 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1236 00b4 9A42     		cmp	r2, r3
 1237 00b6 20D3     		bcc	.L47
 888:Src/main.c    ****         envelope_index[i] += (uint32_t)(decay * DDS_SCALE_FACTOR);
 1238              		.loc 1 888 0
 1239 00b8 334D     		ldr	r5, .L52+8
 1240 00ba 55F82460 		ldr	r6, [r5, r4, lsl #2]
ARM GAS  /tmp/ccWz8BwV.s 			page 39


 1241 00be 3A4B     		ldr	r3, .L52+40
 1242 00c0 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1243 00c2 FFF7FEFF 		bl	__aeabi_i2d
 1244              	.LVL64:
 1245 00c6 2EA3     		adr	r3, .L52
 1246 00c8 D3E90023 		ldrd	r2, [r3]
 1247 00cc FFF7FEFF 		bl	__aeabi_dmul
 1248              	.LVL65:
 1249 00d0 FFF7FEFF 		bl	__aeabi_d2uiz
 1250              	.LVL66:
 1251 00d4 3044     		add	r0, r0, r6
 1252 00d6 45F82400 		str	r0, [r5, r4, lsl #2]
 889:Src/main.c    ****         envelope[i] = base_neg_saw[(envelope_index[i]>>10)%4096];
 1253              		.loc 1 889 0
 1254 00da 55F82430 		ldr	r3, [r5, r4, lsl #2]
 1255 00de C3F38B23 		ubfx	r3, r3, #10, #12
 1256 00e2 2F4A     		ldr	r2, .L52+32
 1257 00e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1258 00e6 07EE903A 		vmov	s15, r3	@ int
 1259 00ea F8EE677A 		vcvt.f32.u32	s15, s15
 1260 00ee 274B     		ldr	r3, .L52+12
 1261 00f0 03EB8403 		add	r3, r3, r4, lsl #2
 1262 00f4 C3ED007A 		vstr.32	s15, [r3]
 1263 00f8 8EE7     		b	.L40
 1264              	.L47:
 890:Src/main.c    ****       }
 891:Src/main.c    ****       else {
 892:Src/main.c    ****         //envelope_index[i] = 0;
 893:Src/main.c    ****         env_state[i]++;
 1265              		.loc 1 893 0
 1266 00fa 254A     		ldr	r2, .L52+16
 1267 00fc 135D     		ldrb	r3, [r2, r4]	@ zero_extendqisi2
 1268 00fe 0133     		adds	r3, r3, #1
 1269 0100 DBB2     		uxtb	r3, r3
 1270 0102 1355     		strb	r3, [r2, r4]
 1271 0104 88E7     		b	.L40
 1272              	.L45:
 894:Src/main.c    ****         //env_state[i] = RELEASE_MODE;
 895:Src/main.c    ****       }
 896:Src/main.c    ****       break;
 897:Src/main.c    ****     case SUSTAIN_MODE:
 898:Src/main.c    ****       //env_state[i]++;
 899:Src/main.c    ****       break;
 900:Src/main.c    ****     case RELEASE_MODE:
 901:Src/main.c    ****       //      if((UINT32_MAX - envelope_index) < DDS_SCALE_FACTOR){
 902:Src/main.c    ****       if(envelope_index[i] <= 4200000){
 1273              		.loc 1 902 0
 1274 0106 204B     		ldr	r3, .L52+8
 1275 0108 53F82420 		ldr	r2, [r3, r4, lsl #2]
 1276 010c 214B     		ldr	r3, .L52+20
 1277 010e 9A42     		cmp	r2, r3
 1278 0110 20D8     		bhi	.L48
 903:Src/main.c    ****         envelope_index[i] += (uint32_t)(release * DDS_SCALE_FACTOR);
 1279              		.loc 1 903 0
 1280 0112 1D4D     		ldr	r5, .L52+8
 1281 0114 55F82460 		ldr	r6, [r5, r4, lsl #2]
 1282 0118 244B     		ldr	r3, .L52+44
ARM GAS  /tmp/ccWz8BwV.s 			page 40


 1283 011a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1284 011c FFF7FEFF 		bl	__aeabi_i2d
 1285              	.LVL67:
 1286 0120 17A3     		adr	r3, .L52
 1287 0122 D3E90023 		ldrd	r2, [r3]
 1288 0126 FFF7FEFF 		bl	__aeabi_dmul
 1289              	.LVL68:
 1290 012a FFF7FEFF 		bl	__aeabi_d2uiz
 1291              	.LVL69:
 1292 012e 3044     		add	r0, r0, r6
 1293 0130 45F82400 		str	r0, [r5, r4, lsl #2]
 904:Src/main.c    ****         envelope[i] = base_neg_saw[(envelope_index[i]>>10)%4096];
 1294              		.loc 1 904 0
 1295 0134 55F82430 		ldr	r3, [r5, r4, lsl #2]
 1296 0138 C3F38B23 		ubfx	r3, r3, #10, #12
 1297 013c 184A     		ldr	r2, .L52+32
 1298 013e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1299 0140 07EE903A 		vmov	s15, r3	@ int
 1300 0144 F8EE677A 		vcvt.f32.u32	s15, s15
 1301 0148 104B     		ldr	r3, .L52+12
 1302 014a 03EB8403 		add	r3, r3, r4, lsl #2
 1303 014e C3ED007A 		vstr.32	s15, [r3]
 1304 0152 61E7     		b	.L40
 1305              	.L48:
 905:Src/main.c    ****       }
 906:Src/main.c    ****       else {
 907:Src/main.c    ****         env_state[i] = NOT_TRIGGERED;
 1306              		.loc 1 907 0
 1307 0154 0023     		movs	r3, #0
 1308 0156 0E4A     		ldr	r2, .L52+16
 1309 0158 1355     		strb	r3, [r2, r4]
 908:Src/main.c    ****         note_on[i] = MIDI_NOTE_OFF;
 1310              		.loc 1 908 0
 1311 015a 8021     		movs	r1, #128
 1312 015c 144A     		ldr	r2, .L52+48
 1313 015e 1155     		strb	r1, [r2, r4]
 909:Src/main.c    ****         envelope_index[i] = 0;
 1314              		.loc 1 909 0
 1315 0160 094A     		ldr	r2, .L52+8
 1316 0162 42F82430 		str	r3, [r2, r4, lsl #2]
 910:Src/main.c    ****         envelope[i] = 0;
 1317              		.loc 1 910 0
 1318 0166 094A     		ldr	r2, .L52+12
 1319 0168 02EB8402 		add	r2, r2, r4, lsl #2
 1320 016c 0021     		movs	r1, #0
 1321 016e 1160     		str	r1, [r2]	@ float
 911:Src/main.c    ****         lfo_phase_accumulator[i] = 0;
 1322              		.loc 1 911 0
 1323 0170 104A     		ldr	r2, .L52+52
 1324 0172 42F82430 		str	r3, [r2, r4, lsl #2]
 912:Src/main.c    ****         lfo[i] = 0;
 1325              		.loc 1 912 0
 1326 0176 104A     		ldr	r2, .L52+56
 1327 0178 1355     		strb	r3, [r2, r4]
 1328 017a 4DE7     		b	.L40
 1329              	.L51:
 1330              	.LBE14:
ARM GAS  /tmp/ccWz8BwV.s 			page 41


 913:Src/main.c    ****       }
 914:Src/main.c    ****       break;
 915:Src/main.c    ****     }
 916:Src/main.c    ****   }
 917:Src/main.c    **** }
 1331              		.loc 1 917 0
 1332 017c 70BD     		pop	{r4, r5, r6, pc}
 1333              	.LVL70:
 1334              	.L53:
 1335 017e 00BF     		.align	3
 1336              	.L52:
 1337 0180 942EA292 		.word	2460102292
 1338 0184 5F5E5640 		.word	1079402079
 1339 0188 00000000 		.word	.LANCHOR8
 1340 018c 00000000 		.word	.LANCHOR4
 1341 0190 00000000 		.word	env_state
 1342 0194 40164000 		.word	4200000
 1343 0198 00000000 		.word	.LANCHOR9
 1344 019c 00000000 		.word	base_pos_saw
 1345 01a0 00000000 		.word	base_neg_saw
 1346 01a4 00000000 		.word	.LANCHOR10
 1347 01a8 00000000 		.word	.LANCHOR11
 1348 01ac 00000000 		.word	.LANCHOR12
 1349 01b0 00000000 		.word	.LANCHOR13
 1350 01b4 00000000 		.word	.LANCHOR7
 1351 01b8 00000000 		.word	.LANCHOR5
 1352              		.cfi_endproc
 1353              	.LFE143:
 1355              		.section	.text.Update_R2R_DAC,"ax",%progbits
 1356              		.align	1
 1357              		.global	Update_R2R_DAC
 1358              		.syntax unified
 1359              		.thumb
 1360              		.thumb_func
 1361              		.fpu fpv4-sp-d16
 1363              	Update_R2R_DAC:
 1364              	.LFB144:
 918:Src/main.c    **** 
 919:Src/main.c    **** void Update_R2R_DAC() {
 1365              		.loc 1 919 0
 1366              		.cfi_startproc
 1367              		@ args = 0, pretend = 0, frame = 0
 1368              		@ frame_needed = 0, uses_anonymous_args = 0
 1369 0000 08B5     		push	{r3, lr}
 1370              	.LCFI15:
 1371              		.cfi_def_cfa_offset 8
 1372              		.cfi_offset 3, -8
 1373              		.cfi_offset 14, -4
 920:Src/main.c    ****   ((output_val>>0)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_7, GPIO_PIN_SET) : HAL_GPIO_Write
 1374              		.loc 1 920 0
 1375 0002 474B     		ldr	r3, .L73
 1376 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1377 0006 13F0010F 		tst	r3, #1
 1378 000a 51D0     		beq	.L55
 1379              		.loc 1 920 0 is_stmt 0 discriminator 1
 1380 000c 0122     		movs	r2, #1
 1381 000e 8021     		movs	r1, #128
ARM GAS  /tmp/ccWz8BwV.s 			page 42


 1382 0010 4448     		ldr	r0, .L73+4
 1383 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1384              	.LVL71:
 1385              	.L56:
 921:Src/main.c    ****   ((output_val>>1)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_8, GPIO_PIN_SET) : HAL_GPIO_Write
 1386              		.loc 1 921 0 is_stmt 1
 1387 0016 424B     		ldr	r3, .L73
 1388 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1389 001a 13F0020F 		tst	r3, #2
 1390 001e 4DD0     		beq	.L57
 1391              		.loc 1 921 0 is_stmt 0 discriminator 1
 1392 0020 0122     		movs	r2, #1
 1393 0022 4FF48071 		mov	r1, #256
 1394 0026 3F48     		ldr	r0, .L73+4
 1395 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1396              	.LVL72:
 1397              	.L58:
 922:Src/main.c    ****   ((output_val>>2)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_9, GPIO_PIN_SET) : HAL_GPIO_Write
 1398              		.loc 1 922 0 is_stmt 1
 1399 002c 3C4B     		ldr	r3, .L73
 1400 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1401 0030 13F0040F 		tst	r3, #4
 1402 0034 49D0     		beq	.L59
 1403              		.loc 1 922 0 is_stmt 0 discriminator 1
 1404 0036 0122     		movs	r2, #1
 1405 0038 4FF40071 		mov	r1, #512
 1406 003c 3948     		ldr	r0, .L73+4
 1407 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1408              	.LVL73:
 1409              	.L60:
 923:Src/main.c    ****   ((output_val>>3)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_10, GPIO_PIN_SET) : HAL_GPIO_Writ
 1410              		.loc 1 923 0 is_stmt 1
 1411 0042 374B     		ldr	r3, .L73
 1412 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1413 0046 13F0080F 		tst	r3, #8
 1414 004a 45D0     		beq	.L61
 1415              		.loc 1 923 0 is_stmt 0 discriminator 1
 1416 004c 0122     		movs	r2, #1
 1417 004e 4FF48061 		mov	r1, #1024
 1418 0052 3448     		ldr	r0, .L73+4
 1419 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1420              	.LVL74:
 1421              	.L62:
 924:Src/main.c    ****   ((output_val>>4)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET) : HAL_GPIO_Writ
 1422              		.loc 1 924 0 is_stmt 1
 1423 0058 314B     		ldr	r3, .L73
 1424 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1425 005c 13F0100F 		tst	r3, #16
 1426 0060 41D0     		beq	.L63
 1427              		.loc 1 924 0 is_stmt 0 discriminator 1
 1428 0062 0122     		movs	r2, #1
 1429 0064 4FF40061 		mov	r1, #2048
 1430 0068 2E48     		ldr	r0, .L73+4
 1431 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1432              	.LVL75:
 1433              	.L64:
 925:Src/main.c    ****   ((output_val>>5)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET) : HAL_GPIO_Writ
ARM GAS  /tmp/ccWz8BwV.s 			page 43


 1434              		.loc 1 925 0 is_stmt 1
 1435 006e 2C4B     		ldr	r3, .L73
 1436 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1437 0072 13F0200F 		tst	r3, #32
 1438 0076 3DD0     		beq	.L65
 1439              		.loc 1 925 0 is_stmt 0 discriminator 1
 1440 0078 0122     		movs	r2, #1
 1441 007a 4FF48051 		mov	r1, #4096
 1442 007e 2948     		ldr	r0, .L73+4
 1443 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1444              	.LVL76:
 1445              	.L66:
 926:Src/main.c    ****   ((output_val>>6)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_13, GPIO_PIN_SET) : HAL_GPIO_Writ
 1446              		.loc 1 926 0 is_stmt 1
 1447 0084 264B     		ldr	r3, .L73
 1448 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1449 0088 13F0400F 		tst	r3, #64
 1450 008c 39D0     		beq	.L67
 1451              		.loc 1 926 0 is_stmt 0 discriminator 1
 1452 008e 0122     		movs	r2, #1
 1453 0090 4FF40051 		mov	r1, #8192
 1454 0094 2348     		ldr	r0, .L73+4
 1455 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1456              	.LVL77:
 1457              	.L68:
 927:Src/main.c    ****   ((output_val>>7)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_14, GPIO_PIN_SET) : HAL_GPIO_Writ
 1458              		.loc 1 927 0 is_stmt 1
 1459 009a 214B     		ldr	r3, .L73
 1460 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1461 009e DB09     		lsrs	r3, r3, #7
 1462 00a0 36D1     		bne	.L72
 1463              		.loc 1 927 0 is_stmt 0 discriminator 2
 1464 00a2 0022     		movs	r2, #0
 1465 00a4 4FF48041 		mov	r1, #16384
 1466 00a8 1E48     		ldr	r0, .L73+4
 1467 00aa FFF7FEFF 		bl	HAL_GPIO_WritePin
 1468              	.LVL78:
 1469 00ae 08BD     		pop	{r3, pc}
 1470              	.L55:
 920:Src/main.c    ****   ((output_val>>1)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_8, GPIO_PIN_SET) : HAL_GPIO_Write
 1471              		.loc 1 920 0 is_stmt 1 discriminator 2
 1472 00b0 0022     		movs	r2, #0
 1473 00b2 8021     		movs	r1, #128
 1474 00b4 1B48     		ldr	r0, .L73+4
 1475 00b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1476              	.LVL79:
 1477 00ba ACE7     		b	.L56
 1478              	.L57:
 921:Src/main.c    ****   ((output_val>>2)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_9, GPIO_PIN_SET) : HAL_GPIO_Write
 1479              		.loc 1 921 0 discriminator 2
 1480 00bc 0022     		movs	r2, #0
 1481 00be 4FF48071 		mov	r1, #256
 1482 00c2 1848     		ldr	r0, .L73+4
 1483 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1484              	.LVL80:
 1485 00c8 B0E7     		b	.L58
 1486              	.L59:
ARM GAS  /tmp/ccWz8BwV.s 			page 44


 922:Src/main.c    ****   ((output_val>>3)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_10, GPIO_PIN_SET) : HAL_GPIO_Writ
 1487              		.loc 1 922 0 discriminator 2
 1488 00ca 0022     		movs	r2, #0
 1489 00cc 4FF40071 		mov	r1, #512
 1490 00d0 1448     		ldr	r0, .L73+4
 1491 00d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1492              	.LVL81:
 1493 00d6 B4E7     		b	.L60
 1494              	.L61:
 923:Src/main.c    ****   ((output_val>>4)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET) : HAL_GPIO_Writ
 1495              		.loc 1 923 0 discriminator 2
 1496 00d8 0022     		movs	r2, #0
 1497 00da 4FF48061 		mov	r1, #1024
 1498 00de 1148     		ldr	r0, .L73+4
 1499 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1500              	.LVL82:
 1501 00e4 B8E7     		b	.L62
 1502              	.L63:
 924:Src/main.c    ****   ((output_val>>5)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET) : HAL_GPIO_Writ
 1503              		.loc 1 924 0 discriminator 2
 1504 00e6 0022     		movs	r2, #0
 1505 00e8 4FF40061 		mov	r1, #2048
 1506 00ec 0D48     		ldr	r0, .L73+4
 1507 00ee FFF7FEFF 		bl	HAL_GPIO_WritePin
 1508              	.LVL83:
 1509 00f2 BCE7     		b	.L64
 1510              	.L65:
 925:Src/main.c    ****   ((output_val>>6)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_13, GPIO_PIN_SET) : HAL_GPIO_Writ
 1511              		.loc 1 925 0 discriminator 2
 1512 00f4 0022     		movs	r2, #0
 1513 00f6 4FF48051 		mov	r1, #4096
 1514 00fa 0A48     		ldr	r0, .L73+4
 1515 00fc FFF7FEFF 		bl	HAL_GPIO_WritePin
 1516              	.LVL84:
 1517 0100 C0E7     		b	.L66
 1518              	.L67:
 926:Src/main.c    ****   ((output_val>>7)&0x0001)==1 ? HAL_GPIO_WritePin(GPIOE, GPIO_PIN_14, GPIO_PIN_SET) : HAL_GPIO_Writ
 1519              		.loc 1 926 0 discriminator 2
 1520 0102 0022     		movs	r2, #0
 1521 0104 4FF40051 		mov	r1, #8192
 1522 0108 0648     		ldr	r0, .L73+4
 1523 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1524              	.LVL85:
 1525 010e C4E7     		b	.L68
 1526              	.L72:
 1527              		.loc 1 927 0 discriminator 1
 1528 0110 0122     		movs	r2, #1
 1529 0112 4FF48041 		mov	r1, #16384
 1530 0116 0348     		ldr	r0, .L73+4
 1531 0118 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1532              	.LVL86:
 1533 011c 08BD     		pop	{r3, pc}
 1534              	.L74:
 1535 011e 00BF     		.align	2
 1536              	.L73:
 1537 0120 00000000 		.word	.LANCHOR1
 1538 0124 00100240 		.word	1073876992
ARM GAS  /tmp/ccWz8BwV.s 			page 45


 1539              		.cfi_endproc
 1540              	.LFE144:
 1542              		.section	.text.enqueue,"ax",%progbits
 1543              		.align	1
 1544              		.global	enqueue
 1545              		.syntax unified
 1546              		.thumb
 1547              		.thumb_func
 1548              		.fpu fpv4-sp-d16
 1550              	enqueue:
 1551              	.LFB145:
 928:Src/main.c    **** }
 929:Src/main.c    **** 
 930:Src/main.c    **** void enqueue (struct midi_note_msg midi_msg) {
 1552              		.loc 1 930 0
 1553              		.cfi_startproc
 1554              		@ args = 0, pretend = 0, frame = 8
 1555              		@ frame_needed = 0, uses_anonymous_args = 0
 1556              		@ link register save eliminated.
 1557 0000 82B0     		sub	sp, sp, #8
 1558              	.LCFI16:
 1559              		.cfi_def_cfa_offset 8
 1560 0002 0190     		str	r0, [sp, #4]
 931:Src/main.c    ****   midi_msg_queue.queue[midi_msg_queue.head++] = midi_msg;
 1561              		.loc 1 931 0
 1562 0004 074B     		ldr	r3, .L77
 1563 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1564 0008 511C     		adds	r1, r2, #1
 1565 000a 1970     		strb	r1, [r3]
 1566 000c 02EB4202 		add	r2, r2, r2, lsl #1
 1567 0010 1344     		add	r3, r3, r2
 1568 0012 02AA     		add	r2, sp, #8
 1569 0014 32F8041D 		ldrh	r1, [r2, #-4]!	@ unaligned
 1570 0018 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 1571 001a 5980     		strh	r1, [r3, #2]	@ unaligned
 1572 001c 1A71     		strb	r2, [r3, #4]
 932:Src/main.c    **** }
 1573              		.loc 1 932 0
 1574 001e 02B0     		add	sp, sp, #8
 1575              	.LCFI17:
 1576              		.cfi_def_cfa_offset 0
 1577              		@ sp needed
 1578 0020 7047     		bx	lr
 1579              	.L78:
 1580 0022 00BF     		.align	2
 1581              	.L77:
 1582 0024 00000000 		.word	midi_msg_queue
 1583              		.cfi_endproc
 1584              	.LFE145:
 1586              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 1587              		.align	1
 1588              		.global	HAL_SPI_TxRxCpltCallback
 1589              		.syntax unified
 1590              		.thumb
 1591              		.thumb_func
 1592              		.fpu fpv4-sp-d16
 1594              	HAL_SPI_TxRxCpltCallback:
ARM GAS  /tmp/ccWz8BwV.s 			page 46


 1595              	.LFB139:
 787:Src/main.c    ****   //  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, GPIO_PIN_SET);
 1596              		.loc 1 787 0
 1597              		.cfi_startproc
 1598              		@ args = 0, pretend = 0, frame = 8
 1599              		@ frame_needed = 0, uses_anonymous_args = 0
 1600              	.LVL87:
 1601 0000 10B5     		push	{r4, lr}
 1602              	.LCFI18:
 1603              		.cfi_def_cfa_offset 8
 1604              		.cfi_offset 4, -8
 1605              		.cfi_offset 14, -4
 1606 0002 82B0     		sub	sp, sp, #8
 1607              	.LCFI19:
 1608              		.cfi_def_cfa_offset 16
 799:Src/main.c    **** 
 1609              		.loc 1 799 0
 1610 0004 0122     		movs	r2, #1
 1611 0006 154B     		ldr	r3, .L85
 1612 0008 1A70     		strb	r2, [r3]
 801:Src/main.c    ****     struct midi_note_msg new_midi_note_msg = {
 1613              		.loc 1 801 0
 1614 000a 154B     		ldr	r3, .L85+4
 1615 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1616 000e 23B9     		cbnz	r3, .L83
 810:Src/main.c    ****     struct midi_note_msg new_midi_note_msg = {
 1617              		.loc 1 810 0
 1618 0010 144B     		ldr	r3, .L85+8
 1619 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1620 0014 93B9     		cbnz	r3, .L84
 1621              	.LVL88:
 1622              	.L79:
 819:Src/main.c    **** 
 1623              		.loc 1 819 0
 1624 0016 02B0     		add	sp, sp, #8
 1625              	.LCFI20:
 1626              		.cfi_remember_state
 1627              		.cfi_def_cfa_offset 8
 1628              		@ sp needed
 1629 0018 10BD     		pop	{r4, pc}
 1630              	.LVL89:
 1631              	.L83:
 1632              	.LCFI21:
 1633              		.cfi_restore_state
 1634              	.LBB15:
 802:Src/main.c    ****                                               MIDI_NOTE_ON,
 1635              		.loc 1 802 0
 1636 001a 9023     		movs	r3, #144
 1637 001c 8DF80430 		strb	r3, [sp, #4]
 804:Src/main.c    ****                                               127
 1638              		.loc 1 804 0
 1639 0020 114B     		ldr	r3, .L85+12
 1640 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 802:Src/main.c    ****                                               MIDI_NOTE_ON,
 1641              		.loc 1 802 0
 1642 0024 8DF80530 		strb	r3, [sp, #5]
 1643 0028 7F23     		movs	r3, #127
ARM GAS  /tmp/ccWz8BwV.s 			page 47


 1644 002a 8DF80630 		strb	r3, [sp, #6]
 807:Src/main.c    ****     note_on_flag = 0;
 1645              		.loc 1 807 0
 1646 002e 0198     		ldr	r0, [sp, #4]
 1647              	.LVL90:
 1648 0030 FFF7FEFF 		bl	enqueue
 1649              	.LVL91:
 808:Src/main.c    ****   }
 1650              		.loc 1 808 0
 1651 0034 0022     		movs	r2, #0
 1652 0036 0A4B     		ldr	r3, .L85+4
 1653 0038 1A70     		strb	r2, [r3]
 1654              	.LBE15:
 1655 003a ECE7     		b	.L79
 1656              	.LVL92:
 1657              	.L84:
 1658              	.LBB16:
 811:Src/main.c    ****                                               MIDI_NOTE_OFF,
 1659              		.loc 1 811 0
 1660 003c 8023     		movs	r3, #128
 1661 003e 8DF80430 		strb	r3, [sp, #4]
 813:Src/main.c    ****                                               0
 1662              		.loc 1 813 0
 1663 0042 094B     		ldr	r3, .L85+12
 1664 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 811:Src/main.c    ****                                               MIDI_NOTE_OFF,
 1665              		.loc 1 811 0
 1666 0046 8DF80530 		strb	r3, [sp, #5]
 1667 004a 0024     		movs	r4, #0
 1668 004c 8DF80640 		strb	r4, [sp, #6]
 816:Src/main.c    ****     note_off_flag = 0;
 1669              		.loc 1 816 0
 1670 0050 0198     		ldr	r0, [sp, #4]
 1671              	.LVL93:
 1672 0052 FFF7FEFF 		bl	enqueue
 1673              	.LVL94:
 817:Src/main.c    ****   }
 1674              		.loc 1 817 0
 1675 0056 034B     		ldr	r3, .L85+8
 1676 0058 1C70     		strb	r4, [r3]
 1677              	.LBE16:
 819:Src/main.c    **** 
 1678              		.loc 1 819 0
 1679 005a DCE7     		b	.L79
 1680              	.L86:
 1681              		.align	2
 1682              	.L85:
 1683 005c 00000000 		.word	.LANCHOR14
 1684 0060 00000000 		.word	.LANCHOR15
 1685 0064 00000000 		.word	.LANCHOR16
 1686 0068 00000000 		.word	spi_rx_buffer
 1687              		.cfi_endproc
 1688              	.LFE139:
 1690              		.section	.text.dequeue,"ax",%progbits
 1691              		.align	1
 1692              		.global	dequeue
 1693              		.syntax unified
ARM GAS  /tmp/ccWz8BwV.s 			page 48


 1694              		.thumb
 1695              		.thumb_func
 1696              		.fpu fpv4-sp-d16
 1698              	dequeue:
 1699              	.LFB146:
 933:Src/main.c    **** 
 934:Src/main.c    **** struct midi_note_msg dequeue(void) {
 1700              		.loc 1 934 0
 1701              		.cfi_startproc
 1702              		@ args = 0, pretend = 0, frame = 8
 1703              		@ frame_needed = 0, uses_anonymous_args = 0
 1704              		@ link register save eliminated.
 1705 0000 82B0     		sub	sp, sp, #8
 1706              	.LCFI22:
 1707              		.cfi_def_cfa_offset 8
 935:Src/main.c    ****   return midi_msg_queue.queue[midi_msg_queue.tail++];
 1708              		.loc 1 935 0
 1709 0002 0C4B     		ldr	r3, .L89
 1710 0004 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1711 0006 511C     		adds	r1, r2, #1
 1712 0008 5970     		strb	r1, [r3, #1]
 1713 000a 02EB4202 		add	r2, r2, r2, lsl #1
 1714 000e 1344     		add	r3, r3, r2
 1715 0010 33F8022F 		ldrh	r2, [r3, #2]!	@ unaligned
 1716 0014 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1717 0016 ADF80420 		strh	r2, [sp, #4]	@ unaligned
 1718 001a 0020     		movs	r0, #0
 1719 001c 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 1720 0020 62F30700 		bfi	r0, r2, #0, #8
 1721 0024 9DF80520 		ldrb	r2, [sp, #5]	@ zero_extendqisi2
 1722 0028 62F30F20 		bfi	r0, r2, #8, #8
 1723 002c 63F31740 		bfi	r0, r3, #16, #8
 936:Src/main.c    **** }
 1724              		.loc 1 936 0
 1725 0030 02B0     		add	sp, sp, #8
 1726              	.LCFI23:
 1727              		.cfi_def_cfa_offset 0
 1728              		@ sp needed
 1729 0032 7047     		bx	lr
 1730              	.L90:
 1731              		.align	2
 1732              	.L89:
 1733 0034 00000000 		.word	midi_msg_queue
 1734              		.cfi_endproc
 1735              	.LFE146:
 1737              		.section	.text.main,"ax",%progbits
 1738              		.align	1
 1739              		.global	main
 1740              		.syntax unified
 1741              		.thumb
 1742              		.thumb_func
 1743              		.fpu fpv4-sp-d16
 1745              	main:
 1746              	.LFB130:
 127:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1747              		.loc 1 127 0
 1748              		.cfi_startproc
ARM GAS  /tmp/ccWz8BwV.s 			page 49


 1749              		@ args = 0, pretend = 0, frame = 24
 1750              		@ frame_needed = 0, uses_anonymous_args = 0
 1751 0000 70B5     		push	{r4, r5, r6, lr}
 1752              	.LCFI24:
 1753              		.cfi_def_cfa_offset 16
 1754              		.cfi_offset 4, -16
 1755              		.cfi_offset 5, -12
 1756              		.cfi_offset 6, -8
 1757              		.cfi_offset 14, -4
 1758 0002 86B0     		sub	sp, sp, #24
 1759              	.LCFI25:
 1760              		.cfi_def_cfa_offset 40
 136:Src/main.c    **** 
 1761              		.loc 1 136 0
 1762 0004 FFF7FEFF 		bl	HAL_Init
 1763              	.LVL95:
 143:Src/main.c    **** 
 1764              		.loc 1 143 0
 1765 0008 FFF7FEFF 		bl	SystemClock_Config
 1766              	.LVL96:
 150:Src/main.c    ****   MX_SPI5_Init();
 1767              		.loc 1 150 0
 1768 000c FFF7FEFF 		bl	MX_GPIO_Init
 1769              	.LVL97:
 151:Src/main.c    ****   MX_USART1_UART_Init();
 1770              		.loc 1 151 0
 1771 0010 FFF7FEFF 		bl	MX_SPI5_Init
 1772              	.LVL98:
 152:Src/main.c    ****   //  MX_DAC_Init();
 1773              		.loc 1 152 0
 1774 0014 FFF7FEFF 		bl	MX_USART1_UART_Init
 1775              	.LVL99:
 157:Src/main.c    ****   //  HAL_TIM_Base_Start_IT(&htim6);
 1776              		.loc 1 157 0
 1777 0018 FFF7FEFF 		bl	init_wavetable
 1778              	.LVL100:
 1779              	.LBB17:
 162:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 1780              		.loc 1 162 0
 1781 001c 0023     		movs	r3, #0
 1782              	.LVL101:
 1783              	.L92:
 162:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 1784              		.loc 1 162 0 is_stmt 0 discriminator 1
 1785 001e 0F2B     		cmp	r3, #15
 1786 0020 0DDC     		bgt	.L105
 163:Src/main.c    ****     note_on[i] = MIDI_NOTE_OFF;
 1787              		.loc 1 163 0 is_stmt 1 discriminator 3
 1788 0022 0022     		movs	r2, #0
 1789 0024 4C49     		ldr	r1, .L109
 1790 0026 CA54     		strb	r2, [r1, r3]
 164:Src/main.c    ****     note_freq[i] = 0;
 1791              		.loc 1 164 0 discriminator 3
 1792 0028 8020     		movs	r0, #128
 1793 002a 4C49     		ldr	r1, .L109+4
 1794 002c C854     		strb	r0, [r1, r3]
 165:Src/main.c    ****     lfo_freq[i] = 20;
ARM GAS  /tmp/ccWz8BwV.s 			page 50


 1795              		.loc 1 165 0 discriminator 3
 1796 002e 4C49     		ldr	r1, .L109+8
 1797 0030 CA54     		strb	r2, [r1, r3]
 166:Src/main.c    ****   }
 1798              		.loc 1 166 0 discriminator 3
 1799 0032 1421     		movs	r1, #20
 1800 0034 4B4A     		ldr	r2, .L109+12
 1801 0036 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 162:Src/main.c    ****     env_state[i] = NOT_TRIGGERED;
 1802              		.loc 1 162 0 discriminator 3
 1803 003a 0133     		adds	r3, r3, #1
 1804              	.LVL102:
 1805 003c EFE7     		b	.L92
 1806              	.L105:
 1807              	.LBE17:
 188:Src/main.c    ****   HAL_UART_Transmit(&huart1, init_msg, 20, 50);
 1808              		.loc 1 188 0
 1809 003e 4A4B     		ldr	r3, .L109+16
 1810              	.LVL103:
 1811 0040 6C46     		mov	r4, sp
 1812 0042 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1813 0044 07C4     		stmia	r4!, {r0, r1, r2}
 1814 0046 2370     		strb	r3, [r4]
 1815 0048 0023     		movs	r3, #0
 1816 004a CDF80D30 		str	r3, [sp, #13]	@ unaligned
 1817 004e 0493     		str	r3, [sp, #16]	@ unaligned
 189:Src/main.c    **** 
 1818              		.loc 1 189 0
 1819 0050 3223     		movs	r3, #50
 1820 0052 1422     		movs	r2, #20
 1821 0054 6946     		mov	r1, sp
 1822 0056 4548     		ldr	r0, .L109+20
 1823 0058 FFF7FEFF 		bl	HAL_UART_Transmit
 1824              	.LVL104:
 1825 005c 1FE0     		b	.L100
 1826              	.L107:
 215:Src/main.c    ****         HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 1827              		.loc 1 215 0
 1828 005e 06A9     		add	r1, sp, #24
 1829 0060 6E23     		movs	r3, #110
 1830 0062 01F8013D 		strb	r3, [r1, #-1]!
 216:Src/main.c    ****       }
 1831              		.loc 1 216 0
 1832 0066 3223     		movs	r3, #50
 1833 0068 0122     		movs	r2, #1
 1834 006a 3046     		mov	r0, r6
 1835 006c FFF7FEFF 		bl	HAL_UART_Transmit
 1836              	.LVL105:
 1837 0070 08E0     		b	.L98
 1838              	.L108:
 219:Src/main.c    ****         HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 1839              		.loc 1 219 0
 1840 0072 06A9     		add	r1, sp, #24
 1841 0074 6623     		movs	r3, #102
 1842 0076 01F8013D 		strb	r3, [r1, #-1]!
 220:Src/main.c    ****       }
 1843              		.loc 1 220 0
ARM GAS  /tmp/ccWz8BwV.s 			page 51


 1844 007a 3223     		movs	r3, #50
 1845 007c 0122     		movs	r2, #1
 1846 007e 3B48     		ldr	r0, .L109+20
 1847 0080 FFF7FEFF 		bl	HAL_UART_Transmit
 1848              	.LVL106:
 1849              	.L98:
 227:Src/main.c    ****       HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 1850              		.loc 1 227 0
 1851 0084 06A9     		add	r1, sp, #24
 1852 0086 0A23     		movs	r3, #10
 1853 0088 01F8013D 		strb	r3, [r1, #-1]!
 228:Src/main.c    **** 
 1854              		.loc 1 228 0
 1855 008c 3223     		movs	r3, #50
 1856 008e 0122     		movs	r2, #1
 1857 0090 3648     		ldr	r0, .L109+20
 1858 0092 FFF7FEFF 		bl	HAL_UART_Transmit
 1859              	.LVL107:
 1860              	.L96:
 233:Src/main.c    ****       //      HAL_UART_Transmit(&huart1, &spi_rx_buffer[0],1,50);
 1861              		.loc 1 233 0
 1862 0096 364B     		ldr	r3, .L109+24
 1863 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1864 009a 002B     		cmp	r3, #0
 1865 009c 4BD1     		bne	.L106
 1866              	.L100:
 200:Src/main.c    **** 
 1867              		.loc 1 200 0
 1868 009e 3549     		ldr	r1, .L109+28
 1869 00a0 3548     		ldr	r0, .L109+32
 1870 00a2 FFF7FEFF 		bl	Receive_MIDI
 1871              	.LVL108:
 202:Src/main.c    ****       current_midi_note_msg = dequeue();
 1872              		.loc 1 202 0
 1873 00a6 354B     		ldr	r3, .L109+36
 1874 00a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1875 00aa 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1876 00ac 9A42     		cmp	r2, r3
 1877 00ae F2D0     		beq	.L96
 203:Src/main.c    **** 
 1878              		.loc 1 203 0
 1879 00b0 FFF7FEFF 		bl	dequeue
 1880              	.LVL109:
 1881 00b4 324C     		ldr	r4, .L109+40
 1882 00b6 2070     		strb	r0, [r4]
 1883 00b8 C0F30723 		ubfx	r3, r0, #8, #8
 1884 00bc 6370     		strb	r3, [r4, #1]
 1885 00be C0F30740 		ubfx	r0, r0, #16, #8
 1886 00c2 A070     		strb	r0, [r4, #2]
 205:Src/main.c    ****       HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 1887              		.loc 1 205 0
 1888 00c4 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1889 00c6 06AD     		add	r5, sp, #24
 1890 00c8 05F8013D 		strb	r3, [r5, #-1]!
 206:Src/main.c    ****       uart_tx_buffer = current_midi_note_msg.note;
 1891              		.loc 1 206 0
 1892 00cc 274E     		ldr	r6, .L109+20
ARM GAS  /tmp/ccWz8BwV.s 			page 52


 1893 00ce 3223     		movs	r3, #50
 1894 00d0 0122     		movs	r2, #1
 1895 00d2 2946     		mov	r1, r5
 1896 00d4 3046     		mov	r0, r6
 1897 00d6 FFF7FEFF 		bl	HAL_UART_Transmit
 1898              	.LVL110:
 207:Src/main.c    ****       HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 1899              		.loc 1 207 0
 1900 00da 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 1901 00dc 8DF81730 		strb	r3, [sp, #23]
 208:Src/main.c    ****       uart_tx_buffer = current_midi_note_msg.velocity;
 1902              		.loc 1 208 0
 1903 00e0 3223     		movs	r3, #50
 1904 00e2 0122     		movs	r2, #1
 1905 00e4 2946     		mov	r1, r5
 1906 00e6 3046     		mov	r0, r6
 1907 00e8 FFF7FEFF 		bl	HAL_UART_Transmit
 1908              	.LVL111:
 209:Src/main.c    ****       HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 1909              		.loc 1 209 0
 1910 00ec A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1911 00ee 8DF81730 		strb	r3, [sp, #23]
 210:Src/main.c    ****       uart_tx_buffer = '\n';
 1912              		.loc 1 210 0
 1913 00f2 3223     		movs	r3, #50
 1914 00f4 0122     		movs	r2, #1
 1915 00f6 2946     		mov	r1, r5
 1916 00f8 3046     		mov	r0, r6
 1917 00fa FFF7FEFF 		bl	HAL_UART_Transmit
 1918              	.LVL112:
 211:Src/main.c    ****       HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 1919              		.loc 1 211 0
 1920 00fe 0A23     		movs	r3, #10
 1921 0100 8DF81730 		strb	r3, [sp, #23]
 212:Src/main.c    **** 
 1922              		.loc 1 212 0
 1923 0104 3223     		movs	r3, #50
 1924 0106 0122     		movs	r2, #1
 1925 0108 2946     		mov	r1, r5
 1926 010a 3046     		mov	r0, r6
 1927 010c FFF7FEFF 		bl	HAL_UART_Transmit
 1928              	.LVL113:
 214:Src/main.c    ****         uart_tx_buffer = 'n';
 1929              		.loc 1 214 0
 1930 0110 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1931 0112 DBB2     		uxtb	r3, r3
 1932 0114 902B     		cmp	r3, #144
 1933 0116 A2D0     		beq	.L107
 218:Src/main.c    ****         uart_tx_buffer = 'f';
 1934              		.loc 1 218 0
 1935 0118 194B     		ldr	r3, .L109+40
 1936 011a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1937 011c DBB2     		uxtb	r3, r3
 1938 011e 802B     		cmp	r3, #128
 1939 0120 A7D0     		beq	.L108
 223:Src/main.c    ****         HAL_UART_Transmit(&huart1, &uart_tx_buffer, 1, 50);
 1940              		.loc 1 223 0
ARM GAS  /tmp/ccWz8BwV.s 			page 53


 1941 0122 06A9     		add	r1, sp, #24
 1942 0124 7A23     		movs	r3, #122
 1943 0126 01F8013D 		strb	r3, [r1, #-1]!
 224:Src/main.c    ****       }
 1944              		.loc 1 224 0
 1945 012a 3223     		movs	r3, #50
 1946 012c 0122     		movs	r2, #1
 1947 012e 0F48     		ldr	r0, .L109+20
 1948 0130 FFF7FEFF 		bl	HAL_UART_Transmit
 1949              	.LVL114:
 1950 0134 A6E7     		b	.L98
 1951              	.L106:
 235:Src/main.c    **** 
 1952              		.loc 1 235 0
 1953 0136 0022     		movs	r2, #0
 1954 0138 0D4B     		ldr	r3, .L109+24
 1955 013a 1A70     		strb	r2, [r3]
 237:Src/main.c    ****       case MIDI_NOTE_ON:
 1956              		.loc 1 237 0
 1957 013c 0D4B     		ldr	r3, .L109+28
 1958 013e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1959 0140 802B     		cmp	r3, #128
 1960 0142 05D0     		beq	.L101
 1961 0144 902B     		cmp	r3, #144
 1962 0146 AAD1     		bne	.L100
 239:Src/main.c    ****         break;
 1963              		.loc 1 239 0
 1964 0148 0122     		movs	r2, #1
 1965 014a 0E4B     		ldr	r3, .L109+44
 1966 014c 1A70     		strb	r2, [r3]
 240:Src/main.c    ****       case MIDI_NOTE_OFF:
 1967              		.loc 1 240 0
 1968 014e A6E7     		b	.L100
 1969              	.L101:
 242:Src/main.c    ****         break;
 1970              		.loc 1 242 0
 1971 0150 0122     		movs	r2, #1
 1972 0152 0D4B     		ldr	r3, .L109+48
 1973 0154 1A70     		strb	r2, [r3]
 243:Src/main.c    ****       default:
 1974              		.loc 1 243 0
 1975 0156 A2E7     		b	.L100
 1976              	.L110:
 1977              		.align	2
 1978              	.L109:
 1979 0158 00000000 		.word	env_state
 1980 015c 00000000 		.word	.LANCHOR13
 1981 0160 00000000 		.word	.LANCHOR2
 1982 0164 00000000 		.word	.LANCHOR6
 1983 0168 00000000 		.word	.LANCHOR17
 1984 016c 00000000 		.word	huart1
 1985 0170 00000000 		.word	.LANCHOR14
 1986 0174 00000000 		.word	spi_rx_buffer
 1987 0178 00000000 		.word	hspi5
 1988 017c 00000000 		.word	midi_msg_queue
 1989 0180 00000000 		.word	.LANCHOR18
 1990 0184 00000000 		.word	.LANCHOR15
ARM GAS  /tmp/ccWz8BwV.s 			page 54


 1991 0188 00000000 		.word	.LANCHOR16
 1992              		.cfi_endproc
 1993              	.LFE130:
 1995              		.section	.text.Error_Handler,"ax",%progbits
 1996              		.align	1
 1997              		.global	Error_Handler
 1998              		.syntax unified
 1999              		.thumb
 2000              		.thumb_func
 2001              		.fpu fpv4-sp-d16
 2003              	Error_Handler:
 2004              	.LFB147:
 937:Src/main.c    **** 
 938:Src/main.c    **** /* USER CODE END 4 */
 939:Src/main.c    **** 
 940:Src/main.c    **** /**
 941:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 942:Src/main.c    ****   * @retval None
 943:Src/main.c    ****   */
 944:Src/main.c    **** void Error_Handler(void)
 945:Src/main.c    **** {
 2005              		.loc 1 945 0
 2006              		.cfi_startproc
 2007              		@ args = 0, pretend = 0, frame = 0
 2008              		@ frame_needed = 0, uses_anonymous_args = 0
 2009              		@ link register save eliminated.
 2010 0000 7047     		bx	lr
 2011              		.cfi_endproc
 2012              	.LFE147:
 2014              		.global	release
 2015              		.global	sustain
 2016              		.global	decay
 2017              		.global	attack
 2018              		.comm	midi_msg_queue,767,4
 2019              		.global	MIDI_flag
 2020              		.global	update_value_flag
 2021              		.global	lfo
 2022              		.global	lfo_freq
 2023              		.global	lfo_phase_accumulator
 2024              		.global	note_freq
 2025              		.global	note_on
 2026              		.comm	env_state,16,4
 2027              		.global	envelope
 2028              		.global	envelope_index
 2029              		.global	output_val
 2030              		.global	phase_accumulator
 2031              		.global	current_midi_note_msg
 2032              		.global	note_off_flag
 2033              		.global	note_on_flag
 2034              		.global	inv_voices
 2035              		.comm	spi_rx_buffer,3,4
 2036              		.comm	spi_tx_buffer,3,4
 2037              		.comm	huart1,64,4
 2038              		.comm	htim7,64,4
 2039              		.comm	htim6,64,4
 2040              		.comm	hspi5,88,4
 2041              		.comm	hdac,20,4
ARM GAS  /tmp/ccWz8BwV.s 			page 55


 2042              		.comm	lfo_sine,256,4
 2043              		.comm	base_sq,4096,4
 2044              		.comm	base_tri,4096,4
 2045              		.comm	base_neg_saw,4096,4
 2046              		.comm	base_pos_saw,4096,4
 2047              		.comm	base_sine,4096,4
 2048              		.section	.rodata
 2049              		.align	2
 2050              		.set	.LANCHOR17,. + 0
 2051              	.LC0:
 2052 0000 0A53544D 		.ascii	"\012STM32F429!\012\000"
 2052      33324634 
 2052      3239210A 
 2052      00
 2053 000d 00000000 		.space	7
 2053      000000
 2054              		.section	.bss.MIDI_flag,"aw",%nobits
 2055              		.set	.LANCHOR14,. + 0
 2058              	MIDI_flag:
 2059 0000 00       		.space	1
 2060              		.section	.bss.current_midi_note_msg,"aw",%nobits
 2061              		.align	2
 2062              		.set	.LANCHOR18,. + 0
 2065              	current_midi_note_msg:
 2066 0000 000000   		.space	3
 2067              		.section	.bss.envelope,"aw",%nobits
 2068              		.align	2
 2069              		.set	.LANCHOR4,. + 0
 2072              	envelope:
 2073 0000 00000000 		.space	64
 2073      00000000 
 2073      00000000 
 2073      00000000 
 2073      00000000 
 2074              		.section	.bss.envelope_index,"aw",%nobits
 2075              		.align	2
 2076              		.set	.LANCHOR8,. + 0
 2079              	envelope_index:
 2080 0000 00000000 		.space	64
 2080      00000000 
 2080      00000000 
 2080      00000000 
 2080      00000000 
 2081              		.section	.bss.lfo,"aw",%nobits
 2082              		.align	2
 2083              		.set	.LANCHOR5,. + 0
 2086              	lfo:
 2087 0000 00000000 		.space	16
 2087      00000000 
 2087      00000000 
 2087      00000000 
 2088              		.section	.bss.lfo_freq,"aw",%nobits
 2089              		.align	2
 2090              		.set	.LANCHOR6,. + 0
 2093              	lfo_freq:
 2094 0000 00000000 		.space	32
 2094      00000000 
ARM GAS  /tmp/ccWz8BwV.s 			page 56


 2094      00000000 
 2094      00000000 
 2094      00000000 
 2095              		.section	.bss.lfo_phase_accumulator,"aw",%nobits
 2096              		.align	2
 2097              		.set	.LANCHOR7,. + 0
 2100              	lfo_phase_accumulator:
 2101 0000 00000000 		.space	64
 2101      00000000 
 2101      00000000 
 2101      00000000 
 2101      00000000 
 2102              		.section	.bss.note_freq,"aw",%nobits
 2103              		.align	2
 2104              		.set	.LANCHOR2,. + 0
 2107              	note_freq:
 2108 0000 00000000 		.space	16
 2108      00000000 
 2108      00000000 
 2108      00000000 
 2109              		.section	.bss.note_off_flag,"aw",%nobits
 2110              		.set	.LANCHOR16,. + 0
 2113              	note_off_flag:
 2114 0000 00       		.space	1
 2115              		.section	.bss.note_on,"aw",%nobits
 2116              		.align	2
 2117              		.set	.LANCHOR13,. + 0
 2120              	note_on:
 2121 0000 00000000 		.space	88
 2121      00000000 
 2121      00000000 
 2121      00000000 
 2121      00000000 
 2122              		.section	.bss.note_on_flag,"aw",%nobits
 2123              		.set	.LANCHOR15,. + 0
 2126              	note_on_flag:
 2127 0000 00       		.space	1
 2128              		.section	.bss.output_val,"aw",%nobits
 2129              		.set	.LANCHOR1,. + 0
 2132              	output_val:
 2133 0000 00       		.space	1
 2134              		.section	.bss.phase_accumulator,"aw",%nobits
 2135              		.align	2
 2136              		.set	.LANCHOR3,. + 0
 2139              	phase_accumulator:
 2140 0000 00000000 		.space	64
 2140      00000000 
 2140      00000000 
 2140      00000000 
 2140      00000000 
 2141              		.section	.bss.update_value_flag,"aw",%nobits
 2142              		.set	.LANCHOR0,. + 0
 2145              	update_value_flag:
 2146 0000 00       		.space	1
 2147              		.section	.data.attack,"aw",%progbits
 2148              		.set	.LANCHOR9,. + 0
 2151              	attack:
ARM GAS  /tmp/ccWz8BwV.s 			page 57


 2152 0000 FF       		.byte	-1
 2153              		.section	.data.decay,"aw",%progbits
 2154              		.set	.LANCHOR11,. + 0
 2157              	decay:
 2158 0000 FF       		.byte	-1
 2159              		.section	.data.release,"aw",%progbits
 2160              		.set	.LANCHOR12,. + 0
 2163              	release:
 2164 0000 FF       		.byte	-1
 2165              		.section	.data.sustain,"aw",%progbits
 2166              		.set	.LANCHOR10,. + 0
 2169              	sustain:
 2170 0000 C8       		.byte	-56
 2171              		.section	.rodata.inv_voices,"a",%progbits
 2172              		.align	2
 2175              	inv_voices:
 2176 0000 0000803D 		.word	1031798784
 2177              		.text
 2178              	.Letext0:
 2179              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2180              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2181              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2182              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2183              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 2184              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2185              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2186              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2187              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2188              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2189              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dac.h"
 2190              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 2191              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2192              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2193              		.file 16 "Inc/midi.h"
 2194              		.file 17 "/usr/include/newlib/sys/lock.h"
 2195              		.file 18 "/usr/include/newlib/sys/_types.h"
 2196              		.file 19 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 2197              		.file 20 "/usr/include/newlib/sys/reent.h"
 2198              		.file 21 "/usr/include/newlib/stdlib.h"
 2199              		.file 22 "Inc/waves.h"
 2200              		.file 23 "/usr/include/newlib/math.h"
 2201              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccWz8BwV.s 			page 58


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccWz8BwV.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccWz8BwV.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccWz8BwV.s:485    .text.MX_GPIO_Init:00000000000002c0 $d
     /tmp/ccWz8BwV.s:496    .text.MX_GPIO_Init:00000000000002e4 $t
     /tmp/ccWz8BwV.s:624    .text.MX_GPIO_Init:00000000000003a0 $d
     /tmp/ccWz8BwV.s:634    .text.MX_SPI5_Init:0000000000000000 $t
     /tmp/ccWz8BwV.s:640    .text.MX_SPI5_Init:0000000000000000 MX_SPI5_Init
     /tmp/ccWz8BwV.s:684    .text.MX_SPI5_Init:0000000000000028 $d
                            *COM*:0000000000000058 hspi5
     /tmp/ccWz8BwV.s:690    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccWz8BwV.s:696    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccWz8BwV.s:735    .text.MX_USART1_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart1
     /tmp/ccWz8BwV.s:741    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccWz8BwV.s:748    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccWz8BwV.s:856    .text.SystemClock_Config:0000000000000090 $d
     /tmp/ccWz8BwV.s:862    .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/ccWz8BwV.s:869    .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/ccWz8BwV.s:882    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccWz8BwV.s:889    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccWz8BwV.s:914    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccWz8BwV.s:923    .text.UpdateOutputValue:0000000000000000 $t
     /tmp/ccWz8BwV.s:930    .text.UpdateOutputValue:0000000000000000 UpdateOutputValue
     /tmp/ccWz8BwV.s:1038   .text.UpdateOutputValue:00000000000000b8 $d
                            *COM*:0000000000001000 base_sine
                            *COM*:0000000000001000 base_pos_saw
     /tmp/ccWz8BwV.s:1056   .text.UpdateLFOs:0000000000000000 $t
     /tmp/ccWz8BwV.s:1063   .text.UpdateLFOs:0000000000000000 UpdateLFOs
     /tmp/ccWz8BwV.s:1115   .text.UpdateLFOs:0000000000000040 $d
     /tmp/ccWz8BwV.s:1124   .text.UpdateEnvelope:0000000000000000 $t
     /tmp/ccWz8BwV.s:1131   .text.UpdateEnvelope:0000000000000000 UpdateEnvelope
     /tmp/ccWz8BwV.s:1178   .text.UpdateEnvelope:0000000000000030 $d
     /tmp/ccWz8BwV.s:1183   .text.UpdateEnvelope:0000000000000044 $t
     /tmp/ccWz8BwV.s:1337   .text.UpdateEnvelope:0000000000000180 $d
                            *COM*:0000000000000010 env_state
                            *COM*:0000000000001000 base_neg_saw
     /tmp/ccWz8BwV.s:1356   .text.Update_R2R_DAC:0000000000000000 $t
     /tmp/ccWz8BwV.s:1363   .text.Update_R2R_DAC:0000000000000000 Update_R2R_DAC
     /tmp/ccWz8BwV.s:1537   .text.Update_R2R_DAC:0000000000000120 $d
     /tmp/ccWz8BwV.s:1543   .text.enqueue:0000000000000000 $t
     /tmp/ccWz8BwV.s:1550   .text.enqueue:0000000000000000 enqueue
     /tmp/ccWz8BwV.s:1582   .text.enqueue:0000000000000024 $d
                            *COM*:00000000000002ff midi_msg_queue
     /tmp/ccWz8BwV.s:1587   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/ccWz8BwV.s:1594   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/ccWz8BwV.s:1683   .text.HAL_SPI_TxRxCpltCallback:000000000000005c $d
                            *COM*:0000000000000003 spi_rx_buffer
     /tmp/ccWz8BwV.s:1691   .text.dequeue:0000000000000000 $t
     /tmp/ccWz8BwV.s:1698   .text.dequeue:0000000000000000 dequeue
     /tmp/ccWz8BwV.s:1733   .text.dequeue:0000000000000034 $d
     /tmp/ccWz8BwV.s:1738   .text.main:0000000000000000 $t
     /tmp/ccWz8BwV.s:1745   .text.main:0000000000000000 main
     /tmp/ccWz8BwV.s:1979   .text.main:0000000000000158 $d
     /tmp/ccWz8BwV.s:1996   .text.Error_Handler:0000000000000000 $t
     /tmp/ccWz8BwV.s:2003   .text.Error_Handler:0000000000000000 Error_Handler
ARM GAS  /tmp/ccWz8BwV.s 			page 59


     /tmp/ccWz8BwV.s:2163   .data.release:0000000000000000 release
     /tmp/ccWz8BwV.s:2169   .data.sustain:0000000000000000 sustain
     /tmp/ccWz8BwV.s:2157   .data.decay:0000000000000000 decay
     /tmp/ccWz8BwV.s:2151   .data.attack:0000000000000000 attack
     /tmp/ccWz8BwV.s:2058   .bss.MIDI_flag:0000000000000000 MIDI_flag
     /tmp/ccWz8BwV.s:2145   .bss.update_value_flag:0000000000000000 update_value_flag
     /tmp/ccWz8BwV.s:2086   .bss.lfo:0000000000000000 lfo
     /tmp/ccWz8BwV.s:2093   .bss.lfo_freq:0000000000000000 lfo_freq
     /tmp/ccWz8BwV.s:2100   .bss.lfo_phase_accumulator:0000000000000000 lfo_phase_accumulator
     /tmp/ccWz8BwV.s:2107   .bss.note_freq:0000000000000000 note_freq
     /tmp/ccWz8BwV.s:2120   .bss.note_on:0000000000000000 note_on
     /tmp/ccWz8BwV.s:2072   .bss.envelope:0000000000000000 envelope
     /tmp/ccWz8BwV.s:2079   .bss.envelope_index:0000000000000000 envelope_index
     /tmp/ccWz8BwV.s:2132   .bss.output_val:0000000000000000 output_val
     /tmp/ccWz8BwV.s:2139   .bss.phase_accumulator:0000000000000000 phase_accumulator
     /tmp/ccWz8BwV.s:2065   .bss.current_midi_note_msg:0000000000000000 current_midi_note_msg
     /tmp/ccWz8BwV.s:2113   .bss.note_off_flag:0000000000000000 note_off_flag
     /tmp/ccWz8BwV.s:2126   .bss.note_on_flag:0000000000000000 note_on_flag
     /tmp/ccWz8BwV.s:2175   .rodata.inv_voices:0000000000000000 inv_voices
                            *COM*:0000000000000003 spi_tx_buffer
                            *COM*:0000000000000040 htim7
                            *COM*:0000000000000040 htim6
                            *COM*:0000000000000014 hdac
                            *COM*:0000000000000100 lfo_sine
                            *COM*:0000000000001000 base_sq
                            *COM*:0000000000001000 base_tri
     /tmp/ccWz8BwV.s:2049   .rodata:0000000000000000 $d
     /tmp/ccWz8BwV.s:2059   .bss.MIDI_flag:0000000000000000 $d
     /tmp/ccWz8BwV.s:2061   .bss.current_midi_note_msg:0000000000000000 $d
     /tmp/ccWz8BwV.s:2068   .bss.envelope:0000000000000000 $d
     /tmp/ccWz8BwV.s:2075   .bss.envelope_index:0000000000000000 $d
     /tmp/ccWz8BwV.s:2082   .bss.lfo:0000000000000000 $d
     /tmp/ccWz8BwV.s:2089   .bss.lfo_freq:0000000000000000 $d
     /tmp/ccWz8BwV.s:2096   .bss.lfo_phase_accumulator:0000000000000000 $d
     /tmp/ccWz8BwV.s:2103   .bss.note_freq:0000000000000000 $d
     /tmp/ccWz8BwV.s:2114   .bss.note_off_flag:0000000000000000 $d
     /tmp/ccWz8BwV.s:2116   .bss.note_on:0000000000000000 $d
     /tmp/ccWz8BwV.s:2127   .bss.note_on_flag:0000000000000000 $d
     /tmp/ccWz8BwV.s:2133   .bss.output_val:0000000000000000 $d
     /tmp/ccWz8BwV.s:2135   .bss.phase_accumulator:0000000000000000 $d
     /tmp/ccWz8BwV.s:2146   .bss.update_value_flag:0000000000000000 $d
     /tmp/ccWz8BwV.s:2172   .rodata.inv_voices:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_f2d
__aeabi_dmul
__aeabi_d2uiz
midi_notes
__aeabi_i2d
ARM GAS  /tmp/ccWz8BwV.s 			page 60


HAL_Init
init_wavetable
HAL_UART_Transmit
Receive_MIDI
