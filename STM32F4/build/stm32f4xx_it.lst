ARM GAS  /tmp/cc3kss16.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB130:
  27              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f4xx_it.c **** /**
   3:Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Src/stm32f4xx_it.c ****   * @attention
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f4xx_it.c ****   *
  12:Src/stm32f4xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f4xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f4xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f4xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f4xx_it.c ****   *
  17:Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Src/stm32f4xx_it.c ****   */
  19:Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f4xx_it.c **** 
  21:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f4xx_it.c **** #include "main.h"
  23:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  27:Src/stm32f4xx_it.c **** 
  28:Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  30:Src/stm32f4xx_it.c **** 
  31:Src/stm32f4xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/cc3kss16.s 			page 2


  32:Src/stm32f4xx_it.c **** 
  33:Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  35:Src/stm32f4xx_it.c ****  
  36:Src/stm32f4xx_it.c **** /* USER CODE END PD */
  37:Src/stm32f4xx_it.c **** 
  38:Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  40:Src/stm32f4xx_it.c **** 
  41:Src/stm32f4xx_it.c **** /* USER CODE END PM */
  42:Src/stm32f4xx_it.c **** 
  43:Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  45:Src/stm32f4xx_it.c **** 
  46:Src/stm32f4xx_it.c **** /* USER CODE END PV */
  47:Src/stm32f4xx_it.c **** 
  48:Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Src/stm32f4xx_it.c **** 
  51:Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  52:Src/stm32f4xx_it.c **** 
  53:Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Src/stm32f4xx_it.c **** 
  56:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  57:Src/stm32f4xx_it.c **** 
  58:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Src/stm32f4xx_it.c **** extern DAC_HandleTypeDef hdac;
  60:Src/stm32f4xx_it.c **** extern SPI_HandleTypeDef hspi5;
  61:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim6;
  62:Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  63:Src/stm32f4xx_it.c **** 
  64:Src/stm32f4xx_it.c **** /* USER CODE END EV */
  65:Src/stm32f4xx_it.c **** 
  66:Src/stm32f4xx_it.c **** /******************************************************************************/
  67:Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  68:Src/stm32f4xx_it.c **** /******************************************************************************/
  69:Src/stm32f4xx_it.c **** /**
  70:Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  71:Src/stm32f4xx_it.c ****   */
  72:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  73:Src/stm32f4xx_it.c **** {
  28              		.loc 1 73 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE130:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc3kss16.s 			page 3


  45              	HardFault_Handler:
  46              	.LFB131:
  74:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  75:Src/stm32f4xx_it.c **** 
  76:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  77:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  78:Src/stm32f4xx_it.c **** 
  79:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  80:Src/stm32f4xx_it.c **** }
  81:Src/stm32f4xx_it.c **** 
  82:Src/stm32f4xx_it.c **** /**
  83:Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  84:Src/stm32f4xx_it.c ****   */
  85:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  86:Src/stm32f4xx_it.c **** {
  47              		.loc 1 86 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  54 0000 FEE7     		b	.L3
  55              		.cfi_endproc
  56              	.LFE131:
  58              		.section	.text.MemManage_Handler,"ax",%progbits
  59              		.align	1
  60              		.global	MemManage_Handler
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	MemManage_Handler:
  67              	.LFB132:
  87:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  88:Src/stm32f4xx_it.c **** 
  89:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  90:Src/stm32f4xx_it.c ****   while (1)
  91:Src/stm32f4xx_it.c ****   {
  92:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  93:Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  94:Src/stm32f4xx_it.c ****   }
  95:Src/stm32f4xx_it.c **** }
  96:Src/stm32f4xx_it.c **** 
  97:Src/stm32f4xx_it.c **** /**
  98:Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
  99:Src/stm32f4xx_it.c ****   */
 100:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 101:Src/stm32f4xx_it.c **** {
  68              		.loc 1 101 0
  69              		.cfi_startproc
  70              		@ Volatile: function does not return.
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74              	.L5:
  75 0000 FEE7     		b	.L5
ARM GAS  /tmp/cc3kss16.s 			page 4


  76              		.cfi_endproc
  77              	.LFE132:
  79              		.section	.text.BusFault_Handler,"ax",%progbits
  80              		.align	1
  81              		.global	BusFault_Handler
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	BusFault_Handler:
  88              	.LFB133:
 102:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 103:Src/stm32f4xx_it.c **** 
 104:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 105:Src/stm32f4xx_it.c ****   while (1)
 106:Src/stm32f4xx_it.c ****   {
 107:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 108:Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 109:Src/stm32f4xx_it.c ****   }
 110:Src/stm32f4xx_it.c **** }
 111:Src/stm32f4xx_it.c **** 
 112:Src/stm32f4xx_it.c **** /**
 113:Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 114:Src/stm32f4xx_it.c ****   */
 115:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 116:Src/stm32f4xx_it.c **** {
  89              		.loc 1 116 0
  90              		.cfi_startproc
  91              		@ Volatile: function does not return.
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95              	.L7:
  96 0000 FEE7     		b	.L7
  97              		.cfi_endproc
  98              	.LFE133:
 100              		.section	.text.UsageFault_Handler,"ax",%progbits
 101              		.align	1
 102              		.global	UsageFault_Handler
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu fpv4-sp-d16
 108              	UsageFault_Handler:
 109              	.LFB134:
 117:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 118:Src/stm32f4xx_it.c **** 
 119:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 120:Src/stm32f4xx_it.c ****   while (1)
 121:Src/stm32f4xx_it.c ****   {
 122:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 123:Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 124:Src/stm32f4xx_it.c ****   }
 125:Src/stm32f4xx_it.c **** }
 126:Src/stm32f4xx_it.c **** 
 127:Src/stm32f4xx_it.c **** /**
 128:Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
ARM GAS  /tmp/cc3kss16.s 			page 5


 129:Src/stm32f4xx_it.c ****   */
 130:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 131:Src/stm32f4xx_it.c **** {
 110              		.loc 1 131 0
 111              		.cfi_startproc
 112              		@ Volatile: function does not return.
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.L9:
 117 0000 FEE7     		b	.L9
 118              		.cfi_endproc
 119              	.LFE134:
 121              		.section	.text.SVC_Handler,"ax",%progbits
 122              		.align	1
 123              		.global	SVC_Handler
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv4-sp-d16
 129              	SVC_Handler:
 130              	.LFB135:
 132:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 133:Src/stm32f4xx_it.c **** 
 134:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 135:Src/stm32f4xx_it.c ****   while (1)
 136:Src/stm32f4xx_it.c ****   {
 137:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 138:Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 139:Src/stm32f4xx_it.c ****   }
 140:Src/stm32f4xx_it.c **** }
 141:Src/stm32f4xx_it.c **** 
 142:Src/stm32f4xx_it.c **** /**
 143:Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 144:Src/stm32f4xx_it.c ****   */
 145:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 146:Src/stm32f4xx_it.c **** {
 131              		.loc 1 146 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 136 0000 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE135:
 140              		.section	.text.DebugMon_Handler,"ax",%progbits
 141              		.align	1
 142              		.global	DebugMon_Handler
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv4-sp-d16
 148              	DebugMon_Handler:
 149              	.LFB136:
 147:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 148:Src/stm32f4xx_it.c **** 
 149:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
ARM GAS  /tmp/cc3kss16.s 			page 6


 150:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 151:Src/stm32f4xx_it.c **** 
 152:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 153:Src/stm32f4xx_it.c **** }
 154:Src/stm32f4xx_it.c **** 
 155:Src/stm32f4xx_it.c **** /**
 156:Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 157:Src/stm32f4xx_it.c ****   */
 158:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 159:Src/stm32f4xx_it.c **** {
 150              		.loc 1 159 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE136:
 159              		.section	.text.PendSV_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	PendSV_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	PendSV_Handler:
 168              	.LFB137:
 160:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 161:Src/stm32f4xx_it.c **** 
 162:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 163:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 164:Src/stm32f4xx_it.c **** 
 165:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 166:Src/stm32f4xx_it.c **** }
 167:Src/stm32f4xx_it.c **** 
 168:Src/stm32f4xx_it.c **** /**
 169:Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 170:Src/stm32f4xx_it.c ****   */
 171:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 172:Src/stm32f4xx_it.c **** {
 169              		.loc 1 172 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE137:
 178              		.section	.text.SysTick_Handler,"ax",%progbits
 179              		.align	1
 180              		.global	SysTick_Handler
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv4-sp-d16
 186              	SysTick_Handler:
 187              	.LFB138:
ARM GAS  /tmp/cc3kss16.s 			page 7


 173:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 174:Src/stm32f4xx_it.c **** 
 175:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 176:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 177:Src/stm32f4xx_it.c **** 
 178:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 179:Src/stm32f4xx_it.c **** }
 180:Src/stm32f4xx_it.c **** 
 181:Src/stm32f4xx_it.c **** /**
 182:Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 183:Src/stm32f4xx_it.c ****   */
 184:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 185:Src/stm32f4xx_it.c **** {
 188              		.loc 1 185 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		.loc 1 185 0
 193 0000 08B5     		push	{r3, lr}
 194              	.LCFI0:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 3, -8
 197              		.cfi_offset 14, -4
 186:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 187:Src/stm32f4xx_it.c **** 
 188:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 189:Src/stm32f4xx_it.c ****   HAL_IncTick();
 198              		.loc 1 189 0
 199 0002 FFF7FEFF 		bl	HAL_IncTick
 200              	.LVL0:
 201 0006 08BD     		pop	{r3, pc}
 202              		.cfi_endproc
 203              	.LFE138:
 205              		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
 206              		.align	1
 207              		.global	TIM6_DAC_IRQHandler
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 211              		.fpu fpv4-sp-d16
 213              	TIM6_DAC_IRQHandler:
 214              	.LFB139:
 190:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 191:Src/stm32f4xx_it.c **** 
 192:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 193:Src/stm32f4xx_it.c **** }
 194:Src/stm32f4xx_it.c **** 
 195:Src/stm32f4xx_it.c **** /******************************************************************************/
 196:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 197:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 198:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 199:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 200:Src/stm32f4xx_it.c **** /******************************************************************************/
 201:Src/stm32f4xx_it.c **** 
 202:Src/stm32f4xx_it.c **** /**
 203:Src/stm32f4xx_it.c ****   * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
 204:Src/stm32f4xx_it.c ****   */
ARM GAS  /tmp/cc3kss16.s 			page 8


 205:Src/stm32f4xx_it.c **** void TIM6_DAC_IRQHandler(void)
 206:Src/stm32f4xx_it.c **** {
 215              		.loc 1 206 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219 0000 08B5     		push	{r3, lr}
 220              	.LCFI1:
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 3, -8
 223              		.cfi_offset 14, -4
 207:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 0 */
 208:Src/stm32f4xx_it.c **** 
 209:Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 0 */
 210:Src/stm32f4xx_it.c ****   HAL_DAC_IRQHandler(&hdac);
 224              		.loc 1 210 0
 225 0002 0348     		ldr	r0, .L17
 226 0004 FFF7FEFF 		bl	HAL_DAC_IRQHandler
 227              	.LVL1:
 211:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 228              		.loc 1 211 0
 229 0008 0248     		ldr	r0, .L17+4
 230 000a FFF7FEFF 		bl	HAL_TIM_IRQHandler
 231              	.LVL2:
 232 000e 08BD     		pop	{r3, pc}
 233              	.L18:
 234              		.align	2
 235              	.L17:
 236 0010 00000000 		.word	hdac
 237 0014 00000000 		.word	htim6
 238              		.cfi_endproc
 239              	.LFE139:
 241              		.section	.text.SPI5_IRQHandler,"ax",%progbits
 242              		.align	1
 243              		.global	SPI5_IRQHandler
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu fpv4-sp-d16
 249              	SPI5_IRQHandler:
 250              	.LFB140:
 212:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 1 */
 213:Src/stm32f4xx_it.c **** 
 214:Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 1 */
 215:Src/stm32f4xx_it.c **** }
 216:Src/stm32f4xx_it.c **** 
 217:Src/stm32f4xx_it.c **** /**
 218:Src/stm32f4xx_it.c ****   * @brief This function handles SPI5 global interrupt.
 219:Src/stm32f4xx_it.c ****   */
 220:Src/stm32f4xx_it.c **** void SPI5_IRQHandler(void)
 221:Src/stm32f4xx_it.c **** {
 251              		.loc 1 221 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255 0000 08B5     		push	{r3, lr}
 256              	.LCFI2:
ARM GAS  /tmp/cc3kss16.s 			page 9


 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 3, -8
 259              		.cfi_offset 14, -4
 222:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SPI5_IRQn 0 */
 223:Src/stm32f4xx_it.c **** 
 224:Src/stm32f4xx_it.c ****   /* USER CODE END SPI5_IRQn 0 */
 225:Src/stm32f4xx_it.c ****   HAL_SPI_IRQHandler(&hspi5);
 260              		.loc 1 225 0
 261 0002 0248     		ldr	r0, .L21
 262 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 263              	.LVL3:
 264 0008 08BD     		pop	{r3, pc}
 265              	.L22:
 266 000a 00BF     		.align	2
 267              	.L21:
 268 000c 00000000 		.word	hspi5
 269              		.cfi_endproc
 270              	.LFE140:
 272              		.text
 273              	.Letext0:
 274              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 275              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 276              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 277              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 278              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 279              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 280              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 281              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dac.h"
 282              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 283              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 284              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/cc3kss16.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/cc3kss16.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc3kss16.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc3kss16.s:38     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc3kss16.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc3kss16.s:59     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cc3kss16.s:66     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cc3kss16.s:80     .text.BusFault_Handler:0000000000000000 $t
     /tmp/cc3kss16.s:87     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cc3kss16.s:101    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cc3kss16.s:108    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cc3kss16.s:122    .text.SVC_Handler:0000000000000000 $t
     /tmp/cc3kss16.s:129    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cc3kss16.s:141    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cc3kss16.s:148    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cc3kss16.s:160    .text.PendSV_Handler:0000000000000000 $t
     /tmp/cc3kss16.s:167    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cc3kss16.s:179    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc3kss16.s:186    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cc3kss16.s:206    .text.TIM6_DAC_IRQHandler:0000000000000000 $t
     /tmp/cc3kss16.s:213    .text.TIM6_DAC_IRQHandler:0000000000000000 TIM6_DAC_IRQHandler
     /tmp/cc3kss16.s:236    .text.TIM6_DAC_IRQHandler:0000000000000010 $d
     /tmp/cc3kss16.s:242    .text.SPI5_IRQHandler:0000000000000000 $t
     /tmp/cc3kss16.s:249    .text.SPI5_IRQHandler:0000000000000000 SPI5_IRQHandler
     /tmp/cc3kss16.s:268    .text.SPI5_IRQHandler:000000000000000c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DAC_IRQHandler
HAL_TIM_IRQHandler
hdac
htim6
HAL_SPI_IRQHandler
hspi5
